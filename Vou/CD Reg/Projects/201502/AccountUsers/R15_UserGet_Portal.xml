<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="R15_UserGet_Portal" resourceRoot="${projectDir}" soapui-version="4.6.1" defaultScriptLanguage="Groovy" activeEnvironment="Default" id="7e2339fe-6b26-42de-938d-de716f0de4a6" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="E:\DECE API\STS\Builds\R3\106.2.3\Reports106\STSAPI_Payload_NodeOId_TCs_R3"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">/opt/dece/soapUIReports/R5_Reports2013-12-04::02-16-57/UserGet_Portal_R5</con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Account" type="rest" id="8252ba06-b20f-4a82-a0b6-fd7f3523ede0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="AccountCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="ed70a636-717d-4786-b6de-deabd446719b"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403 503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountCreate" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="AccountGET" method="GET" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 303 200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 401</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGET_BasicAuth" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="AccountGET_SAML" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username/><con:password/><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="bda852c0-5ccd-41d2-911c-bdec0459e462"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="AccountGet" method="GET" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 401 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGet" mediaType="application/xml" sslKeystore="500500.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request><con:request name="AccountGet_BasicAuth" mediaType="application/xml" sslKeystore="500580.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="AB1E09D1A009474DE0401F0A07995BBC" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountDelete" method="DELETE" id="3dd5e135-f342-47db-9631-1bec111dba45"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" sslKeystore="80080010.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountUpdate" method="PUT" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountUpdate" mediaType="application/xml" sslKeystore="80080010.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FirstUserCreate" type="rest" id="63e68881-a234-4670-82d0-16b5421c30a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="AccountUserCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="9ed9c404-b207-4c25-a786-7bd711105b44"><con:settings/><con:parameters/><con:resource name="UserAPI" path="/{UserID}" id="8c72fe92-42e8-4bcc-bfc3-29cb8a3ca9cb"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="User_StatusUpdate" path="/ResourceStatus/Current/Update" id="b0f04600-c6bc-42f8-b382-bdb9ef258eee"><con:settings/><con:parameters/><con:method name="UserStatusUpdate" method="PUT" id="5e4818b9-48a0-429e-aa1a-3379298d12be"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>303</con:status><con:params/></con:representation><con:request name="UserStatusUpdate" mediaType="application/xml" postQueryString="false" id="ae263fb2-2f71-4002-b6e4-7831863b5d6f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="UserID" value="${#Project#NODEUSERID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="UserGet" method="GET" id="55de7616-71c0-4cac-bade-e9aa4166e711"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:User</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserList" path="/List" id="16a08242-2ac7-42a8-b9c6-ca954b9794d4"><con:settings/><con:parameters/><con:method name="UserList" method="GET" id="e58e8f42-4a16-498a-86e7-a405a0125794"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:UserList</con:element></con:representation><con:request name="UserList" mediaType="application/xml" id="869ab87f-d5fa-4e59-8a29-1bca986023a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="FirstUserCreate" method="POST" id="557bc5f3-c2ce-4146-81fc-71cdc6358536"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404 403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503 502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 405 400 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>500 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="FirstUserCreate" mediaType="application/xml" postQueryString="false" id="54c781b4-bf2d-4e55-ab6c-fc7337e96457" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>NewnameShikha</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserDelete" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="b4da2587-c2fe-45c4-aa0b-7bfdda8db2c0"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>${#TestCase#NODE_ACCOUNT_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_ACCOUNT_ID}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>${#TestCase#NODE_USER_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_USER_ID}</con:default></con:parameter></con:parameters><con:method name="DeleteUser" method="DELETE" id="02c9752d-c22c-4713-874a-3f6c2b982142"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="0f18fdda-5e02-4f21-8def-a3f312f61ac8"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="b4da2587-c2fe-45c4-aa0b-7bfdda8db2c0"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>${#TestCase#NODE_ACCOUNT_ID_FULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_ACCOUNT_ID_FULL}</con:default></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="02c9752d-c22c-4713-874a-3f6c2b982142"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="UserCreate" mediaType="application/xml" id="0f18fdda-5e02-4f21-8def-a3f312f61ac8" postQueryString="false"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AddNewUser" type="rest" id="785934cf-6e29-492d-9dd8-504d1aeb0b28" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#HostName}</con:endpoint></con:endpoints><con:resource name="AddUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="a8f8ca6d-db1b-4090-9ffc-68be2d519618"><con:settings/><con:parameters/><con:resource name="UserAPI" path="/{UserID}" id="20cfed44-6bef-4e69-8937-8a0ed4466e50"><con:settings/><con:parameters><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="ec0bb443-5d9b-4e69-b1d5-c6cf6535c7e4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserDelete" mediaType="application/xml" sslKeystore="80080010.pem" id="d0bc938e-dbab-4193-8cc9-85cb4f10c8bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:${#Project#NODEUSERID1}"/>
</con:parameters></con:request></con:method><con:method name="UserGet" method="GET" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 400 405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" sslKeystore="80080010.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="UserUpdate" method="PUT" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:default></con:parameter><con:parameter><con:name>UserID</con:name><con:value>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:default></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 503</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserUpdate" mediaType="application/xml" sslKeystore="500500.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="AddUser" method="POST" id="c8e33bf9-7e9a-4fc7-a85d-b9258d44e3b4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AddUser" mediaType="application/xml" postQueryString="false" sslKeystore="80080010.pem" id="8f456815-cfce-46c5-9b39-907b23b9d134"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Rights Token" type="rest" id="2cc5edf0-44c3-45c0-af0b-d6e19735bdd5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Rights Token Get_List" path="${#TestCase#endPoint}" id="80183adb-1c5a-4de7-9d84-191f16c47def"><con:settings/><con:parameters/><con:method name="Rights Token Get" method="GET" id="8b4cec3d-fe23-4572-9b38-8f6059da115f"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:RightsTokenList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:RightsToken</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="dc5964a7-d54c-453b-85c8-f1cc8f5c4976"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Rights Token Create" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{RIGHTSTOKEN}/RightsToken" id="483f410c-4aec-4f56-bdb8-b53566c9bb97"><con:settings/><con:parameters><con:parameter><con:name>RIGHTSTOKEN</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Rights Token Create" method="POST" id="1c20f275-4760-4c4b-994f-d981d038615c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="0565a9cc-8569-46e9-a479-f8aacc70fa3f"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeTest" type="rest" id="6ba05ee5-e87a-41e2-93b7-5fac7723d364" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMergeTest" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" id="d3ab43df-328b-4e09-8562-58a80596481d"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="449e438d-5c8b-4814-8ea3-5b23b2d9c7fc"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="cfd0be42-a0ab-4e51-972d-c4a67c9d1208"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMerge" type="rest" id="38577162-173b-4e3b-b7a4-7084681116dd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMerge" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" id="6ecab418-a971-4402-baea-c83b2ded7efc"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:value>RetiredAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RetiredAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4659148b-17e0-4ad5-a68e-924d516aa757"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="acbfb94a-f132-4a9c-8d15-8b85ecc78c8c" sslKeystore="7600.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVdbc6pKE333V1juR8twUVSsnVQNFwlGNCBeX77CYQSUizIg6K8/A26NZif77PM9pMw00z2ruxfNmp/YCny2BzBGceJFYVWVnmv/23Sam9a6YzWasAUbLR7BRpffWOS/Lt1imSYNrU2tqmKcIjXEiRUmzzWWZpoNutlgeJNu91psj2s9sXR3VavOUIxJaLLlia5V88APca889rmWxmEvsrCHe6EVINxLYG8CtGGP7OxZV0y1l58XlOWB8YubJPseRcEnG0Hk+/AJRgH1k3rY89PGvYnnhFaSxujXmTZ+rv3yzbLsKWs+RbFDsTRNUzRPkT029pwftZfK1RnZariJLmvRCqPQg5bvna0ClIYSN7KrwHei2Evc4JvQDMXQRegGymEDMq3wR436OKBE95eRHkDG2Gpg12KuwQy0QTEKIapODfW59uPvOnjxNWMrxJsoDvCn9X+DhMIj8qM9shv4mtkV3d9H/KJcLz8R7Kkh9FPsHdGooMnegghX32O08fKhhwn5bFwt21/N8ZVhCP6Xlvyk7nES2NQXlZE8B+Hk/+nXfa8uUWaWn6KXXI2d8M2SxtrQmeTjlQnoLZx0ZnLmPJcQ7jdfQN1a/Wv9mag3Xv1y0jZd+lCfxpvhCEFXOq60bmBxC44fs4o/PATjZTte8trIkUzROvLteYtdjsRkNqGwzw0RPzeNFd1nopVOwQpKjrtOyAz4oLudniXVW2AtXEfZajaM11x/O2VSHDj1MUoWM+s4YrtuwmC3Xp/X1abHRqyhHzkNrKEB17OKQYtma7v1vZYKzJXbByl4/sjpPocirzd0KpMs/l9wNC9ZiXVbiMWk2JDXM0EvmqpK6VkUwWnigEwVgEP+tmAkOLuDu/MUPqMFoOt9IImCv5WHGtgpgJnKgquJs5mWi2cwEJzRjDiaFeCvBM2QMylbSjNdf5Uz17SV2Wmt+OnqLI80gEtn0dVkQ55JhilrGogutlyT1kq+1SZapupLqUICSHK+P9sKnyAl9yCrctqEY5cTLl0tZsTePw2D0XFtyr4maoo4OSgTdd2UdHkAjOUcsv2U+J6HwT6qLKfCndNgj7YA9TOanAnOmrnLNHPKjiTDKm3mo01TlYGm40zUy6yUipwNZtPzRy1EQRPtQM5lE7xfagFNsT+iV4sBtuZcqBkgk5zS+U3O7PEViKbTWUW81GooZ4ZsTEd9zVAzGZQ2Sc58vGZH7lpxj7Cp5wMTbO8bI+ryvB+S56FxhCfuULGUPlgHMwY2DRd6nGctosxZdTNJXw7eopVKwoyALguCDgggGhSpkfoLYCjMuPHe41kPDTf9KEBuXNGY6G13POd012uOnffRnJM2u8674r03LdulVB+y2+YOqCqy3xhXt2xjSRlS6J3b47fpAnnx8pyMOJ1pe12uYszT6UKK/I79ulhO3+r5Eurm+H0ynb+f83x02HbPfvI6Fl7jyUCTnPEIoXcM6xRt9QWzK3Hi8nVL+LQxaMRVgKMJAChbx5E9QmDhdXsh4auhyYS8QBMzRZyLygQoSl1WBUnXN32XeYfKLJ0yI02VbZ+U6bRcGH5lJQoS6RRtzVf7JdunyVixy2B6S+47+pSrDxZopY98c5aAbD/bhAxDK3v9daNlDtQKBthqNhHIWyRUUhVMrfF+QOdvszbNHHTbH0x4MG3mE3aXj11nddo5qx1pyvLu1VmawJ+ZdxxTCcXmFd2UDQ10L+9brqnTpuHDIN+vA5hLJulZ6RyZgmz0dXqaSxJ4u9iwCdgcL8/yVhPl0r8Ccs0itDiuFy5ehiNvbMopIW16R5ftmqX/lWMFxSqPHDuIQAefOSZfOCaDzaGudiUGc21xj+eZIyjyQe/MhgN+T+uL4a4i1PuUk3h+axx2M/OtPmdOWcfd6vM5r0quWA83S7e5TgTaOkMdDXYdxTN2Uthu+SdtqOnc1KP8E71FhwwPKyOVCeVmcu5TfJzWhWDlBedzs8VOg/dJelSn1htmTu76MOez7ftrm6Ji5cSdO6uj3l9EcHn5jnwekjfjZYxS9wP2YQJftdckXW8RTK7L4jusStU++ThayZ91XGHx7Mam3NrbF2IQJyhMai+FV6HheilRep7dI1/Oy1rqttg2x8gCw3dlwLZkukUzfRrQHZ5vcm3uKvYuKD5BFKNw4xVnFXL28rH+M0AY9DAKbRQ3jlEKXYRrf4hY1KuqhgZRIVGIkRkRudzuCu12h5VZmZY7Qr9NS0QLyy0R8C2O4UW+Vh1FyTgcx2CToPhRKvMPUtlA0Nt7qNDThajARFXghJTkYB3TxGeejtZTiFKiuONC9PbYVpejsBfsfVQApoLITn30tHf3ZYEofPllGxbEpbXTpulS7Xyb3+dn11KQPbZXbMBFMgIi7URfiP7WNZNvM2bY+4yv4UFqe4WoIXVNYg9ekDw++qBLwZMbV4qUrphvWz8bHsJSnzO6nWQfPXhj/O1ORCQ1EV0v14YcrKfDU3o8pmULOoWgjEl4iqHoNjVBMCWq8GRGOxRStxDUXwnyG+pPJ9/sj/jSxA0nCXmbA0KYarn8i9vYBOHiNqYSwud/e9V7OJLULUF58pVN9MmlrUD8x3sd7MFiHzG/k58siu2Pdn0R6+4ckmcxvrzQKVaF/D59wwoYkbAeGWFRfB/8qwBfHf5ovBX5hiUhbFqnCfr+SbWYTc81C8IoDRNVqpWG+3lZ4kxOe9T72PRbmFIA/7rR5PjbG81CG07I5Aqs2m2v9++bG15JF4iIF/ZKLM+1nFzOyeGhczeffwH8ekR3/ziiHzN5+c38u+Wupp/fh5d/AA=="/>
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVdbc6pKE333V1juR8twUbxVkqrhKioqiNeXrxBGQBGQAUF//RkwGs1O9tnne0iZaaZ7VncvmjWvyDh4dBcgBKPYDfyyzL9V/mcxDNmuG62a0aq3aw0S1msdkyFrcEM2yLphkpZBVcoyQgmUfRQbfvxWoUmqXiPrNaqjk81uo9UlqZdOg1lXynMYIRwab3khK+Xs4PmoWxz7VkkivxsYyEVd3zhA1I3N7hQowy7e2TVumCrvr1eUxYHRuxPHYZcgzBcLmtDzzBczOBCvxNOeVwt1p67tG3ESwY8zLfRW+fBN0/Qlrb8EkU3QJEkSZIfAeyzk2r8q76WbM7Rkfxtc15zhB75rGp57MXJQCoydwCoDzw4iN3YOP4SmCIrMQ9dgZtZMquH/qhCfBxTo/jLSE8gIGTXk4CZ8BNPgFkbQN2F5pslvlV9/18Grrx4ZPtoG0QF9Wf83SNA/QS8IoVVDt8xu6P4+4jflen+FZlf2TS9B7gmOcpqEhglReRLBrZsNXYTJZ6Fy0f5yhm4Mg+Z/ackr8YgTwya+qQzv2hDF/0+/Hnt1jTI3vAS+E+LO8wZue+P0U6XPu5zTm874yXaBuVpAeNx8BXVv9cf6K1HvvPpw0mxHlY2YllqTem9z1vn2xmukVRZcQMsm6bS9jjsWN5A3l3GgR0q23ynygW5yQ1hN5mGk9IdNi/ZW8upgqSXTQWF/GEI/JAVlOgonhNpL25BYDw9xXal6kqbOm5Pjxc/801gC88H5aFFeqrfQuLpTdmF6Jlc7bxbF9Hxbaqh9jWH98dbaj+utrXsh0NtnTo855HkN4LlIMv9/yZAd3oiN+4LLJ8UWv54xfFdkmU8uHAfOUxukMgts/LcDI9beH529K3VSkgWqKgKeY72dMFTAXgLUTGAdhZvPlYy7gD5rj+bYUS8Bb80qmpDy6Yqfq2pPSB3dkubnjeQl64swUgAqnDlHETRhzmu6oCgguNoyhd9I2U6ZKqmsrvgSDsALWXixpE4Mpcw1aZlRpgy9mjLJejnHdvE8PIxOG13wFE6RuOlRmsqbOq8KfaCtFiYtJtj3MjyEQWk1Yx+c+iHcASimJD4TXBR9nyr6jB7xmlHY9GebIkt9RUUppxZZSSUh7c9nl89acKzCWQchE3QwudbC1DlxRK6XfWQsGF/RQMrbhfNASK3xDYiikmmJu9ZqKKSaoM1GoqLJqQAKGy+kHtrQI2cjOSezrmZ9HeweG8OpwkL08XNfO5ln5lgyJBFsDnPKrGuO6TKusQxSe91OeXXVHwRrGYcZAVVgWRVgQCTIU8P1Z8GQnTPj0O3QLhxuxeAAnaikUMFgf7pkZNutj+3JaMHw231rIrmTumE5hOyZ9K6+B7IMrQHlqIalrQiN991LczyYLaEbrS7xiFGppttmStoimS35wGtZveVqNqhmK1PVx5PpbDG5ZNnouGtfvLg3ZnvRtK/w9ngE4QSZVYI0RFZv8wy36u0wn7YaCZkSsBUWAGln24KLCcz2dlcS9jRFwOQFCpdK3IKTpkCSqoLM8qq6FR1qYkrzZEaNFFmwPFym82qpeaU1x/K4U6SxWIcrWiTXOrCKYGpDEG11xlT7S7hWR54+j0Eazrc+RZFSqPa2SmqbSs4AS06nLH6L2FIig5kxDvtkNpg3SeqoWl5/2gGzejal99nYsdfnvb3e46asHl6dlQ68uf7AMRlTbFFSdUFTQPv6vmWKPKtrnnnIws3BzHgd96xwDnRW0ESVnGU8DwZXG9IBnaHVRdgpnFD4l0CmGJgWp83SQSt/5I51IcGkTR7ostvQ5L9yLKdY6ZljRw6o4CvHhCvHBLA9VuU2TyGmyYVokdqsJBzV1nzY74SkuhzuS2xVJOzY9Rpjv53qg+qCOqctZ6cuFh2Zd7iqv1059U3MksbFVGF/35Jcbc/7zYZ3VoaKysxcwjuTO3hM0bA0kilfqMcXkehESZU9rN3D5VJv0LPDZJqc5JkxQNTZ2RwXnXQ36TUJIpLOzKW1PqniMjBX1+/I1yF5N17HKPE4YJ8m8E17TZPNDprxbZl/h2W+LOKPoxH/WcflFteqbYut3TAXgyiGflx5z71yDddNsNJzrS7+cl7XfLtBt9oUAKABKKEpCli0UCIJyFanwzQ74Cb2rii+QOQCf+vmZ+Vy9vqx/jNA89BF0LdgVDsFielAVPlDxLxeZdnXsAoJfAT1AMtljmRYQHIt/E43WiLbFltNsQMYkRE4ssPUhUp5FMRjfxyBbQyjZ6nceZLKGjTd0IW5ns5FBcKqAsW4JEfjlMQe9XIyXnyYYMUd5aK3SzfaDIHcQ+jBHDBxCKzEgy+hExYFItD1l64ZJiqsrSZJFmrnx/y+PruVAu+x3HwDypNhIW4n/E30N7vMLZMfM6box4xv4UFiubmowXWNI9e8Inl+9EmXnCd3ruQp3TDft341PIUlvmZ0P8k6uead8fc7EZbUWHS93xpyNF6OL8nplBQtaOWCMsLhCYogm8QUmglWhWc92EOfuIcg/kqQ31F/Ofluf8aXxI4/jfHbfMCEKRfLv7iNTSHKb2MyJnz2t1e9pyNx3WKYxd/ZOA9f2nLEf7zXmV0z34fNE/yTBpH12a5vYj2cg/PMx5fr2/kql9/nH1hhBjisi0dYED0G/y7Ad4c/G+9FvmOJMZs2SQx/flLOZ9NbxTDNIPFjma8Uhsd5WeCMzyHsfm76LUwhgD9uNBn68UazVIZTPLkORuW+1/33zTW3oIsJsRdyCyxvlQxfzvHhvv0wnz8Afj+i6+yfRvRzJu+/mX+3PNT06/vw/g8="/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842651EB198EA24E0401F0A07993565</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842781AAA4A1E6FE0401F0A0799569A</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842651EB188EA24E0401F0A07993565"/>
  <con:entry key="RetiredAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842781AAA3B1E6FE0401F0A0799569A"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeUndo" type="rest" id="216cdb32-edc4-42ff-940d-0a24ddc5b6ef" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints/><con:resource name="AccountMergeUndo" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" id="a3a07d2e-db6c-4d70-a443-af62d5a50a00"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4995638c-d575-4d0f-a861-2a267308a8d9"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="9f81ce2b-c5b6-493d-9b1f-7c101faacf30"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserResourceStatusUpdate" type="rest" id="3c0ff9bd-188e-4595-ac97-ec945cbf1b34" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="UserResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" id="a72ea2ab-ce4e-47cc-b28d-787420d41eae"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="UserResourceStatusUpdate" method="PUT" id="bae01694-be77-463a-bcef-02134d4e45fb"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ResourceStatus</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="d9791dad-3957-43a7-9916-acc98d6cfcfe"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountResourceStatusUpdate" type="rest" id="d2b48757-d9d7-48b6-99e2-5ffaec2a0276" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" id="087a86a9-8ddc-4222-aa5e-8ea5f58f3b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ResourceStatusUpdate" method="PUT" id="a3720389-3d1d-49ca-8d11-1e6c7977a6b6"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c5de7daa-09fc-46a7-9439-7290f79b45c1"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="STS" type="rest" id="2b399c77-329a-43cb-9c65-b90e43e27bf5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="STSCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" id="c9f3de54-1283-4f02-b8ea-7030652e5a47"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>tokentype</con:name><con:value>tokentype</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>tokentype</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>audience</con:name><con:value>audience</con:value><con:style>QUERY</con:style><con:default>audience</con:default></con:parameter></con:parameters><con:method name="STSCreate" method="POST" id="dd8dec87-e935-415f-91f4-ef072cb2b292"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:Credentials</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8eccae92-53c1-462c-ad88-7bb2ab6bc7a9"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" id="f7ffc3a2-890e-4d43-8f2a-582eb82ffd58"><con:settings/><con:parameters><con:parameter><con:name>assertionUUID</con:name><con:value>assertionUUID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>assertionUUID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="STSGet" method="GET" id="5edddbc8-bc7c-4b0d-9fa5-394b1f0932ed"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:assertion">urn:Assertion</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="198a8863-08df-42da-87ef-91fde7f4ac06"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Users" type="rest" id="259bbce5-831b-4451-a73a-de0bf63edea1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="406204c8-de65-44a7-945b-dc1b02e44af0"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="066b8e0c-0220-4b12-a742-279bae4946fa"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="af27dab6-d612-42a7-b5e5-4ce6bdbc14e4"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserGet" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="33037c13-b8d6-4a97-a099-0e5b2b93fe80"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="b02fb239-9c1b-4be5-8530-7fae01fd384b"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:User</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="" id="4eb4928e-b200-4947-8c0c-24c181f71028"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Head" method="HEAD" id="4ed2235b-9282-4eb3-a39d-0a813d114a15"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="" id="aab531de-a33f-4953-a8f7-c76b22c81d42"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Options" method="OPTIONS" id="ac85c36a-1342-4c12-a5f6-d98bf058822f"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" accept="" id="afbbd048-eeb2-4c7c-b9b5-704a5070f96e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Put" method="PUT" id="8d8e94f0-a7fe-4c2d-81a5-1329e9da5bc0"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="8be48d96-bd26-4b12-80b9-785264272a16"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Post" method="POST" id="4dbd0b07-53d4-45f9-bb9e-06ac1f1389e2"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="f3ddf9fe-4c0b-48ca-ba77-99f436c1937d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Delete" method="DELETE" id="49215a1f-f83c-4b7f-ae9f-f88a9f181625"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="" id="a91e54f2-1d87-457b-96f8-ff5549d04436"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="UserUpdate" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="8f8a184a-0dcf-46a3-af2e-5202504ad276"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserUpdate" method="PUT" id="bf04f7dc-68e9-4930-b413-d48dc6440714"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="e7e31038-be8b-48ba-997a-9641eae95ccd"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserDelete" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="87dc7923-e63b-475c-a2aa-45b0b75bcc3d"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="1d8706e1-2a03-49c8-83a3-708ea55db41c"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="f1a2fc95-aa7a-4733-930c-0bfc5f763c3f"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy_Create" type="rest" id="61a95d02-4b5e-4cbc-b0af-53eb5a63e41c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="Policy_Create_User" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="e987efbb-4856-4d34-ba77-d066252cebfa"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value>NodeUserId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeUserId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_User" method="POST" id="f8947dd1-0275-42e9-b3c8-6749441f3669"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="d6aa9533-9d76-4431-9b56-10bc699c4ee6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="Policy_Create_Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="fa1556af-2ec3-4aad-9253-03936d072d29"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_Account" method="POST" id="8918149f-6fc4-4f07-b09c-ac7fb6ee7ac5"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="f2fb75b6-27f0-404b-9d2b-aa3cc3789f69"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:testSuite name="CommonTestSteps" disabled="true" id="6deffdf6-8888-4ac0-bba9-62ac3f5a0a8b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API" searchProperties="true" id="11a715f3-fabc-4fee-900a-f24ebd6d9c5a" disabled="true"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9ce61892-9d8a-4055-b161-e19938292410"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("accountname",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);

tC.setPropertyValue("ResponseType","SUCCESS");

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="4dc8aec7-2e8e-4eef-9a55-46dedaad9403"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);
def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("Country",callTS.getPropertyValue("Country"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

def b = tC.getPropertyValue("nodeid");

log.info b;</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="b8ba87db-df08-4f36-8c88-c580bb3ec25b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("AccountDisplayName","ug_111_accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="1671024d-d72f-4387-92d2-ba0ce6079396"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="63a3307b-6106-4786-9cd4-e176efd0bf16"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/1/11/Account</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="947149be-7bb0-4a3f-9591-1927886d48ad"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="23303af8-41d1-41dc-8fef-fb959f9c4a2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response" id="bd82d430-2a93-49e7-b2a1-7b84f0809636"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
      assert context.expand( '${#TestCase#httpLocation}') != null;


      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
          int lastColon = urlStr.lastIndexOf(':');
	     int lastSlash = urlStr.lastIndexOf('/');
	     accountid     = urlStr.substring(lastColon + 1);
	     def node_Account = urlStr.substring(lastSlash + 1);

          tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
                    
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);                                                   
          
      } else {
            assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
            int lastColon = urlStr.lastIndexOf('%3A');
            int lastSlash = urlStr.lastIndexOf('/');
            accountid     = urlStr.substring(lastColon + 3);
            def node_Account = urlStr.substring(lastSlash + 1);

            tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
            
            tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);
		  tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);
      }

} else {
      	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case" id="35d38137-3ff3-47da-9602-9bed11652bbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("accountname",tC.getPropertyValue("accountname"));
callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:1682D3CFA5236B40E05305991F0A3DF7</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1682D3CFA5236B40E05305991F0A3DF7</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>accountname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ug_111_accname_20150520_0512591432122179962</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1682D3CFA5236B40E05305991F0A3DF7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:1682D3CFA5236B40E05305991F0A3DF7</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20140218</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>ug_111_accname_20150609_0253281433841808884</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountStatusUpdate API" searchProperties="true" id="51ed92e6-c568-4115-881a-88771404b0de" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2842594e-4ff8-47cb-afd9-7d9447bd34b7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("status",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1c828cc6-c718-4458-8285-8f3412120ef1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("status",callTC.getPropertyValue("status"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("ResponseType") == null ||
	tC.getPropertyValue("ResponseType") == "") {
		tC.setPropertyValue("ResponseType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="aec46fe2-046b-4208-9b99-b3f8610a7a8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountResourceStatusUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountResourceStatusUpdate" id="e434e6ab-627f-454e-a457-6101a23db2bf"><con:settings/><con:config service="AccountResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" methodName="ResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountResourceStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore="dececs_concat.pem" id="c31adabd-c8c6-47d3-bc0d-0d4121e47aaf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
  <Current>
    <Value>urn:dece:type:status:${#TestCase#status}</Value>
    <Description>Account Updated</Description>
  </Current>
</ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bef51ec6-85bf-456b-9ec3-670fd87002cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountResourceStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="518795a7-9465-4ca9-aaa5-d30618461158"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
log.info "errorRespType"+errorRespType;

def usercount = context.expand( '${#TestCase#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
//String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus   = "HTTP/1.1 303 See Other";
		XMLbodynull        = true;
		processXMLFlag  = false;
		httpLocationHeader = true;
		
	break;

	case "INVALID_STATUS_UPDATE":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusTransitionRequestedNotAllowed";
		//errorReason = "Requested Status transition is not allowed for the resource";
		errorReason = "The requested status transition is not allowed for the resource.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusTransitionRequestedNotAllowed";
	break;

		case "INVALID_STATUS_UPDATE_ON_USER":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusTransitionRequestedNotAllowed";
		//errorReason = "Requested Status transition is not allowed for the resource";
		errorReason = "The requested status transition is not allowed for the resource. - Status requested cannot be applied on the user";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusTransitionRequestedNotAllowed";
	break;


	
	case "API_NOT_AUTH":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	//errorReason = "API call not authorized";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "NULL_BODY":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		expectHTTPcontenttype = "text/xml";
		XMLbodynull        = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "XML_PARSE_ERROR":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorReasonFlag = false;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		//errorReason = "User ID does not match security token";
		errorReason = "The member’s user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;

	
	case "USER_INACTIVE":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	//errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	//errorReason = "Requesting User ID Not Specified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		//errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "The requesting member does not have permission to perform this action."
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		//errorReason = "Request Account ID not match";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		//errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	case "NO_MNG_USER_CNST":

	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		//errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;
	case "TOU_NOT_ACCEPTED":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The account status cannot be modified. - First User has to accept TOU to move the Account to active status";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusCannotBeModified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusCannotBeModified";
	break;

     case "ACCT_INACTIVE":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		//errorReason = "The identified account is not active.";
		errorID     = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		//errorReason = "The request is unauthorized.";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;

     case "SAME_CURRENT_STATUS":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:ResourceAlreadyInRequestedStatus";
		//errorReason = "Resource is already in the status requested";
		errorReason = "The resource is already in the requested status.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceAlreadyInRequestedStatus";
     break;

     case "MTHD_NOT_ALLOWED":
     log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		errorID     = "urn:dece:errorid:org:dece:ResourceAlreadyInRequestedStatus";
		errorReason = "Resource is already in the status requested";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceAlreadyInRequestedStatus";
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
log.info 'Expected: '+expectHTTPstatus
log.info 'Actual: '+context.expand( '${#TestCase#httpStatus}' )
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
def a = URLDecoder.decode(context.expand( '${#TestCase#httpLocation}'), "UTF-8");
	//def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	//assert b.getPath().matches("$errorHost/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;

	    if(errorReasonFlag)
	    {
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;
	    }
		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
} 


</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.7. Account Status Changed through Resource Update: Account Unlocked [Your UltraViolet account has been unlocked]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dececs</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdbc6rKEn73V1juR8twUxQrSdUgoKh4A68vp2AYEOUmA4L++jOY6EqyknXWPi/iND3dX1/o+eYZm4HPdgHGKEm9KKyq0kvtP4KFOLbV5hqCzTuNpsWihmXxfKPVsRjIMBxtW0ytqmKcITXEqRmmLzWWZrgGzTdY3qD5LkN3Oe6JbQm7WnWFEkxME5UnulYtAj/E3Zvbl1qWhN3IxB7uhmaAcDeFXR1o4y7R7Jp3TLXX5zeUN4fJ6z5N4y5FwScbQeT78AlGAfVMfdJ5tnFX99zQTLMEvfu08UvtfW+e50859xQlLsXSNE3RAkV0bOy5/9ReK/fNyFZDJ3pb98wwCj1o+t7VLEFpKN1HdhX4bpR46T74wTRDMXRpuoEK2IBMM/ynRv1ycEP3l5Y+gUyw2cB7k7kbWyAHJSiEqLpcqC+1f/6ugm97jcQMsRMlAf6y/neQUHhGfhQju4Hvkd3R/b3Fb9L1+oxgVw2hn2HvjCZlm8QmRLg6S5DjFWMPk+azcfVW/mqB7x2G4L8pyTP1ESeBTX2TGclzEU7/n3p9rNWblZXpZ+h1tEGzc09SVoMITuGRNi5nvdhFvenh+HKD8FH5DdSj1O/rr4366Kv3TTBQ+tv6QKRaOdd3lmzfadWHQ784jK9+PwgKxvLb2mIWnXnR2iS2MMuRqjgzwwg3Np+dFOfoZs2Ddxz5/KASnizqNDD6So+eJkW+TXNJaXHHUNmitAiGkj4YnCYnOhDxfGLNZzo1MqOJdCkGzUiQfaUFZgatHZPdHoyjiiPPj+tkwTS13WmZCnqyd19+xfQxhjKuEbrcgiz/b1q0IJmp+Vj0yknhkM8zRa+aqvbqUq8HUM8FuSoCVxXHVzAR3eNpf/T6Qk6LYL5UgAQu2gLkkruVVvP5SM7t1crfrVRFEbVFMx+ArVQhLyS5WEm7zZA217t4yyr0ThdFe7OILG4Y24NjPtjDiWZo+cRQL9pBLiaGTK9vMrcg66t20JipseQq64MoaAs5l/KbR0nO95PdehFvl0IOr/JcA80+YJZyb68NjGDFQG6xhwd5rIHjTS7utd5qpRWyAWYV0Z2sSGxGT9nFMLBjK/D3H4wPiHHD7q8uVt/Pdlf5oPXkfk8/9XXV4qS5PASL7dJar47mWjlX4GACrLtHr+WZmyh3d51cmm+Ho2in7s9wAuayKM4BSRcNNLU/BFFfBFoTeMW1dxD5qGcrOTVkcaUu+H1+c/FOG2z2ad9kOh1mO17zsxMvyWF9N8qsw17bb5RpfaTb56WQCtctPtfPvOkxsIid+UYepKPCGcz1ijWTig0c1G13SPlXQUm09hAk18ve19xFuuan+GJ5jrMWN9Om33Z8jVvEju/EF1w3ovkxoXmRTEJqezmP0gpwNRGA/mF5EOea2CmTaqv5fKuJJlDkNAPXA5uO2NVpODj7cMuBqBitybf4XhhbymWRyucyaSu50pGAXRZhoC9l5QCWousmoisr4hxKYL5VR/mW5Gs5IMpf86jc8ujKIpC5HeCFQYVb0kI6TfVmE1xCcRkqwl47FWubD+j2CcljfRI3cw1PnHC3jo5a4CXLJNOXo9FkXFhG1j8eyKxyaH105nYV+XyMgTcZGfujFEnmLN5u07gewgSmahxoanGd7vCh41kBPay3GHFGS7DNLgMrX/ZNeTdKXJ0ZDRbhjGsLFZw5l0FQP3Tydd3Q+bht90JHulyoXbKiIxApwqJ1sguWPe6X+ZjPnSE4WiY7KXxBvAjyaGfAfDEfrfWg3qq0zuNxQF8NqjmJp7nez5vyfF7nbNEYGDhOvG3WcYtkGtrs1kz5845e8V7sHwU2OxrNmFu5ASnW7GzHbW1WmTc3cBe47RgOqQV1BnLbGav9i3U1r3EwhW8D9Ot0eAjf5gf1cbJ8Gj130qGTbkUwvS/LA0iVqgo5Fcz0zwSmlHh2w7mpduOSBeEUhWnttdxVkpduRiiOZ3fJkfG2lmlaaHd6rKAApsPIkkw3aUahAd0SBLbN8XeW84biC8ReFDpe6avkcW+n1J8BwqCLUWijpHGOMrhHuPYHi2W+qmq4IMdvFGJkRIQnttgWEAEDOL7VYsgPL3O8rLAcxypKS2L4WnUSpdNwmgAnRclnjih84ogLBL3YQyWRLE9TTI5TnJKUnMxzlvrM09l8ClFGqGZSsr0u2+y0KOwFsY9KwFQQ2ZmPnuJ9fEsQhd+ebMOE+CYtswvx7aD/McKv7+7JIDq2VyrgMhwRkYKib/gue4/lx5gZ9mPMd/Mgs73yPCeZTRMPviH5/OpXw5Sd8uiW2w/Ed9gP7a+CT5apr0E9nNlnDz7a/nEjIISSUI7Xe1VO5tPpKTufs1sd2iWdSoh5iqFontIRzAgnuhjREYXUwwT1V3T0gfqL54f8M74s3Yd6Sj7pgHRN9bb8i7uIjnB5F1FJ1xd/e9H55JLkLUVF+p2s55MrS4n4j7ca2IWlHhHPyCOPEvtXub6x9cEPibOcYV7olquSfF5+aAwYEbMemWNR8tH4dwa+c/5Z+EjyA0tKusnKUvTzm2o5oF5qJoRRFqaqVLsJPg7NG870EqPuL6XfzNzo3zufL/CPfH6jjXUyvgKz9tD1/rdyw7u1C0RkF/ZuWF5qBbmaEueh+2FIvwP8bU4LLC01m5LcJMf4pznNyo8Efork9Tfx75IPOf36Pbz+Fw==</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\UsersAPIs\User_Notifications\dececs_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserUpdate API" searchProperties="true" id="32279977-861a-426e-81a7-71cea06f5005"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4130a3a4-c7eb-4827-869b-f95d9c2b8f5f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ETag",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="ac712638-bedb-4ce3-b7d0-19fde2be5e06"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
//tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
//tC.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("ETag",callTC.getPropertyValue("ETag"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));
			</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="74a5466e-717a-4e30-b1b9-8b2f5093b4cb"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "AdultPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "ADULTMinus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHPlus":
		
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHMinus":
   	
   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "ADULTToday":
	 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHToday":

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="995a2b5b-4658-4d02-a2db-b515dbdd66f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserUpdate" id="eb1816f8-6975-4f3b-b682-17c1a2d0fe78"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserUpdate" mediaType="application/xml" sslKeystore="RET_CS_1_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<!-- <DateOfBirth> depricated </DateOfBirth> -->
<!--	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>-->
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
<!--		<Password>${#TestCase#password}</Password>-->
	</Credentials>
<!--	${#TestCase#ResourceStatus}-->
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="2bb2301a-ff4d-4b0a-9f12-75011a2f5e64"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="309b6e76-cf01-4afb-a113-2fe03454e622"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "USER_PRIVILEGE_CANNOT_BE_CHANGED":
	XMLbodynull     = false;
	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:UserPrivilegeCannotBeChanged";
	errorReason ="The member's permission level cannot be changed.";
	errorLink   ="$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeCannotBeChanged";
	break;

	case "NOT_ALLOWED_TO_UPDATE_INFO":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:RequestorNotAllowedToUpdateUserInformation";
	errorReason = "The requesting member cannot update member information.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateUserInformation"
	break;

	case "REQUESTOR_PRIVILEGE_INSUFFICIENT_TO_UPDATE_USER_CLASS":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID :org:dece:RequestorPrivilegeInsufficientToUpdateUserClass";
	errorReason = "The requesting member does not have permission to change the member's permission level.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToUpdateUserClass"
	break;

	case "COUNTRY_CANNOT_BE_CHANGED_ONCE_SET":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID :org:dece:CountryCannotBeChangedOnceSet";
	errorReason = "The country cannot be changed.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet"
	break;

	case "UNAUTH_CLG_CHANGE":
	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:UnauthorizedCLGChangeInRequest";
	errorReason = "The connected legal guardian (CLG) change request is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UnauthorizedCLGChangeInRequest";
	break;
	
	case "UNAUTH_NODE_TO_UPDATE_INFO":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:NodeUnauthorizedToUpdateUserInformation";
	errorReason = "The node is not authorized to update member information.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToUpdateUserInformation"
	break;

	
	case "REQUESTOR_NOT_ALLOWED_TO_UPDATE_OTHER_USERS":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID :org:dece:RequestorNotAllowedToUpdateOtherUsers";
	errorReason = "The requesting member cannot update another member.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateOtherUsers"
	break;

	case "INVALID_STATUS":
	XMLbodynull     = false;
	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID:org:dece:UserStatusNotValid";
	errorReason = "The member's status is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";
	break;

	case "FULL_ACCESS_USER_MUST_BE_18_OR_OLDER":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorIDorg:dece:A full-access member must be 18 or older";
	errorReason = "A full-access member must be 18 or older.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;

	case "LAST_FULL_ACCESS_USER_CANNOT_BE_DEMOTED_TO_STANDARD_OR_BASIC_PRIVILGE":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorIDorg:dece:LastFullAccessUserCannotBeDemotedToStandardOrBasicPrivilege";
	errorReason = "The permission level of the last remaining full-access member in an account cannot be changed.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LastFullAccessUserCannotBeDemotedToStandardOrBasicPrivilege"
	break;


	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "DOB_NOT_EDITABLE":
	XMLbodynull     = false;
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID  =  "urn:dece:errorid:org:dece:DateOfBirthNotEditable";
	errorReason = "A member's date of birth cannot be changed.";
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
     errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#DateOfBirthNotEditable" ;
	break;



	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "NOT_ALLOWED_TO_UPDATE_ACS_LEVEL":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorid:org:dece:RequestorNotAllowedToUpdateUserAccessLevel";
	errorReason = "The requesting member cannot update a member's permission level.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateUserAccessLevel"
   break;


	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "NOT_ALLOWED_TO_UPDATE_OTHERS":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID:org:dece:RequestorNotAllowedToUpdateOtherUsers";
	errorReason = "The requesting member cannot update another member.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateOtherUsers"
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
/*
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		//assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		//assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	}
} </script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>UNAUTH_NODE_TO_UPDATE_INFO</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:NodeUnauthorizedToUpdateUserInformation">
      <Reason Language="en">The node is not authorized to update member information.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE40D5200989FCC89E0401F0A079901AE/User/urn%3Adece%3Auserid%3Aorg%3Adece%3AE40D52009981CC89E0401F0A079901AE</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#NodeUnauthorizedToUpdateUserInformation</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">848</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02012_UserUpdate_FUNC_CHILD_Update_CHILD_Access 400 Bad Request</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile_CS</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E40D5200989FCC89E0401F0A079901AE</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8YMCmklTJExgwk834csrI8gCe8IANX39kCOwkO9k35z6B2q3u1YNaS8+J4Xt0FyQJilM3DKqK+FL7Z9eyOgzsmI32rtlqMDTHNrgWQzaQ1WQY2GQsps3WqkqSZEgJktQI0pcaTVLNBsk2qLZOsl261aXZJ6rNbWvVJYoTbBqrPJG1auF7QdK9un2pZXHQDY3ETbqB4aOkm8KuBtRRF2t2jTum2uvzDeXVYfzqpGnUJQj4ZCKIPA8+wdAnnokPOs9m0tVcOzDSLEZvPs3kpfa2N8/zp7z5FMY2QZMkSZAcgXXMxLV/1V4r983IVAIrvK0FIwgDFxqeezFKUCpKndCsAs8OYzd1/G9MUwRFlqYbqIANSDHBrxrx28EV3Q8tfQAZJ0YjcQzqbmyOLBSjAKLqYq681H79rIK3vXpsBIkVxn7yaf3fIKHghLwwQmYjuUd2R/dzi1+k6/UZwa4SQC9L3BMal20SGRAl1WmMLLcYuQluPjOpXstfLZJ7hyH4X0ryTLzHiWETX2RGdG2UpP9Pvd7X6mZlaXgZemWjzhCq4+mOnCC2SfaPUtPTIsPqWYeXK4T3yjdQj1K/rT836qOv3jZ5gxMrpAdLFk6UU8wtskhXG2FLG5dLDlnHWmiiTnnDneaZIeTSlRppNtnq+EMJjSaivrWV0bA1PNvkHLEVZ7/RWSdb0bvj7qixeS84K/OWIcHxcdKr99cpNQWjQpYtj++srI0rprM1IthIydtyX1+CsZA241lzQs21rLKf7UfGqDUYsfVeKLLT+pZ5+R3T+xjKuIbofA2y/L9ukZxopMZjIZSTwsLHM0WvqqIIdVEQABJskCs8sBV+dAFj3j4cnYPb43KSB7OFDERwVucgF+2NuJzNhlJuLpfedqnIMq/OmbwPNmIFfxClYilu1wPSWG2jDS2TW43nzfU83DUHkdk/5H0HjlVdzce6clb3UjHWJXJ1ldkFXl/UvUpN9EWzstrznDqXcjG/ehSl3BlvV/Nos+ByeJFmKmB6gFpIgqP2dX9JwebcgXtppILDVc47qrBcqoWkg2mFt8dLHJsuyNsI+ma08z3nnfE+Nq6bveV51/Oy7UXaq4LUE7RjT1N2TXEmDcB8s9itlgdjJZ8qsD8Gu7tHt+Ua6zC3t2wuzjaDYbhVnBMcg5nE8zOA00UCVekNQNjjgcoAt7gIe74dCqacEwM6qdQ5r9den93jOjF6pGdQLEttRqv29NgWpaC+HWa7vaM6a3lSH2rmacGl3GWTnOqntuFSsIis2Vrqp8PC6s+0ym4qFmvYr5v2gPAunByrnQGIL2fHU+15umpPkvPOtawVv54wXsfy1OY8sjwrOid1PZwdYrLNoyZNbM6nYVoBtsoD0Nsv9vxM5dkyqaaSzzYqbwBZSjNw2dPpkF4eB/2TBzdNEBbD1WR/eCuMKeYST+QzCbeVVGFFYJZF6GsLSd6DBW/bMW9LMj+DIphtlGG+wfla9LHy5zzK1zzaEg+k5ha0uX6luSC5dJJqDAPOAb8IZM5Rj8XKbPtk54ikkTaOmFxNxlawXYUH1XfjRZxpi+FwPCp2etY77PGsskhteGpuK9LpEAF3PNSdgxiKxjTabNKoHsAYpkrkq0pxmWyTPevufHJQb1H8lBRhh174u3zRM6TtMLY1atifB9Nmh6skmXXu+/U9m6/qutaOOqYQWOL5TGzjJRmCUObmraNZ0PTBWeSjdm4NwGFn0OPC4/gzJw23Oszns+FK8+utSus0GvnkRSeYcTTJtV7OSLNZvWnyel9PotjdZKxdxJPApDdG2j5tyWXbjbwDR2cHnYmaS9vHxZqezKijTiszZg23vt2J4ICYEycgdayR0jvvLsYl8ifwNkA/T4eH8DY/iPeT5cPouZMODXcrgul9WV5AiliV8a1gpH8nMKXENRvWVbUblSwoSVGQ1l7LXSV56WaY4rhmF18Zt7XEkGILXx4cRzcFgeUkkiEpmQRkh+NICkh3lnND8QmiEAaWW/oqedztlvo7QOh3ExSYKG6cwgw6KKn9xWKZr6oSzPH1GwYJ0kPME2mKavMSJQGWJYWWKLUkQMuUyJMi3+YFjq5Vx2E6CSYxsFIUf+CIFPWBI84RdCMXlUSyvE0TfJ0mKU7J0ThlqUc9nYynAGWYasYl2+vSDNsiEtePPFQCJvzQzDz0FDnRNUFEcvulGwZMrlKBFCSZlUhWwDdDR2w/EtviOIom+SsF+Db2z9/uacI6plsqJGWgPMKlRl8wYeoe5ffZYN5n424eZKZb3vQ452nswhuSj59+t1LZQ48+mkv6P4L2D3XH/VD/LPhgmvgc1cObeXLh40Q8HguYa2I28nov2NF4Oj5lp1N2LVGnZFoxNk9QBNkhNAQzTJfOenhAAfEwQfyIqT5Qf/L8kH/El6VOoKX4tPu4oarX5Q+eKRpKymeKgg9E8dM30AeXOG8pKtKvZIKHXzMl4r8+eGAXlnpYPMU/eRibv8v1ha13fnCc5XhzA7tclbz0/E1nwBCbdfGIC+P3xr8y8JXzj8JHkh9YUtxNuyxF33+plrPrpWZAGGZBqoi1q+D9PL3iTM8R6v5W+sPMlRm+Uf0i+Zbqr9WRhiebb9Qeuu7/Vm6413aBCO9K3CuWl1qBX63YeWC/m99vAL8c4Swn/22Ef4zk9Q/xn5J3Of18Hl7/BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40D52009981CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19E24F0C476894EE0401F0A05992542</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-08-19</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>UserName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E40D520098B5CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E26875D79D093C60E0401F0A05996273</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE40D5200989FCC89E0401F0A079901AE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE40D52009981CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E40D520099C8CC89E0401F0A079901AE"</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-03</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-08-16</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_DB_Validations" searchProperties="true" id="1cc8c7f1-8717-461e-801a-f31149324c32"><con:settings/><con:testStep type="groovy" name="Establish_TestCase_Properties" id="43c5dbf9-3574-4373-9d3f-f1b49a7247c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("user_oid",null);
tC.setPropertyValue("account_oid",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Required_Properties_from_Calling_TestCase" id="24c9ba5a-1bf3-4440-bbd4-53ba00dd09c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="e4eb1827-f8cd-4323-b563-100dee9979d2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("IsMinor","");

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

def BirthDate = null;
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

Result = b.userGetRow(userID);

myXML1 = new XmlSlurper().parseText(Result);

log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
 if(context.expand( '${#TestCase#ResponseType}')=='SUCCESS')
     {
        assert  myXML1.ResultSet.Row.size() == 1;
       	
       // assert myXML1.ResultSet.Row.STATUS == 'pending';
        assert myXML1.ResultSet.Row.PRIVILEGE == context.expand( '${#TestCase#Privilege}' );
        assert myXML1.ResultSet.Row.USERNAME == context.expand( '${#TestCase#UserName}' ) ;
        assert myXML1.ResultSet.Row.GIVEN_NAME == context.expand( '${#TestCase#GivenName}' ) ;
        assert myXML1.ResultSet.Row.SURNAME == context.expand( '${#TestCase#SurName}' ) ;
        assert myXML1.ResultSet.Row.PRIMARY_EMAIL == context.expand( '${#TestCase#PrimaryEmail}' ) ;
        assert myXML1.ResultSet.Row.TELEPHONE == context.expand( '${#TestCase#TelephoneNumber}' ) ;
        assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == context.expand( '${#TestCase#MobileTelephoneNumber}' ) ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#CHILD_DOB_XML}' ))
        {

        	 log.info "I am CHILD";
        	 
           BirthDate = context.expand( '${#Project#CHILD_DOB_XML}' );
           assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';

           tC.setPropertyValue("IsMinor","true");
           
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
       
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#YOUTH_DOB_XML}' ))
        {
        	log.info "I am YOUTH";
        	
          BirthDate = context.expand( '${#Project#YOUTH_DOB_XML}' );
          assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';

          tC.setPropertyValue("IsMinor","true");

                    
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;

         } 
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#ADULT_DOB_XML}' ))
        {

        	log.info "I am ADULT";
        	
          BirthDate = context.expand( '${#Project#ADULT_DOB_XML}' );
          
          assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';

          tC.setPropertyValue("IsMinor","false");
          
        /* if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
          */ 
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

         int lastspace = bdaystring.lastIndexOf(' ');

         finalbday = bdaystring.substring(0,lastspace);
          
         log.info "Birth Day:  " + finalbday;
       
        assert finalbday == BirthDate;

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}' );

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User Validations Passed";
               
   }// end if for success response check
  else
  {
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  }
  

   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="3fda9747-deda-4530-a4d5-1ae9396728bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );
def nodeid =context.expand('${#TestCase#nodeid}' );

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);
c=  new dbUtils.dbNode(log,dbHost);
//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = '$userID'""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

log.info results;

/*
*  If zero length, no need to continue;
*/
 assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (context.expand( '${#TestCase#ResponseType}' ) == 'SUCCESS')
{
	assert myXML.ResultSet.Row.size() > 0;


	if(nodeid=="dece:cs"|| nodeid=="coord:cs" || nodeid=="portal" || nodeid=="portal:cs")
     {  
       assert myXML.ResultSet.Row.size() == 4;  
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";     
     }
     else
     { 
       assert myXML.ResultSet.Row.size() == 5;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' );    
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="d3909cff-287a-4c87-8e5d-29baa75e081f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID ='$userID'""";
  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="e905e066-17be-4d97-b6db-5720e5ae7afa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select POLICY_CLASS,STATUS from POLICY P, POLICY_RELATIONSHIP PR where PR.POLICY_ACTOR = '"""+b.userGetfromNodeUserId(userID)+"""'
  and P.POLICY_OID = PR.POLICY_OID""";

  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>IsMinor</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_UserUpdate_FUNC_CLG_Update_CHILD_DOB_TO_YOUTH_AGE</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>Username</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>DOB_NOT_EDITABLE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid1</con:name><con:value>E2A349A2ABBCCB1DE0401F0A059926E1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E3CF68DF2A8DD783E0401F0A07994C97</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E3CF692D5BE44697E0401F0A05993AD3</con:value></con:property><con:property><con:name>attested</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountDelete API" searchProperties="true" id="50689f7a-271a-48af-ac58-51a00dcf25e1" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cf3b865a-29ea-477d-b95b-c43f031f13b6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType","SUCCESS");
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="7bed7b31-f1e7-4d93-a26b-7c4f3fd4364f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}</script></con:config></con:testStep><con:testStep type="groovy" name="Generate UserName" id="b5272ae6-82f1-4167-a218-91364f720ae1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("SecondUserName","username_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="efdeccdb-6452-4757-8742-168412fcf27b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete" id="7dfbf775-9a67-431b-bdda-786ea95cc0e0"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete" mediaType="application/xml" sslKeystore="RET_CS_1_concat.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="e33b673a-0ef4-4681-bc6f-abfbbf10e33c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="aa74adfe-6f1a-4eb3-8891-56556b47f6c0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	userid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("NODE_USER_ID",userid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>1.8. Account Delete [Your UltraViolet account has been closed]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130618_082841</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdbc6rKEn73V1iuR8twEUGsJFWDgKKiInh92YXDiCg3GRD11+/BRJfJStbJPk86TU/315fp+eYZ24HPtgDGKEm9KCxr8kvlH5ut2yLNsLXmRlzXOF6s10ROsGs0BzmO5aCDHFgpaxhnSAtxaofpS4WlmXqN5mtM02K4VkNoMcITL/CrSnmGEkxME5UnulI+BX6IW1e3L5UsCVuRjT3cCu0A4VYKWybQBy2i2bJvmCqvz28orw6T122axi2Kgk8Ogsj34ROMAuqZ+qDz7OCW6bmhnWYJevfp4JfK+948z5/y+lOUuBRL0zRFixTRcbDn/qq8lm6bkaOFm+ht3bbDKPSg7XsXuwClo3QbOWXgu1HipdvgG9MMxdCF6Ro6wRpkuPBXhfrt4Iruh5Y+gEywXcNbm7kZm6ANSlAIUXk60V4qv35Wwbe9VmKHeBMlAf60/m+QUHhEfhQjp4Zvkd3Q/dziF+l6fUawpYXQz7B3RMOiTWIbIlweJ2jjnQYeJs3n4PK1/OUTvnUYgv+lJM/UI04Cm/oiM7LnIpz+P/V6rNWblZntZ+g1Zg6mNj4GI5NXE90Nqrg3YbuKHAjGyxXCo/IbqHup39efG/XeV++bho2ZoHZ0O2CD0LfBSjybGuftw3M/GNeX81GYjinLQns47VXnybJBeRTkwOjA+z41mLMNiQ53Trw0Qn5hlKbNg63KvJRjZzrXBEvb6ZOxRQdDq3kZdNXlsguGdt3pqdOF0pkYcu+gUybcjwNOX/gz2ZhmsuDNoubAlvUSSzHGsRkdeueYW+adPLG4l98xPcZQxNVH52uQxf9FgxZlO7Xvi3YxKTbkeKboVde0dlVutwFquyDXJOBq0uAChpK7P2z3XkfMaQkYUxXI4KxPQC67S3lmGH0ld2YzfzXTVFXSJ1zeBUu5RD7IymkmrxY92p6v4iWr0itTkpzFJFrXe7HT3efdLRzqlp4PLe2s75TT0FLo+VXmnsj6ou90ZmRN66X5ThL1iZLL+dWjrOTb4Wo+iZdTMYcXxdAB1wHMVGlv9a4VzBhYn2zhThnoYH+VS1u9PZvpJ8UC45LkDmckNqutrmIYOPE68LcPxrvEuOV0Zud1x89WF2Wnt5VO2zx0TG1dlw2lBybL6Xo+29tz9ViC3SFY3zx6Dc9eRLm7auaysez1o5W2PcIhMBRJMgBJFw10rdMDUUcCOge806W9k/io7ag51WNxqSr6HX5x9g4LbHdo32aaTWY5mPPjAy8rYXXVz9a7rb5dqKNq33SOUzEVL0t8rB5522PgKd4YC6Wb9k+brmGW1mP5tIDdquP2KP8iklMi9EByOW993Z2kc36Ez2tvs5lLixHnCxtfr0/ijb+Jz7hqRcY+oXkJ1VlqeT720xJwdQmAzm66kwxdahZJdbTcWOqSDVQlzcBlx6Z9dnbodY8+XNZBdOrPR7v9e2EcOVckKjcU0lZKqSkDpyhC15wq6g5MJddNJFdRJQPKwFhq/XxJ8jXtEuXPeVSveXQVCSj1FeDFbqk+pcV0lJocB86hNA1VcasfTnOHD2jhgJSBOYy5XMfDTbiaR3s98JJpkpnTfn84OK2trLPfkVm1oc3+sb4qKcd9DLxh39ru5Ui2x/FymcbVECYw1eJA106X0Qrvmt46oHvVBiONaRkK7DRY59OOraz6iWsy/e4kHNcFsYSzzbkbVHfNfF61TD4WnHa4kc9napXM6AhEqjhpHJwTy+6303zA55se2K9tdnjyReksKv2VBfOJ0Z+bQbVRahwHg4C+WBQ3jEe52ck5xTCqdUeyuhaOE2+ZNd1TMgoddmmn/HFFz3gv9vcim+0tLq7P3IAUa3x0YkEflwxuAVeBK8SwR02oI1CEzUDrnNcX+xIHI/g2QD9Ph7vwbX5Qj5Plw+i5kQ6TdCuC6W1ZXECaXFbJrWCnfycwhcRzapuraisuWBBOUZhWXotdBXlpZYTieE6LXBlva1nlVUVoKqrA1zmpISk0RzMqDeiGKHJ0g76xnDcUnyC2o3DjFb4KHvd2S/0dIAxaGIUOSmrHKINbhCt/sVjkq6yFE3L9RiFGVkR4IgskRqCbgsJw7booygwncw1F5AAvNNtik7C9YZSOwlECNilKPnJE4QNHnCDoxR4qiGRxm2JyneKUpORgH7PUZ56O9lOIMkI1k4LttViu2aCwF8Q+KgBTQeRkPnqKt/E1QRR++2VrNsRXaZtuK2pToZttcjMIMv+YWIalpSsF+Db2z99uaSI6jlco4CJQCZFSoy+YMH2L8ttssPRjNm7mQeZ4xU1Pcp4mHnxD8vHT71YqeujeRxPF+qdt/sPccN/VPws+mKY+R3X35hw9eD8R98cC4ZqEjbzeCnawnw5P2fGYXUskFEwrIeYphqJ5ykQwI3TpbEV7FFJ3E9SPmOod9SfPd/lHfFm6Dc2UnPaANFT5uvzBM8VEuHimaORAnH76BvrgkuQtRaf0K1nbJ6+ZAvFfHzywBQs9Ih6TnzxKnN/l+sLWgx8SZzHevNAtVgUvPX/TGTAiZj0y4qLk0fhXBr5y/lF4T/IdS0q6aZ2l6Psv5WJ2vVRsCKMsTDW5chU8ztMrzvQco9ZvpT/MXJnhO9U/4W+p/kIfmGSyBXblruv9b+Wad20XiMgu7F2xvFRO5NVKnIfuw/x+B/j1CG80/jbCP0by+of4T8lDTj+fh9d/AQ==</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D3DF7BAE6D161DAEE0401F0A05993EE0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate API" searchProperties="true" id="0559683a-89a8-4543-9672-06581fc3aece"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="868c58f3-f023-4dda-9a66-833c398a40ba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("user_oid1",null);
tC.setPropertyValue("account_oid",null);

tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("ResponseType",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="8e6b764b-021e-474e-8d1a-eb5f74e79d44"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid1",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="0920ac3b-7636-41fb-9ec9-45d215e2fa90"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("AccountDisplayName","ug_111_accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="4ec998ae-86f6-4f4a-bbf7-f8d31da808db"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="e40c23e4-bb12-4dad-a48d-4b7eb04bbd7a"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="iscportal1_concat.pem" id="2fd248e2-6699-4e4b-86a9-e97b8ee1391a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#TestCase#coordinatorSchema}">
    <DisplayName>${#TestCase#AccountDisplayName}</DisplayName>
    <Country>${#TestCase#Country}</Country>
    <UserList>
    ${#Project#Request_XML}
    </UserList>
</Account>
]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:142795B8DBAC4801E05305991F0A14FE/User</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="e1f4943c-6dfa-4bc5-8b82-83eb5c91e424"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="dc5e06e5-3887-4814-8888-41d4ab4bdfbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
def primaryEmail = context.expand( '${#TestCase#PrimaryEmail}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/

if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
		expectHTTPconnection = "close";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
		expectHTTPconnection = "close";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
		expectHTTPconnection = "close";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
		errorReason = "First User must be 18 years or older";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first user in a household account must be a full-access user.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;

	case "INVALID_PASSWORD":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The password is not valid.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid.";
		//errorReason = "The primary email address is not valid. - " + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
		expectHTTPconnection = "close";
	break;
	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);


// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
        
      } else {

         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
     
       }
       
urlStr = URLDecoder.decode(urlStr);
	def arrayString = urlStr.split("Account/");
	arrayString= arrayString[1].split("/User/");
	log.info "Node_User_ID=="+arrayString[1]
	log.info "Node_Account_ID=="+arrayString[0]

	int lastColon = arrayString[1].lastIndexOf(':');
	accountid     = arrayString[0].substring(lastColon+4);
	userid     = arrayString[1].substring(lastColon +1);

def useridfull = arrayString[1];    
def accountidfull = arrayString[0];       
                          
	tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountidfull);
		
	tC.setPropertyValue("NODE_USER_ID",userid);
	tC.setPropertyValue("NODE_USER_ID_FULL",useridfull);


      
 
 
 }else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info errorLink;
		log.info myXML.Error.ErrorLink.toString()
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="4e782fb1-22da-4463-8fa2-9a96b0234cb9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {  	
  		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                 String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                 String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                 tC.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) {
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		     		     }
				}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the Username and NodeUserId to the Calling Test Case" id="6214ca3a-5a8c-428a-87ff-831405931a96"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL1"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("user_oid1",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>AlternateEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DisplayImageURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>FirstFullUsername</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">usergetr4_firstuser20150609_0305181433842518001</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06/User/urn:dece:userid:org:dece:181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</con:value></con:property><con:property><con:name>Locality</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1682C19671AD024BE05307991F0A271E</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">full</con:value></con:property><con:property><con:name>QuestionID</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1650</con:value></con:property><con:property><con:name>QuestionResponse</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">usergetr4_firstuser20150609_0305181433842518001</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">usergetr4_firstuser20150609_0305181433842518001</con:value></con:property><con:property><con:name>userType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ADULT</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid</con:name><con:value>181324EB05264186E0533D991F0ACB06</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>181324EB051E4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-06-13</con:value></con:property><con:property><con:name>AccountName</con:name><con:value>ug_111_accname_20150609_0253511433841831425</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>ug_111_accname_20150609_0305181433842518001</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0920ac3b-7636-41fb-9ec9-45d215e2fa90</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate API" searchProperties="true" id="30aefa36-5265-4855-8432-a953e41b8771"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cc7ab515-dee1-4301-a271-69c0066d67df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");

//def request_XML_Buffer = context.expand( '${#Project#Request_XML_Buffer}' )

//tP.setPropertyValue("Request_XML",request_XML_Buffer);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="815bff3b-842a-4070-86bb-cece5b19c7a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="5aec259f-6efc-4047-958a-f404549b66a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="bdbb05a4-3195-40a4-a273-e98edb919cda"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="UserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="iscportal1_concat.pem" id="602ec8e7-965d-4436-8096-a4a53b8c9905"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}
</con:request><con:originalUri>https://qa1.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:142795B8DBAC4801E05305991F0A14FE/User</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bc996057-be4c-4bee-a9ac-43bd22a866c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="b31e8838-e244-4a70-b23e-27ecedeb39ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid.";// + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="95f3189f-715e-4cef-bc91-14a1b4138b68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                //String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 //assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                //tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="419e9428-03d9-4db9-8ef2-4eaee630ffe1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-04-24</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-06-22</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06/User/urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXyDAK5AFYEk4xrCZEPI7WVLyG1QYkuOJBvI149kwAEGssw+udRunT590ZHOBUpi1+8KAVwSRiuLJKbCL6xtI+PUZ0gQ4VOUgPAl9kfdm4HvVm0fbbYYlaDfNv49Q7VmHbVa5gRHnlnzYGKihjsxvUarhpEdnbW8unIVIoOAComobBuu7dRN+8y0W/d2y/dc36lXz5zWi1F5AC4UtnKp2saa1EK0jZmUqW9Z8/m8OveqjE8t17Yd6+lmMMIzSJDROV9lVATinbU/roaAIY5xFbPEOrd2fM5D4Y/IlCKZcVjHCo/Fsi27ZSmfUJDpN6PcC2FAI1Yse4gySjCKyQfS9bkBOWNhpRtPGSdylhxNwrE1sAkLbGKnRr8Z1i61E4F2GHKBTDFDzhrrDiLgQDFUxndB2/h2WteKrfccURExnojd5d/xAZpDzFIITbFJa03tdMADleqcA/YDiuNMkByGelhThEGsuwn4dKjKLYeILAZEqAFdCM3O2qa3t1xVo0+mIOT/adBWc1YgDyjOoDOgacaEtbyts0kePD734rEYD6z8SfzTLghsOxeGsrWr5d5QlkO02pHFDF02Hr878ctdeC35+1PqOE2aRV3E5NUoDwaYNxm/uY6bL8/3yeuPx4A2WJTP6jD0nHpz0rta/syHy9ZF8PHm/nyL4T58HC5cD568t+h1/HzdrU9+Tq7H8x8CT+ez29tLHgv3e/32siuHyzh+eV0OcAS4OZ7O7qwfyUsDz94/7IZ8zK/d5/fLp2F37FkP8nWd7h7/XdvmzI+yyStguVnqMQj6lSvVJSS/FjNtIaEZFa5+qsVHSKDS6OhdWjv8TMkdCX3Vw9XaaTqeW7u8sOtOv+Y0zy7tuuf1Wy3nyu72LuyzjcisWOxR7DEaER1LS+5qbL4miBNfAA2BmznLlNIJ4wvEPpKoEtA7dQgYFXDPlDw7YYMx1kAciUk4nzdTL0wiRCQYlSGTv+gv3o0k8B1NdtwdTb4DTFICWrj1XAs12EKqWryjPJOxU81RlUKmpJ1rlfVdpSyWIEkag2ZqJSzMYqims7SojCVWX9dEWBRWInDKuERxcSCso+nt/9tUQvmERDsIndIFqG7CgTvG3uRzPO/6dt4b+G4WEn2+VFklJ3jFZPfX57ToMSlHpUwMC2fDvdzylxAHAKwv+Fn7pSnjhTnZir65zNW1oISks+nvO3Kq79Usz7OipbWaZ3EFbynddKwR4Ezp3PKevQG1SgjrpEulZL0XubTv8svkjI4kkpCo+asUyxNeESMQ+hURqIOzOPWJshNS1U3CQh6y9WL1AtKMv3wkYR9rP2W+VZ854+Fnuw5gbcVReapHhCR0qlf6QlkemQ3MFCxRUsj4NvghgEPBd41lkUsuUk3TJJNw/E9Fa1zbQBizjMqgbxSGbd0teMplCv6n0x8whbSXbz3y3489kxQjgJWGKf8CX1/Zvp5/Ot3S7nXQI/Ld+0q+d9l1/jD/admq0/6Md34D</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_API</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>User_Create_STS_Policies</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>181317967E6EB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2001-06-12</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E6078B27BD7C72E6E0401F0A059976B6</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet" searchProperties="true" id="18d6dbdf-5594-4023-8f59-664e83628798" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="40b51506-e7ed-484f-9cef-144c355c10b8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="0e921030-fc0e-4088-8519-d2ea05acede9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("UserGetResponseType"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="8dac2685-8684-45a7-9383-18906924bc23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserGET");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserGET" id="9edfc5bd-e710-4adb-a343-f24a81968540"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserGET" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="5be437dd-519a-4ddb-9991-82608accc06d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserGET');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="a34e05a2-007f-4659-9d23-4e5f076e5223"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_14015 - STSCreate - Portal:CS - unamepasswd - User created by node RTL - P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>4_STS Create - Node Role - CREATED_BY_NODE_OID</con:value></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DC2F5A7DCFDE454AE0401F0A0799394E</con:value></con:property><con:property><con:name>SAML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\DECE\RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserStatusUpdate API" searchProperties="true" id="19cc486a-a16d-4ec8-86ef-9f451f07ebed" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="46e67ffd-7362-4e1c-a502-21e353b9227c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("status",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="277c6a80-14fb-4da5-bd51-3f2ccc23180d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("status",callTC.getPropertyValue("status"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("ResponseType") == null ||
	tC.getPropertyValue("ResponseType") == "") {
		tC.setPropertyValue("ResponseType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="11565952-3245-4993-9a90-b45b77daa42f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserResourceStatusUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserResourceStatusUpdate" id="aa2ec204-f680-47ad-98fb-51d2d96fbf59"><con:settings/><con:config service="UserResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" methodName="UserResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserResourceStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore="" id="ae261312-5902-4744-9602-a3523b802230"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
  <Current>
    <Value>urn:dece:type:status:${#TestCase#status}</Value>
    <Description>Account Updated</Description>
  </Current>
</ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="367744f1-376f-4646-9264-0e788eced0b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserResourceStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="e8904455-2076-49b1-9371-9836b5d0c1cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.15. User Status Changed through Resource Update: User Locked [Your UltraViolet membership has been locked]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>859</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:InvocationPathHasNonEncodedParameters">
      <Reason Language="en">The parameters in the invocation path must be escape-encoded.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:DF7C3C9C94E2F31EE0401F0A07992917/User/urn:dece:userid:org:dece:DF7C3E49DCFC8E50E0401F0A05995F38/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html#InvocationPathHasNonEncodedParameters</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DF7C3E49DCFC8E50E0401F0A05995F38</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF7C3C9C94E2F31EE0401F0A07992917</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8sAgihWkqphU1TcwPXmLRwGRNlk11//DiZ6TE5yvrxf5cJM09P99DI9zzzHhuc2uyCOUZQ4gV9VxJfaPxzTJBkWNRt00zIbDLczG0aT6uBlh2pRBkVZDFerKnGcIsWPE8NPXmpNkqIbJNugOJ1sdelOl+k8sSyzrVWXKIqxaazyRNaqhef6cffq9qWWRn43MGIn7vqGh+JuArsaUEddrNk1bphqr89vKK8Oo9d9koRdgoBPJoLIdeETDDzimfig82zGXc2xfSNJI/Tu04xfau978zx/yumnILKJJkmSBMkRWMeMHftX7bVy24xMxbeCt7Vg+IHvQMN1LkYJSkXJPjCrwLWDyEn23jemKYIiS9MNVMAGpBj/V4347eCK7oeWPoCMYqMR7w3qZmyOLBQhH6LqYq681H79rIJve/XI8GMriLz40/q/QUJ+htwgRGYjvkV2Q/dzi1+k6/UZwa7iQzeNnQyNyzYJDYji6jRCllOMnBg3nxlXr+WvFvGtwxD8LyV5Jh5xYtjEF5kRHRvFyf9Tr8davVlZGm6KXgGVdJC/9rRR1qunMuNpHH8O80vnQL5cITwqv4G6l/p9/blR7331vmkizeSkl02UHWImJKhPLrBlSqucXmx1rW+QuUJL9mAEt9qw3TZMYw6glp6QSazSvdXL8mBdEELCd5RLqFdcuJ0o7eKkjdzW+UgeXd8VNDSVpuqRS0HeonkhPE5mobsMZcsMBQseTO7ILkfncM+yxakN/Nhklwf2rO8qy0l4CS7H1B4yUXDOaWO9efkd02MMZVxDdL4GWf6/bpGcaCTGfSGUk8LCxzNBr6qiCHVREAASbJArPLAVfnQBY94+nvZHp8flJA9mCxmI4KzOQS7aG3E5mw2l3Fwu3e1SkWVenTN5H2zECv4gSsVS3K4HpLHahpumTG41njfX82BHD0Kzf8z7ezhWdTUf68pZPUjFWJfI1VVmF3h9UQ8qNdEXdGV14Dl1LuVifvUoSvl+vF3Nw82Cy+FFmqmA6QFqIQl7ta97SwrS8z08SCMVHK9yfq8Ky6VaSDqYVnh7vMSx6YK8DaFnhjvP3T8Y72Pjutlbnnc9N91epIMqSD1BO/U0ZUeLM2kA5pvFbrU8Gis5q8D+GOxuHp2WY6yD3N52cnG2GQyDrbLP4BjMJJ6fAZwuEqhKbwCCHg9UBjjFRTjwbCCYck4MmnGlzrk9dn12TuvY6JGuQXU61Ga0YqcnVpT8+naY7g57db+WJ/WhZmYLLuEumzirZ6zhULAIrdla6ifDwurPtMpuKhZr2K+b9oBwL5wcqe0BiC7nvava82TFTuLzzrGsFb+eMG7bclV6HlquFZ7juh7MjhHJ8ohuEptzNkwqwFZ5AHqHxYGfqXynTKqp5LONyhtAlpIUXA7NZNhcngb9zIUbGgTFcDU5HN8LY4q5xBP5TMJtJVU6IjDLIvS1hSQfwIK37Yi3JZmfQRHMNsow3+B8LfpY+XMe5WsebYkHEr0FLNev0AuSSyaJxjDg7PMLX+b26qlYmaxHtk9IGmnjkMnVeGz521VwVD0nWkSpthgOx6Nip6e94wHPKovUhhm9rUjZMQTOeKjvj2IgGtNws0nCug8jmCihpyrFZbKNDx1n55GDeovip6QI282Ft8sXPUPaDiNbo4b9uT+l21wlTq1z36sfOvmqrmts2DYF3xLPZ2IbLckABDI3b53Motk87hf5iM2tATjujOa4cPEo46ThVof5fDZcaV69VWllo5FHXnSCGYeTXOvljDSb1WmT1/t6HEbOJu3YRTTxzebGSNhsSy5ZJ3SPXDM96kxIL20PF2uamWFbnVZmzBpuPbsdwgExJzIgta2R0jvvLsYl9CbwbYB+ng534dv8IB4ny4fRcyMdGu5WBJPbsryAFLEq41vBSP5OYEqJYzasq2o3LFlQnCA/qb2Wu0ry0k0xxXHMLr4y3tai3BZoieFEQRY6UouUSIakZBKQLY5ryXTnxnLeUHyCKAS+5ZS+Sh73dkv9HSD0ujHyTRQ1siCFexTX/mKxzFdV8ef4+g38GOkB5okMIGmB4QX8x9ACxTG8SLdFSQJcu0UJfKdWHQfJxJ9EwEpQ9JEjdj5wxDmCTuigkkiWt2mMr9M4wSk5GVmauNRTZjz5KMVUMyrZXrfJdFpE7Hihi0rAhBeYqYuewn14TRARv/02GwaMr1KBFCS5I5EdAd8MbZF9TCzVJPkrBfg29s/fbmnCOqZTKsRloDzCpUZfMGH6FuW32aCox2zczIPUdMqbHuc8iRz4huTjp9+tVPbQvY/mkv6PoP1D3XDf1T8LPpgmPkd192ZmDryfiPtjAXNNzEZebwU7GU+npzTL0muJ2iXTirB5giJIltAQTDFdOuvBEfnE3QTxI6Z6R/3J813+EV+a7H0twafdww1VvS5/8EzRUFw+UxR8IIqfvoE+uMR5S1CRfCUTXPyaKRH/9cEDu7DUw+Ip/smDyPxdri9sPfjBcZbjzfHtclXy0vM3nQEDbNbBIy6IHo1/ZeAr5x+F9yTfsSS4m3Zpgr7/Ui1n10vNgDBI/UQRa1fB4zy94kzOIer+VvrDzJUZvlP9Iv6W6q/VkYYnm2fU7rrO/1ZuONd2gQjvip0rlpdagV+t2LlvP8zvd4B/jHCBEzhGaso0Jd0nTZvjmhzVvifwQySvf4j/lDzk9PN5eP0X</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF7C3E49DCFC8E50E0401F0A05995F38</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7C3C9C94E2F31EE0401F0A07992917</con:value></con:property><con:property><con:name>status</con:name><con:value>blocked</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserDelete_API" searchProperties="true" id="3ad94f34-6a5c-418b-b8f8-a203cab10bc0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a41d2cef-51b0-46b7-b40c-1d6923e3263d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e0e1fe9a-79d7-42ce-8931-9ee2304fe307"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserDelete"));

tC.setPropertyValue("ETag",callTC.getPropertyValue("ETag"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));

			</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="dc69f304-d0b1-4059-89ba-47e13860aae8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserDelete" id="f64f1781-9c0e-4af0-98c4-96319bba32ff"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserDelete" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" sslKeystore="iscportalcs1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="1e9ae371-1bd0-4759-940c-81391e47aabd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserDelete');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
switch (header) {
     case "Location": 
		contentLocation = value[0];
          break;
     case "#status#": 
		status = value[0]; 
          break;
	case "Connection": 
		connection = value[0]; 
	     break;
	case "Content-Type": 
	     contentType = value[0]; 
	     break;
	case "Content-Length": 
	     contentLength = value[0]; 
	     break;
	case "Transfer-Encoding": 
	     httpContentEncoding = value[0]; 
	     break;
      }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="fc5935eb-e5d0-495a-bb33-6346b3b9fdb4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";	
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";	
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":	
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";

	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "USER_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAlreadyDeleted";
		errorReason = "The member has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlreadyDeleted";
     break;

     case "LAST_FULL_USER":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:LastFullAccessUserofAccountCannotBeDeleted";
		errorReason = "The last remaining full-access member in an account cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LastFullAccessUserofAccountCannotBeDeleted";
     break;

     case "FULL_USER_DELETE_NOT_ALLWD":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToDeleteFullAccessUser";
		errorReason = "The requesting member does not have permission to delete a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToDeleteFullAccessUser";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

     case "USER_ACTIVE_CLG":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserCannotBeDeleted";
		errorReason = "The connected legal guardian (CLG) cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserCannotBeDeleted";
	break;

	case "USER_PRIVILEGE_INSUFFICIENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:RequestorPermissionInsufficientToDeleteUser";
		errorReason = "The requesting member cannot delete the member.";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPermissionInsufficientToDeleteUser";
	break;

     
     
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	//def a = context.expand( '${#TestCase#httpLocation}');
	def a = URLDecoder.decode(context.expand( '${#TestCase#httpLocation}'), "UTF-8");
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);

} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;

		// code added to get the expected and actual responses
		def fileName = tS.project.name + new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

//		tP.setPropertyValue("fileName",fileName);
//		def testCaseName = testRunner.testCase.name;
//
//		def logFile = new File(projectPath +"\\" +context.expand( '${#Project#fileName}' )+".xls")
//		logFile.append(testCaseName.toString()+"\t"+context.expand( '${#TestCase#httpStatus}').toString()+"\t"+expectHTTPstatus.toString()+"\t"+"Exp[$errorID]"+"\t"+"ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "]"+"\t"+"\n")

	} 
	
 } 


</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="572c8f59-7b97-469f-bab6-ac0ea4462da7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00038_UserDelete_FUNC_CS_Basic_Delete_Full_200_OK_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Delete_Access_Portal_CS</con:value></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E52C7ACD89FC834FE0401F0A07991922</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E52C7B258058766FE0401F0A079940DB</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuKwEn3nKyjmkSJeWE0lqZKxAQNmNWZ5uWXL8gLesLzB11+ZBIZkktyZ+wRqtbpPL24dPWPNc9kuwBhFsRP4ZUl4qfxHayAGma12zaxzrVpDb8OaxtB0jWUbjQ5rNHUacZWyhHGCJB/Hmh+/VFiaqdfoTq1OK0yzSze6jfZTk6nvK2UVRZiYJipPdKWce66Pu1e3L5Uk8ruBhh3c9TUP4W4MuysgT7pEs6vdMFVen99QXh1Gr3Ych12Kgk8Ggsh14RMMPOqZ+qDzbODuyrF8LU4i9O7TwC+V97NZlj1l9acgsiiWpmmK5iiiY2DH+lV5Ld0OI0PyzeBt3dP8wHeg5joXrQAlo9gOjDJwrSByYtv7xjRDMXRhuoZyWINMw/9VoX47uKL7S0sfQEZYq2FbY27GlshEEfIhKq+X0kvl199V8O2sEmk+NoPIw5/W/wYJ+SlygxAZNXyL7Ibu7y1+ka7XZwS7kg/dBDspmhZtEmoQ4fI8QqaTTxxMms/A5Wv5yzm+dRiC/1KSZ+oRJ4FNfZEZwbEQjv+fej3W6s2KqrkJepWEBoh30Shbrl3BZXvBJXHtbYszUvHlCuFR+Q3UvdTv68+Neu+r90OeNpqxh0Yk0+vTBaRC3qZb4vYy7Z3jppUtzXSnDC9KNKRp4DGx2dJ4H4NeXtUddY7tZbOz1GldZGbROgtKftuFVLJi1J3hd7KlFftULGJlLmRjdeSlcypdu6YOdFk94tPcdFuD0QE01aFqr0cLQ+3wlDHZSKLevjBa6aLXtzMPDcLzfLCo273+QX75HdNjDEVcY3S+Bln83zZpTtBi7b7oFZPCJJ9njF5lSepVhV4PoJ4FMokHlsRPLmDKW8eTfXQGXEbzYLHuAwGc5SXIBGsnqIvFWMwMVXX3qtTv8/KykQ3BTiiRDUHMVWG/HdHaZh/u2D69X/G8sV0Gen0UGsNjNrThVFbkbKpIZ/kg5lNFpDdXmZWT9UU+yMxMWddLmwPPyUsxE7KrR0HM7Ol+swx3ay6DF3Ehg8YAMGuxZ8tDxVMZWF/a8CBOZHC8ynlb7qmqnIsKmJd4a6qS2JRefx9Czwh1z7UfjA+JccUYqGd94Cb7i3iQe+KgtzoNVpJeFxbiCCx3a32jHrVNPy3B4RToN49O09G2QWbtO5mw2I3GwV6yUzgFC5HnF4CkiwayNBiBYMADuQGc/NI78K2gZ/QzasTiUpVzB63t2TltsTagXY3pdJjdZNOan1qC6Ff340Q/2LK97c+q45WRrrmYu+xwWk1bmsPAPDQXW3EYj3NzuFiV9LmQb+Gwalgjyr1w/Uhuj0B0OduubC3jTWuGz7pjmht+O2u4bdOV68vQdM3wjKtKsDhGdItHdZbandNxXAKWzAMwOKwP/ELmO0VSDSlb7GReA30xTsDlwMZjVj2NhqkLd3UQ5OPN7HB8L4whZCJPZQuRtJVY6gjAKIowXK3F/gGsecuKeEvs8wsogMVOGmc7kq/1kCh/zmP/mkdL5IFY34MWNyzV1zQXz+JVowHOPr/2+5wtn/KN0fLo9gmJk9U0bGQynpr+fhMcZc+J1lGyWo/H00muK8ngeCCzyqRX47S+L4npMQTOdKzYRyEQtHm428Vh1YcRjKXQk6X8MtvjQ8fRPXpUbTL8nBZgm117erYeaOJ+HFkrZjxc+vN6myvhxDwPveqhk22qyqoVto2ebwrnM7WPVDoAQZ9bNk9GzrJHe51NWpk5AkddY6e5y/FnThzvFZgtF+PNyqs2S810MvHoi0I1puEsWw2yhrhYVOsGrwwVHEbOLulYeTTzDXanxa10T6stJ3SPHJsclUZYVy2PFGueGmFbnpcWjS3ce1Y7hCNqSaVAbJsTaXDWL9ol9GbwbYB+ng534dv8oB4ny4fRcyMdK9KtCMa3ZXEBSUK5T24FLf6ZwBQSx6iZV9VuWLAgHCM/rrwWpwry0k0IxXGMLrky3tZik+21ebbZEZheu9Xqi3SDZvo0oNsc16AF/sZy3lB8gtgLfNMpfBU87u2W+hkg9LoY+QaKammQQBvhyg8Wi3yVJX9Jrt/Ax0gJCE9s8y2mL/ZpWmgQzPUOx3Edsd/ptwWmwzc7oFKeBvHMn0XAjFH0kSN2PnDEJYJO6KCCSBa3KSbXKY5JSk5amsQu85RqTz5KCNWMCrbXZRudJoUdL3RRAZjyAiNx0VNoh9cEUfjtl61pEF+lDoZhEMWay1wv+2+j/Lx3SwjRMZxCARch8YgUFX3Beeu3eL6Nm2Ue476ZB4nhFHc6yW4cOfANycet301TdMu9Y+6BQczcsN+P/KOJLwxQP+CjPqfm7s9InQfvNx5PqCkhL6+3+p60p9NTkqbJtaLtgphFxDzFUHSbWiGYEHZ1VoIj8qm7CeqviO0d9SfPd/lHfEls+6uYDAeP9F/5uvyLV80K4eJVI5HvJ//bJ9MHlyRvMcrjr2Q9lzx+CsQ/vo9gFxZ6RDwnP1kQGb/L9YWtBz8kzmIaOr5VrAoae/6mN2BAzDpkIgbRo/GvDHzl/KPwnuQ7lph0k57E6PudcjHqXioahEHix5JQuQoex+8VZ3wOUfe30h9mrkTy/WWQ429fBlt5siKD0NMqd13nfyvXnGu7QEROYeeK5aWSk0cuce5bD+P+HeCXE59udn6a+B8jef1D/KfkIaefv4fX/wI=</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/iscportalcs1_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF8026914382E445E0401F0A05996AFB</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF802691433EE445E0401F0A05996AFB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E52C7ACD89FC834FE0401F0A07991922</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E52C7B258058766FE0401F0A079940DB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E52C7B2598AE766FE0401F0A079940DB:4917B200"</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FullUserUpdate API" searchProperties="true" id="7862a908-a45a-4b81-bc0e-801e8e24856e" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e8e7711f-eb52-4a17-984b-8a6a0236e395"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="fc0f6904-5506-463b-adf0-9309f4db6c7a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("userType", callTC.getPropertyValue("userType"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			}</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="15098d07-3e28-4bd9-8ce6-eddc712c561b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("GeoProfile")=="US")
{
  tP.setPropertyValue("Country","US");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="CA")
{
  tP.setPropertyValue("Country","CA");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="GB")
{
  tP.setPropertyValue("Country","GB");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("GeoProfile")=="AU")
{
  tP.setPropertyValue("Country","AU");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="NZ")
{
  tP.setPropertyValue("Country","NZ");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="IE")
{
  tP.setPropertyValue("Country","IE");  
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
/*Setting DOB for Adults*/
Date dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("ADULT_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));

/*Setting DOB for Youth*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("YOUTH_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));


/*Setting DOB for Child*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);

tP.setPropertyValue("CHILD_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));


if(tC.getPropertyValue("userType")=="ADULT"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}else if(tC.getPropertyValue("userType")=="YOUTH"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("YOUTH_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else if(tC.getPropertyValue("userType")=="CHILD"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("CHILD_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else{
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="02239d7c-1ce6-4d58-9ae0-6470a8e1e472"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserUpdate" id="a1716223-f6c8-4dc3-856d-e8679a537744"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserUpdate" mediaType="application/xml" sslKeystore="RET_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>${#TestCase#UserName}</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmailAddress}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="3af7e03a-0317-48f5-92bd-e35a465a120e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5d887a92-965a-45ab-ab45-7daaea74c225"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>1.21. User Email Address Changed by Another User [Your UltraViolet email address has been changed]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF83148BF14A1B37E0401F0A0799725A</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFHRgLjevIXDgCibDJv++nfQ6DE5yfnyflc6PT3dTy/0PPOMDc9lOwBjFMVO4Jdl8aXyT7PFcg2Th7WGVedqnNFu1Np0m6+xvGnVG3R7uzWYSlnGOEGyj2PDj18qLM3Ua3SzxvA6U+806E69+USz3KZSXqAIE9NE5YmulHPP9XHn4valkkR+JzCwgzu+4SHciWFnBpRxh2h2jBumyuvzFeXFYfS6i+OwQ1HwyUQQuS58goFHPVMfdJ5N3Jk5tm/ESYTefZr4pfJ+Nsuyp6z+FEQ2xdI0TdE8RXRM7Ni/Kq+l22Fkyr4VXNddww98BxquczYKUAqKd4FZBq4dRE68874xzVAMXZiuoRzWIMP5vyrUbwcXdD+09AFkhI0a3pEivBvTkIUi5ENUnmvyS+XXzyp4PatHho+tIPLwp/V/g4T8FLlBiMwavkV2Q/dzi1+k6/UZwY7sQzfBToomRZuEBkS4/BYhy8nHDibNZ+LypfzlHN86DMH/UpJn6hEngU19kRnRsRGO/596PdbqamVhuAl6bc4Ye7D3+oln7yJRsFdmQ+NWIuqGwcsFwqPyFdS91O/rz41676v3Q9aSsua+vTwziatnYX7O1S7XPMxTS287OQgHbhuej/l5U9dVaz3Ydkchv6H9pDoc5Nvxymc0zemP9y0eSNtSg6/i5bq614ataj5fRlqaCNXT0lw38154ipqWeaB8VU0MwVjM1UzdU6c8dLhwoEtWjH1/82ZQPSMVFG0pl05QYbdiHhyEQ+jUe8yEll5+x/QYQxHXCJ0uQRb/Vw2aF43YuC+6xaSwyOcZo1dFlrtVsdsFqGuDTBaALQvjM5gI9uG4Ozh9PqMFoM57QAQnRQOZaK/FhaqOpMxcLNzNQu71CD4uG4C1WCIbopQvxM1qSBvLTbhme/RmJgjmSgu29WFoDg7ZYAcniq5kE10+KXspn+gSvbzI7Jysz8peYab6vF5a7gVe0aRMzC4eRSnbTTZLLVzP+QyeJVUBXB8wc6m7Uwa6t2BgXdvBvTRWwOEiF3ZKd7FQckkHbyXBnixIbHq3twmhZ4Zbz909GB8Q47rZX5y2fTfZnKW90pX63dmxP5O3dVGVhkBbz7fLxcFY9tISHEzA9ubRaTjGKsjsTTsT1fVwFGzkXQonQJUEQQUkXTRQ5P4QBH0BKBxw8nN3LzSDrtnLqCGLS1Xe7TdXJ+e4wkafdg2m3WbW42Xz7dgUJb+6GSXb/U7ZrXrT6mhmpnM+5s9rnFbTpuEwMA8tdSUN4lFuDdRZafsm5is4qJr2kHLPfC9SWkMQnU87V7G1eNmc4tPWsaylsJpybstylboWWq4VnnBVD9RDRDcFVGep9SkdxSVgKwIA/f18L6iK0C6SasqZulYEA/SkOAHnPRuP2MVxOEhduK6DIB8tp/vDe2FMMZMEKlMl0lZSqS0CsyjCYDaXenswF2w7EmypJ6hQBOpaHmVrkq/5gCh/zmPvkkdbEoBU34AmPyjV5zQfT+MZx4GTL8z9Hr9TjvnSbHp064ik8WwScpmCJ5a/WQYHxXOieZTM5qPRZJxv9aR/2JNZZdGzUVrflKT0EAJnMtJ3BzEQjbdwvY7Dqg8jGMuhp8j5ebrB+7az9ehhtcEIb7QIW+zc22bzviFtRpE9Y0YDzX+rt/gSTqzTwKvu29myqs+aYcvs+pZ4OlGbaEEHIOjxWuNo5ix72M2zcTOzhuCwNdhJ7vLCiZdGGx1mmjpazrxqo9RIx2OPPusUNwmn2ayfcZKqVuumoA90HEbOOmnbeTT1TXZtxM10Qy+aTugeeDY56FxYX9geKdZbaoYt5a2kciu48exWCIeURqVAalljuX/ano1z6E3hdYB+ng534XV+UI+T5cPouZGOGelWBOPbsriAZLHcI7eCEf+dwBQSx6xZF9VOWLAgHCM/rrwWpwry0kkIxXHMDrkyrmux164zXFvoMQ2eEeotieZopkcDusXzLbYBbizniuITxG7gW07hq+Bx11vq7wCh18HIN1FUS4ME7hCu/MVika+y7Gvk+g18jPSA8MSWxDFCQxJbvNBmWbbREOgGgS5227TYZFhQKU+CeOpPI2DFKPrIEZsfOKKGoBM6qCCSxW2KyXWKY5KSo5Emscs8pcaTjxJCNaOC7XVYrt2gsOOFLioAU15gJi56CnfhJUEUvv6yNQPii1ST9H/kWfdy038b4ue9WzaIjukUCriIR0CkougLwsvegvk+aP4x6Jt5kJhOcaGT1MaRA69IPm797piiVe7tQqK6Qb5rfhZ8sEp9DujuyEwdeO/5+3OAsEnCN15vJTkaT8enJE2TSxFaBZeKiHmKoegmNUMwIYTopAcH5FN3E9SPuOgd9SfPd/lHfEm882cx+Z490jLly/IHD5EZwsVDRCYtn//0lfPBJclbjPL4K1nXJe+VAvFfnzSwAws9In4jP1kQmb/L9YWtBz8kzmKAOb5drArmefqmKWBAzDpkiAXRo/GvDHzl/KPwnuQ7lph00zaJ0fc75WI6vVQMCIPEj2WxchE8TswLzvgUos5vpT/MXLjfO5nP8bdkfqWMZ2R2eUblruv8b+Wac2kXiMgp7FywvFRy8i4lzn37YUK/A/x6SHPgb0P6YySvf4j/lDzk9PP38Pov</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DF831D3BDEBB69DEE0401F0A05992E1F</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF83148BF14A1B37E0401F0A0799725A</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-06-24</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF831D3BDEBB69DEE0401F0A05992E1F</con:value></con:property><con:property><con:name>UserName</con:name><con:value>fullusername_20130619_072217</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CLGTransfer" searchProperties="true" id="9d562b4c-2b21-4e4b-9dee-ea86ba8721ce" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b6c59ddd-f128-45cc-acc1-fcb9c7601c10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d2122245-f595-48c8-b54c-ea78d0db3f52"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));
tC.setPropertyValue("FULL_NODE_USER_ID", callTC.getPropertyValue("FULL_NODE_USER_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("userType", callTC.getPropertyValue("userType"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			}</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="7060fe95-13b3-41ca-a150-3f0edc3adc54"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("GeoProfile")=="US")
{
  tP.setPropertyValue("Country","US");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="CA")
{
  tP.setPropertyValue("Country","CA");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="GB")
{
  tP.setPropertyValue("Country","GB");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("GeoProfile")=="AU")
{
  tP.setPropertyValue("Country","AU");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="NZ")
{
  tP.setPropertyValue("Country","NZ");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="IE")
{
  tP.setPropertyValue("Country","IE");  
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
/*Setting DOB for Adults*/
Date dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("ADULT_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));

/*Setting DOB for Youth*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("YOUTH_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));


/*Setting DOB for Child*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);

tP.setPropertyValue("CHILD_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));


if(tC.getPropertyValue("userType")=="ADULT"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}else if(tC.getPropertyValue("userType")=="YOUTH"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("YOUTH_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else if(tC.getPropertyValue("userType")=="CHILD"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("CHILD_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else{
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="20e9cc33-a9bd-4521-aef3-430d62debf4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("CLGTransfer");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CLGTransfer" id="f04ef3e0-3f34-4fd7-b08e-576d088813e1"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CLGTransfer" mediaType="application/xml" sslKeystore="dececs_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:standard" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>${#TestCase#UserName}</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmailAddress}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
      <LegalGuardian Status="urn:dece:type:status:active">urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
      <LegalGuardian Status="urn:dece:type:status:pending">urn:dece:userid:org:dece:${#TestCase#FULL_NODE_USER_ID}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="2479ab41-1198-444b-88a0-f69cfd793c9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CLGTransfer');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5db4b6fe-99bc-4dbd-b846-0fe097588a46"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>1.31. CLG Change Completed [The legal guardianship setting for an underage UltraViolet member has been changed]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dececs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF8240BDE2C9DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZkqrKEn33KwzPo2EziANGd0cUgoqKIzi93MCiGJRJikm//hbauu3e3fvuc1/ESrIyVw5krXrFuueyHYAximIn8Muy+Fb5D982aNjQ27V9q8nUOJ5u1PZGE9ZgnWk1aYZrtPZ8pSxjnCDZx7Hux28VlmbqNbpZY3iVYTsc36HZlwbd2lXKKxRhYpqovNCVcu65Pu5c3b5VksjvBDp2cMfXPYQ7MewsgTLuEM2OfsdUeX+9obw6jN7tOA47FAVfDASR68IXGHjUK/VJ59XAnaVj+XqcROjDp4HfKh97syx7yeovQWRRLE3TFM1TRMfAjvVP5b1034wM2TeD27qr+4HvQN11LnoBSkGxHRhl4FpB5MS294NphmLownQN5SR9DOf/U6F+Obii+0tLn0BGWK9hW2fuxhbIRBHyISprC/mt8s/fVfC2V410H5tB5OEv638HCfkpcoMQGTV8j+yO7u8tfpOu91cEO7IP3QQ7KZoUbRLqEOHyLEKmk48dTJrPwOVr+cs5vncYgv+mJK/UM04Cm/omM6JjIRz/P/V6rtXNykp3E/TuyUIGD9To4Kz6m0G+mqqebMHQTBfa2xXCs/IN1KPUH+uvjfroq49Nvom2vBb6zqSrVJdSHc0uDNI0rX5m3KQXKs4md7e0H3PrFhsf061Nj05NdcP1VtrQmgB5jf3LxN/3N6JrlpSumc+r9TNX5UO6MWvSeDWecOP2KbCs4WXsJXbT32/8wclh2E2uL0/Was7tq+yskWvnoRtjmZ1Jl53tO5RZUvdOmrZlLrT9qDU1jzjevv2K6TmGIq4ROl+DLP5vGjQv6rH+WHSLSWGSzzNG74osd6titwtQ1wKZLABLFsYXMBGs48k+On0+owUw13pABGdlATLR2oqr+XwkZcZq5e5Wcq8nKAsuG4CtWCIvRClfibvNkNbXu3DL9ujdUhCMzSLY14ehMThmAxtOFFXJJqp8Vg5SPlElen2VWTlZX5SDwkxVrV5aHwReWUiZmF09ilJmT3brRbjV+AxepLkCuD5gNKlrKwPVWzGwvrDhQRor4HiVC7bSXa2UXFLBrCRYkxWJTe32diH0jHDvufaT8QExrhr91Xnfd5PdRTooXanfXZ76S3lfF+fSECy22n69OurrXlqCgwnY3z06DUffBJm1a2fifDscBTvZTuEEzCVBmAOSLhoocn8Igr4AFA44+aV7EJpB1+hl1JDFpSrv9pubs3PaYL1PuzrTbjPb8bo5OzVFya/uRsn+YCv2pjetjpZGqvExf9nitJo2dYeBeWjON9IgHuXmYL4s7WdivoGDqmENKffC9yKlNQTR5Wy7irWI180pPu8d01wLmynntkxXqS9C0zXDM66qwfwY0U0B1Vlqe05HcQlYigBA/6AdhLkitIukGnI23yqCDnpSnIDLgY1H7Oo0HKQu3NZBkI/W08PxozCGmEkClc0l0lZSqS0CoyjCYKlJvQPQBMuKBEvqCXMogvlWHmVbki9tQJS/5rF3zaMlCUCq70CTH5TqGs3H03jJceDsC5rf423llK+Npke3TkgaLychlyl4Yvq7dXBUPCfSomSpjUaTcb5Xk/7xQGaVSS9HaX1XktJjCJzJSLWPYiDqs3C7jcOqDyMYy6GnyPllusOHtrP36GG1wQgzWoQtVvP2mdbXpd0ospbMaLDwZ/UWX8KJeR541UM7W1fVZTNsGV3fFM9nahet6AAEPX7ROBk5yx5tLRs3M3MIjnudneQuL5x5abRTYbaYj9ZLr9ooNdLx2KMvKsVNwmm27GecNCfzxBDUgYrDyNkmbSuPpr7BbvW4me7oVdMJ3SPPJkeVC+sryyPFmqVG2FJmpTm3gTvPaoVwSC2oFEgtcyz3z/uLfgm9KbwN0K/T4SG8zQ/qebJ8Gj130rEk3YpgfF8WB5AslnvkVNDjPxOYQuIYNfOq2gkLFoRj5MeV92JXQV46CaE4jtEhR8ZtLfbaLEcLosSKTbHLSxLN0UyPBnSD51tCu3FnOTcUXyB2A990Cl8Fj7udUn8GCL0ORr6BoloaJNBGuPIHi0W+yrK/IMdv4GOkBoQnggYjtQHgu5LQYKVGlxPaXIsWabrBsW0SS6U8CeKpP42AGaPoM0dsfOKICwSd0EEFkSxOU0yOUxyTlJz0NIld5iXVX3yUEKoZFWyvw3LtBoUdL3RRAZjyAiNx0Utoh9cEUfj2ZGs6xFdpkV2Irwf9jxF+fXdPBtExnEIBF+EIiBQU/cZ3253GPZafY24/x3w3DxLDKc5zktk4cuANyedXvxqm6JRHt1x/IL7Dfmh/FXyyTH0N6uHMSB34aPvHjYAQSkI53u9VOekvp5ckTZNrHVoFnYqIeYqh6Ca1RDAhnOisBkfkUw8T1F/R0QfqL54f8s/4ktj2lzH5pD3SNeXr8i/uIkuEi7uITLo+/9uLzieXJG8xyuPvZF2XXFkKxH+81cAOLPSIeEYeWRAZv8r1ja0nPyTOYoY5vlWsCvJ5/qExYEDMOmSOBdGz8e8MfOf8s/CR5AeWmHTTPonRz2/KxYB6q+gQBokfy2LlKngemlec8TlEnV9Kv5m50r8PPp/jH/n8Rhkvyfjy9MpD1/nfyjXn2i4QkV3YuWJ5q+Tkakqc+9bTkP4A+P2c7vJ/mtOfI3n/Tfy75CmnX7+H9/8C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DF82425275355BDBE0401F0A079960F2</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF8240BDE2C9DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\dececs_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-06-22</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF82425275355BDBE0401F0A079960F2</con:value></con:property><con:property><con:name>UserName</con:name><con:value>standardusername_20130619_062045</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>DF8240BDE2D6DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>FULL_NODE_USER_ID</con:name><con:value>DF82425275645BDBE0401F0A079960F2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateTOU_API" searchProperties="true" id="16c677b6-f520-424c-859c-233d39f17e8a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="03511874-5bd4-4c77-8da8-495888b9a4d0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:TermsOfUse");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:TermsOfUse", "UTF-8"));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set_TOU_Policy_Resource" id="caf131b3-937f-4b10-882a-5dac738e53e6"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="ae378d58-312d-4639-a1f1-8020ffa993c6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_TOU" id="64f6c9ab-51fd-4a45-a25b-419b6ae4b3ec"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_TOU" mediaType="application/xml" postQueryString="false" accept="" id="33e0eff2-2ff7-429f-b6b9-d52aafa515a7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
    <dece:Resource>${#Project#Policy_TOU}</dece:Resource>
    <dece:RequestingEntity>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:142795B8DBAC4801E05305991F0A14FE/User/urn:dece:userid:org:dece:1427A5BD3B780EF6E05307991F0A1C36/Policy/urn:dece:type:policy:TermsOfUse</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="3c77ed72-a051-4343-8238-24f4d1b292a1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_TOU');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="43798fab-c0c7-4ffd-b3cc-6dc5f8ef52bb">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06/User/urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMb5gbp7ADNhJSsMlBZK2eTkj5AUUbAks2UB+/ZEMuEBJDj1PHq1Xu9/ufvqkW46i0HZbnEMsCKOFTRRS7mbWhpbE1GWIE+5SFAF3BXZHrV7XtYumiw5btELHb2j/BJVJaQLTmj6t2I7uTCZVvW7VAt2pVqc1VC07ciVdOU+gQ7lAVDQ027TKulnRzfrYrLsl27VrxYpZf9UKLxBzGVu6FE1tD2rDG9pciKVrGOv1urguFVk8M2zTtIyfve4IzyFCWvN2V1GWKG7u/XExAAxhiIuYRcatceJzG3B3RGYUiSSGfa7go1ymYdYN6RNwMvui5Xsh6NApy5YeoowSjELyjlR/eiDmLCi0whmLiZhHHxZhmSqwDhusY8uhXzTjFNqVgU4QxhzpfI6sfawhTCEGiqHwPOw0tC/XTS3bOo4R5VMWR/x0+Xd4gKYQsiUEOj+UtYd2fcALnWreAnY7FIcJJyn0FVmXCAPfTxPw9aEKTzFMyaZLuCTohit0xjG8s+WuGz6ZARf/Z0BHw9kFeUFhAs2f3n3bKW3X77WF1f/ubxde+e3Ve614nV4jA3DsnBny0e6WZ6TMSbTbQUrQW9+Mvi5/OT+m4cvqITAfSC+l6NF+C2Fsv9eff63Dl+n8zVr11++LVdDDoZh5r4unakt4N2vbZs/hoEYHQ5L+8MykzxdvT/UtLr+wu2F3s7oB5+tjt3wzfBivB6+b1PnlV9tR/DZ8pH63xJ/Hmxnr3704gyjpbr1VvT7psujbQ2/wE/W/d9/99mDx7fsT8iRL83KO8J/aDmd+lEzeAIvDUtGg4xfu5ZSQ+FzMlIUE+jRzdZdKfLgAKrSm2qW0w02k3JHAlTPcra2aVbKq9Ur1ruK37Xv/ziyXSnf1unVvtny7ZR1EZofiDKLH6JSoXEpyd7T5HCCOXA40gFhPWSKVjmufRPSRQIUOHcpDwCiHMZPyPA2d+TZN3u2wRiy7FrI4LPF0i22t0GdiQAdxayogPtFkyz7R5CFgsiSghFvxmkticyF7sUJpIkKrmKIihURKe6xU1rWdWtngJFqGoJAaEQuSEIrL+TLrjMF3X1tHmGdWwvGSxQKF2YEwPizv/N+hE9InIMqBq5LaIKcJF+4Y61DPx3WXj+s+hG8lAVHnS7ZVxATvkJz++s0WRZOcKnlhmOe0yLf8ZYgLAYxP8BnnrcnzBSk5yn64zOW1IIWkeZjvClnFVTFJ0yQbqeOUjFiGN6RuWsYIcCJ1bjtmC6BGHsK46lLJUZ9lzu2n+BIxpyOBBESSf4VsecUrYgRcvSI68uBsrn2inKSUfROwEZdsXihfQArxp48k7GLlJ81P8rNmcfB7XBdiHeWRdcpHhCB0plbqQtl+wA3MZFgipZDFx8EvBbiU/NSYNznHIiSbJomAj/8UlMY1NIQxS6jo+FpmONbdDKfYLsH97fRHmEza87ce+e/Hnk4yCmCQL0ROsvjqynYV/+nsSLv3Sc/l23bu2mbZ8hyrVsnk29/Jt9c2K3lTTtA1/zD/aTnq0znHm/8C</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>caf131b3-937f-4b10-882a-5dac738e53e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateCLGAttestation" searchProperties="true" id="69fd4170-842f-452d-b5ba-2a3dcb222763"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="355918f3-46c7-4508-80dc-49ec32fd9b48"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:CLGAttestation");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:CLGAttestation", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="6f62f720-8990-433e-b87f-e5bfb4b7fa27" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:CLGAttestation");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="71b4762b-b2b6-4066-a64a-c0f377d83ac1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_CLGAttestation" id="8cc93c7b-8afd-4f62-af4c-77a77fe1312d"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_CLGAttestation" mediaType="application/xml" postQueryString="false" accept="" id="dbda20b9-5581-4d15-a8b8-6d2f1b101932"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CHILD}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="881c1a4a-7f22-47bc-8521-cb1a71a0e0f6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_CLGAttestation');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="bc4eef95-3c69-4df3-a422-dd89da0b3ed1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlnoOTEC6JChKXMptOW2ih7SwvK9d2wDOJHWKHy/z6tUOTAqXdzkpIyCfH3/nOxZ99IWASu0FPCJJJypkRDjvmP7b/7LbquGE1mwhbHvIiy/cc14KEoDrEz57vQ9MIhchJyISETHZM13Y8y25aTntm+4HTDhrNml9vz03jkWRCQSuXmm0a2yRmIijCdsw8YwGHgoqAwYSIQKJg2ru5DpRnAEtOZvdiz7IImHWXUqYBAKiGCSJxjGqIJ+ACHPlcYBFM6YJBmWfkJSYWHfNl72azqW3qNZ4tgGvbNrB9oHywoIuvZvdLuZngkEV8vx5AxhlFMKa/oSZ1Q+SSY6MXL3hG5TJ5B9oBjq2hLbJFFnI89tUErwEKdp9EOiKZCWiJJXRKsHsSkYwwRIyH+7Bjfv1cB/d7ZxlkIuJZIk7Wf0aJsDWJeUqwJcrMSnafRzxTru4FQUHIUJwLuia3ekxSiIgwJhmJ6PaaCjV8WBhF+42tUD9aThlBf9KWC3DIVVEHZ6ozpAsi5P/p2WG/9iiPMM5J94Y/9tLZLZy5a8hQYza6jPLkaeRNL1GnoHDovCdVtftlfTqs1Wy9bLobr+4B6O0mV1ETgbvIcX5u8cCdDG7vJttmP2X1H/27+aWDLhO+3CXDsTPPh3nr29+9dCQWy6g9+CsfP7g2JkP+5c7DLliSyShpXA0I4INxc/D8azTBT+HcbYJvdj99vAK/QzdJL6PYjYdjDjf2z/r902rXboVy7iWt9oN99QNd4S9P8fdwvk2e8MMmm5PJCvVF5zWnwxyOjaUkTPPnnwTJcqnHIxwaI9UvKD+WF22h2IoK1yDVGiUkYdLs6l1aWoJcCRDFgWrmfj0aOL7v90b9huc36rZ/aXu2M7J7dsP33WZ9UGrQnsUJxQFnEdWxtMru5+djgigJBGGYZNaa52hJhPkB4hBKaITsXh0OzgSZcaXiv5/TphOt+S5p5w5eRfW1u9l4fj03jVsux2yc9SJJsiPpdtwj6b4niKaUaH3XAy7UhAuparGC61zGTm0Na4zk6gbItAgHrtduAEGTNCaaKUg4zmNSS5dpURkg9v9KhpAorFSglGcSxk5x/t5N7/RbWQnlg6l2EDqlPlHdJGeuIq/M5/28G4d5l/C9HFN9zFRZZUbRnsnxp9dp0WNSjUqVGBJOyb3a8ocQZwDAB/zAaWmqeHhND6KX16u6MZSedMv+rmBtVcvX67zoaEtrZabggZJMB0wJypXg7Wb8F2GgggCfum8q1ieRK/sxv1wu2VRCSRI1f0ax/MRjY0qEfmyE6uBsP/uSOQqp6ibJVp6zDWL1JtGMP3y2oABpP2WeqL8Nz/Bru85gHcRReaoXhqRsoVf6Ztm9MxuIK1iqpJBnh+DnAM4FPzZWRa64SDVNz7kk738xtMZ1TIgQz5kMh2ZhONTdgqfcpSR4dXoDU2j7y2W9Fe9e1j9urqdKARNoVr70v50tWowLIqZ+ExRcOuZWvT1VcLY40PkXgm+lvu8M6z2/3Ru5ldS3fN8ZNltVAY8y6b4xv7Uc1PT0PHT/BQ==</con:value></con:property><con:property><con:name>tName</con:name><con:value>Child_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Child_User_Create_API</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E48705C62976FCB4E0401F0A079971D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:FC1999B1D3A98AF2E0401F0A07991D67/User/urn:dece:userid:org:dece:FC1999B2B98B496AE0401F0A05992648/Policy/urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/iscportal1_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B98B496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D3A98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E486FC50804D1AE5E0401F0A05991EF2</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E2E22E83505CC024E0401F0A0599357E</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFB5495309E0401F0A0599263C</con:value></con:property><con:property><con:name>CHILD_NODE_USER_ID</con:name><con:value>E2E25B1DF5BEDD19E0401F0A07991448</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD</con:name><con:value>FC1999B2B98B496AE0401F0A05992648</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMAC" searchProperties="true" id="7d85ebf5-2378-47de-9c73-bcc3be05c78c" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d4371971-21ff-4a90-a0e0-37d68d88fa6b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1de7ab16-bf7b-4512-ae11-1599f01163bd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageAccountConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="4285855e-3060-462c-b83f-1d458ec03956"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MAC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="bf51df31-427c-436d-aab8-95c2f091660b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MAC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               contentLocation = value[0];
                                                
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="9df4ad07-5eae-44d6-bbbf-fa0607afb8ef">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxjOo2Gzucd0RxSLNCoqiOvLCSxKQFmUAkF//S1wtLWne86c+9BhV5KZ9WXmV1lZP7Hpe2wXYIyi2A2DsiK+Vv5pNqFFWyxd27Ibq1Y30bbWaba4GsNxrdamSbe2zU2lrGCcICXAsRnErxWWZrga3ajRHYOud+tct954aTCddaU8RxEmronKC10pZ74X4G6x7WsliYJuaGIXdwPTR7gbw+4UqMMu0eyaN0yVt59XlMWG0ZsTx4cuRcEXC0HkefAFhj71k3rS+Wnh7tS1AzNOIvRrTwu/Vn7Zpmn6knIvYWRTLE3TFN2hiI6FXftH5a10M0aWEmzD61owgzBwoem5FzMHpaLYCa0y8OwwcmPH/8Y1QzF07rqGMliDTD34UaE+NijQ/aWnJ5ARNmvYMZmbMx1tUYQCiMozXXmt/Pi7Cl5tjcgM8DaMfPxp/d8goeCEvPCArBq+RXZD9/cev0jX208Eu0oAvQS7JzTKaXIwIcLlSYS2bjZ0MSGfhctF+csZvjEMwf9Skp/UI04Cm/oiM6JrIxz/P/V6rNXVy9z0EvQmWzvFn2yGBhOttYx6X66rBu11BCiFrwWER+UrqHupf60/E/XOq19G+xnsUdVLMuZ6ekpN14O9M9FAf9hsj0M8mZ4YD67aR6AKy4HV8O3jfBcyozZoR3rUV7lRc6gtk1Bp6aw98UtH2bEW+hG5lqDu7SMftweXfmZG65geuoiTW1bnwDQ3K5n32WS5wLjVwkrHXzPNkQa5o4J3avss6Lu2s4alZDXEVHVYx02r2qr3L4wRvn7E9BhDHtcAnYsg8/+XDbojmrF5Xwh5p9iS4xmjN1VRxOQiCOA8tUGq8MAmfzsw4u390dm7cieleaBpPSAKvLeThirYy4CZSbyjCvO5mgkX0Oft0ZwYGiXgrXlVl1IxXYlzTXuXUsew5Pl5I3vJ+iKNVIALY8FRJV2ai7ohqSoIr7JMFTdytlOnaqpoK7FEHIhSdrhYcidGcuZCVmmo0wa7mjaS9XJO5L3z0B+dNobkqYIqC9OjPFU2nKhJfaCvFpDtJcT2MvQPYWk14x+M+ge0A6iX0mRPcFGNfaoaM3Yk6mYhM55lqiL3VQ2nglZEJZektD+fXT5yIfCqYPlSJhlgcs0FNITeiF4v+9hcNAJVB6loF8YDKbXGNyCqRqcl4ZqroZTqkj4b9VRdSSVQyEQp9fCGHTkb2TlBTsv6Btg9FkbQpEUvIN8D/QTPjWPJlHtg488ZyOkOdBuuuQxTe91ORW3VH4RrhbgZAU3ieQ0QQDTIQyP558GQnzfGB7fDumi47YU+cqKSyoSD/emS0W2XG9uT0aIhbvetiexOONNyKMWD7I7bA0VB1oBxNNPSV5QuBu6lOR7MlsiNVpd41NCYpttulPRFMluKodey3per2aCaraBmjCfT2WJyybLRcde+ePH7mH+Ppn1VtMcjhCYYVina7PFGW2wIq/cd4dNWp1GjBGyVB0De2bbkEgLz77srCd91VSLkJcczlYWFIE+BLFclhRc1bdtzmAmU58mMGamKZHkkTefVUvdKa4EXSaVoc7E+rNgevTaAVTjT6lLP1maNan+J1trIM+YxSA/zbcAwtHzQ3rdqakM1Z4ClpFOenCK+lChgZo4PfTobzJs0c9Qsrz/tgBmXTdl9Nnbs9Xlvr/ekKKuHo7MygDc3HjimEIotSpoh6SpoX89bpiozTvegnx02PsxEg9SsMA4NXtJ7Gj3LRBEMrjJsADbDq4u0UwWpsC+BTDUJLU6bpYNXwcgdG1JCSJs80GW3Yel/5VhOsdIzx44C0MBnjklXjklge6wqbZHBjaZwwIvU5mXpqLXmw37nQGvL4b7EV3uUHbtefRy0U2NQXTDntOXstMWio4iOUA22K4fbxDxtXqCG+vuW7Op7MWjWvbM6VLXGzKW8M71DxxQPSyOFCSQuvvSoTpRUeX/t+pcLV2dn/mSanJSZOcDM2dkcF510N3lvUlQknxuX1vqk9ZYhXF3vkc9N8i68tlHqscE+deDb7DVNNjsE49syv4cVsdwjl6MZ/3mOyyWuVdsWqt1DPgziGAVx5S23yme4bkImPdfqkpvzuhaFOtvm221W4Jge3xYkuk4zPRrQrU6nKTa427B3RfEJohAGWzffKx9nr5f1nwFCv4tRYKGodgoT6CBc+YPHPF9lJdDJFBIGGJErq/JPi+FEscHyHCtxLbrdoJudVhO06Z5IxHQTVMqjMB4H4whsYxQ9j8qtp1FZR9A9uCifp/OhApOpAsckJUfzlMQe83IyXwKUkIk7yofeLltvNyjs+gcP5YApP7QSD70cnEORIApff9maCXEhbTVpuph2vo3v87dbKoiO5eYKOA+GR6Sc6Iuhn7tF8m3EDP0Y8c09SCw3H2pIXuPIhVckz58+6JLz5M6VPKQb5rvqZ8GTW+pzRPedrJML74y/v4nISE2GrrdbQY7my/ElOZ2SogStfKCMiHuKoegmNUUwIVPh2Qj3KKDuLqi/GsjvqD/tfJc/40tiJ5jG5DT7hDDlYvkXr7EpwvlrTCGEz/72qfe0JclbjLL4K5ngkUdbjviP7zrYhbkeEU/ITxpG1ke5vvD1sA+JM29fbmDnq3z8Pn/DChgSty5pYWH06PwrB19t/iy8J/mOJSZs2iQx+v5LOe9NrxUTwjAJYkWsFILHflngjM8H1P1Q+s1NMQD/etFk+NsXzVIdTknn8s3KXdf9d+WaW9AFImKF3QLLayUjj3OyeWA/9OdfAL9u0Sz3pxb9HMnbb+LfJQ85/Xwe3v4H</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_11018 - STSCreate - retailer - unamepasswd - Different users on save account share same node accountID - P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>1_STS Create Tokentype unamepasswd - Payload</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DC428B882C31FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>829</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:DC428B882C23FB8CE0401F0A07996D53/Policy/urn:dece:type:policy:ManageAccountConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\STSAPI_Projects\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeTestRequest" searchProperties="true" id="1ed1186f-c5dd-457e-8f01-8a0cc98d07bb"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMergeTest API" id="e55544f2-194d-400f-9b20-0f2f08c38bf1"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
testCase.setPropertyValue("RetiredAccountID",CallingTCase.getPropertyValue("RetiredAccountID"));
if (testProject.getPropertyValue("versionMinor")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("SurvivingAccountID"),"UTF-8"));
	testCase.setPropertyValue("encodedRetiredAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("RetiredAccountID"),"UTF-8"));
}
else if (testProject.getPropertyValue("versionMinor")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
	testCase.setPropertyValue("encodedRetiredAccountID",CallingTCase.getPropertyValue("RetiredAccountID"));
}

//User Details for Merging two Accounts
testCase.setPropertyValue("user1Status",CallingTCase.getPropertyValue("user1Status");
testCase.setPropertyValue("mergeUser1",CallingTCase.getPropertyValue("mergeUser1"));
testCase.setPropertyValue("user2Status",CallingTCase.getPropertyValue("user2Status");
testCase.setPropertyValue("mergeUser2",CallingTCase.getPropertyValue("mergeUser2"));
testCase.setPropertyValue("user3Status",CallingTCase.getPropertyValue("user3Status");
testCase.setPropertyValue("mergeUser3",CallingTCase.getPropertyValue("mergeUser3"));
testCase.setPropertyValue("user4Status",CallingTCase.getPropertyValue("user4Status");
testCase.setPropertyValue("mergeUser4",CallingTCase.getPropertyValue("mergeUser4"));
testCase.setPropertyValue("user5Status",CallingTCase.getPropertyValue("user5Status");
testCase.setPropertyValue("mergeUser5",CallingTCase.getPropertyValue("mergeUser5"));
testCase.setPropertyValue("user6Status",CallingTCase.getPropertyValue("user6Status");
testCase.setPropertyValue("mergeUser6",CallingTCase.getPropertyValue("mergeUser6"));

//Set the SAML Details of the Full Users to the AccountMergeTest API

def headers = new StringToStringMap()
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("survivingAccountUserAssertion"));
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("RetiredAccountUserAssertion"));

testRunner.testCase.getTestStepByName("AccountMergeTest_API").testRequest.setRequestHeaders(headers);

//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMergeTest",CallingTCase.getPropertyValue("expectErrTypeAccountMergeTest"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMergeTest_API" id="ff916405-df6f-46b9-a011-a6689d00989e">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase    = testRunner.getTestCase();
def testSuite   = testCase.getTestSuite();
def testProject = testSuite.getProject();

String keyStorePath  = "";
String keyStoreAlias = "";
String nodeId = testCase.getPropertyValue("nodeid");

RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeTest_API");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

switch (nodeId) {
	case "0799":
		keyStorePath = "C:\\DECE\\certs\\0799_concat.pem";
	break;
	case "0798":
		keyStorePath = "C:\\DECE\\certs\\0798_concat.pem";
	break;
	case "0701":
		keyStorePath = "C:\\DECE\\certs\\0701_concat.pem";
	break;
	case "0702":
		keyStorePath = "C:\\DECE\\certs\\0702_concat.pem";
	break;
	case "500500":
		keyStorePath = "C:\\DECE\\certs\\500500.pem";
	break;
	case "222312":
		keyStorePath = "C:\\DECE\\certs\\222312_concat.pem";
	break;
	case "222333":
		keyStorePath = "C:\\DECE\\certs\\222333_concat.pem";
	break;
	case "222332":
		keyStorePath = "C:\\DECE\\certs\\222332_concat.pem";
	break;
	case "222334":
		keyStorePath = "C:\\DECE\\certs\\222334_concat.pem";
	break;
	case "222335":
		keyStorePath = "C:\\DECE\\certs\\222335_concat.pem";
	break;
	case "222336":
		keyStorePath = "C:\\DECE\\certs\\222336_concat.pem";
	break;
	case "222337":
		keyStorePath = "C:\\DECE\\certs\\222337_concat.pem";
	break;
	case "222338":
		keyStorePath = "C:\\DECE\\certs\\222338_concat.pem";
	break;
	case "222339":
		keyStorePath = "C:\\DECE\\certs\\222339_concat.pem";
	break;
	case "222340":
		keyStorePath = "C:\\DECE\\certs\\222340_concat.pem";
	break;
	}
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);

soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMergeTest_API" id="ed28c5b3-0007-40cc-849a-38beaea556d6"><con:settings/><con:config service="AccountMergeTest" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeTest_API" mediaType="application/xml" postQueryString="false" accept="" id="6a473c48-49c8-4804-ab16-6863ba9ded81"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="${#TestCase#SurvivingAccountID}"/>
  <con:entry key="RetiredAccountID" value="${#TestCase#RetiredAccountID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="26183098-d0ae-4f26-b4bb-e416676cf6a4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeTest_API');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="d8f0ba87-2757-4ec7-ac6d-427210632ea1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMergeTest}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>SurvivingAccountID</con:name><con:value/></con:property><con:property><con:name>RetiredAccountID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet" searchProperties="true" id="23d09377-9e3c-47e0-92cd-8d7e2ed8d6fd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3f9a5121-1ba4-4ce7-9098-b2a7278fb180"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
tC.setPropertyValue("policyCLASS",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="21cf2586-d1ed-4fdc-832a-472a816d6528"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
	
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			log.info ""+URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8");
			tC.setPropertyValue("policyClass",URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8"));
			
			
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("policyClass","urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"));
			}

tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyGetResponseType"));


if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}




</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="eaa96ed5-3cca-4156-8a09-c54bea8b60f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Get" id="8cef23a8-7a18-44d0-a4a0-7881dc1e1193"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Get" mediaType="application/xml" postQueryString="false" id="f1d24d96-9d3a-479e-bebf-67d0f3b049e6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="3764bed9-292d-4b3e-8638-5dd84e1225de">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Policy Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);


 </script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="3bb99271-32ca-4459-9ddc-4ca05ee135c6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
                def myXML = new XmlSlurper().parseText(XMLbody);

                xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
}

log.info "xmlPolicyClass [$xmlPolicyClass] - tcPolicyClass[$tcPolicyClass]";
                                
if (httpStatus == "HTTP/1.1 200 OK" || xmlPolicyClass == tcPolicyClass) {
                policyWasFound = "true";
                def PolicyID = context.expand( '${#TestCase#XMLbody#declare namespace ns1=\'http://www.decellc.org/schema/2013/10/coordinator\'; //ns1:PolicyList[1]/ns1:Policy[1]/@PolicyID}' )
                log.info "================="+PolicyID
                tC.setPropertyValue("PolicyID",PolicyID);
}


tC.setPropertyValue("policyExists", policyWasFound);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return policyId" id="db2d7a86-6720-4405-a764-6b8d396ae082"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));

</script></con:config></con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdbc6pKE333V1jux5ThoqhYO6kaLhKMqFy8vnyFw4gogjIgyK8/A26NZif77PM9pMw0PT2ruxfNmp/Y3vtsF2CMotgLg6oqvdT+10A0z3HtRp1r20y9ybf5+qrRseuw1aLXbMu2uRaqVVWME6QGOLaD+KXG0kyjTjfqDG/RXJdpdDn6mW63lrXqFEWYhCYuz3Stmu39AHfLY19qSRR0Qxt7uBvYe4S7MeyaQBt0iWfXvmKqvf68oCwPjF43cXzoUhR8dhBEvg+fYbinflIPPj8d3DU9N7DjJEK/znTwS+3X3jRNn9PGcxi5FEvTNEXzFPFxsOf+qL1WrpuRowbr8LIW7SAMPGj7Xm4XoDQUb0KnCnw3jLx4s/8mNEMxdBG6jjJYh0wz+FGjPg4o0f1lpAeQEbbreGMz12AGWqMIBRBVJ4b6Uvvxdx287LUiO8DrMNrjT+v/BgkFJ+SHB+TU8TWzK7q/j/hFuV5/IthVA+gn2DuhYUGTgw0Rro4jtPaygYcJ+RxcLdtfzfCVYQj+l5b8pO5xEtjUF5WRPBfh+P/p132vLlGmtp+gV9sMBHfXbPPnBuwvcl7XLKfZMuwx33wpIdw7X0DdWv1r/ZmoN1792rSd77DPOD3JT89j+riF4WIXQR3kST4Yj9KhstrzDS7ghe0CurTpjxWVbaKDcE4Yhl/uUqHVlyQ3cHuC9F5Zb8eJZybaiUmpPdSDzrH/JMFjzO5yzo4P5lv/CZ3W6ZA/SUKeqcF+8AYGa6+PBAuu7SdHbqkKd4zdviKCyiydthlT5xNjn6s9Lj5R+OUjp/scirze0blMsvh/ztG8ZMf2bSEWk2JNXs8YvWqqKiW5KIKz6YJUFYBL/rZgSAp93Ow8hU9pAeh6D0ii4G/lgQZ2CmAmsrDRxOlUy8Qc9AV3OCUbrQrwl4JmyKmULqSprr/J6cZylOl5pfjJMpeHGsDlZnGjyYY8lQxL1jQQXmyZJq2UbKuZWqrqC6lCAkhydsgdhY+RknmQVTnN5NiFySXL+ZTYe+fBfnhaWbKviZoimkfFVFcNSZf7wFjMINtLyN58sD+ElcVEuNvUP6AtQL2UJmeCXLN2qWZN2KFk2KXNerRpqtLXdJyKepmVUpHT/nSSf9RCFDTR2cuZbIHxpRbQEntDejnvY3vGBZoBUsktN7/LqTO6AtF0Oq2Il1oN5NSQjcmwpxlqKoPSJsmpj1fscLNSNifY0LO+Bbb3jRF1edYLyPPAOMEzd6zYSg+s9lMGNowN9DjPnoepu+ykkr7ov4dLlYQZAl0WBB0QQDQoUiP1F8BAmHKjg8ezHhqse+EebaKKxoTvu1Oe0R2vMXLHwxknrXftseKNG7azoVQfstvGDqgqct6ZjW47xoIypMDLW6P3yRx50SKPh5zOtLwOVzFmyWQuhX7beZsvJu9P2QLq1mhsTmbjPMuGx20n9+O3kfAWmX1NckdDhMYYPlG03ROsjsSJi7ct4dPaoBFXAa4mAKBsXVf2CIGFt+2FhG+GJhPyAk1MFXEmKiZQlCdZFSRdX/c2zBgq02TCDDVVdnxSpvNibviVpShIpFO0PVseFmyPXlrAKYPpTbnn6hPuqT9HS33oW9MYpIfpOmAYWjnob2stdaFWMMBRU1Mgb5FQSVQwsUeHPp29T1s0c9Qdv2/yYNLITHaXjTbu8rxzyZxwl4u7V2dhAX9q3XFMJRSbVXRLNjTQubxvmaZOGoYP99lhtYeZZJGelZtDS5CNnk5PMkkC7xcbtgCb4UUubzVRLvdXQKbZhBan1XyDF8HQG1lyQkib3NFlu2Lpf+VYQbHKI8eOItDBZ47JF47JYH18UjsSg7mWeMCz1BUU+ai3p4M+f6D1+WBXEZ56lBt7fnMUdFLr/WnGnNP2ZqvPZrwqbcSnYL3YNFaxQNs51FF/11Y8YycFraZ/1gaazk08yj/TW3RM8aAyVJlAbsR5j+Kj5EnYL719njea7GQ/NpOTOrHfMXPerI4zPt2O31oUFSlnLm8vT3pvHsLF5TvyeUjejJcxSt0P2IcJfNVeZrLaIhhfl8V3WJWqPfJxtOM/67jC4jn1denaPRRiEMcoiGuvxa5Cw3UTovQ8p0u+nJe11GkybLvR4UC7DQS+J9NNmunRgG7zfLvNS1exd0HxCaIYBmuvOKuQs5eP9Z8Bwn0Xo8BBUf0UJnCDcO0PEYt6VdXAICokDDCyQiKXW1yD7Ygdpg1anAQIYNDmANdpsoIosqDH1KrDMB4FowisYxQ9SuXOg1Q2EPQOHir0dCEqMFEVOCYlOdqnJPaZ55P9HKCEKO6oEL1dttnhKOztDz4qAFP70El89HzYHMoCUfjyy9ZtiEtru0XTpdr5Nr/Pz66lID6OVzjgIhkBkXaiL0R/85rJtxkzzH3G1/AgcbxC1JC6xpEHL0geH33QpeDJjStFSlfMN9fPhoew1OeMbic5Jw/eGH+7ExFJTUTX67UhR/v5+JycTknZgnYhKCMSnmIoukWZCCZEFZ6tcIcC6haC+itBfkP96eSb/RFfEm8CMyZv854Qplou/+I2ZiJc3MZUQvjsb696D0eSusUoi7+yiT65tBWI/3ivg11Y+BHzmPykYeR8tOuLWHfnkDyL8eUFbrEq5Pf5G1bAkIT1yAgLo/vgXwX46vBH463INywxYdMqidH3T6rFbHqp2RCGSRCrUq003M/LEmd8PqDuh9NvYUoB/OtGk+FvbzRzbWCSybW3azdf79+d615JF0ju8sS/xPJSy8jlnBweuHfz+RfA30Z0gxNotsXToNW+jWiO5zmW4W8FfMjk9Tfz75a7mn5+H17/AQ==</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_ 20008 - SAMLExchange - retailer - saml2 - FORBIDDEN - Active full user - with deleted ULC</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create and SAML Exchange - FUNC</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>837</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:7600</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D" CreationDate="2013-03-19T05:14:46.000Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>952</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5935459c-5982-4cb1-9974-1d4d88038a65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9bbb88e5-07dd-4d4f-ba3c-1c734ce9be3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserUpdate" searchProperties="true" id="16f91eb6-d036-4044-a104-3416700f4139" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9ecbac18-bd7a-4df2-b9d2-c9fb4bc9817c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType","SUCCESS");
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("userStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="dc3fbb0f-7f56-43ad-b37a-35c38bae3724"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyDeleteResponseType"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
				tC.setPropertyValue("PolicyID",URLEncoder.encode(""+callTC.getPropertyValue("PolicyID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("PolicyID",""+callTC.getPropertyValue("PolicyID"));
			}
			
if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="98cfc05d-90a4-4012-b47d-f1f449632e22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Update");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Update" id="fb4ef185-64fb-4374-8300-43409b18034e"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Update" mediaType="application/xml" sslKeystore="RET_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#userStatus}" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>Ganji</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>testing_+428@uvvutesting.biz</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>rajuganji@gmail.com</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>UK</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
      <LegalGuardian>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>${#Project#password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="b23cb4e2-2bd7-421f-91f3-9470fd51d912"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Update');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="cd84f76e-b48f-43aa-8526-34731eaf10da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	userid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("NODE_USER_ID",userid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" disabled="true" id="c3f3c863-6773-4ad7-883e-f4966c2bcb43"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("SecondUserName",tC.getPropertyValue("SecondUserName"));
callTC.setPropertyValue("password",tP.getPropertyValue("password"));</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_70082 - STSCreate - llasp - unamepasswd - for the user who updated to Standard from Basic</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create Tokentype usernamepassword - Linked LASP Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D82F859216DC97E2E0401F0A05996483</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\DECE\RET_concat.pem</con:value></con:property><con:property><con:name>userStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete" searchProperties="true" id="853b66b1-2855-4d93-8f16-0c0514cd932e"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6a0df690-63bf-4b9c-ae59-c6c2ff9420bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Delete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="17df3acf-9f74-4983-9c2c-7ca80c9272ea">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('Policy Delete');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
log.info contentLocation;
log.info connection[0];
log.info contentType[0];
log.info contentLength[0];

tC.setPropertyValue("status",status[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
//tC.setPropertyValue("contentLocation", contentLocation[0]);

if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="3d442766-d852-4dda-8d00-1ca77ae70830">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = true;
		doContentLocaton  = false;
		dobodyXML = false;
		
	break;
	case "FORBIDDEN":
	default:
		errorReason = "assertion_not_found";
		errorID = "urn:dece:errorid:org:dece:securitycontext:unauthorized";
		errorLink = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
/*if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
} */</script></con:config>
      </con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwumAlqQIBRcUVN27ewmFAlE2G1V//Dho9SU5yvrzflU5PT/fTCz3PPCPDc+kujxCMYifwq4r4UvvHoKy9CcG+0TQBaLCsBRv7NttqdGALdEwDAthhalUFoQQqPooNP36p0STFNEiuQVEa2eo2mW6Te2pzjF6rrmGEsGms8kTWqrnn+qh7dftSSyK/GxjIQV3f8CDqxqC75NVxF2t2jTum2uvzDeXVYfR6iOOwSxDgCUOErgueQOARz8QHnWcTdZeO7RtxEsE3nyZ6qb2dzbLsKWOegsgmaJIkCZIjsI6JHPtX7bVyPwxNxbeC27pn+IHvAMN1LkYJSoXxITCrvGsHkRMfvG9MUwRFlqYbMAcNQLH+rxrx28EV3Q8tfQAZIaOBDgZ1N7aAFoygD2B1tVBear9+VsHbWS0yfGQFkYc+rf8bJOin0A1CaDbQPbI7up9b/CJdr88QdBUfuAlyUjgp2yQ0AETVWQQtJx87CDefiarX8ldzdO8wCP5LSZ6J9zgxbOKLzIiODVH8/9Trfa1uVtaGm8DXqekHKGkfizgNqPF6z9X3vKzavpWfXq4Q3ivfQD1K/bb+3KiPvno7BNZHitWms71eX+68MI20Y1CMW/GMiPXD+tQppsLFzTfaTs9D5rjT2dYYHXpyT2H7WfNopfFE7Aj0eLSxNLbSPPUnyW7qDDpN3XAhKcoztXCbCpCbEVswCtPMT6K8BmhEZGZSH+lpwLnNgOrslYCONuOF5F2SYt1eC/KqMqGzrT1hhgtCO7Oqv2VN8uV3TO9jKOMaweIaZPl/2yQ50YiNx6JXTgoLf54xfFUVpVcXez0e9mw+UwTeVoTxhZ8I9ul8ODl9LiMFfr6SeZEv1AWfifZOXM/nIykz12tXXyuyLKgLNhvwO7GCN0QpX4v6dkgaGz3c0TKpLwXB3C6CPTMMzcEpGxzARNXUbKIphXqU8okmkZurzM7x+qIeVWqqrZjK5ihw6kLKxOzqUZSyw0TfLMLdisvARZqrPNvnqZXUO6gDzVtTgFkcwFEaq/zpKhcOam+9VnNJ42cVwZ6scWxaT9ZD4Jnh3nMP74wPsHHN7K+Lfd9N9It0VHtSv7c895fKnhHn0pBf7Fb7zfpkbOS0AgYTfn/36DQdYxtktt7JxPluOAp05ZCCCT+XBGHO43SRvKr0h3zQF3iV5Z380jsKraBnyhkxpFGlzrn91rZwzltk9EnXoDodajfetGbnlij5dX2U7I8H9bCVp/XR0kxXXMxddiitpy3DoUAeWvOtNIhHuTWYLyv7mZhvwaBu2kPCvXBypLaHfHQpDq5qL+JNa4qKvWNZG2E7Zd225arMIrRcKyxQXQvmp4hsCZChiV2RjuIKb6sCz/ePq6MwV4VOmVRTyeY7VTB4WYoT/nKk4xG9Pg8HqQt2DB/ko830eHorjClmkkBkcwm3lVTpiLxZFmGwXEnykV8Jth0JtiQLcyDy850yynY4X6sBVv6cR/maR1sSeInR+RY3qDArkoun8ZJl+cIXVr7MHdRzvjFbHtk+Q2m8nIRspqKJ5eub4KR6TrSKkuVqNJqM872W9E9HPKsscjlKGb0ipaeQdyYj7XASA9GYhbtdHNZ9EIFYCT1VyS9THR07zt4jh/UmJcxIEbTplbfPVn1D0keRvaRGg4U/Y9pcBSVWMfDqx062qWvLVtg2e74lFgWhR2sy4AOZWzTPZk7Tp8MqG7cya8if9gY9yV1OKDhppGsgW8xHm6VXb1aa6XjskReNYCfhNFv2M1aaz+uMKWgDDYWRs0s6dh5NfZPeGXEr1cl1ywndE0cnJ40NmbXt4WLNUjNsq7PKnN0C3bPbIRgSCyLlpbY1VvrF/mJcQm8KbgP083R4CG/zg3g/WT6MnjvpWOJuhSC+L8sLSBGrMr4VjPjvBKaUOGbDuqp2w5IFoRj6ce21PFWSl26CKY5jdvGVcVtLLapNSpLcYiSalmlSIlmSkkmebHIcKzHcneXcUHyC2At8yyl9lTzudkv9HSDwugj6JowaaZCAA0S1v1gs81VV/AW+fgMfQS3APFGUqU6z3RFbFCtSJNOUmk2J69C8JJJNkWnRteokiKf+NOKtGEYfOSL3gSMuIHBCB5ZEsrxNEb5OUYxTcjbSJHapp9R48mGCqWZUsr0uzXaaBHK80IUlYMILzMSFT+EhvCaIQLdfumEAdJUuJO0fZdm73vTfhvh5754NrGM6pQIq4xEgrij8gvCy92C+DZqi3wd9N88nplNe6Di1ceSAG5KPW787pmyVR7vgqO6QH5qfBR+sEp8DejgyUwc8ev7xHMBsEvON13tJzsbT+SlJ0+RahHbJpSJsnqAIsk0sIUgwISq04AR94mGC+BEXfaD+5Pkh/4gviQ/+Msbfs4dbpnpd/uAhsoSofIgouOXzn75yPrjEeYthHn8l67n4vVIi/uuTBnRBqYfFM/yTBZH5u1xf2HrnB8dZDjDHt8tVyTyLb5oCBNisg4dYEL03/pWBr5x/FD6S/MAS427aJzH8fqdaTqeXmgFAkPixItaugvcT84ozLkLY/a30h5kr93sj8zn6lsxv1fESzy7PqD10nf+t3HCu7QIgPoWcK5aXWo7fpdi5b7+b0G8Avx7SPfFvQ/pjJK9/iP+UvMvp5+/h9V8=</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00011_US_UserGet_FUNC_YOUTH_SAU_Get_CHILD_Blocked_tou_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Get_GeoProfile</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>765</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AD8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
    <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
        <Reason Language="en">The policy was not found.</Reason>
        <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39/Policy/urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</OriginalRequest>
        <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="9eefa1a9-efcc-493d-a73f-76683cebfde6"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6512c4b0-42ef-4467-b104-ffa33eace57b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def eNV = context.expand( '${#Project#ENV}' )

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");




def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }


if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#TestCase#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set Pem" disabled="true" id="d52e0474-c64b-42a1-b687-910e8dc38fe2"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>tName</con:name><con:value>UserGet_API</con:value></con:property><con:property><con:name>sName</con:name><con:value>CommonTestSteps</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/iscportal1_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename Test Cases" searchProperties="true" id="e2c4e4ac-425a-4711-bf15-1e0925e0b8a1"><con:settings/><con:testStep type="groovy" name="Rename Test Cases from external" id="bf86a2d2-4144-4811-a43f-1013547ebc99"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "STS Create Tokentype unamepasswd - Portal:CS";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\raju.ganji\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

	newTestCaseName = br.readLine();
	log.info "Input Test Case Name: "+newTestCaseName;
	
	//if(targetTestCase.isDisabled() == false)
	//{
		targetTestCase.setFailOnError(true);
		targetTestCase.name = newTestCaseName;	
	//}

}</script></con:config></con:testStep><con:testStep type="groovy" name="Rename Test Cases internal" id="4380f443-dbba-469e-a609-36e3fa51657a"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

import java.io.*;

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "STS Tokentype DeviceAuthToken - Device Role";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def TCNum = 13;

//BufferedWriter bufferedWriter = null;
//bufferedWriter = new BufferedWriter(new FileWriter("c:\\DiscreteMediaLeaseCreateQuestions.txt"));

def oldTestCaseName;
def newTestCaseName;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	//if(targetTestCase.isDisabled() == false)
	//{
		//targetTestCase.setFailOnError(true);
		oldTestCaseName = TCList[i].name;
		newTestCaseName = oldTestCaseName.replace("Copy of ", "");	
		targetTestCase.name = newTestCaseName;	
		TCNum = TCNum + 1;
		log.info "Done renaming Test Case '" + oldTestCaseName + "' to '" + newTestCaseName + "'";
	//}
	//else
	//{
	//	bufferedWriter.write(targetTestCase.name);
	//	bufferedWriter.newLine();
	//}
}

//if (bufferedWriter != null) {
	//bufferedWriter.flush();
     //bufferedWriter.close();
//}

log.info 'Woohoo!'</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeRequest" searchProperties="true" id="789968d3-8176-4b31-8f47-431e3011758b"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMerge API" id="80d70818-b5a8-4794-8ce0-8d82f461f03e"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("sName");
def callTCasename = testCase.getPropertyValue("tName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"));
testCase.setPropertyValue("RetiredAccountID",CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"));
if (testProject.getPropertyValue("versionMinor")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"),"UTF-8"));
	testCase.setPropertyValue("encodedRetiredAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"),"UTF-8"));
}
else if (testProject.getPropertyValue("versionMinor")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"));
	testCase.setPropertyValue("encodedRetiredAccountID",CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"));
}

//User Details for Merging two Accounts
testCase.setPropertyValue("user1Status","active");
testCase.setPropertyValue("mergeUser1",CallingTCase.getPropertyValue("survive_assertionUserIdFULL"));
testCase.setPropertyValue("user2Status","active");
testCase.setPropertyValue("mergeUser2",CallingTCase.getPropertyValue("retire_assertionUserIdFULL"));

testCase.setPropertyValue("survive_assert","SAML2 assertion="+ CallingTCase.getPropertyValue("survive_assert"));
testCase.setPropertyValue("retire_assert","SAML2 assertion="+ CallingTCase.getPropertyValue("retire_assert"));
//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMerge",CallingTCase.getPropertyValue("expectErrTypeAccountMerge"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMerge_API" id="476e4efc-f319-4609-aa59-39cb705eb97a">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountMerge");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMerge" id="5112a73a-602e-4296-8f8b-3bf52b94d139"><con:settings/><con:config service="AccountMerge" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMerge" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="86f95497-f995-414a-b857-8ab1cea5b89a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#retire_assert}"/>
  &lt;con:entry key="Authorization" value="${#TestCase#survive_assert}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:${#TestCase#user1Status}">${#TestCase#mergeUser1}</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:${#TestCase#user2Status}">${#TestCase#mergeUser2}</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="${#TestCase#encodedSurvivingAccountID}"/>
  <con:entry key="RetiredAccountID" value="${#TestCase#encodedRetiredAccountID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="8b0dbffb-cde9-43ff-b2ab-4d8ab9a34c14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMerge');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="1d6adba7-5667-4993-a3d5-c0da8990549f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMerge}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.40. Account Merged Notice [Your UltraViolet account has been merged with another UltraViolet account]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SurvivingAccountID</con:name><con:value>urn:dece:accountid:org:dece:DF7DD728D818E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>RetiredAccountID</con:name><con:value>urn:dece:accountid:org:dece:DF7DD728D87CE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>encodedSurvivingAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7DD728D818E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>encodedRetiredAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7DD728D87CE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>user1Status</con:name><con:value>active</con:value></con:property><con:property><con:name>mergeUser1</con:name><con:value>urn:dece:userid:org:dece:DF7DD728D828E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>user2Status</con:name><con:value>active</con:value></con:property><con:property><con:name>mergeUser2</con:name><con:value>urn:dece:userid:org:dece:DF7DD728D88AE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>expectErrTypeAccountMerge</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>survive_assert</con:name><con:value>SAML2 assertion=nVdZc6pME773V1ieS8uwuWElqRoEFRU3cOPmLRyGRdlkQNBf/w4aPUlOcr6835VOT0/30ws9zzxjw/fYDsAYxYkbBmVZfKn80zR52uI4prbjjXat3uKMWrvO1GscbEKWqUOaa9CVsoxxiuQAJ0aQvFRYmuFqdLPG8Brd6nBch6k/MTyjV8orFGNimqg8kVO57wW4c3X7UknjoBMa2MWdwPAR7iSwowJl3CGaHeOOqfL6fEN5dRi/OkkSdSgKPpkIIs+DTzD0qWfqg86ziTuqawdGksbozaeJXypvZ7Mse8q4pzC2KZamaYrmKaJjYtf+VXkt3Q8jUw6s8LbuGkEYuNDw3ItRgFJQ4oRmGXh2GLuJ439jmqEYujBdQzmsQaYe/KpQvx1c0f3Q0geQMTZq2DGYu7EFslCMAojKy4X8Uvn1swrezmqxEWArjH38af3fIKHghLwwQmYN3yO7o/u5xS/S9fqMYEcOoJdi94QmRZtEBkS4PIuR5eZjF5PmM3H5Wv5yju8dhuB/Kckz9R4ngU19kRnRtRFO/p96va/VzcrK8FL0enaCfr81lePJOdHTlF0sj8amsRifMHi5QnivfAP1KPXb+nOjPvrq7VC0GjI6rM9ZCTsLlV16Q6clyJm/dy6UfzY1MXNlzeSkw7CvGkm0STWKEqeZprfj4Xrh2pvNyZ6sPcqUp7MS3ZIOl8CXdtXqaioOR64UNIbe1K5uq3LspOcmSgMutvoNDfGj8cAK3BaeJBultdHOvfZRrdaXE7Mpy3SoiyViq79pu9NVtT1O5BmdNw8vv2N6H0MR1widr0EW/zcNmheNxHgsusWksMjnmaBXRZa7VbHbBahrg0wWgC0L4wuYCPbh6BzcPp/RApgve0AEZ2UBMtHeiqv5fCRl5mrl6Su51xOURT0bgK1YIhuilK9EfTOkjbUebdkerauCYG4W4Y4bRubgkA0cOFE0JZto8lnZS/lEk+j1VWbnZH1R9goz1ZZcab0XeGUhZWJ29ShKmTPR14tou+QzeJHmCqj3AbOUuo4y0PwVA7mFA/fSWAGHq1xwlO5qpeSSBmYlwZ6sSGxat6dH0Dejne8574wPiHHN7K/Ou76X6hdpr3Slflc99lV5x4lzaQgW2+VuvToY696pBAcTsLt7dBuusQkzW29n4nw7HIW67JzgBMwlQZgDki4aKHJ/CMK+AJQ6cPNLdy80w67Zy6ghi0tV3us3N2f3uMFGn/YMpt1mtuN1c3ZsilJQ1Ufpbu8ozqY3rY5U87TkE/6yxafqqWm4DMwja76RBskotwZztbSbifkGDqqmPaS8C9+LldYQxJez4yn2Ilk3p/i8cy1rLWymda9leQq3iCzPis64qoXzQ0w3BcSx1PZ8GiUlYCsCAP39ci/MFaFdJNWUs/lWEQzQk5IUXPZsMmJXx+Hg5MEtB8J8tJ7uD2+FMcVMEqhsLpG2kkptEZhFEQbqUurtwVKw7ViwpZ4whyKYb+VRtiX5Wg6I8uc89q55tCUBSJwOmvygxC1pPpkmar0OzoGwDHq8oxzztdn06dYRSWN1EtUzBU+sQF+HB8V342WcqsvRaDLOd1raP+zJrLJodXTi9JJ0OkTAnYw05yCGojGLttskqgYwhokc+YqcX6Y63rfdnU8Pqw1GmNEibLFLf5ct+4akj2JbZUaDRTDjWnwJp9Z54Ff37Wxd1dRm1DK7gSWez5Qer+gQhD1+0TiaOcsenGU2bmbWEBx2BjvJPV4489JI12C2mI/Wql9tlBqn8dinLxpVn0TTTO1ndWk+r3KmoA00HMXuNm3beTwNTHZrJM2TTq+abuQdeDY9aPWIW9k+KdbsZEYtZVaa1zdQ9+1WBIfUgjoBqWWN5f55dzEukT+FtwH6eTo8hLf5Qb2fLB9Gz510qKRbEUzuy+ICksVyj9wKRvJ3AlNIXLNmXVU7UcGCcIKCpPJanCrISyclFMc1O+TKuK3FXksUW2xbbLNtiamLEl2nmR4N6AbPt8RG985ybig+QeyGgeUWvgoed7ul/g4Q+h2MAhPFtVOYQgfhyl8sFvkqy8GCXL9hgJEWEp7ICSzL0IDpNntsj23U2zxNSz2elqQG3aIZUClPwmQaTGNgJSj+wBEZ+gNHXCDoRi4qiGRxm2JyneKEpORonNLEY55OxlOAUkI144Ltddh6u0Fh1488VACm/NBMPfQUOdE1QRS+/bI1A+KrdCFp/8hq93rTfxvi5717NoiO6RYKuIhHQKSi6AvCS9+D+T5o7n3Qd/MgNd3iQiepTWIX3pB83PrdMUWrPNqFRHWH/ND8LPhglfoc0MOReXLho+cfzwHCJgnfeL2X5Gg8HZ/S0ym9FqFVcKmYmKcYim5SKoIpIURnLTyggHqYoH7ERR+oP3l+yD/iSxMnUBPyPfukZcrX5Q8eIirCxUNEJi2f//SV88ElyVuC8uQrWdcj75UC8V+fNLADCz0inpGfLIzN3+X6wtY7PyTOYoC5gV2sCuZ5/qYpYEjMumSIhfF7418Z+Mr5R+EjyQ8sCemmXZqg73fKxXR6qRgQhmmQyGLlKng/Ma84k3OEOr+V/jBz5X5vZD7H35L5jTJWyezyjcpD1/3fyjX32i4QkVPYvWJ5qeTkXUqcB/a7Cf0G8Oshzfx1SH+M5PUP8Z+Sdzn9/D28/gs=</con:value></con:property><con:property><con:name>retire_assert</con:name><con:value>SAML2 assertion=nVdZc6pME773V1ieS8sAggtWkio2FRWN4MrNWzgMi7LJsOmvfweNHpOTnC/vd6XT09P99ELPM8/I8L1mj0MIxokbBlVZfKn9s6ObVKezazVIyFINhmyDRrfFMA2GYRlmZ+1Yq8XWqjJCKZQDlBhB8lJrkhTdINsNil2QnR5N95jmE9Ol9Vp1BWOETWOVJ7JWLXwvQL2L25daGge90EAu6gWGD1EvAT2NUyY9rNkzbphqr89XlBeH8auTJFGPIMCTCQH0PPAEQp94Jj7oPJuop7l2YCRpDN99muil9n42z/OnnH4KY5tokiRJkCyBdUzk2r9qr5XbYWjKgRVe14IRhIELDM89GyUoBSZOaFY5zw5jN3H8b0xTBEWWphuwAA1AMcGvGvHbwQXdDy19ABkjo4Ecg7oZU6EFYxgAWF2q8kvt188qeD27iI0AWWHso0/r/wYJBhn0wgiaDXSL7Ibu5xa/SNfrMwQ9OQBeitwMTss2iQwAUfUthpZbTFyEm89E1Uv5qwW6dRgE/6Ukz8QjTgyb+CIzomtDlPw/9Xqs1dXKyvBS+EquYqe+ynZTYspNDGE8L4w1suP8uLdfLhAela+g7qV+X39u1HtfvR9S+fNYP+/71hkO9vT2kOh+2NlClW4XzHQy49k34yREwmmmuXKsJ/N2fGzyszFxXLfDeVPlVWuxnSYsE9sgqbiSeETUUY9zyG6GEU2Qe6E/G0yCtXtaa3Hbm4yccHfWgLskO0OVifaplq11lZkBKtjb0flEtDyTbCNnZFROZ1/S9CSjQZ3huakyy5cvv2N6jKGMawxPlyDL/5sWyYpGYtwXQjkpLPx5JvBVkWWhLgoCBwWby2Wes2V+cuamvH04Ogd3wOYkz82XfU7kTorK5aK9FVfz+VjKzdXK01dyv88rKpMPua1YwRuiVKxEfTMijbUebZt9Utd43tyo4Y4eRebwkA8dMFUWSj5dyCdlLxXThUSuLzK7wOuzsleo2WJJV9Z7nlVUKRfzi0dRyp2pvlaj7ZLNwVmaKxwz4KilJDjKcOGvKECrDthLE4U7XOS8owirlVJIC+6twtvTFY5tIfT1CPhmtPM958H4EBtfmIPVaTfwUv0s7RVBGgjacaDJO1qcSyNO3S5369XBWPezChhOud3No9tyjU2Y23o3F+fb0TjUZScDU24u8fycw+kiOUUejLhwwHMKw7nFWdjz7VAw+zkxaqJKnfUG7c3JPW6QMSA9g+p2qe1k3X47tkUpqOvjdLd3FGfTn9XHmpkt2YQ9b1FWz9qGS4EisuYbaZiMC2s41yq7N7HYgGHdtEeEd2b7sdIZcfH55HiKrSbr9gyddq5lrfnNjPE6lqfQamR5VnRC9UU4P8Rkm4d0k9iesnFS4WyF57jBfrnn5wrfLZNqyvl8q/AG15eSlDvvm8m4uTqOhpkHtjQXFuP1bH94L4wp5hJP5HMJt5VU6YqcWRZhqC2l/p5b8rYd87bU5+dA5OZbeZxvcb6WQ6z8OY/9Sx5tieckWufa7LBCL0k2mSUaw3CngF8GfdZRjsXabPtk5wiliTaNmFxBUyvQ1+FB8d14GafacjyeTordIh0c9nhWWaQ2zmi9ImWHiHOn44VzEEPReIu22ySqByAGiRz5ilycZzrad92dT47qLYp/I0XQaS79Xb4cGJI+jm2NGg/V4I3usBWUWqehX99383V9obWjjikElng6EXq8IkMu7LNq62gWzebBWeaTdm6NuMPOaE4Lj+VPrDTWFyBX5+O15tdblVY2mfjkeUEw02iWa4OckebzOm3yi+ECRbG7Tbt2Ec8Cs7k1knamk6u2G3kHtpkeFkxEr2wfF+stM6OO8laZMxug+3YnAiNCJTJO6lgTeXDanY1z5M/AdYB+ng534XV+EI+T5cPouZEODXcrBMltWV5Asljt41vBSP5OYEqJazasi2ovKlkQSmCQ1F7LUyV56aWY4rhmD18Z17XY74hip9kVu11OohhRIhmS6pMc2WLZjtgSbizniuITRCEMLLf0VfK46y31d4DA7yEYmDBuZGEKHIhqf7FY5qsqByq+fsMAwUWIeSJFdlu0yIptVqCojtBvMgLVpwVRovoU3e4Lteo0TGbBLOasBMYfOCJFfuCIKgRu5MKSSJa3KcLXKUpwSo5GliYe9ZQZTwFMMdWMS7bXazLdFoFcP/JgCZjwQzP14FPkRJcEEej622wYAF2kqrT4R9aEy03/bYif927ZwDqmWyqgMh4e4orCLwgvfQvm+6Dpx6Bv5rnUdMsLHac2iV1wRfJx63fHlK1ybxcc1Q3yXfOz4INV4nNAd0dm5oJ7z9+fA5hNYr7xeivJ0Xg6PqVZll6K0Cm5VIzNExRBtgkNghQTotMiPMCAuJsgfsRF76g/eb7LP+JLEyfQEvw9+7hlqpflDx4iGkTlQ0TGLV/89JXzwSXOWwKL5CuZ4OH3Son4r08a0AOlHha/4Z88jM3f5frC1oMfHGc5wNzALlcl8zx90xQgxGZdPMTC+NH4Vwa+cv5ReE/yHUuCu2mXJvD7nWo5nV5qBgBhGiSyWLsIHifmBWdyimDvt9IfZi7c753MF+hbMr9RJhqeXb5Ru+u6/1u54V7aBUB8CrkXLC+1Ar9LsfPAfpjQ7wC/HtId4W9D+mMkr3+I/5Q85PTz9/D6Lw==</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>600743e6-779f-43ea-8db9-37ac0891f773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeUndoRequest" searchProperties="true" id="bb7e7d8b-e8e3-4dc9-9073-6b2a9c8ac469"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMergeUndo API" id="979f1903-1ef6-4a21-b7ed-3c829bec85dc"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
if (testProject.getPropertyValue("versionMinor")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("SurvivingAccountID"),"UTF-8"));
}
else if (testProject.getPropertyValue("versionMinor")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
}


//Set the SAML Details of the Full Users to the AccountMergeTest API

def headers = new StringToStringMap()
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("survivingAccountUserAssertion"));

testRunner.testCase.getTestStepByName("AccountMerge").testRequest.setRequestHeaders(headers);

//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMergeUndo",CallingTCase.getPropertyValue("expectErrTypeAccountMergeUndo"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMergeUndo_API" id="9d27ef5d-226b-4710-91da-6a452b364641">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase    = testRunner.getTestCase();
def testSuite   = testCase.getTestSuite();
def testProject = testSuite.getProject();

String keyStorePath  = "";
String keyStoreAlias = "";
String nodeId = testCase.getPropertyValue("nodeid");

RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeUndo");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

switch (nodeId) {
	case "0799":
		keyStorePath = "C:\\DECE\\certs\\0799_concat.pem";
	break;
	case "0798":
		keyStorePath = "C:\\DECE\\certs\\0798_concat.pem";
	break;
	case "0701":
		keyStorePath = "C:\\DECE\\certs\\0701_concat.pem";
	break;
	case "0702":
		keyStorePath = "C:\\DECE\\certs\\0702_concat.pem";
	break;
	case "500500":
		keyStorePath = "C:\\DECE\\certs\\500500.pem";
	break;
	case "222312":
		keyStorePath = "C:\\DECE\\certs\\222312_concat.pem";
	break;
	case "222333":
		keyStorePath = "C:\\DECE\\certs\\222333_concat.pem";
	break;
	case "222332":
		keyStorePath = "C:\\DECE\\certs\\222332_concat.pem";
	break;
	case "222334":
		keyStorePath = "C:\\DECE\\certs\\222334_concat.pem";
	break;
	case "222335":
		keyStorePath = "C:\\DECE\\certs\\222335_concat.pem";
	break;
	case "222336":
		keyStorePath = "C:\\DECE\\certs\\222336_concat.pem";
	break;
	case "222337":
		keyStorePath = "C:\\DECE\\certs\\222337_concat.pem";
	break;
	case "222338":
		keyStorePath = "C:\\DECE\\certs\\222338_concat.pem";
	break;
	case "222339":
		keyStorePath = "C:\\DECE\\certs\\222339_concat.pem";
	break;
	case "222340":
		keyStorePath = "C:\\DECE\\certs\\222340_concat.pem";
	break;
	}
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);

soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMergeUndo" id="ff86e280-8efc-438f-a0f8-c455f69b9e1e"><con:settings/><con:config service="AccountMergeUndo" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeUndo" mediaType="application/xml" postQueryString="false" id="1a1b00fb-0cae-4126-ab81-30b2783718ea"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SurvivingAccountID" value="${#TestCase#SurvivingAccountID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="355f30c0-6988-4a19-b98d-00eb17001332"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeUndo');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="7b43b087-c6b1-41fa-9958-b3af8215ddd8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMergeTest}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;
	case "FORBIDDEN_SURVIVING_ACCOUNT_HAS_BEEN_MODIFIED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:SurvivingAccountHasBeenModified";
		errorReason = "Changes have been made to the Surviving Account since the Merge happened";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SurvivingAccountHasBeenModified";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>600743e6-779f-43ea-8db9-37ac0891f773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>424ec930-ca02-4bff-8ed5-51aa458ee303</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_nodes" searchProperties="true" id="3217055c-57f5-4f6b-8986-5c97d330161d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7b00abc6-17e9-4793-8beb-c38a75a236da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="a0a81299-e499-4d96-8fe3-ee9125bfe1ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="afad6394-18c1-41f0-834e-d5fd2a0de724"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="4ed4c6fb-f157-4d76-90cf-c2111034e717">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="7065e381-9693-46c0-afa3-f3f540ed93ee">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfbkqLKEn33Kwzn0bC5ibeY7ojiImKLCuL15QQWJaAISoGgX78LHG3t6Z49+zx02JVUZq3MXCSrfmJr77MdgDGKYi8Myqr0Wvkf30R83eZRrQ4Zpla36E3NWrON2qbV3LRZG67tNlspqxgnSA1wbAXxa4WlGa5GczWWNxm6U293aPqFa7RXlfIMRZiEJlte6Eo52/sB7hTHvlaSKOiEFvZwJ7D2CHdi2JkAbdAhOzvWDVPl7ecVZXFg9ObG8aFDUfDFRhD5PnyB4Z76ST3t+WnjzsRzAitOIvTrTBu/Vn75pmn6knIvYeRQLE3TFN2myB4be86Pylvp5oxsNdiE17VoBWHgQcv3LlYOSkOxG9pl4Dth5MXu/pvQDMXQeegaymANMvXgR4X6OKBA95eRnkBG2Kph12JuwQy0QREKICpPDfW18uPvOnj1NSMrwJsw2uNP6/8GCQUn5IcHZNfwLbMbur+P+EW53n4i2FED6CfYO6FhTpODBREujyO08bKBhwn5bFwu2l/O8I1hCP6XlvykHnES2NQXlZE8B+H4/+nXY6+uUWaWn6C38UrSqWDcG8nn9XSihLgnXS7Z1FjX1dcCwuPmK6h7q3+tPxP1zqtfTj3a2U8nTqi2GL4BxWYUpiBR8FZJdlGPmUm7YNg4XS6c7u4kVtyOqvUWUt05VM79dXhsu6B1nk/E9ozbbLel6pjjpqA1gbvM2gRznFCzSRXGYyVdDAPZ2qheuA3n/RbHZ/p4wKirPlflhrsGVBdO60R1OecgYUrZL3BjWgrhZqoK+plNVzE+sntuQb9+5PSYQ57XOzoXSeb/L3i6LVmxdV+I+aTYkNczRm+aqkrJRRTBeeKAVBWAQ/62YCg4u6O785R2SgtA17tAEgV/Kw80sFMAM5UFVxNnMy0TL6AvOMMZcTRLwF8JmiGnUrqUZrrek1PXtJXZea34yeoiDzWAC2fR1WRDnkmGKWsaCK+2TJPWSrbVJlqq6kupRAJIcna42Eo7RkrmQVbltQnPLid8slrMiL17HuyHp7Up+5qoKeLkqEzUNSfpch8YyzlkuwnxvQz2h7C0nAoPTv0D2gLUTWlyJrho5i7VzCk7lAyrsJnPNk1V+pqOU1EvslJKctqfTS8ftRAFTbT3ciabYHytBTTF7pBeLfrYmvOBZoBUcgrndzm1Rzcgmk6nJfFaq4GcGrIxHXY1Q01lUNgkOfXxmh26a8U9QU7P+ibYPjZG1OV5NyDPA+MEz/yxZCldsN7PGMgZLvR4z1qEqbNqpZK+7L+HK5WEGQJdFgQdEEA0yFMj9RfAQJjxo4PXZj002HTDPXKjksaE77vTJaNbHjdyxsM5L212zbHijTnLdinVh+yW2wFVRfY74+qWbSwpQwq8S2P0Pl0gL1pe4iGvMw2vxZeMeTJdSKHftHuL5fS9mi2hbo7Gk+l8fMmy4XHbuvhxbyT0oklfk5zREKExhlWKtrqC2ZJ4cdnbEj5tDBrxJeBoAgDK1nFkjxBY6G2vJOwZmkzICzQxVcS5qEyAolRlVZB0fdN1mTFUZsmUGWqqbPukTOflwvBLK1GQSKdoa746LNkuvTKBXQTT63LX0ad8tb9AK33om7MYpIfZJmAYWjnovY2WOlDLGWCr6UQgb5FQSlQwtUaHPp29zxo0c9Rtvz9pgymXTdhdNnKd1XnnrHakKcuHV2dpAn9mPnBMJRSbl3RTNjTQur5vmaZOOcOH++yw3sNMMknPCufQFGSjq9PTTJLA+9WGTcBmeHmRt5ooF/4lkGkWocVpvXDxMhh6I1NOCGmTB7ps1yz9rxzLKVZ65thRBDr4zDH5yjEZbI5VtSUxmG+IBzxPHUGRj3pzNui3D7S+GOxKQrVLObHn10dBKzXfq3PmnDbdrT6ft1XJFavBZuly61igrQvUUX/XVDxjJwWNun/WBprOTz3KP9NbdEzxoDRUmUDm4kuXakdJVdivvD0Z13V2uh9PkpM6td4xc3bXx3k73Y57DYqKlDN/aa5OencRwuX1O/J5SN6N1zFKPQ7Ypwl8016TZL1FML4t8++wKpW75ONoxX/WcbnFs2ubYmvnkItBHKMgrrzlXrmG6yRE6Xl2h3w5r2upJchNiWFEgWbaLZqX6TrNdGlAN9ttVmaYm9i7ovgEUQyDjZeflcvZ68f6zwDhvoNRYKOodgoT6CJc+UPEvF5lNTCICgkDjMyQyOVuA9RlVmozdLdNt5p0V+IaYrMtyBIttbkWqJSHYTwKRhHYxCh6lsrck1Q2EPQOHsr1dC4qMFEVOCYlOVqnJPaZl5P1EqCEKO4oF70dtt7iKeztDz7KAVP70E589HJwD0WBKHz9ZWsWxIW12aDpQu18m9/nZ7dSkD22l2/AeTICIu1Ev4n+Voe/ZfJ9xo3HjG/hQWJ7uaghdY0jD16RPD/6oEvOkztX8pRumO9bPxuewlKfM7qfZJ88eGf8/U5EJDURXW+3hhytl+NLcjolRQuauaCMSHiKoegGNUEwIarwbIY7FFD3ENRfCfI76k8n3+3P+JLYDSYxeZv3hDDlYvkXt7EJwvltTCWEz/72qvd0JKlbjLL4K5vok0tbjviP9zrYgfk+Yh6TnzSM7I92fRHr4RySZz6+vMDJV7n8Pn/DChiSsB4ZYWH0GPyrAF8d/my8F/mOJSZsWicx+v5JOZ9NrxULwjAJYlWqFIbHeVngjM8H1PnY9FuYQgD/utFk+NsbzUIbTMjk2luV+17v3zfXvIIuEBEv7BVYXisZuZyTwwPnYT7/AvjliAZy/U8j+jmTt9/Mv1seavr5fXj7Bw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D14403889CD0F3ECE0401F0A07992161/User/urn:dece:userid:org:dece:D14403889CDFF3ECE0401F0A07992161/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3DD6C150D6CC4DCE0401F0A0799470D</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_nodes" searchProperties="true" id="02e196fd-6a33-458f-a779-20bdcb8f65f6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a1fa38b-4b5a-43bc-b4ac-c8b2cd422c62"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="78a51972-e97c-4fcc-a444-ae8c86a62bc6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="45db53d0-e287-4b60-a809-f9e6735e4f2f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="517a95b3-ce83-437a-827d-5e49fdb10fa1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                              contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="6a93b9aa-b6dc-4adf-983f-0d78466e7a19">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfbkqLKEn33Kwzn0bC5ibeY7ojiImKLCuL15QQWJaAISoGgX78LHG3t6Z49+zx02JVUZq3MXCSrfmJr77MdgDGKYi8Myqr0Wvkf30R83eZRrQ4Zpla36E3NWrON2qbV3LRZG67tNlspqxgnSA1wbAXxa4WlGa5GczWWNxm6U293aPqFa7RXlfIMRZiEJlte6Eo52/sB7hTHvlaSKOiEFvZwJ7D2CHdi2JkAbdAhOzvWDVPl7ecVZXFg9ObG8aFDUfDFRhD5PnyB4Z76ST3t+WnjzsRzAitOIvTrTBu/Vn75pmn6knIvYeRQLE3TFN2myB4be86Pylvp5oxsNdiE17VoBWHgQcv3LlYOSkOxG9pl4Dth5MXu/pvQDMXQeegaymANMvXgR4X6OKBA95eRnkBG2Kph12JuwQy0QREKICpPDfW18uPvOnj1NSMrwJsw2uNP6/8GCQUn5IcHZNfwLbMbur+P+EW53n4i2FED6CfYO6FhTpODBREujyO08bKBhwn5bFwu2l/O8I1hCP6XlvykHnES2NQXlZE8B+H4/+nXY6+uUWaWn6C38UrSqWDcG8nn9XSihLgnXS7Z1FjX1dcCwuPmK6h7q3+tPxP1zqtfTj3a2U8nTqi2GL4BxWYUpiBR8FZJdlGPmUm7YNg4XS6c7u4kVtyOqvUWUt05VM79dXhsu6B1nk/E9ozbbLel6pjjpqA1gbvM2gRznFCzSRXGYyVdDAPZ2qheuA3n/RbHZ/p4wKirPlflhrsGVBdO60R1OecgYUrZL3BjWgrhZqoK+plNVzE+sntuQb9+5PSYQ57XOzoXSeb/L3i6LVmxdV+I+aTYkNczRm+aqkrJRRTBeeKAVBWAQ/62YCg4u6O785R2SgtA17tAEgV/Kw80sFMAM5UFVxNnMy0TL6AvOMMZcTRLwF8JmiGnUrqUZrrek1PXtJXZea34yeoiDzWAC2fR1WRDnkmGKWsaCK+2TJPWSrbVJlqq6kupRAJIcna42Eo7RkrmQVbltQnPLid8slrMiL17HuyHp7Up+5qoKeLkqEzUNSfpch8YyzlkuwnxvQz2h7C0nAoPTv0D2gLUTWlyJrho5i7VzCk7lAyrsJnPNk1V+pqOU1EvslJKctqfTS8ftRAFTbT3ciabYHytBTTF7pBeLfrYmvOBZoBUcgrndzm1Rzcgmk6nJfFaq4GcGrIxHXY1Q01lUNgkOfXxmh26a8U9QU7P+ibYPjZG1OV5NyDPA+MEz/yxZCldsN7PGMgZLvR4z1qEqbNqpZK+7L+HK5WEGQJdFgQdEEA0yFMj9RfAQJjxo4PXZj002HTDPXKjksaE77vTJaNbHjdyxsM5L212zbHijTnLdinVh+yW2wFVRfY74+qWbSwpQwq8S2P0Pl0gL1pe4iGvMw2vxZeMeTJdSKHftHuL5fS9mi2hbo7Gk+l8fMmy4XHbuvhxbyT0oklfk5zREKExhlWKtrqC2ZJ4cdnbEj5tDBrxJeBoAgDK1nFkjxBY6G2vJOwZmkzICzQxVcS5qEyAolRlVZB0fdN1mTFUZsmUGWqqbPukTOflwvBLK1GQSKdoa746LNkuvTKBXQTT63LX0ad8tb9AK33om7MYpIfZJmAYWjnovY2WOlDLGWCr6UQgb5FQSlQwtUaHPp29zxo0c9Rtvz9pgymXTdhdNnKd1XnnrHakKcuHV2dpAn9mPnBMJRSbl3RTNjTQur5vmaZOOcOH++yw3sNMMknPCufQFGSjq9PTTJLA+9WGTcBmeHmRt5ooF/4lkGkWocVpvXDxMhh6I1NOCGmTB7ps1yz9rxzLKVZ65thRBDr4zDH5yjEZbI5VtSUxmG+IBzxPHUGRj3pzNui3D7S+GOxKQrVLObHn10dBKzXfq3PmnDbdrT6ft1XJFavBZuly61igrQvUUX/XVDxjJwWNun/WBprOTz3KP9NbdEzxoDRUmUDm4kuXakdJVdivvD0Z13V2uh9PkpM6td4xc3bXx3k73Y57DYqKlDN/aa5OencRwuX1O/J5SN6N1zFKPQ7Ypwl8016TZL1FML4t8++wKpW75ONoxX/WcbnFs2ubYmvnkItBHKMgrrzlXrmG6yRE6Xl2h3w5r2upJchNiWFEgWbaLZqX6TrNdGlAN9ttVmaYm9i7ovgEUQyDjZeflcvZ68f6zwDhvoNRYKOodgoT6CJc+UPEvF5lNTCICgkDjMyQyOVuA9RlVmozdLdNt5p0V+IaYrMtyBIttbkWqJSHYTwKRhHYxCh6lsrck1Q2EPQOHsr1dC4qMFEVOCYlOVqnJPaZl5P1EqCEKO4oF70dtt7iKeztDz7KAVP70E589HJwD0WBKHz9ZWsWxIW12aDpQu18m9/nZ7dSkD22l2/AeTICIu1Ev4n+Voe/ZfJ9xo3HjG/hQWJ7uaghdY0jD16RPD/6oEvOkztX8pRumO9bPxuewlKfM7qfZJ88eGf8/U5EJDURXW+3hhytl+NLcjolRQuauaCMSHiKoegGNUEwIarwbIY7FFD3ENRfCfI76k8n3+3P+JLYDSYxeZv3hDDlYvkXt7EJwvltTCWEz/72qvd0JKlbjLL4K5vok0tbjviP9zrYgfk+Yh6TnzSM7I92fRHr4RySZz6+vMDJV7n8Pn/DChiSsB4ZYWH0GPyrAF8d/my8F/mOJSZsWicx+v5JOZ9NrxULwjAJYlWqFIbHeVngjM8H1PnY9FuYQgD/utFk+NsbzUIbTMjk2luV+17v3zfXvIIuEBEv7BVYXisZuZyTwwPnYT7/AvjliAZy/U8j+jmTt9/Mv1seavr5fXj7Bw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageUserConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2eeb936-13ad-4f02-a213-128d8a600f31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS_API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="96fdea5e-3165-42ad-86cd-31f66cb06840">
      <con:settings/>
      <con:testStep type="groovy" name="Establish Test Case Properties" id="731c85dd-a797-4aa6-9d78-751282bd3607">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("audience",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);

tC.setPropertyValue("expectErrType","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d0694d84-14d5-4956-804e-9bf4ad05accb">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
	tP.setPropertyValue("audience",callTS.getPropertyValue("audience"));
}
else
{
	tC.setPropertyValue("tokentype",URLEncoder.encode(tP.getPropertyValue("urntokenType_userpassword"), "UTF-8"));
	tP.setPropertyValue("audience",URLEncoder.encode(callTS.getPropertyValue("audience"), "UTF-8"));
}

	</script></con:config>
      </con:testStep>
      
      
      
      
      <con:testStep type="groovy" name="Establish pem" id="94b59c95-ff72-47e3-9fd0-fd8d7afd897f">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - STS");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="POST - STS" id="a8743d44-b5f5-434b-8b34-a00c8a871e83"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - STS" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="iscportal1_concat.pem" id="a220b358-dfa8-45f4-9c5c-d72c3193ef9c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
  <Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#username}</Username> 
  <Password>${#TestCase#password}</Password> 
  </Credentials>
]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/1/11/SecurityToken/SecurityTokenExchange</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#Project#audience}"/>
  <con:entry key="tokentype" value="${#TestCase#tokentype}"/>
</con:parameters></con:restRequest></con:config></con:testStep>
      <con:testStep type="groovy" name="Extract Response Body and Headers" id="753e9aaf-3388-4e03-8f3a-6ce2ca19d62a">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep = tC.getTestStepByName('POST - STS');

tC.setPropertyValue("status", null);
tC.setPropertyValue("connection", null);
tC.setPropertyValue("contentType", null);
tC.setPropertyValue("contentLength", null);
tC.setPropertyValue("contentLocation", null);
/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);

this.log.info "contentLength [$contentLength]";
this.log.info "status [$status]";
this.log.info "contentType [$contentType]";
this.log.info "contentLocation [$contentLocation]";

/*
 *if (contentLength.toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
     rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);

     int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
  
	String XMLbody  = strVal.substring(startAssert, strVal.length());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract ERROR table information" disabled="true" id="8a0f2ec1-f2d0-4dc9-9cc9-a96a02ac3c3b">
        <con:settings/>
        <con:config>
          <script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrType[" + tC.getPropertyValue("expectErrType") + "]";

switch (tC.getPropertyValue("expectErrType")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script>
        </con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="af6b5e7c-4338-4606-a5a0-d8efc02aa8c7">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = true;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection
log.info "doConnectionClose=="+doConnectionClose;
if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
log.info "doContentLocaton=="+doContentLocaton;
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	log.info "Path=="+b.getPath();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	//assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
	}
}</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="Return the assertion information to the Calling Test Case" id="555adcb9-ff7a-4534-bba3-bc82697bd8d4">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",tC.getPropertyValue("assertionUUID"));
callTC.setPropertyValue("assertionUUID1",tC.getPropertyValue("assertionUUID"));</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS" id="a2a0dd32-6e19-42eb-83a7-3a70fc9c8520"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="iscportal1_concat.pem" accept="" id="ef8f1fdd-6621-4777-8eb0-1a1c8cb6a076"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://qa1.q.uvvu.com/rest/1/11/SecurityToken/Assertion/_b4670e2b-59d8-412d-828e-35f103bae588</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="assertionUUID" value="${#TestCase#assertionUUID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="32676c09-9e94-49f4-9b1a-96e19285789c">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep  = tC.getTestStepByName('GET - STS');

/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");
String XMLbody = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();

rawResp = new ByteArrayOutputStream();

rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
log.info  "startAssert: "+startAssert;

if (startAssert > 0) {
	XMLbody  = strVal.substring(startAssert, strVal.length());
}

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Key Elements from &lt;Assertion> Body" id="4340d005-0faf-4e4c-9bd1-bac0b3f3e02e">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

int lastColon = 0;
int lastSlash = 0;

if (expectErrType == "" || expectErrType == "SUCCESS") {
	tC.setPropertyValue("SAML",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
	tC.setPropertyValue("NODE_USER_ID",null);
	tC.setPropertyValue("NODE_USER_ID_FULL",null);
	
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

			// Verify response sizes...
			assert myXML.size() == 1;

			def accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
			def userId    = myXML."saml2:Subject"."saml2:NameID";
			def NotBefore = myXML."saml2:Conditions".@NotBefore.text();
			def NotOnOrAfter = myXML."saml2:Conditions".@NotOnOrAfter.text();
			def AudienceRestriction = myXML."saml2:Conditions".AudienceRestriction;
			
			this.log.info "accountId [$accountId]";
			this.log.info "userId [$userId]";
			this.log.info "NotBefore [$NotBefore]";
			this.log.info "NotOnOrAfter [$NotOnOrAfter]";
			this.log.info "AudienceRestriction [$AudienceRestriction]";
						
			//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
			//tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
			tC.setPropertyValue("assertionNotBefore",NotBefore.toString());
			tC.setPropertyValue("assertionNotOnOrAfter",NotOnOrAfter.toString());
			tC.setPropertyValue("assertionAudienceRestriction",NotBefore.toString());
			tC.setPropertyValue("NODE_ACCOUNT_ID",accountId.toString().substring(accountId.toString().lastIndexOf(':') + 1).toString());
			tC.setPropertyValue("NODE_USER_ID",userId.toString().substring(userId.toString().lastIndexOf(':') + 1).toString());
			
			if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
			{
                    tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
				tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
        	     } 
        	     else 
        	     {
				tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(accountId.toString()));
				tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(userId.toString()));        	     	
		     }
	} 
	else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="21e86d6d-c838-457d-9382-b4f46de4c20e">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = false;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/dece/SecurityToken/Assertion/[0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
/*
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		*/
	} else {
		return false;
	}
}



</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="afefdd8a-8df1-4db3-9de3-91dea5680ba1">
        <con:settings/>
        <con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");


String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);
// finally, URL encode it
tC.setPropertyValue("SAML", "SAML2 Assertion="+base64encodeStr);


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return extracted Properties back to calling Test Case" id="3f4c7bfc-da6e-45f6-8e04-a891685abe3d">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctID = tC.getPropertyValue("NODE_ACCOUNT_ID");
String userID = tC.getPropertyValue("NODE_USER_ID");

callTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
//callTC.setPropertyValue("SAML_USER1",tC.getPropertyValue("SAML"));

if (acctID != null &amp;&amp; acctID.length() > 0) {
	
	callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID1",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionAccountId","ERROR");
}
if (userID != null &amp;&amp; userID.length() > 0) {
	callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
	//callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
	callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
	//callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionUserId","ERROR");
}</script></con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_API</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>audience</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml; charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>assertionUUIDprior</con:name><con:value>_732606f9-3702-470e-9ecf-2bbb514a18ba</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_d6b3bef8-f624-4bb7-918d-477f8a754918</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_d6b3bef8-f624-4bb7-918d-477f8a754918" IssueInstant="2015-06-09T09:32:28.609Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_d6b3bef8-f624-4bb7-918d-477f8a754918"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>XCFB43ywz8k1NQDykC5jZCZ6CIM=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>i3eMw+SHpY4WflVqGd0GiMvnaK2jleT2z9UYwlVfhj1qNwzkqdMcltgCZkP7AtC+w22oUlO8nORivWC0uNskjP9yc5VoERLxq+e4HKL5+RGTwOZxv4YD7BmrjRKnDL3sUTxgoNEV4OmuLyCq99bLomJGMOXaNQLzDBOkJQPaCRI=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_fl4hyvuz2l8i128lorl3svyc2" NotOnOrAfter="2015-06-09T12:32:28.609Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/iscportal1"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2015-06-09T09:32:18.609Z" NotOnOrAfter="2015-06-09T15:32:28.609Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:iscportalcs1</saml2:Audience><saml2:Audience>urn:dece:org:org:dece:iscportal1</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa1.q.uvvu.com:443/rest/1/11/SecurityToken/Assertion/_d6b3bef8-f624-4bb7-918d-477f8a754918</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2015-06-09T09:32:28.609Z" SessionIndex="_d6b3bef8-f624-4bb7-918d-477f8a754918"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>username1</con:name><con:value>firstuser20130726_035156</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZbc9o6EP4rjPuYMb5gbp7ADNhJSsMlBZK2eTkj5AUUbAks2UB+/ZEMuEBJDj1PHq1Xu9/ufvqkW46i0HZbnEMsCKOFTRRS7mbWhpbE1GWIE+5SFAF3BXZHrV7XtYumiw5btELHb2j/BJVJaQLTmj6t2I7uTCZVvW7VAt2pVqc1VC07ciVdOU+gQ7lAVDQ027TKulnRzfrYrLsl27VrxYpZf9UKLxBzGVu6FE1tD2rDG9pciKVrGOv1urguFVk8M2zTtIyfve4IzyFCWvN2V1GWKG7u/XExAAxhiIuYRcatceJzG3B3RGYUiSSGfa7go1ymYdYN6RNwMvui5Xsh6NApy5YeoowSjELyjlR/eiDmLCi0whmLiZhHHxZhmSqwDhusY8uhXzTjFNqVgU4QxhzpfI6sfawhTCEGiqHwPOw0tC/XTS3bOo4R5VMWR/x0+Xd4gKYQsiUEOj+UtYd2fcALnWreAnY7FIcJJyn0FVmXCAPfTxPw9aEKTzFMyaZLuCTohit0xjG8s+WuGz6ZARf/Z0BHw9kFeUFhAs2f3n3bKW3X77WF1f/ubxde+e3Ve614nV4jA3DsnBny0e6WZ6TMSbTbQUrQW9+Mvi5/OT+m4cvqITAfSC+l6NF+C2Fsv9eff63Dl+n8zVr11++LVdDDoZh5r4unakt4N2vbZs/hoEYHQ5L+8MykzxdvT/UtLr+wu2F3s7oB5+tjt3wzfBivB6+b1PnlV9tR/DZ8pH63xJ/Hmxnr3704gyjpbr1VvT7psujbQ2/wE/W/d9/99mDx7fsT8iRL83KO8J/aDmd+lEzeAIvDUtGg4xfu5ZSQ+FzMlIUE+jRzdZdKfLgAKrSm2qW0w02k3JHAlTPcra2aVbKq9Ur1ruK37Xv/ziyXSnf1unVvtny7ZR1EZofiDKLH6JSoXEpyd7T5HCCOXA40gFhPWSKVjmufRPSRQIUOHcpDwCiHMZPyPA2d+TZN3u2wRiy7FrI4LPF0i22t0GdiQAdxayogPtFkyz7R5CFgsiSghFvxmkticyF7sUJpIkKrmKIihURKe6xU1rWdWtngJFqGoJAaEQuSEIrL+TLrjMF3X1tHmGdWwvGSxQKF2YEwPizv/N+hE9InIMqBq5LaIKcJF+4Y61DPx3WXj+s+hG8lAVHnS7ZVxATvkJz++s0WRZOcKnlhmOe0yLf8ZYgLAYxP8BnnrcnzBSk5yn64zOW1IIWkeZjvClnFVTFJ0yQbqeOUjFiGN6RuWsYIcCJ1bjtmC6BGHsK46lLJUZ9lzu2n+BIxpyOBBESSf4VsecUrYgRcvSI68uBsrn2inKSUfROwEZdsXihfQArxp48k7GLlJ81P8rNmcfB7XBdiHeWRdcpHhCB0plbqQtl+wA3MZFgipZDFx8EvBbiU/NSYNznHIiSbJomAj/8UlMY1NIQxS6jo+FpmONbdDKfYLsH97fRHmEza87ce+e/Hnk4yCmCQL0ROsvjqynYV/+nsSLv3Sc/l23bu2mbZ8hyrVsnk29/Jt9c2K3lTTtA1/zD/aTnq0znHm/8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>assertionNotBefore</con:name><con:value>2015-06-09T09:32:18.609Z</con:value></con:property><con:property><con:name>assertionNotOnOrAfter</con:name><con:value>2015-06-09T15:32:28.609Z</con:value></con:property><con:property><con:name>assertionAudienceRestriction</con:name><con:value>2015-06-09T09:32:18.609Z</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_d6b3bef8-f624-4bb7-918d-477f8a754918</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>555384c9-6fa2-448b-a38e-713264e945f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Notification DB Validation" searchProperties="true" id="e6d93400-ec29-487d-845d-0269783271b0"><con:settings/><con:testStep type="groovy" name="User_Notification DB Validation" id="36a03322-c94f-4c44-9b0d-8ed3193a4a59"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int cnt = 0;

	String emailAddress = tP.getPropertyValue("PrimaryEmailAddress").toString();
	String username = callTC.getPropertyValue("UserName").toString();
	String emailEvent = callTC.getPropertyValue("emailEvent").toString();
	
	String sql = """Select * FROM EMAIL_NOTIFICATION WHERE EMAIL_ADDRESS='$emailAddress' and EMAIL_DISPATCH_STATUS = 'Y' and EMAIL_NOTIFICATION_EVENT='$emailEvent' and USER_OID=(SELECT USER_OID FROM ACCOUNT_USER WHERE USERNAME='$username')""";

	log.info sql;

	try {
		a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
		
	}
	catch(Throwable e) {
		log.info "ERROR - dbUtils.dbUtils - $e"; 
		assert 1 == 2;

		}
	finally {
		def results   = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
		log.info results;
	
		try {
			def myXML = new XmlSlurper().parseText(results);
			assert myXML.ResultSet.Row.size() == 1;
			
		}
		catch (Throwable e) {
			log.info "ERROR - XmlSlurper - $e";
			assert 1 == 2;
		} 
		
		}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.2. Account Create: Email Address Confirmed [Your UltraViolet account has been created]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet_API" searchProperties="true" id="a9371951-a0d7-4374-b477-39820ba727c5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="34eab9ef-094b-4ea5-b816-16bad8f3019a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="ab184205-d3f8-4833-a390-e2590f4dff15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Get" id="c08b1948-5ae0-48e0-9291-6866d90b2d61"><con:settings/><con:config service="Users" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Get" mediaType="application/xml" sslKeystore="iscportal1_concat.pem" accept="" id="98bd2387-913c-4d2f-973b-87a9fa158996"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://qa1.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:142795B8DBAC4801E05305991F0A14FE/User/urn:dece:userid:org:dece:1427F610E6761C00E05307991F0A2BE1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3475aa35-aee4-44f3-bc56-b7358d0abca8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

//tC.setPropertyValue("ETagPrior",tC.getPropertyValue("ETag"));
tC.setPropertyValue("ETag", ETag);

//log.info "ETagPrior: " + tC.getPropertyValue("ETagPrior")+", ETag: "+ tC.getPropertyValue("ETag");
//assert tC.getPropertyValue("ETagPrior")!= tC.getPropertyValue("ETag");
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="621e6c79-25ba-4fc8-86b5-0fa7a2e3401f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeUserGet}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
		expectHTTPconnection = "close";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
		expectHTTPconnection = "close";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}


if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;

	} 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT

   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');

    // Following Fields returned for Everyone
    // Contact Info shwon only for CLG or Self or Portal:CS or DECE:CS or COORD:CS - kalyan 05092013
    if ( (RequestorType == "Other")  || (RequestorType == "CS")|| (RequestorType == "SPLCS"))
    {
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
            
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
    else
    {
    	    assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
  /*      
         def a = myXML.DisplayImage.DisplayImageURL;
         log.info a ;
		//def b = a.toURL();
		//log.info b;
		 log.info "Response_DisplayImageURL: "+a.getPath();
         assert  a.matches("https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=[0-9,A-F]*");
        log.info "here";
*/
        
         assert myXML.ContactInfo.size() == 1;
         assert myXML.ContactInfo.Address.size() == 1;
         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
         assert myXML.ContactInfo.Address.Locality.size() == 1;
         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
         assert myXML.ContactInfo.Address.Country.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
         if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
         {
           assert myXML.ResourceStatus.History.size() > 0; 	
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0; 	
         }

   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
	log.info("Requestee : '" +Requestee +"'");
	log.info("RequestorType : '" +RequestorType +"'");
   if(Requestee == "CHILD")
    {

    	  this.log.info "Getting CHILD details";
    	  
  	 if((RequestorType == "CLG") || (RequestorType == "Self") || (RequestorType == "SPLCS"))
  	 {
  	   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
//         assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
  	 }
  	 else
  	  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
//         log.info("Date of Birth Size returned from response : '" + myXML.DateOfBirth.size() + "'");
//         log.info("Asser that size is zero for DOB size.");
//         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
  	   

         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************

         //firstmask = usernamestring.indexOf('u');
        lastmask = usernamestring.length();
        
     log.info firstmask;
 		 log.info  lastmask;
        usernamestring = usernamestring.substring(1,lastmask-1);
        //usernamestring = "••••••";
   log.info usernamestring;
//        assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
         assert usernamestring == "••••••";

       //*************Verifying Masking of CHILD GivenName details ******************
          
        //firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.length();

         givennamestring = givennamestring.substring(1,lastmask-1);

       // assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
        assert givennamestring == "••••••";

         //*************Verifying Masking of CHILD SurName details ******************
          
       // firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.length();

         surnamestring = surnamestring.substring(1,lastmask-1);

       //assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";     
      assert surnamestring == "••••••";        
    }
  	 if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
          {
             this.log.info "Getting CHILD CLG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else
             if(myXML.LegalGuardian.size() == 2)     	
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)     	
                {
            	   this.log.info "Getting CHILD Active CLG details for NonCS";
            	 
           	   assert myXML.LegalGuardian.size() == 1;   
           	   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
               }
           else
               {
            	 this.log.info "Getting CHILD Pending CLG details for NonCS";
           	 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self")|| (RequestorType == "SPLCS")|| (RequestorType == "CS"))
    {
    	       	  
//    	    assert myXML.DateOfBirth.size() == 1;
    	   //-----------------asserting the date of birth from the XML
//	   log.info"Date of birth= "+myXML.DateOfBirth.text();
//	   log.info "Age Of Majority value = "+myXML.DateOfBirth.@MeetsAgeOfMajority;
//	   assert myXML.DateOfBirth.text() == "1888-08-09";
	   //------------------Validating Age fo Mejority
//	     assert myXML.DateOfBirth.@MeetsAgeOfMajority == ""; 
        

    	    

         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")	
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else if(myXML.LegalGuardian.size() == 2)     	
             {
           	 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
           else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }      	
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";	
           //assert myxml.LegalGuardian.size() == 0; 	
		assert myXML.LegalGuardian.size() == 0; 	
        }
    }  
     else 
    {   
    	    this.log.info "BAU geting other's details";
    	    
//    	    assert myXML.DateOfBirth.size() == 1;
    	   //asserting the date of birth from the XML
//	   log.info"Date of birth= "+myXML.DateOfBirth.text();
//	   log.info "Age Of Majority value = "+myXML.DateOfBirth.@MeetsAgeOfMajority;
//	   assert myXML.DateOfBirth.text() == "1888-08-09";
	   //Validating Age fo Mejority
//	     assert myXML.DateOfBirth.@MeetsAgeOfMajority == ""; 
        
        
        
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0; 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH")	
          {
            if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
          else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }	
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 	
          }      	
    }       
    
  }	// end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase" id="590ead6d-c1c1-4bc1-8d2a-27988f00984e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<User UserID="urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1" UserClass="urn:dece:role:user:class:standard" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Name>
      <GivenName>usercreate_ug_111_20150609_0305321433842532246</GivenName>
      <SurName>usercreate_ug_111_20150609_0305321433842532246</SurName>
   </Name>
   <ContactInfo>
      <PrimaryEmail VerificationStatus="urn:dece:type:status:pending">
         <Value>testing@uvvutesting.biz</Value>
      </PrimaryEmail>
      <AlternateEmail Notify="false" VerificationStatus="urn:dece:type:status:pending">
         <Value>test_+126@uvvutesting.biz</Value>
      </AlternateEmail>
      <Address>
         <PostalAddress>46000 Center Oak Plaza</PostalAddress>
         <PostalCode>20166</PostalCode>
         <Locality>Sterling</Locality>
         <StateOrProvince>VA</StateOrProvince>
         <Country>US</Country>
      </Address>
      <TelephoneNumber>
         <Value>+1.703598741</Value>
      </TelephoneNumber>
      <MobileTelephoneNumber>
         <Value>+1.703598742</Value>
      </MobileTelephoneNumber>
   </ContactInfo>
   <Languages>
      <Language primary="true">en-us</Language>
      <Language primary="false">en</Language>
   </Languages>
   <Credentials>
      <Username>usercreate_ug_111_20150609_0305321433842532246</Username>
   </Credentials>
   <ResourceStatus>
      <Current CreationDate="2015-06-09T09:32:24.265Z" CreatedBy="urn:dece:org:org:dece:iscportal1" ModificationDate="2015-06-09T09:32:31.591Z" ModifiedBy="urn:dece:org:org:dece:iscportal1">
         <Value>urn:dece:type:status:active</Value>
         <Description>Flipping User Status to active</Description>
      </Current>
   </ResourceStatus>
</User>]]></con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F850C559FACD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E603BD56DDEEF0CEE0401F0A07990E43</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>01.User_Get_GeoProfile</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMb5gbp7ADNhJSsMlBZK2eTkj5AUUbAks2UB+/ZEMuEBJDj1PHq1Xu9/ufvqkW46i0HZbnEMsCKOFTRRS7mbWhpbE1GWIE+5SFAF3BXZHrV7XtYumiw5btELHb2j/BJVJaQLTmj6t2I7uTCZVvW7VAt2pVqc1VC07ciVdOU+gQ7lAVDQ027TKulnRzfrYrLsl27VrxYpZf9UKLxBzGVu6FE1tD2rDG9pciKVrGOv1urguFVk8M2zTtIyfve4IzyFCWvN2V1GWKG7u/XExAAxhiIuYRcatceJzG3B3RGYUiSSGfa7go1ymYdYN6RNwMvui5Xsh6NApy5YeoowSjELyjlR/eiDmLCi0whmLiZhHHxZhmSqwDhusY8uhXzTjFNqVgU4QxhzpfI6sfawhTCEGiqHwPOw0tC/XTS3bOo4R5VMWR/x0+Xd4gKYQsiUEOj+UtYd2fcALnWreAnY7FIcJJyn0FVmXCAPfTxPw9aEKTzFMyaZLuCTohit0xjG8s+WuGz6ZARf/Z0BHw9kFeUFhAs2f3n3bKW3X77WF1f/ubxde+e3Ve614nV4jA3DsnBny0e6WZ6TMSbTbQUrQW9+Mvi5/OT+m4cvqITAfSC+l6NF+C2Fsv9eff63Dl+n8zVr11++LVdDDoZh5r4unakt4N2vbZs/hoEYHQ5L+8MykzxdvT/UtLr+wu2F3s7oB5+tjt3wzfBivB6+b1PnlV9tR/DZ8pH63xJ/Hmxnr3704gyjpbr1VvT7psujbQ2/wE/W/d9/99mDx7fsT8iRL83KO8J/aDmd+lEzeAIvDUtGg4xfu5ZSQ+FzMlIUE+jRzdZdKfLgAKrSm2qW0w02k3JHAlTPcra2aVbKq9Ur1ruK37Xv/ziyXSnf1unVvtny7ZR1EZofiDKLH6JSoXEpyd7T5HCCOXA40gFhPWSKVjmufRPSRQIUOHcpDwCiHMZPyPA2d+TZN3u2wRiy7FrI4LPF0i22t0GdiQAdxayogPtFkyz7R5CFgsiSghFvxmkticyF7sUJpIkKrmKIihURKe6xU1rWdWtngJFqGoJAaEQuSEIrL+TLrjMF3X1tHmGdWwvGSxQKF2YEwPizv/N+hE9InIMqBq5LaIKcJF+4Y61DPx3WXj+s+hG8lAVHnS7ZVxATvkJz++s0WRZOcKnlhmOe0yLf8ZYgLAYxP8BnnrcnzBSk5yn64zOW1IIWkeZjvClnFVTFJ0yQbqeOUjFiGN6RuWsYIcCJ1bjtmC6BGHsK46lLJUZ9lzu2n+BIxpyOBBESSf4VsecUrYgRcvSI68uBsrn2inKSUfROwEZdsXihfQArxp48k7GLlJ81P8rNmcfB7XBdiHeWRdcpHhCB0plbqQtl+wA3MZFgipZDFx8EvBbiU/NSYNznHIiSbJomAj/8UlMY1NIQxS6jo+FpmONbdDKfYLsH97fRHmEza87ce+e/Hnk4yCmCQL0ROsvjqynYV/+nsSLv3Sc/l23bu2mbZ8hyrVsnk29/Jt9c2K3lTTtA1/zD/aTnq0znHm/8C</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>BAU</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>ETagPrior</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"18132227895DD3DFE0533E991F0ABFE1:8FD9FCA1"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c734ae7-5af5-42b8-9df0-6dd308e44f7c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_API" searchProperties="true" id="b842e70d-a8b1-44af-91c2-44516599f032"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="18eb9a22-5908-44eb-b3e7-168868a833ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:ManageUserConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="811dfc5b-8558-457c-b31b-fb5e6d5153f1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_MUC" id="7ec9b277-6ca0-476e-b24a-afca494e8c88"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_MUC" mediaType="application/xml" postQueryString="false" accept="" id="66fc491a-e628-433e-8b08-9173508cb816"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:142795B8DBAC4801E05305991F0A14FE/User/urn:dece:userid:org:dece:1427A5BD3B780EF6E05307991F0A1C36/Policy/urn:dece:type:policy:ManageUserConsent</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="d2b144b0-8903-476a-973d-eca1f81182fe">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="2710e6fa-2dda-451c-98a1-f99eca01a7e1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMb5gbp7ADNhJSsMlBZK2eTkj5AUUbAks2UB+/ZEMuEBJDj1PHq1Xu9/ufvqkW46i0HZbnEMsCKOFTRRS7mbWhpbE1GWIE+5SFAF3BXZHrV7XtYumiw5btELHb2j/BJVJaQLTmj6t2I7uTCZVvW7VAt2pVqc1VC07ciVdOU+gQ7lAVDQ027TKulnRzfrYrLsl27VrxYpZf9UKLxBzGVu6FE1tD2rDG9pciKVrGOv1urguFVk8M2zTtIyfve4IzyFCWvN2V1GWKG7u/XExAAxhiIuYRcatceJzG3B3RGYUiSSGfa7go1ymYdYN6RNwMvui5Xsh6NApy5YeoowSjELyjlR/eiDmLCi0whmLiZhHHxZhmSqwDhusY8uhXzTjFNqVgU4QxhzpfI6sfawhTCEGiqHwPOw0tC/XTS3bOo4R5VMWR/x0+Xd4gKYQsiUEOj+UtYd2fcALnWreAnY7FIcJJyn0FVmXCAPfTxPw9aEKTzFMyaZLuCTohit0xjG8s+WuGz6ZARf/Z0BHw9kFeUFhAs2f3n3bKW3X77WF1f/ubxde+e3Ve614nV4jA3DsnBny0e6WZ6TMSbTbQUrQW9+Mvi5/OT+m4cvqITAfSC+l6NF+C2Fsv9eff63Dl+n8zVr11++LVdDDoZh5r4unakt4N2vbZs/hoEYHQ5L+8MykzxdvT/UtLr+wu2F3s7oB5+tjt3wzfBivB6+b1PnlV9tR/DZ8pH63xJ/Hmxnr3704gyjpbr1VvT7psujbQ2/wE/W/d9/99mDx7fsT8iRL83KO8J/aDmd+lEzeAIvDUtGg4xfu5ZSQ+FzMlIUE+jRzdZdKfLgAKrSm2qW0w02k3JHAlTPcra2aVbKq9Ur1ruK37Xv/ziyXSnf1unVvtny7ZR1EZofiDKLH6JSoXEpyd7T5HCCOXA40gFhPWSKVjmufRPSRQIUOHcpDwCiHMZPyPA2d+TZN3u2wRiy7FrI4LPF0i22t0GdiQAdxayogPtFkyz7R5CFgsiSghFvxmkticyF7sUJpIkKrmKIihURKe6xU1rWdWtngJFqGoJAaEQuSEIrL+TLrjMF3X1tHmGdWwvGSxQKF2YEwPizv/N+hE9InIMqBq5LaIKcJF+4Y61DPx3WXj+s+hG8lAVHnS7ZVxATvkJz++s0WRZOcKnlhmOe0yLf8ZYgLAYxP8BnnrcnzBSk5yn64zOW1IIWkeZjvClnFVTFJ0yQbqeOUjFiGN6RuWsYIcCJ1bjtmC6BGHsK46lLJUZ9lzu2n+BIxpyOBBESSf4VsecUrYgRcvSI68uBsrn2inKSUfROwEZdsXihfQArxp48k7GLlJ81P8rNmcfB7XBdiHeWRdcpHhCB0plbqQtl+wA3MZFgipZDFx8EvBbiU/NSYNznHIiSbJomAj/8UlMY1NIQxS6jo+FpmONbdDKfYLsH97fRHmEza87ce+e/Hnk4yCmCQL0ROsvjqynYV/+nsSLv3Sc/l23bu2mbZ8hyrVsnk29/Jt9c2K3lTTtA1/zD/aTnq0znHm/8C</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06/User/urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_API" searchProperties="true" id="ff66942a-9113-4ec5-86c5-474c958405fd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="92bb5034-0c2b-43fc-91b2-3b4650e842e5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:UserLinkConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="7ce0f518-6fde-48b8-8856-160c7a7dcba5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreate_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_ULC" id="5f480890-c871-4e95-969a-95bd0cf4f220"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_ULC" mediaType="application/xml" postQueryString="false" id="519bcbfe-e849-410a-9bd1-2d1a38d794aa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="c3596ad7-ae66-4511-bd32-ff2e256a7591">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="7e622264-f614-495e-b954-9f5b1f16afb6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZkqrKEn33Kwz3o2EzOmB0d0QhoKioDI4vJxBKRJmkQNCvP4W2bu3dvW+f+6SVlZW5ciBr1SsyfY9uA4RgnLhhUJaFt8o/LRquOabeqrVY2KyxNM3VOBtaNYtpbWjKXrNNq1kpywilUA5QYgbJW4UmKaZGNmt0w6DoNs21SfqFbFCrSnkGY4RNY5UXslLOfS9A7Yvbt0oaB+3QRC5qB6YPUTux2jpQhm2s2TZvmCrvr1eUF4fx+zZJojZBWC8YEvQ868UKfeKVeNJ5tVFbd53ATNIYfvi00Vvl42yWZS8Z8xLGDkGTJEmQHIF1bOQ6vyrvpdthaMvBJryuO2YQBq5leu7ZLEApMNmGdhl4Thi7ydb/xjRFUGRhugZznD6KDX5ViN8OLuh+aOkJZIzMGtqa1M2YBjcwhoEFy1NNfqv8+lkFr2eN2AzQJox99Gn93yDB4Ai9MIJ2Dd0iu6H7ucUv0vX+Cq22HFheitwjHBVtEpkWROVJDDduPnQRbj4blS/lL+fo1mHQ+i8leSUecWLYxBeZEVwHouT/qddjra5WZqaXwnc1FrhcZSxU1xxDyHtLoaUp41jP5su3C4RH5Suoe6k/1p8b9d5XH4e6LqsPIzmlFcI5S1yLGXDOStq3Zrpf7fEJT/fH+czprrSlRpGMv/Z6+aRbDXV90pUMjVn1grlsJvN0vHazUpOOBYXhlRgIBn0YZEgd+QfeHs+0eViNXGU8t4j0vDn3TXkYLB0tCNXG2WT0+mgvOZOtK9H9wzRTpozUlUotKdO0/ihr5Q3KhJE485Zvv2N6jKGIawBPlyCL/4s6yQlmYt4XnWJSbPDnmcB3RZY7VaHTAbDjgEzmgSPzwzMY8c7+sN27XS4jeaBOJSCAk6KBTHCWwkxVB2Jmz2beaiZLEq9obNYDS6GENwQxnwmrRZ8056toSUvkSud5e6GFa6Yf2b191ttaI8VQspEhn5SdmI8MkZxfZE6O12dlp1BjY8qU5jueUzQxE7KLR0HMtqPVXIuWUy6zzqKqALYLqKnY2So9w59RFqNtrZ04VMD+Iue3Smc2U3LRAJMS74xmODajI60iy7ejte9tH4z3sHHD7s5O666Xrs7iTumI3Y5+6OrymhFUsQ+05XQ9n+3NuXQsWb0RWN88unXXXISZs2plgrrsD8KVvD1aI6CKPK8CnC4SKHK3D8IuDxQWuPm5s+MbYceWMqJPo1KV87qNxck9LJDZJT2TarWo5XDemBwaghhUV4N0vdsq24U0rg50+zjlEu68RMfqsWG6lJVHG3Uh9pJBvumpemk9EfKF1avaTp/wzpwUK80+iM+nrac4WjJvjNFp7W42c34xZr3mxlMYLdp4m+iEqkao7mOywUOGJpan4yApAUfhAejupjteVfhWkVRbztSlwptAEpMUnHd0MqBnh37v6FlLBoT5YD7e7T8KYwuZyBOZKuK2EkstAdhFEXr6VJR2YMo7Tsw7osSrlgDUpTzIljhf0x5W/pxH6ZJHR+SByKxAg+uVmCnJJeNEZ1lwCvhpIHFb5ZDP7YZPNg9QHOqjiM0UNNoEq3m4V3w3nsapPh0MRsN8baTd/Q7Pqg2pD47MqiQe9xFwRwNjuxdCwZxEy2USVQMrthI58hU5P49XaNdy1z7Zr9YpfkIKVpOe+uts2jXF1SB2dGrQ04IJ0+RKKN2cen5118rmVUNvRE27E2yE04lYxTMyBKHEafWDndP0fjvNho1s0wf7tUmPco/jT5w4WBlWpqmDOR439VL9OBz65Nkg2FE0zvRuxoqqWmVs3ugZKIrdZdpy8ngc2PTSTBrHFTlruJG35+h0b7ARM3N8XKzJ0Y6ayqSksgtr5TvNyOoTGnEEYnMzlLun9dk8R/7Yug7Qz9PhLrzOD+JxsjyNnhvp0HG3Qiu5LYsLSBbKEr4VzOTvBKaQuHZtc1FtRwULQgkMksp7caogL+0UUxzXbuMr47oW6QZgGyQrUvWCT3EiyZKURAKyznEkz/M3lnNF8QliJww2buGr4HHXW+rvAC2/jWBgw7h2DFNrC1HlLxaLfJXlQMPXbxggaISYJ1IdUaBovikAukmzAiuyDUkkKYHnmgILBLpSHoXJOBjHYJPA+Jkj1p84ogYtN3JhQSSL2xTh6xQlOCUH85gmHvVyNF8CmGKqGRdsr02zrTqBXD/yYAGY8EM79eBLtI0uCSLQ9ZeumRa6SDXR+EfWO5eb/tsQP+/dsoF1bLdQQEU8PMQVhX8Q3la7fgvm+6Bbj0HfzIPUdosLHac2iV3riuR563fHFK1ybxcc1Q3yXfOz4Mkq8TmguyP76Fr3nr8/BzCbxHzj/VaSg/lyeEmPx/RShGbBpWJsnqAIskno0EoxIToZ4R4GxN0E8SMuekf9yfNd/owvTbaBnuDv2cctU74sf/AQ0SEqHiIybvn8p6+cJ5c4bwnMk69kHQ+/VwrEf33SWG2r0MPiCf7Jwtj+Xa4vbD34wXEWA8wNnGJVMM/TN01hhdisi4dYGD8a/8rAV86fhfck37EkuJvWaQK/3ykX0+mtYlpWmAaJLFQugseJecGZnCLY/q30h5kL9/sg8zn6lswvlKGOZ5dvVu667v9WrrmXdrEgPoXcC5a3So7fpdh54DxM6A+AXw5pUuz8bUg/R/L+h/hPyUNOP38P7/8C</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E26A4604E1520139E0401F0A05990BBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E26A4604E0EC0139E0401F0A05990BBB</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E26A4604E0EC0139E0401F0A05990BBB/User/urn:dece:userid:org:dece:E26A4604E1520139E0401F0A05990BBB/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/DECE/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE26A4604E1520139E0401F0A05990BBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE26A4604E0EC0139E0401F0A05990BBB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43c5dbf9-3574-4373-9d3f-f1b49a7247c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateGeoPrivacyAssent" searchProperties="true" id="1a42b403-fac9-4e9b-beba-08428b612d51"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="174b7fb0-e92b-4430-b380-65b78d267796"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:GeoPrivacyAssent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:GeoPrivacyAssent", "UTF-8"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="fbc2b81a-e09b-493f-9e0b-98b93436f1a0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateGeoPrivacyAssent" id="1b111f88-65cf-47ba-8825-c208a35c991f"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateGeoPrivacyAssent" mediaType="application/xml" postQueryString="false" accept="" id="5e2f2285-9c05-4e77-bfc2-02ef4ca1b73d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="0da370f9-2e95-41a0-b217-84235ace623a">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateGeoPrivacyAssent');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="ac10ce1e-5907-4a54-8d4c-09b53225b9cf">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlnoOTEC6JChKXMptOW2ih7SwvK9d2wDOJHWKHy/z6tUOTAqXdzkpIyCfH3/nOxZ99IWASu0FPCJJJypkRDjvmP7b/7LbquGE1mwhbHvIiy/cc14KEoDrEz57vQ9MIhchJyISETHZM13Y8y25aTntm+4HTDhrNml9vz03jkWRCQSuXmm0a2yRmIijCdsw8YwGHgoqAwYSIQKJg2ru5DpRnAEtOZvdiz7IImHWXUqYBAKiGCSJxjGqIJ+ACHPlcYBFM6YJBmWfkJSYWHfNl72azqW3qNZ4tgGvbNrB9oHywoIuvZvdLuZngkEV8vx5AxhlFMKa/oSZ1Q+SSY6MXL3hG5TJ5B9oBjq2hLbJFFnI89tUErwEKdp9EOiKZCWiJJXRKsHsSkYwwRIyH+7Bjfv1cB/d7ZxlkIuJZIk7Wf0aJsDWJeUqwJcrMSnafRzxTru4FQUHIUJwLuia3ekxSiIgwJhmJ6PaaCjV8WBhF+42tUD9aThlBf9KWC3DIVVEHZ6ozpAsi5P/p2WG/9iiPMM5J94Y/9tLZLZy5a8hQYza6jPLkaeRNL1GnoHDovCdVtftlfTqs1Wy9bLobr+4B6O0mV1ETgbvIcX5u8cCdDG7vJttmP2X1H/27+aWDLhO+3CXDsTPPh3nr29+9dCQWy6g9+CsfP7g2JkP+5c7DLliSyShpXA0I4INxc/D8azTBT+HcbYJvdj99vAK/QzdJL6PYjYdjDjf2z/r902rXboVy7iWt9oN99QNd4S9P8fdwvk2e8MMmm5PJCvVF5zWnwxyOjaUkTPPnnwTJcqnHIxwaI9UvKD+WF22h2IoK1yDVGiUkYdLs6l1aWoJcCRDFgWrmfj0aOL7v90b9huc36rZ/aXu2M7J7dsP33WZ9UGrQnsUJxQFnEdWxtMru5+djgigJBGGYZNaa52hJhPkB4hBKaITsXh0OzgSZcaXiv5/TphOt+S5p5w5eRfW1u9l4fj03jVsux2yc9SJJsiPpdtwj6b4niKaUaH3XAy7UhAuparGC61zGTm0Na4zk6gbItAgHrtduAEGTNCaaKUg4zmNSS5dpURkg9v9KhpAorFSglGcSxk5x/t5N7/RbWQnlg6l2EDqlPlHdJGeuIq/M5/28G4d5l/C9HFN9zFRZZUbRnsnxp9dp0WNSjUqVGBJOyb3a8ocQZwDAB/zAaWmqeHhND6KX16u6MZSedMv+rmBtVcvX67zoaEtrZabggZJMB0wJypXg7Wb8F2GgggCfum8q1ieRK/sxv1wu2VRCSRI1f0ax/MRjY0qEfmyE6uBsP/uSOQqp6ibJVp6zDWL1JtGMP3y2oABpP2WeqL8Nz/Bru85gHcRReaoXhqRsoVf6Ztm9MxuIK1iqpJBnh+DnAM4FPzZWRa64SDVNz7kk738xtMZ1TIgQz5kMh2ZhONTdgqfcpSR4dXoDU2j7y2W9Fe9e1j9urqdKARNoVr70v50tWowLIqZ+ExRcOuZWvT1VcLY40PkXgm+lvu8M6z2/3Ru5ldS3fN8ZNltVAY8y6b4xv7Uc1PT0PHT/BQ==</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4DAFF5120AEA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:FC1999B1D3A98AF2E0401F0A07991D67/User/urn:dece:userid:org:dece:FC1999B2B98B496AE0401F0A05992648/Policy/urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">/opt/dece/certs/iscportal1_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B98B496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D3A98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4DAFF51203BA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>FC1999B2B98B496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>FC1999AFB5495309E0401F0A0599263C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6f62f720-8990-433e-b87f-e5bfb4b7fa27</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_UserStatus" searchProperties="true" id="8b84599f-9011-4a1a-a266-93bd146fbbc4"><con:settings/><con:testStep type="groovy" name="Update_User_Status" id="ee2c5cac-e5e6-47bc-b77b-dbc873851658"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def userID = context.expand( '${#TestCase#User_OID}' )

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);

String sql = """update ACCOUNT_USER set STATUS = '$status' where USER_OID =  hextoraw('$userID')""";

log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B1D2CF8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00029_UserGet_CS_FUNC_CLG_Get_CHILD_Active_and_Deleted_CLG_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>02.User_Get_CS_GeoProfile</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130917_070832</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_AccStatus" searchProperties="true" id="80487ede-aacb-4a03-9614-e48d276255d6"><con:settings/><con:testStep type="groovy" name="Update_AccStatus" id="286aed4e-3fe6-4a10-b978-3c11f00e501b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def status = context.expand( '${#TestCase#Status}' )
def accountID = context.expand( '${#TestCase#account_oid}' )

a = new dbUtils.dbAccount(log,context.expand( '${#Project#targetSystem}' ));

assert a.accountSetStatus(accountID,status) == 1;

</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>mergedeleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00040_UserGet_FUNC_SPLCS_Get_AccStatus_Mergedeleted_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>08.Functional_UserGet_SPLCS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_Policy_Status" searchProperties="true" id="0fe6ceb2-bf24-4dc3-a614-abc94dd19143"><con:settings/><con:testStep type="groovy" name="Update_Policy_Status" id="ef24890a-e6af-4f4c-b836-7f45a6f14148"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def policyclass = context.expand( '${#TestCase#Policy}' )
def username = context.expand( '${#TestCase#Username}' )

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);


//String sql = """update POLICY set STATUS = '$status' where CREATED_BY = hextoraw('$userID') and POLICY_CLASS = '$Policy'""";


String sql = """update policy set status = '$status' where status = 'active' and policy_oid in (select policy_oid from policy_relationship where policy_actor in 
((select user_oid from account_user where lower(username) = lower('$username')),
(select account_oid from account_user where lower(username) = lower('$username')))) and policy_class='$policyclass'"""



log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);






</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E67B0B0EA6B4A35AE0401F0A059938AF</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00016_UserGet_FUNC_SPLCS_No_ManageUserConsent_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>08.Functional_UserGet_SPLCS</con:value></con:property><con:property><con:name>Policy</con:name><con:value>200</con:value></con:property><con:property><con:name>username</con:name><con:value>usercreate20131010_06322</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RenameTCs" searchProperties="true" id="9dedc8c4-1bc7-4f3d-90f8-76fc1c3bb757"><con:settings/><con:testStep type="groovy" name="Rename" id="d14c5b99-e546-47d5-aeda-6f18c3a92672"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "23.User_Get_CS_Geopolicy_Portal_US";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\ralluri\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Get_Responses" id="ff34e0f9-926b-4c85-835e-628360ee77f2"><con:settings/><con:config><script>import java.io.*;

//def commonTestStep = "User_Delete_API";

def testCase  = testRunner.getTestCase();
def TSList = testRunner.testCase.testSuite.project.getTestSuiteList();
def TSCount = testRunner.testCase.testSuite.project.getTestSuiteCount();

//def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
//def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();


log.info "TS List:"+TSList[0].name;

//log.info "TCCount:"+TCCount;

for(k in (0..TSCount-1))
      {
            def testSuite = TSList[k].name;
            def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
            def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
            log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;
            log.info "TSList[k].disabled " + TSList[k].disabled 
            
            if ((TSList[k].disabled).toString() != "true")
            {                              
                  for(i in (0..TCCount-1))                                                                  
				{                                                                                         
                  	try {
                        		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
						def targetStep = targetTestCase.getTestStepByName(commonTestStep);
						log.info  testSuite + " " + targetTestCase.name+" "+targetStep.getPropertyValue("ResponseType");         
                  		}
                  	catch(Throwable e) {
                        log.info "Exception : " + e;
                        }                                                                              
                   }                              
            }
      }
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserDelete_DB_Validation" searchProperties="true" id="04c62a5f-b87c-4edf-81e6-67cf45583012"><con:settings/><con:testStep type="groovy" name="SAML_HISTORY_STATUS_Validate" id="43264148-ca42-4ec1-b4f7-f40d0e3955b3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' )
def status = context.expand( '${#TestCase#Status}' )

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseTypeUserDelete",callTC.getPropertyValue("ResponseTypeUserDelete"));

def responseType = tC.getPropertyValue("ResponseTypeUserDelete");

log.info "Response Type is:  ----> "+ responseType;


if (responseType == "SUCCESS")
	{              
		a = new dbUtils.dbUtils(log,dbHost);
		b = new dbUtils.dbUser(log,dbHost);

			String sql = """select accUsr.status USER_STATUS, usrHstry.status USER_HISTORY_STATUS, 
			usrSAMLAssrt.status USER_SAML_STATUS, usrHstry.DESCRIPTION 
			FROM ACCOUNT_USER accUsr INNER JOIN USER_STATUS_HISTORY usrHstry
			ON accUsr.user_oid = '$userID' and usrHstry.status='deleted'
			and accUsr.user_oid = usrHstry.user_oid INNER JOIN NODE_USER ndUsr
			ON accUsr.user_oid=ndUsr.user_oid INNER JOIN node_user_saml_assertion usrSAMLAssrt
			ON ndUsr.row_oid = usrSAMLAssrt.node_user_id""";
			
			log.info sql;
			
			results = a.SelectFromDB(sql,dbHost);

		//b.dbConnClose();
		assert results.length() > 0;
		log.info "results" + results;
		
		def myXML = new XmlSlurper().parseText(results);   
		def i = 0;

		for (i;i&lt;=myXML.ResultSet.Row.size()-1;i++)
			{  
				if (myXML != null) 
				{
					log.info "User Status from ACCOUNT_USER table is -----      " + myXML.ResultSet.Row.USER_STATUS[0].text();
					assert myXML.ResultSet.Row.USER_STATUS[0].text() == context.expand( '${#TestCase#Status}' );

					if(context.expand( '${#TestCase#Status}')=='deleted')
						{
							assert myXML.ResultSet.Row.DESCRIPTION[0].text() == "User Deleted" ;
							assert myXML.ResultSet.Row.USER_HISTORY_STATUS[0].text() == context.expand( '${#TestCase#Status}') ;
							assert myXML.ResultSet.Row.USER_SAML_STATUS[0].text() == context.expand( '${#TestCase#Status}') ;
							log.info "Description from USER_STATUS_HISTORY is -----     " + myXML.ResultSet.Row.DESCRIPTION[0].text();
							log.info "User status from USER_STATUS_HISTORY is -----     " + myXML.ResultSet.Row.USER_HISTORY_STATUS[0].text();
							log.info "SAML status from NODE_USER_SAML_ASSERTION is -----" + myXML.ResultSet.Row.USER_SAML_STATUS[0].text();                                                   
						}
					else
					{
						assert myXML.ResultSet.Row.USER_SAML_STATUS[0].text() == "active" ;
					}
					log.info "User DB Validations Passed"; 
				}
				
				else 
				{
					assert XMLbody == "";
				}          
			}
	}
else
	{
		log.info "DB Validations skipped due to non SUCCESS scenario";
	}

</script></con:config></con:testStep><con:properties><con:property><con:name>dbxmlresponse</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>Node_User_ID</con:name><con:value>E52C7ACD89FC834FE0401F0A07991922</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>91160</con:value></con:property><con:property><con:name>User_OID</con:name><con:value>E52C7ACD89FD834FE0401F0A07991922</con:value></con:property><con:property><con:name>dbxmlresponse_rowOID</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <NODE_USER_SAML_UUID>_77a2a0ff-dba8-4c48-bd90-b725d6ece88e</NODE_USER_SAML_UUID>
    </Row>
    <Row rowNumber='2'>
      <NODE_USER_SAML_UUID>_77a2a0ff-dba8-4c48-bd90-b725d6ece88e</NODE_USER_SAML_UUID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00038_UserDelete_FUNC_CS_Basic_Delete_Full_200_OK_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Delete_Access_Portal_CS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters><con:property><con:name>ACCID</con:name><con:value/></con:property></con:reportParameters></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_User_CLG_Details" searchProperties="true" id="d2b2d499-5c24-479e-9969-404560acf0db"><con:settings/><con:testStep type="groovy" name="Update_User_CLG_Details" id="42761753-84b9-4884-84dd-cf2daa23e924"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );

def nodeuserID = context.expand('${#TestCase#UserID}' );
def clguserID = context.expand('${#TestCase#CLGUserID}' );


a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

//log.info b.userGetfromNodeUserId(nodeuserID);

if(context.expand( '${#TestCase#Action}' ) == "addclg")
{
sql = """DECLARE
BEGIN
insert into USER_LEGAL_GUARDIAN values(sys_guid(),
'$nodeuserID',
'$clguserID',
'"""+context.expand('${#TestCase#CLGAttestationStatus}' )+"""',
sysdate,
null,
null);
commit;
END;""";
}
else
if(context.expand( '${#TestCase#Action}' ) == "removeclg")
{
sql = """delete from USER_LEGAL_GUARDIAN where USER_OID = '$nodeuserID'""";
}

a.dbConnExecuteUpdate(sql,dbHost);

</script></con:config></con:testStep><con:properties><con:property><con:name>Action</con:name><con:value>addclg</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>UserID</con:name><con:value>E4890111840E60DCE0401F0A05993DE1</con:value></con:property><con:property><con:name>CLGAttestationStatus</con:name><con:value>pending</con:value></con:property><con:property><con:name>CLGUserID</con:name><con:value>E488FA3B9A214958E0401F0A05993DE5</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>91162</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00002_US_UserDelete_FUNC_Pending_CLG_Delete_Self_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Delete_GeoProfile</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_DB_Validation" searchProperties="true" id="c4b23f47-43c5-4476-ac81-eaa1b66c5619"><con:settings/><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d7765da1-c221-46a8-b0ee-4ada2ad4098a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("ADULT_DOB_XML",callTC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("YOUTH_DOB_XML",callTC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("CHILD_DOB_XML",callTC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("ResponseTypeUserCreate",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("GeoProfile",callTC.getPropertyValue("GeoProfile"));
tC.setPropertyValue("role",callTS.getPropertyValue("role"));

tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="905a471f-8ed2-4e00-bb35-def1ed06044c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

tC.setPropertyValue("IsMinor","");
tC.setPropertyValue("Requestee","");

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");

def BirthDate = context.expand( '${#TestCase#DateOfBirth}' );
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

			
log.info "Response Type is:  ----> "+ responseType;

def cHILD_DOB_XML = context.expand( '${#TestCase#CHILD_DOB_XML}' )
def aDULT_DOB_XML = context.expand( '${#TestCase#ADULT_DOB_XML}' )
def yOUTH_DOB_XML = context.expand( '${#TestCase#YOUTH_DOB_XML}' )

def dateOfBirth = context.expand( '${#TestCase#DateOfBirth}' )
def privilege = context.expand( '${#TestCase#Privilege}' )


if (responseType == "SUCCESS")
     {
		Result = b.userGetRow(userID);
	
		log.info "Result Set:   " + Result		
		myXML1 = new XmlSlurper().parseText(Result);		
		log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
		assert myXML1.ResultSet.Row.size() == 1;       	
		assert myXML1.ResultSet.Row.STATUS == 'blocked:tou';
		log.info "privelege ;; " + myXML1.ResultSet.Row.PRIVILEGE;
		assert myXML1.ResultSet.Row.PRIVILEGE == tC.getPropertyValue("Privilege");
		assert myXML1.ResultSet.Row.USERNAME == tC.getPropertyValue("UserName");
		assert myXML1.ResultSet.Row.GIVEN_NAME == tC.getPropertyValue("GivenName");
		assert myXML1.ResultSet.Row.SURNAME == tC.getPropertyValue("SurName") ;
		assert myXML1.ResultSet.Row.PRIMARY_EMAIL == tC.getPropertyValue("PrimaryEmail") ;
		assert myXML1.ResultSet.Row.TELEPHONE == tC.getPropertyValue("TelephoneNumber") ;
		assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == tC.getPropertyValue("MobileTelephoneNumber") ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#CHILD_DOB_XML}' ))
        { 
			log.info "I am CHILD";
			tC.setPropertyValue("Requestee","CHILD");
			
			BirthDate = tC.getPropertyValue("CHILD_DOB_XML");
			assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';
			
			tC.setPropertyValue("IsMinor","true");
			
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
		else 
		if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#YOUTH_DOB_XML}' ))
        {
			log.info "I am YOUTH";
			tC.setPropertyValue("Requestee","YOUTH");
			
			BirthDate = tC.getPropertyValue("YOUTH_DOB_XML");
			assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';
			
			tC.setPropertyValue("IsMinor","true");
			
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
         } 
        else 
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#ADULT_DOB_XML}' ))
        {
			log.info "I am ADULT";
			tC.setPropertyValue("Requestee","ADULT");
			
			BirthDate = tC.getPropertyValue("ADULT_DOB_XML");
			
			assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';
			
			tC.setPropertyValue("IsMinor","false");
  /*        
         if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
   */        
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

//         int lastspace = bdaystring.lastIndexOf(' ');
//
//         finalbday = bdaystring.substring(0,lastspace);
//          
//         log.info "Birth Day:  " + finalbday;
//       
        assert bdaystring == "null";

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}');

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User ACCOUNT_USER table Validations Passed";
               
   }// end if for success response check
  else
  { 
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  	testRunner.gotoStepByName("End_Of_DB_Validations");
  }
  
   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="61de2218-ee4f-4d5f-926c-bcc644a7096e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");
def geoProfile = context.expand( '${#Project#GeoProfile}' )


def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

def role = tC.getPropertyValue("role");

log.info "Role : --- " + role;

//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = hextoraw('$userID')""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

//log.info results;

/*
*  If zero length, no need to continue;
*/
  assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (responseType == "SUCCESS")
{
	assert myXML.ResultSet.Row.size() > 0;

// Modified to comply with Generic Portal
//    if(context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:portal' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:portal:customersupport' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:dece:customersupport' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:coordinator:customersupport')

	if( role ==  'urn:dece:role:dece:customersupport' || role == 'urn:dece:role:coordinator:customersupport')
     { 	
       assert myXML.ResultSet.Row.size() == 4;	 
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";	    
     }
     else
     { 
       assert myXML.ResultSet.Row.size() > 4;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 		 
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="b9a42099-64d8-4587-bbc7-84ffda178a7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");
def geoProfile = context.expand( '${#Project#GeoProfile}' )


def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

def role = tC.getPropertyValue("role");

		String sql = """select POLICY_CLASS,STATUS,RESOURCE_ID from POLICY P,POLICY_RELATIONSHIP PR,POLICY_RESOURCE PRE where PR.POLICY_ACTOR = hextoraw('$userID')
		and P.POLICY_OID = PR.POLICY_OID and PR.POLICY_OID = PRE.POLICY_OID(+) ORDER BY POLICY_CLASS""";


		this.log.info "Query is:  " + sql;
		results = a.SelectFromDB(sql,dbHost);
		
		log.info "Policies Results : " + results;
		/*
		*  If zero length, no need to continue;
		*/
		assert results.length() > 0;
		
		def myXML = new XmlSlurper().parseText(results);
		
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		
		assert myXML.ResultSet.Row.size() > 0;

		//if( (context.expand( '${#TestCase#IsMinor}')=="true") &amp;&amp; (context.expand( '${#Project#AgeClass}')=="YOUTH") ) 

		if (context.expand( '${#TestCase#IsMinor}')=="true") 
			{
				if((geoProfile == "US")|| (geoProfile == "CA"))
					{
						assert myXML.ResultSet.Row[0].POLICY_CLASS == "302";  
						//      assert myXML.ResultSet.Row[0].RESOURCE_ID == "us:riaa:prohibitexplicitlyrics";  
						assert myXML.ResultSet.Row[0].RESOURCE_ID == "US:RIAA:PROHIBITEXPLICITLYRICS"; 
					}
				else if ((geoProfile == "GB") || (geoProfile == "AU") || (geoProfile == "NZ") || (geoProfile == "IE") || (geoProfile == "AT") || (geoProfile == "CH") || (geoProfile == "DE") || (geoProfile == "FR"))
					{
						assert myXML.ResultSet.Row[0].POLICY_CLASS == "300"; 

						assert myXML.ResultSet.Row[1].POLICY_CLASS == "302";  
						//      assert myXML.ResultSet.Row[1].RESOURCE_ID == "us:riaa:prohibitexplicitlyrics";  
						assert myXML.ResultSet.Row[1].RESOURCE_ID == "US:RIAA:PROHIBITEXPLICITLYRICS"; 
					} 
			} 
		else
			{
				assert myXML.ResultSet.Row[0].POLICY_CLASS == "304";
			}


log.info "Policy Validation Passed";	


</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="e4cb6286-914a-4447-a90f-e70e1ba8e53b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if ((context.expand( '${#TestCase#IsMinor}' )=="true") &amp;&amp; context.expand( '${#Testcase#Requestee}')=="CHILD")
	{
	  	def dbHost = context.expand( '${#Project#targetSystem}' );
		def userID = context.expand( '${#TestCase#User_OID}' );
	  	def node_OID = context.expand( '${#Project#Node_OID}' );

		a = new dbUtils.dbUtils(log,dbHost);
		b = new dbUtils.dbUser(log,dbHost);
		
		String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID = hextoraw('$userID')""";
		
		results = a.SelectFromDB(sql,dbHost);
		
		/*
		*  If zero length, no need to continue;
		*/
		assert results.length() > 0;
		
		def myXML = new XmlSlurper().parseText(results);
		
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		
		assert myXML.ResultSet.Row.size() > 0;
		
		assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  
		
		log.info "Legal Guardian Validation Passed";	
	}
else
	{
		log.info "No Legal Guardian Validation Required";
	}
</script></con:config></con:testStep><con:testStep type="groovy" name="End_Of_DB_Validations" id="418d894c-0d5e-41ce-af71-087c1cf97b82"><con:settings/><con:config><script>

log.info "DB Validations Complete";</script></con:config></con:testStep><con:properties><con:property><con:name>ADULT_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>attested</con:name><con:value/></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2002-09-08</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>IsMinor</con:name><con:value>true</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Node_User_ID</con:name><con:value>E60068AEF0205738E0401F0A07990D3F</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90508</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>Role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_GeoProfile</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Status</con:name><con:value>FAIL</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00021_UserCreate_AUTH_Creator_ADULT_Full_New_YOUTH_Standard_201_CREATED_P1</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>User_OID</con:name><con:value>E60068AEF0215738E0401F0A07990D3F</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1999-09-14</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>GeoProfile</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters><con:property><con:name>ACCID</con:name><con:value/></con:property></con:reportParameters><con:breakPoints><con:testStepId>d7765da1-c221-46a8-b0ee-4ada2ad4098a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>418d894c-0d5e-41ce-af71-087c1cf97b82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="First_User_Create" id="faf0828b-09d4-4866-8888-0fb874f9f0bc" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Create_Firsrt_User_Create_STS_Policies" searchProperties="true" id="bf6be7d4-9561-4c60-9314-ec69bcea736d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f05e0c99-e0d5-45df-a3a3-69bdd405b626"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tS.getPropertyValue("nodeid"));




</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="28ed9b37-084f-4831-b552-7c14e9b69fae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usergetr4_firstuser"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="3d0d62cc-b213-4ff3-be3f-4038f3707972"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API for First User" id="3b874b58-6c8d-42dd-8a2c-67f8b6da667b">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="34403635-e9ff-4344-a9aa-b11daaca29e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="1ea2b903-e310-42db-9c4e-5ddf13377436"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>accountname</con:name><con:value>ug_111_accname_20150520_0512591432122179962</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usergetr4_firstuser20150609_0305181433842518001</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usergetr4_firstuser20150609_0305181433842518001</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usergetr4_firstuser20150609_0305181433842518001</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>181324EB05264186E0533D991F0ACB06</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>181324EB051E4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value>_6a485a99-bcf3-43eb-a72b-3794ca0f6935</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_6a485a99-bcf3-43eb-a72b-3794ca0f6935</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXyDAK5AFYEk4xrCZEPI7WVLyG1QYkuOJBvI149kwAEGssw+udRunT590ZHOBUpi1+8KAVwSRiuLJKbCL6xtI+PUZ0gQ4VOUgPAl9kfdm4HvVm0fbbYYlaDfNv49Q7VmHbVa5gRHnlnzYGKihjsxvUarhpEdnbW8unIVIoOAComobBuu7dRN+8y0W/d2y/dc36lXz5zWi1F5AC4UtnKp2saa1EK0jZmUqW9Z8/m8OveqjE8t17Yd6+lmMMIzSJDROV9lVATinbU/roaAIY5xFbPEOrd2fM5D4Y/IlCKZcVjHCo/Fsi27ZSmfUJDpN6PcC2FAI1Yse4gySjCKyQfS9bkBOWNhpRtPGSdylhxNwrE1sAkLbGKnRr8Z1i61E4F2GHKBTDFDzhrrDiLgQDFUxndB2/h2WteKrfccURExnojd5d/xAZpDzFIITbFJa03tdMADleqcA/YDiuNMkByGelhThEGsuwn4dKjKLYeILAZEqAFdCM3O2qa3t1xVo0+mIOT/adBWc1YgDyjOoDOgacaEtbyts0kePD734rEYD6z8SfzTLghsOxeGsrWr5d5QlkO02pHFDF02Hr878ctdeC35+1PqOE2aRV3E5NUoDwaYNxm/uY6bL8/3yeuPx4A2WJTP6jD0nHpz0rta/syHy9ZF8PHm/nyL4T58HC5cD568t+h1/HzdrU9+Tq7H8x8CT+ez29tLHgv3e/32siuHyzh+eV0OcAS4OZ7O7qwfyUsDz94/7IZ8zK/d5/fLp2F37FkP8nWd7h7/XdvmzI+yyStguVnqMQj6lSvVJSS/FjNtIaEZFa5+qsVHSKDS6OhdWjv8TMkdCX3Vw9XaaTqeW7u8sOtOv+Y0zy7tuuf1Wy3nyu72LuyzjcisWOxR7DEaER1LS+5qbL4miBNfAA2BmznLlNIJ4wvEPpKoEtA7dQgYFXDPlDw7YYMx1kAciUk4nzdTL0wiRCQYlSGTv+gv3o0k8B1NdtwdTb4DTFICWrj1XAs12EKqWryjPJOxU81RlUKmpJ1rlfVdpSyWIEkag2ZqJSzMYqims7SojCVWX9dEWBRWInDKuERxcSCso+nt/9tUQvmERDsIndIFqG7CgTvG3uRzPO/6dt4b+G4WEn2+VFklJ3jFZPfX57ToMSlHpUwMC2fDvdzylxAHAKwv+Fn7pSnjhTnZir65zNW1oISks+nvO3Kq79Usz7OipbWaZ3EFbynddKwR4Ezp3PKevQG1SgjrpEulZL0XubTv8svkjI4kkpCo+asUyxNeESMQ+hURqIOzOPWJshNS1U3CQh6y9WL1AtKMv3wkYR9rP2W+VZ854+Fnuw5gbcVReapHhCR0qlf6QlkemQ3MFCxRUsj4NvghgEPBd41lkUsuUk3TJJNw/E9Fa1zbQBizjMqgbxSGbd0teMplCv6n0x8whbSXbz3y3489kxQjgJWGKf8CX1/Zvp5/Ot3S7nXQI/Ld+0q+d9l1/jD/admq0/6Md34D</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXyDAK5AFYEk4xrCZEPI7WVLyG1QYkuOJBvI149kwAEGssw+udRunT590ZHOBUpi1+8KAVwSRiuLJKbCL6xtI+PUZ0gQ4VOUgPAl9kfdm4HvVm0fbbYYlaDfNv49Q7VmHbVa5gRHnlnzYGKihjsxvUarhpEdnbW8unIVIoOAComobBuu7dRN+8y0W/d2y/dc36lXz5zWi1F5AC4UtnKp2saa1EK0jZmUqW9Z8/m8OveqjE8t17Yd6+lmMMIzSJDROV9lVATinbU/roaAIY5xFbPEOrd2fM5D4Y/IlCKZcVjHCo/Fsi27ZSmfUJDpN6PcC2FAI1Yse4gySjCKyQfS9bkBOWNhpRtPGSdylhxNwrE1sAkLbGKnRr8Z1i61E4F2GHKBTDFDzhrrDiLgQDFUxndB2/h2WteKrfccURExnojd5d/xAZpDzFIITbFJa03tdMADleqcA/YDiuNMkByGelhThEGsuwn4dKjKLYeILAZEqAFdCM3O2qa3t1xVo0+mIOT/adBWc1YgDyjOoDOgacaEtbyts0kePD734rEYD6z8SfzTLghsOxeGsrWr5d5QlkO02pHFDF02Hr878ctdeC35+1PqOE2aRV3E5NUoDwaYNxm/uY6bL8/3yeuPx4A2WJTP6jD0nHpz0rta/syHy9ZF8PHm/nyL4T58HC5cD568t+h1/HzdrU9+Tq7H8x8CT+ez29tLHgv3e/32siuHyzh+eV0OcAS4OZ7O7qwfyUsDz94/7IZ8zK/d5/fLp2F37FkP8nWd7h7/XdvmzI+yyStguVnqMQj6lSvVJSS/FjNtIaEZFa5+qsVHSKDS6OhdWjv8TMkdCX3Vw9XaaTqeW7u8sOtOv+Y0zy7tuuf1Wy3nyu72LuyzjcisWOxR7DEaER1LS+5qbL4miBNfAA2BmznLlNIJ4wvEPpKoEtA7dQgYFXDPlDw7YYMx1kAciUk4nzdTL0wiRCQYlSGTv+gv3o0k8B1NdtwdTb4DTFICWrj1XAs12EKqWryjPJOxU81RlUKmpJ1rlfVdpSyWIEkag2ZqJSzMYqims7SojCVWX9dEWBRWInDKuERxcSCso+nt/9tUQvmERDsIndIFqG7CgTvG3uRzPO/6dt4b+G4WEn2+VFklJ3jFZPfX57ToMSlHpUwMC2fDvdzylxAHAKwv+Fn7pSnjhTnZir65zNW1oISks+nvO3Kq79Usz7OipbWaZ3EFbynddKwR4Ezp3PKevQG1SgjrpEulZL0XubTv8svkjI4kkpCo+asUyxNeESMQ+hURqIOzOPWJshNS1U3CQh6y9WL1AtKMv3wkYR9rP2W+VZ854+Fnuw5gbcVReapHhCR0qlf6QlkemQ3MFCxRUsj4NvghgEPBd41lkUsuUk3TJJNw/E9Fa1zbQBizjMqgbxSGbd0teMplCv6n0x8whbSXbz3y3489kxQjgJWGKf8CX1/Zvp5/Ot3S7nXQI/Ld+0q+d9l1/jD/admq0/6Md34D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>01.User_Get_GeoProfile</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8AAZTSapkbMCAATPDyykjywN4wvIEX39kCGzITvbNuU+gVqt79eDW0ivWXIdtAYxRGNm+V5TFt9I/1Z2x46pNpsLp9XqlVq3ylV2TNyqI5njIQq5hQK1UlDGOkezhSPOitxJLM9UKzVcYek5zrTrfqjEvPMdsS8UlCjExTVRe6FIxcx0Pty5u30px6LV8Ddu45Wkuwq0ItmZAGbaIZku7YSq9v15RXhyG71YUBS2Kgi86gshx4Av0XeqVetJ51XFrZpueFsUh+vCp47fSx9k0TV/S6osfmhRL0zRF8xTR0bFt/iq9F26HkS57hn9dtzXP92yoOfZZy0EpKLJ8vQgc0w/tyHK/Mc1QDJ2brqAMViBT836VqN8OLuh+aOkJZIi1CrY05mZsigwUIg+i4mIqv5V+/ayC17PzUPOw4Ycu/rT+b5CQlyDHD5BewbfIbuh+bvGLdL2/ItiSPejE2E7QKG+TQIMIFychMuxsaGPSfDouXspfzPCtwxD8LyV5pR5xEtjUF5kRbRPh6P+p12OtrlaWmhOjd04ZCAfbU/dh2jcbYwuKZnBuyo1OffF2gfCofAV1L/XH+nOj3vvq49A4MHWLbaJqd7VXzzjuiSnf1J14aXnU6dDGXWFprSbChufpbS+pdSh7HVOy16e5pl12OxPT3525xEwGCFAFah/1FlEj2gLUHu/OCVOfHqaTU+fsZv6i6+9Mvxw2Tg05LCfUcLG0rIYv+gdmPDpQS7WmT1ZZfcodzLOaWnphMpa9zbgmzI7hyVdN97jevP2O6TGGPK4BOl2CzP+v6zQvapF2X7TzSWGQzzNC74ost8tiu00gmiCVBWDKwvAMRoJ5OFoHu8untADURQeI4KRMQSqaG3GpqgMp1ZdLZ7uUOx1BmdbSHtiIBbIhStlS3K77tLbaBhu2Q29ngqCvp/6u2g/03iHtWXCkzJV0NJdPyl7KRnOJXl1kZkbWZ2WvMOP5olpY7QVemUqpmF48ilJqjbarabBZ8Ck8S6oCal3ALKS2pfTm7pKB1akF99JQAYeLXLCU9nKpZNIcTAqCOVqS2ObtzjaArh7sXMd6MN4jxud6d3nadZ14e5b2SlvqtmfH7kzeVUVV6oPpZrFbLQ/aqpMUYG8EdjePdt3W1n5qbpupqG76A38rWwkcAVUSBBWQdNFAkbt94HcFoNSAnZ3be4Hz23onpfosLpR5p8utT/ZxjbUu7WhMs8lshitucuREyStvB/FubynWujMuD2Z6suAj/rzBSTnhNJuBWWCoa6kXDTKjp84Ku4mYrWGvrJt9yjnznVBp9EF4PlmOYk6jFTfGp51tGCthPa45DcNRqtPAcIzghMtzXz2ENCegKkttTskgKgBTEQDo7hd7QVWEZp5UXU7VjSJooCNFMTjv2WjALo/9XuLATRX42WA13h8+CqOLqSRQqSqRtpIKTRHoeRF6s4XU2YOFYJqhYEodQYUiUDfyIN2QfC16RPlzHjuXPJqSAKTqFnB8r1Bd0Hw0jma1Gjh5wsLr8JZyzFY659KNI5KGs1FQSxU8Mrztyj8orh0uwni2GAxGw2w3j7uHPZlVBj0bJNVtQUoOAbBHg7l1EH1RmwSbTRSUPRjCSA5cRc7O4y3eN+2dS/fLdUaY0CJssAt3ly66mrQdhOaMGfSm3qTa4As4Nk49t7xvpqvyfMYFDb3tGeLpRG3DJe0Dv8NP60c9Y9mDtUiHXGr0wWGnsaPM4YUTLw22c5hO1cFq5pbrhXoyHLr0eU7VRsE4nXXTmqSq5aouzHtzHIT2Jm6aWTj2dHajRVyypZecHTgHno0P81pQXZouKdYk0YOGMimotTXcumYjgH1qSiVAahhDuXvanbVz4I7hdYB+ng534XV+UI+T5Wn03EjHjHQrgtFtmV9AsljskFtBi/5OYHKJrVeMi2oryFkQjpAXld7zUzl5acWE4th6i1wZ17XE0VVaaHIMXRdolpEkukYzHRrQDZ5nJV66sZwrik8Q275n2LmvnMddb6m/A4RuCyNPR2El8WNoIVz6i8U8X0XZm5Lr1/cwmvuEJ9brosSwHAeabUB3hIbQZGjQEQRQFSW6Dtql4siPxt44BEaEwmeOyD9xxCmCdmCjnEjmtykm1ymOSEqOWhJHDvOSaC8eignVDHO212JrzTqFbTdwUA6Ycn09dtBLYAWXBFH4+stWNIgv0qk0/0eetS83/bchft67ZYPo6HaugPN4BEQqir4gvNVbMN8GzbCPQd/Mg1i38wudpDYKbXhF8rz1u2PyVrm3C4nqBvmu+VnwZJX6HNDdkZ7Y8N7z9+cAYZOEb7zfSnLUXo4vcZLElyI0ci4VEvMUQ9ENaoZgTAjRae4fkEfdTVA/4qJ31J883+XP+OLI8mYR+Z5d0jLFy/IHD5EZwvlDRCYtn/30lfPkkuQtQln0laztkPdKjvivTxrYgrkeEU/IT+qH+u9yfWHrwQ+JMx9gtmfmq5x5nr5pCugTszYZYn74aPwrA185fxbek3zHEpFu2sUR+n6nmE+nt5IGoR97kSyWLoLHiXnBGZ0C1Pqt9IeZC/f7IPMZ/pbMr5XhjMwuVyvdde3/rVyxL+0CETmF7QuWt1JG3qXEuWc+TOgPgH8MaZ4RaIETJEaq3Yd0nefrHMveE/gUyfsf4j8lDzn9/D28/ws=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="User_Create_API" id="5522fb32-17b7-45c1-a795-e58feee38270" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_STS_Policies" searchProperties="true" id="d4a22e7e-29ae-4d26-b76c-def0e45086de"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="27d7ed5d-3471-474a-90b0-bd0d0ce61dc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e4457366-ffe3-4c20-9707-5fb5d033e5ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
//tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="d0e0fe9f-2e79-4d9a-abdb-761a31e73101"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="28b2127f-2283-48a9-8372-3a8865a87347">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="3602bcde-7619-42f6-9872-4ce222ee944a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="21262521-c1ba-4ab5-962d-cbc40fb2da12"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-04-24</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_d6b3bef8-f624-4bb7-918d-477f8a754918</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_d6b3bef8-f624-4bb7-918d-477f8a754918</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-06-22</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E6078B27BD7C72E6E0401F0A059976B6</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMb5gbp7ADNhJSsMlBZK2eTkj5AUUbAks2UB+/ZEMuEBJDj1PHq1Xu9/ufvqkW46i0HZbnEMsCKOFTRRS7mbWhpbE1GWIE+5SFAF3BXZHrV7XtYumiw5btELHb2j/BJVJaQLTmj6t2I7uTCZVvW7VAt2pVqc1VC07ciVdOU+gQ7lAVDQ027TKulnRzfrYrLsl27VrxYpZf9UKLxBzGVu6FE1tD2rDG9pciKVrGOv1urguFVk8M2zTtIyfve4IzyFCWvN2V1GWKG7u/XExAAxhiIuYRcatceJzG3B3RGYUiSSGfa7go1ymYdYN6RNwMvui5Xsh6NApy5YeoowSjELyjlR/eiDmLCi0whmLiZhHHxZhmSqwDhusY8uhXzTjFNqVgU4QxhzpfI6sfawhTCEGiqHwPOw0tC/XTS3bOo4R5VMWR/x0+Xd4gKYQsiUEOj+UtYd2fcALnWreAnY7FIcJJyn0FVmXCAPfTxPw9aEKTzFMyaZLuCTohit0xjG8s+WuGz6ZARf/Z0BHw9kFeUFhAs2f3n3bKW3X77WF1f/ubxde+e3Ve614nV4jA3DsnBny0e6WZ6TMSbTbQUrQW9+Mvi5/OT+m4cvqITAfSC+l6NF+C2Fsv9eff63Dl+n8zVr11++LVdDDoZh5r4unakt4N2vbZs/hoEYHQ5L+8MykzxdvT/UtLr+wu2F3s7oB5+tjt3wzfBivB6+b1PnlV9tR/DZ8pH63xJ/Hmxnr3704gyjpbr1VvT7psujbQ2/wE/W/d9/99mDx7fsT8iRL83KO8J/aDmd+lEzeAIvDUtGg4xfu5ZSQ+FzMlIUE+jRzdZdKfLgAKrSm2qW0w02k3JHAlTPcra2aVbKq9Ur1ruK37Xv/ziyXSnf1unVvtny7ZR1EZofiDKLH6JSoXEpyd7T5HCCOXA40gFhPWSKVjmufRPSRQIUOHcpDwCiHMZPyPA2d+TZN3u2wRiy7FrI4LPF0i22t0GdiQAdxayogPtFkyz7R5CFgsiSghFvxmkticyF7sUJpIkKrmKIihURKe6xU1rWdWtngJFqGoJAaEQuSEIrL+TLrjMF3X1tHmGdWwvGSxQKF2YEwPizv/N+hE9InIMqBq5LaIKcJF+4Y61DPx3WXj+s+hG8lAVHnS7ZVxATvkJz++s0WRZOcKnlhmOe0yLf8ZYgLAYxP8BnnrcnzBSk5yn64zOW1IIWkeZjvClnFVTFJ0yQbqeOUjFiGN6RuWsYIcCJ1bjtmC6BGHsK46lLJUZ9lzu2n+BIxpyOBBESSf4VsecUrYgRcvSI68uBsrn2inKSUfROwEZdsXihfQArxp48k7GLlJ81P8rNmcfB7XBdiHeWRdcpHhCB0plbqQtl+wA3MZFgipZDFx8EvBbiU/NSYNznHIiSbJomAj/8UlMY1NIQxS6jo+FpmONbdDKfYLsH97fRHmEza87ce+e/Hnk4yCmCQL0ROsvjqynYV/+nsSLv3Sc/l23bu2mbZ8hyrVsnk29/Jt9c2K3lTTtA1/zD/aTnq0znHm/8C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVdpc6pKE/7ur7A8Hy3D5oaVpGpYVFQ0Ci745RYOA6JsMiDor7+DRo/Jycmb+1ZZhdP0dD+90PPMMzZ9j+0AjFGcuGFQVqSXyj8tdrOxbLZZa9Zpq1aHdb624Sy21m7V603YsK2N3a6UFYxTpAQ4MYPkpcLSDFejefLTmXaHa3Q4/olrsOtKeYFiTEwTlSe6Us59L8Cdi9uXShoHndDELu4Epo9wJ4EdDaijDtHsmDdMldfnK8qLw/h1myRRh6Lgk4Ug8jz4BEOfeqY+6DxbuKO5TmAmaYzefVr4pfK+N8uyp4x7CmOHYmmapmieIjoWdp1fldfSbTOylMAOr2vRDMLAhabnns0ClIqSbWiVgeeEsZts/b+YZiiGLkzXUA5rkKkHvyrUbwcXdD+09AFkjM0a3prMzdgM2ShGAUTl+Ux5qfz6WQWve/XYDLAdxj7+tP5vkFBwRF4YIauGb5Hd0P3c4hfpen1GsKME0Euxe0Tjok0iEyJcfouR7eYjF5Pms3D5Uv5yjm8dhuB/Kckz9YiTwKa+yIzkOggn/0+9Hmt1tbIwvRS9Ag6ON+ugTi9EhTmwSzzp9bZNenYUlZcLhEflK6h7qd/Xnxv13lfvm475xKCrvcHZaPQn8kCLm/1NbsSLbR+FAr1nTBnncQrF+WmS0nCUAGdXHXR7DS2o7jN7xfFyuNH93Kp6G780tTx+bMgwyVqWLslmMGxTjD8MrPF63RdpJs4X/nnmn2Z0Szb6PZTVR4YwXPSXs4bY0AR5vhrlGUttp0MMSv29L7BzBfYNyw0OLX/e3b/8jukxhiKuITpdgiz+rxo0L5mJeV+IxaSwyeeZoFdVUcSqJIoAiQ7IFAE4ijA6g7Hg7A/bvdvjM1oA03kXSOCkzkAmOYa0mE6HcmYtFt56oXS7gjqrZ31gSCXyQpLzhbReDWhzuY4MtkuvNUGwVrNwww0iq7/P+ls4VnU1G+vKSd3J+ViX6eVF5uRkfVZ3KjPR51xpuRN4dSZnUnbxKMnZdrxeziJjzmfwLE9VUO8BZi6LW7Wv+wsGcrMt3MkjFewvcmGriouFmss6eCsJznhBYtPF7jqCvhVtfG/7YLxPjOtWb3Ha9Lx0fZZ3qij3RO3Q05QNJ03lAZgZ881ysTeX3WMJ9sdgc/PoNlxzFWbOup1JU2MwDNfK9gjHYCoLwhSQdNFAVXoDEPYEoNaBm5/FndAMRaubUQMWl6q812uuTu5hhc0e7ZlMu80Yo2Xz7dCU5KC6Hqab3VbdrrqT6lCzjnM+4c8GPlaPTdNlYB7Z05XcT4a53Z9qpc2blK9gv2o5A8o7891YbQ1AfD5tPdWZJcvmBJ82rm0vhdWk7rVsT+Vmke3Z0QlX9XC6j+mmgDiWMk7HYVICjioA0NvNd8JUFdpFUi0lmxqqYIKunKTgvGOTIbs4DPpHDxocCPPhcrLbvxfGkjJZoLKpTNpKLrUlYBVF6GtzubsDc8FxYsGRu8IUSmBqKMPMIPma94ny5zx2L3l0ZAHI3Bo0+X6Jm9N8Mkm0eh2cAmEedPmtesiXVtOnWwckj7RxVM9UPLaD9TLcq74bz+NUmw+H41G+0dPefkdmlU1rwyO3LsnHfQTc8VDf7qVQMt8iw0iiagBjmCiRryr5ebLGu7a78elBtcEIb7QEW+zc32Tznimvh7GjMcP+LHjjWnwJp/ap71d37WxZ1bVm1LLEwJZOJ2odL+gQhF1+1jhYOcvut/Ns1MzsAdhvTHace7xw4uXhWofZbDpcan61UWocRyOfPutUfRxNMq2X1eXptMpZgt7XcRS7Rtp28ngSWKxhJs3jml403cjb82y61+sRt3B8Uqy3oxW11LfStL6Ca99pRXBAzagjkFv2SOmdNmfzHPkTeB2gn6fDXXidH9TjZPkwem6kQyPdimByWxYHkCKVu+RUMJPvCUwhca2afVHtRAULwgkKksprsasgL52UUBzX6pAj47qWG902DxiOFZtNtiG3ZLpOM10a0A2er8tC+8Zyrig+QRTDwHYLXwWPu55S3wOEfgejwEJx7RimcItw5RuLRb7KSjAjx28YYKSHhCdKPC1KDQDqtMixLE8DuS11G3W+LYBWl2aYSnkcJpNgEgM7QfEHjsgyHzjiDEE3clFBJIvTFJPjFCckJQfzmCYe83Q0nwKUEqoZF2yvw9bbDQq7fuShAjDlh1bqoadoG10SROHrk62ZEF+kM1n/R9HEy0n/1xA/v7tlg+hYbqGAi3gERCqKviC87C2Yr4NmaJ2mH4O+mQep5RYHOkltErvwiuTjq98dU7TKvV2KqETtH+aG+67+4+1/7qS+AUV9zsfdkXV0H9zemDsho4SuvN4qejCfDk/p8ZheatgqqFhMzFMMRbcoDcGU8KmTHu5RQN1NUD+isnfUnzzf5R/xpck20BIyDnzSceXL8gf3GA3h4h6jkC8m/+kl6YNLkrcE5clXMtEj150C8bc3ItiBhR4Rv5FHFsbW73J9YevBD4mzmH9u4BSrgrie/tIUMCRmXTIDw/jR+FcGvnL+UXhP8h1LQrppkybo72/KxXB7qZgQhmmQKFLlIngcuBecySlCnd9Kf5i5UMf3u0CO/3oXWKkjjYw+36zcdd3/rVxzL+0CEdmF3QuWl0pOrrXEeeA8DPh3gF/P+Ab33Yz/GMnrH+I/JQ85/fw9vP4L</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdpc6pKE/7ur7A8H62EzQ0rSdWwqKioCK5fbuEwIMomA4L++jto9JicnLy5b5WlTtPT/fRCzzMv2PQ9tg0wRnHihkFZkV4r/9A1zuabDeup2WjRT7VWvf5k0nSLfDUgzdW4eq1hVsoKxilSApyYQfJaYWmGe6J58jGYVptrtGn2mWly60p5jmJMTBOVZ7pSzn0vwO2L29dKGgft0MQubgemj3A7gW0dqMM20WybN0yVt5cryovD+G2bJFGbouCzhSDyPPgMQ596oT7ovFi4rbtOYCZpjN59Wvi18r43y7LnjHsOY4diaZqmaJ4iOhZ2nV+Vt9JtM7KUwA6va9EMwsCFpueezQKUipJtaJWB54Sxm2z9v5hmKIYuTD+hHD5Bphb8qlC/HVzQ/dDSB5AxNp/w1mRuxqbIRjEKICrPpspr5dfPKnjda8RmgO0w9vGn9X+DhIIj8sIIWU/4FtkN3c8tfpGutxcE20oAvRS7RzQq2iQyIcLlSYxsNx+6mDSfhcuX8pdzfOswBP9LSV6oR5wENvVFZiTXQTj5f+r1WKurlbnppegtlu3tYn+YwAFl9H0jm6pNrAf1rlRrvV4gPCpfQd1L/b7+3Kj3vnrfND2sxWpnwG3S6BCmtjSdg5zrn8edsScljDbyEteaBP0hO9w3++xczE6isbT2kY66rCeHrj4ODkk8GGK/hku1tCmy9r67OPXAqW/ySjo/UItw00tD+tyrG6ZMNTVPCxaTY+CtWSdcm07I9YfKZgyl8VzbBxbjNC3R902xFO4oYSaMFmig1aVdqs849fV3TI8xFHEN0OkSZPF/Wad5yUzM+0IsJoVNXs8EvamKIlYlUQRIdECmCMBRhOEZjARnf9ju3S6f0QLQZh0ggZM6BZnkrKS5pg3kzJrPvfVc6XQEdVrLemAllcgDSc7n0nrZp83FOlqxHXqtC4K1nIYbrh9ZvX3W28KRaqjZyFBO6k7OR4ZMLy4yJyfrs7pTmbEx40qLncCrUzmTsotHSc62o/ViGq1mfAbPsqaCWhcwM1ncqj3DnzOQm27hTh6qYH+RC1tVnM/VXDbApCQ4ozmJzRA76wj6VrTxve2D8R4xbljd+WnT9dL1Wd6potwV9UNXVzacpMl9MF3NNov53lx0jiXYG4HNzaNbd81lmDnrViZpq/4gXCvbIxwBTRYEDZB00UBVun0QdgWg1oCbn8Wd0AhFq5NRfRaXqrzXbSxP7mGJzS7tmUyrxayGi8bk0JDkoLoepJvdVt0uO+PqQLeOMz7hzyt8rB4bpsvAPLK1pdxLBrnd0/TSZiLlS9irWk6f8s58J1abfRCfT1tPdabJojHGp41r2wthOa55TdtTuWlke3Z0wlUj1PYx3RAQx1Kr03GQlICjCgB0d7OdoKlCq0iqpWTaShVM0JGTFJx3bDJg54d+7+jBFQfCfLAY7/bvhbGkTBaoTJNJW8mllgSsogg9fSZ3dmAmOE4sOHJH0KAEtJUyyFYkX7MeUf6cx84lj44sAJlbgwbfK3Ezmk/GiV6rgVMgzIIOv1UP+cJq+HTzgOShPopqmYpHdrBehHvVd+NZTN6YwWA0zDdG2t3vyKyyaX1w5NYl+biPgDsaGNu9FErmJFqtkqgawBgmSuSrSn4er/Gu5W58ul+tM8KElmCTnfmbbNY15fUgdnRm0JsGE67Jl3Bqn3p+ddfKFlVDb0Tk7Q1s6XSi1vGcDkHY4af1g5Wz7H47y4aNzO6D/cZkR7nHCydeHqwNmE21wUL3q/VS/Tgc+vTZoGqjaJzp3awma1qVswSjZ+Aodldpy8njcWCxKzNpHNf0vOFG3p5n071Ri7i545NiTY5W1FQnJa22hGvfaUawT02pI5Cb9lDpnjZn8xz5Y3gdoJ+nw114nR/U42T5MHpupEMn3YpgclsWB5AilTvkVDCT7wlMIXGtJ/ui2o4KFoQTFCSVt2JXQV7aKaE4rtUmR8Z1Ldc7LR4wHCt2Gmxdbsp0jWY6NKDrPF+ThdaN5VxRfIIohoHtFr4KHnc9pb4HCP02RoGF4qdjmMItwpVvLBb5KivBlBy/YYCRERKeKDZaHMM1mkILENQduiXKLC9KbIvmG3QDCJXyKEzGwTgGdoLiDxyRZT5wxCmCbuSigkgWpykmxylOSEoO5jFNPOb5aD4HKCVUMy7YXpsljIbCrh95qABM+aGVeug52kaXBFH4+ss+mRBfpFPZ+EfRxctJ/9cQPz+7ZYPoWG6hgIt4BEQqiv4gvPV2/RbM10EztEHTj0HfzIPUcosDnaQ2iV14RfLx0e+OKVrl3i5FVKL+D3PDfVf/8fY/d1LfgKI+5+PuyDq6D25vzJ2QUUJX3m4VPZjPh+f0eEwvNWwWVCwm5imGopuUjmBK+NTJCPcooO4mqB9R2TvqT57v8o/40mQb6AkZBz7puPJl+YN7jI5wcY9RyBuT//SS9MElyVuC8uQrmeiR606B+NsbEWzDQo+IJ+QnC2Prd7m+sPXgh8RZzD83cIpVQVxPf2kKGBKzLpmBYfxo/CsDXzn/KLwn+Y4lId20SRP09yflYri9VkwIwzRIFKlyETwO3AvO5BSh9m+lP8xcqOP7XSDHf70LLNWhTkafb1buuu7/Vn5yL+0CEdmF3QuW10pOrrXEeeA8DPh3gF/P+Dr33Yz/GMnbH+I/JQ85/fw+vP0L</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieSythdcFKUjUsKioqiuvNWzgMi7LJgKi//h00ekxOcr683xVM09P99ELPMy/YDHy2BTBGSepFYVmVXyv/NGwa1liTfeKEJnziLfJm2gJ8YmybQxyyGa7OVcoqxhlSQ5yaYfpaYWmGe6KbT2zNYBotnm3x/HOz0VxXynOUYGKaqDzTlfIx8EPcurh9rWRJ2IpM7OFWaAYIt1LYmgJt0CKaLfOGqfL2ckV5cZi8uWkatygKPlsIIt+HzzAKqBfqg86LhVtTzwnNNEvQu08Lv1be9+Z5/pxzz1HiUCxN0xQtUETHwp7zq/JWum1Glhra0XUtmWEUetD0vbNZgNJQ6kZWGfhOlHipG3xjmqEYujD9hI7wCTJ8+KtC/XZwQfdDSx9AJth8wq7J3IxNkI0SFEJUnk3U18qvn1XwutdIzBDbURLgT+v/BgmFB+RHMbKe8C2yG7qfW/wiXW8vCLbUEPoZ9g5oWLRJbEKEy+ME2d5x4GHSfBYuX8pfPuJbhyH4X0ryQj3iJLCpLzIjew7C6f9Tr8daXa3MTT9Db3zeW4Ea3wSNfJFAu8+wjD/s84veUHm9QHhUvoK6l/p9/blR7331vulA2VLXGIxnQ2NWX43p1PW5Wb/aDV0RJwfYZIWaZpi7RBlhz1d2Sb4dro6GMQvHlmnwvdFwPmMlEwvd2XheigRKmDrV3paq6zG720oM3XQa48amx279hdDr6ubcDbqLZD5ZLLkTPxnm5mrXHujjtYqYLDS3frJVg2ENjbhSsPf7rKfj3anRtc+0sZ6sXn/H9BhDEVcfnS5BFu/LGi3IZmreF1IxKWzye6boTVNVqSpLEkCSA3JVBI4qDs5gKDq7vbvzOkJOi0CftYEMTtoE5LKzkue63ldyaz7313O13Ra1CZ93wUoukQ+ycpzL62WPNhfreMW26fVUFK3lJNpwvdjq7vKuC4eaoeVDQz1pW+U4NBR6cZE5R7I+a1uNGRkzrrTYioI2UXI5v3iUldwdrheTeDUTcnhWdA3wHcDMFMnVukYwZyA3ceFWGWhgd5GLribN59pRMcC4JDrDOYnNkNrrGAZWvAl898F4lxg3rM78tOn42fqsbDVJ6UjTfWeqbjhZV3pgspptFvOduWgfSrA7BJubR6/mmcsod9bNXNZXvX60Vt0DHAJdEUUdkHTRQFM7PRB1RKDxwDuepa1YjySrnVM9Fpeqgt+pL0/efonNDu2bTLPJrAaL+nhfl5Wwuu5nm62rucv2qNqfWoeZkArnFT5UD3XTY+AxtvWl0k37R7urT0ubsXxcwm7VcnqUfxbaidbogeR8cn3NmaSL+gifNp5tL8TliPcbtq9xk9j27fiEq0ak7xK6LiKOpVanQz8tAUcTAehsZ1tR18RmkVRLzfWVJpqgraQZOG/ZtM/O973uwYcrDkTH/mK03b0XxpJzRaRyXSFtpZSaMrCKInSnM6W9BTPRcRLRUdqiDmWgr9R+viL5mnWJ8uc8ti95dBQRKNwa1IVuiZvRQjpKpzwPTqE4C9uCq+2PC6se0I09UgbTYcznGh7a4XoR7bTAS2ZJNp31+8PBcWNknd2WzCqbnvYP3LqkHHYx8IZ9w93JkWyO49UqjashTGCqxoGmHs+jNd42vU1A96o1RhzTMmyws2CTzzqmsu4nzpTpdyfhmGsIJZzZp25Q3TbzRdWY1uOGJYW2fDpR62RORyBqC5Pa3jqy7M6d5YN6bvfAbmOyw6MviCdB6a8NmE/0/mIaVGul2mEwCOizQfHDeJRPOzmv6HqVs0Sja+A48VZZ0zkmo9BiV2ZaP6zped2L/Z3AZjuDj7m5E5BijQ9W3NDGJZ1fwnXgNGLYoybUASgNe6B2TpuzeY6DEbwO0M/T4S68zg/qcbJ8GD030jEl3YpgelsWB5Aql9vkVDDTvxOYQuJZT/ZFtRUXLAinKEwrb8Wugry0MkJxPKtFjozrWuElwLKgxgCuLXCSqNA8zbRpQDcEgW9wtRvLuaL4BFGKQtsrfBU87npK/R0gDFoYhRZKng5RBl2EK3+xWOSrrIYTcvxGIUZGRHgiD9rtGlcDktJmGwLDcEBmG01JatZrQGnKYqU8jNJROEqAnaLkA0dk6Q8ccYKgF3uoIJLFaYrJcYpTkpK9echSn3k+mM8hygjVTAq212L5Zo3CXhD7qABMBZGV+eg5duNLgih8fRLSA/FFOlGMf9SpdDnpvw3x87dbNoiO5RUKuIhHRKSi6AvCy92C+T5o7jHom3mQWV5xoJPUpokHr0g+fvrdMUWr3NuFRHWDfNf8LPhglfoc0N2RdfDgvefv1wHCJgnfeLuVZG8+75+zwyG7FKFRcKmEmKcYim5QUwQzQohORrRDIXU3Qf2Ii95Rf/J8l3/El6VuOE3J/xyQlilflj+4iEwRLi4iKmn5409vOR9ckryl6Jh+JZN8cl8pEP/1SgNbsNAj4jF55FFi/S7XF7Ye/JA4iwHmhU6xKpjn6ZumgBEx65EhFiWPxr8y8JXzj8J7ku9YUtJNmyxF338pF9PptWJCGGVhqsqVi+BxYl5wpqcYtX4r/WHmwv3eyfwRf0vml9pgSmZXYFbuut7/Vn7yLu0CEdmFvQuW18qR3EuJ89B5mNDvAL8c0kKz9rch/TGStz/Ef0oecvr5f3j7Fw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>181317967E6EB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2001-06-12</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>01.User_Get_GeoProfile</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="SetupScripts" id="6a293cf4-acf8-4193-a851-0803e658cfc4"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup_P0" searchProperties="true" id="e686b4b6-659f-4d89-9f0a-8a188c1e5f3d"><con:settings/><con:testStep type="groovy" name="Set ENV Properties" id="f08742da-df20-415a-ab97-14f3e77f1ab7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info("Set Environment properties!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");


def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema" id="45e97881-6a40-4fc6-bddf-d2e7ce2b964f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="datasource" name="Country" id="93b2aafb-6eb9-4f0f-86b4-4d82e3d6b354"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup" id="50368479-72b3-44ad-8894-d8a395e42699"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="a2a36a39-8203-4928-8af1-121e65c5abad"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Prioritize" id="87338d30-d8e7-4e23-9ed8-ecc9f59cdecf"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.*;
import com.eviware.soapui.impl.wsdl.teststeps.*;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def enablePriorityScript = context.expand( '${#Project#enablePriorityScript}' )

def executionPriority = context.expand('${#Project#disablePriority}');
def priority = context.expand('${#Project#disablePriority}').split(",");
def coords = context.expand('${#Project#coords}').split(",");//COORD-1000,COORD-2010
//log.info("Inside setUp for project '" + tP.getName() + "'");
def suiteList = tP.getTestSuiteList();
if(enablePriorityScript=='true')
{
log.info '----------------------------------------';

	tP.getTestSuiteList().each
		{	thisSuite->
				if( !thisSuite.isDisabled())
				{
					thisSuite.getTestCaseList().each
					{tCase->
						tCase.setDisabled(false); 		//Enabled everything
						//log.info '@@@@ ENABLING '+ thisSuite.getName() +' :: ' + tCase.getName();
						
							for (def prior : priority)
							{
								if (prior!='' &amp;&amp; tCase.getName().toUpperCase().contains(prior))
								{
									tCase.setDisabled(true); 	//Enable needed Priority
									log.info '!!!! Disabling'+ thisSuite.getName() +' :: ' + tCase.getName();
									break;
								}
							}
							coords.each //coord
							{ 
								if (tCase.getName().toUpperCase().contains(it))
								{
									tCase.setDisabled(true);		//Disable COORD issues
									log.info it+'#### Disabling COORD'+ thisSuite.getName() +' :: ' + tCase.getName();
									return true;
								}
							}
						
					}
				}
		}
	
	log.info "Disabled TCs with below Priorities : " ;
	priority.each{log.info it;}
	log.info "Disabled TCs with below COORDs: " ;
	coords.each{log.info it;}
	log.info '----------------------------------------';
}</script></con:config></con:testStep><con:testStep type="groovy" name="Set SoapUI Global Preferences" id="4265b988-d07e-4ee8-884b-b6fde96af541"><con:settings/><con:config><script>/*
 * @Sanjeet
 * This script will set below global soap UI Preferences
 * 
 * Setting Name										Value Set
 * --------------------------------------------------------------------------
 * Http Settings > Response Compression  		 			False
 * Http Settings > Close connection after request 			TRUE
 * Http Settings > Do not URL-escape service endpoints           TRUE
 */

log.info("Setting SoapUI Global Preferences!!!!");
import com.eviware.soapui.SoapUI;
import com.eviware.soapui.settings.HttpSettings;

com.eviware.soapui.SoapUI.settings.setString(HttpSettings.RESPONSE_COMPRESSION , "FALSE");
com.eviware.soapui.SoapUI.settings.setString(HttpSettings.CLOSE_CONNECTIONS, "TRUE");
com.eviware.soapui.SoapUI.settings.setString(HttpSettings.ENCODED_URLS , "TRUE");
com.eviware.soapui.SoapUI.settings.setString(HttpSettings.CHUNKING_THRESHOLD , "");

testRunner.testCase.getTestStepByName( "DataSource Loop").disabled = false;</script></con:config></con:testStep><con:testStep type="groovy" name="Flaky_Disabler" id="d704ea80-c343-4686-a979-20dff7a1d82f"><con:settings/><con:config><script>//Project Level Variable name – FLAKYSELECTOR.
//Possible Values – all, only_flaky, without_flaky
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tc_condition  = context.expand( '${#Project#FLAKYSELECTOR}' ).toString();

tP.getTestSuiteList().each
{
      if(!it.getName().toLowerCase().contains("setup") &amp;&amp; !it.isDisabled())
       {
                it.getTestCaseList().each
         {
		   if(tc_condition.toLowerCase()=="all")
			{
                 	it.setDisabled(false);
                }
             else if(tc_condition.toLowerCase()=="only_flaky")
               {
                  if(it.getName().toLowerCase().contains("flaky"))
                 		it.setDisabled(false);  
                  else
                         it.setDisabled(true);
                }
             	else
             	{
                   if(it.getName().toLowerCase().contains("flaky"))
                                           it.setDisabled(true);  
                   else
                         it.setDisabled(false); 
              	}
           }
        }
}

</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4265b988-d07e-4ee8-884b-b6fde96af541</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="01.User_Get_GeoProfile" id="04f68018-6302-434d-8565-c57f23aa1e60" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_UserGet_FUNC_CHILD_BAU_Get_Self_200_OK_P1" searchProperties="true" id="b0c2e4dd-9005-4abe-9360-387a84fdfe06"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="87b274cb-937b-48d0-bd19-74cc874fbc71"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="20341e6e-5590-480b-aa4b-5a59597ae016"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="d506588a-68ec-4045-b6e6-80e3b44c3f40"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="d423bde5-53c1-475b-ac83-c3d4a1d06e5f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="24070a77-6a78-41e2-87e9-04041c0fedf9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Self");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2CF98A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999AE5C551C68E0401F0A07991D55:24D27B26"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051131403082663424</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2CF8DA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2CF8DA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2CF8DA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2CF98A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AE5C3B1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2CF98A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AE5C3B1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/bhTmtZWaUeYQVC2vqHCXV2/3InpASJtUpu04P76TYpFQPTqnWGGyenJc57zkic5FDhN3LAjBOSScmZEvZb5Lx77QCB4sA4OfN/yEGlaGKPY2m/GAfL2yMGeNzaNSIgCIiYkZrJlusjxLLRvOc0RCkLHCZHT8A/QvWn8glwoaOXSQKaxSBMmwipsyyxyFnIsqAgZTkGEkoTDzsV5qDxDXHMy24dLllXAvD2VMgttmzRiRTJJSIPw1D60N3wOYxEO6YRhWeTwEjMWLfNl73w+b8z3Gjyf2C5CyEaBrXxiQSffzfa3ejPEERvz5bqLGWeU4IT+wZrUBcgpj41OMuE5ldP0HWjHdpCGtmBBLOJ47Ltpvwao2H0SaYNkLrAlptipwW5gDDkwAsY/N1HL/P65Di73jnLMxJjnqdhaf40SsBISnkFsiTqzmt3nEXeUq30IJIwYSQpBS7jUY5JhAsK4ymFMF+dUqOGLhVG131gI9aP1lAH5SlsO7XWuirq9ozo9OgEh/0/P1vu1RPmFkwLaWTyK75sozY9O3TuOUeBNRqPR9dzudloVhXXnJalVu1/W28O6mq2XTRCB518unvai5tHDPLavr7slGxzfeWUwQ6gfzGE4o7Mo/yXvHjyvcx//IazPvLPhYDA5nkVxQcangduXj7OzH98Wafrbv7hMn86vrp7tk0fx+5zP2E86KJ9nTS46/Zm/f9uPL+C2eSNPXe/q2CM/0d5g2ru4dka5++hOfA/FZda/h2+zH/2fZ+nj6W3n7OmqPzyOpvPWa07rOWwaa0kYFg+PQGS91OMR9YwT1S8sP5YXbaGxNa5cw0xrlJDApNnWu7S0hIUSIBqHqpnL9UnXCYLgyO2eBM1OcNw5Rh5yTlAH+UHg7u95tQYtWWxR7HI2pjqWVtnl/HxMkKShABZDbpW8IFMQ5geIPSyxEbEbdTg4EzDiSsVF6mb+dMFhOg0cKpoO9f3H8aRkpnHJ5YAN8s5YQr4h3Y67Id03QGhGQeu7HnChJlxIVYsnXBYycRolbjAo1A2QaxEOXa/p24KmWQKaqZ3yuEigkU2zqjK2WP67FiaislJBMp5LnDjV+Xs3ve1vdSWUT0y1g9ApHYHqJry5ilDo1/m8n7e/nncN3yliqo+ZKqvMKVky2fz0Oi16TFajskqMCKfmvtryRYgdAPYH/Ozt0qzixSVdi15fr+rGUHrSrvv7hBtPjaIsi6qjB1orcwVvK8l07CGQQgne84jPgNkrCPtT982K9VbklX2TXyGnbCixhFTNn1EtP/HYGILQj41IHZzFZ18yGyFV3SQs5C5bN1FvEs34w2cLCYn2U+Yr9Tfnefzarh1Ya3FUnuqFISmb6JW+WZ7fmQ3CFSxVUsjzdfBdALuCbxpXRV5xkWqaHgoJ738xtMa1TEwIL5iMemZlWNfdiqd8ziB8dXoDU2n7y2W9EO9e1ncX50OlgCk2V770v50tWo0LAVO/CSouLXOh3p4qOJus6fwLwd1S3+x9JPWbmbTfmN9a1mq6fR7afwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/bhTmtZWaUeYQVC2vqHCXV2/3InpASJtUpu04P76TYpFQPTqnWGGyenJc57zkic5FDhN3LAjBOSScmZEvZb5Lx77QCB4sA4OfN/yEGlaGKPY2m/GAfL2yMGeNzaNSIgCIiYkZrJlusjxLLRvOc0RCkLHCZHT8A/QvWn8glwoaOXSQKaxSBMmwipsyyxyFnIsqAgZTkGEkoTDzsV5qDxDXHMy24dLllXAvD2VMgttmzRiRTJJSIPw1D60N3wOYxEO6YRhWeTwEjMWLfNl73w+b8z3Gjyf2C5CyEaBrXxiQSffzfa3ejPEERvz5bqLGWeU4IT+wZrUBcgpj41OMuE5ldP0HWjHdpCGtmBBLOJ47Ltpvwao2H0SaYNkLrAlptipwW5gDDkwAsY/N1HL/P65Di73jnLMxJjnqdhaf40SsBISnkFsiTqzmt3nEXeUq30IJIwYSQpBS7jUY5JhAsK4ymFMF+dUqOGLhVG131gI9aP1lAH5SlsO7XWuirq9ozo9OgEh/0/P1vu1RPmFkwLaWTyK75sozY9O3TuOUeBNRqPR9dzudloVhXXnJalVu1/W28O6mq2XTRCB518unvai5tHDPLavr7slGxzfeWUwQ6gfzGE4o7Mo/yXvHjyvcx//IazPvLPhYDA5nkVxQcangduXj7OzH98Wafrbv7hMn86vrp7tk0fx+5zP2E86KJ9nTS46/Zm/f9uPL+C2eSNPXe/q2CM/0d5g2ru4dka5++hOfA/FZda/h2+zH/2fZ+nj6W3n7OmqPzyOpvPWa07rOWwaa0kYFg+PQGS91OMR9YwT1S8sP5YXbaGxNa5cw0xrlJDApNnWu7S0hIUSIBqHqpnL9UnXCYLgyO2eBM1OcNw5Rh5yTlAH+UHg7u95tQYtWWxR7HI2pjqWVtnl/HxMkKShABZDbpW8IFMQ5geIPSyxEbEbdTg4EzDiSsVF6mb+dMFhOg0cKpoO9f3H8aRkpnHJ5YAN8s5YQr4h3Y67Id03QGhGQeu7HnChJlxIVYsnXBYycRolbjAo1A2QaxEOXa/p24KmWQKaqZ3yuEigkU2zqjK2WP67FiaislJBMp5LnDjV+Xs3ve1vdSWUT0y1g9ApHYHqJry5ilDo1/m8n7e/nncN3yliqo+ZKqvMKVky2fz0Oi16TFajskqMCKfmvtryRYgdAPYH/Ozt0qzixSVdi15fr+rGUHrSrvv7hBtPjaIsi6qjB1orcwVvK8l07CGQQgne84jPgNkrCPtT982K9VbklX2TXyGnbCixhFTNn1EtP/HYGILQj41IHZzFZ18yGyFV3SQs5C5bN1FvEs34w2cLCYn2U+Yr9Tfnefzarh1Ya3FUnuqFISmb6JW+WZ7fmQ3CFSxVUsjzdfBdALuCbxpXRV5xkWqaHgoJ738xtMa1TEwIL5iMemZlWNfdiqd8ziB8dXoDU2n7y2W9EO9e1ncX50OlgCk2V770v50tWo0LAVO/CSouLXOh3p4qOJus6fwLwd1S3+x9JPWbmbTfmN9a1mq6fR7afwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlHqvgJBAgUUEKH93NtJ0yhaKZvqyMY8CdxE5tJ4X++rVDkwKl3c5KSMg31+ee++FjnwuYJm4QCoG5JIwa0ahn/rOI/bbvx7bltlsLq9VqtqyujaDlOG287HaXsbdwTCMSIscRFRJS2TNd22lZdttyujPbDxwnsL1Gx2/fm8Ycc6GglUvDNo1NmlARlGF7Zs5pwKAgIqAwxSKQKJiG11eB8gxgxcnsn+9YlgF5fy1lFgCAGjFGOElQA7EUnIMDn/NYBFOyolDmHL/EjEXPfNn79PTUeGo2GF8B17ZtYPtA+cSCrL6a/S/VZhxHdMl26yGkjBIEE/IMNalrLNcsNsJkxTiR6/QdaAc4toa28AZZyGnRryZ4DVCy+yTSAUkuoCXW0KnAbvESc0wRNu5uo5759XMd3O2dcUjFkvFUHK3/jBKmBU5YhmNLVJlV7D6PeKJc/XOMgoiiJBekwN/1mGQQYWFMOF6SzRURavhiYZTtNzZC/Ug1ZRj9SVvOwT5XRR2cqM6IrLCQ/6dn+/3aocxhkuP+twLdnCVt/9o/E60bL/o1fsii7U3z91D0Sgr7zjtSdbtf1sfDWs/Wy6bnS3C1GKweySROZzEW20fBHs+S8LmYZ/eTH0vaCfEIFGGSOv5F4c+bA7udei379uFiNZ9MBpeD+SJGGS+aN8kXmXtptvbyTiTmS5J3WsWI/by/+ytOfq1Ep+PG/retk9/ezZ2Zz55+TR7cPByML+3tj/AazP7O5WIcgWdBxhM8//IMos7mPvkxHT7w7YQtxXzVe81pP4dDYyUJ03zxgJGslno8opFxofoF5cfyoi0ktpala5BpjRISU2n29S4tLUGuBIjEgWrmbn0xdHzfD8fesDlwhu3u2G7ZzoUd2h3fd0aeV2nQjsURxSGjS6JjaZXdzc/HBFEaCExjzK2C5WiNhfkB4ghKaET0Vh0ORgWeMaXieda1qcsphRntuEWR0HbbznjHNL4zeUNveLiUmB8ot+MeKPctRiQjWMu7nm+hBlxIVYpHWOQycRoFbFCcqwuAaw0O3FbXA4KkWYI1UZCyOE9wI1tnZWGA2P27FkSitBKBMsYlTJzy+L2b3fG3qhDKJybaQeiUBlg1E7+5iezAq/J5k7d38saq4MM8JvqUqapKTtCOyeGn12HRU1JPSp0YEk7Fvd7yhxAnAMAH/MBxaep4cUH2ole3q7owlJz0q/4+wsZjIy+KvOxoR0slV/BAKaYDphjlSu+2M/YbU1BDgE9dNzXro8i1/ZBfLtd0KqHEqZo/o1x+4q0xxUK/NSJ1bjaffcgchFR1k3gjT9mGiXqSaMYfvlpQgLSfMk/U3xPj8Wu7TmDtxVF5qgeGJHSlV/pi2b4zG4gpWKKUkPF98FMAp4IfGusi11ykmqZFLvH7XwwtcT0TIsRyKqORWRr2ZbfkKbcZDl6d3sCU0v5yV2/Eu3f1z+urqRLAFJq1L/lvZ4uU44KwqZ8EJZeeuVFPTxWcrvZk/oXgW6UfuMOL7ij0x2Gt9J7vu+1mqy7gQSb9N+a3lr2aHp+H/r8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051131403082663424</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051131403082663424</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051101403082660566</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051131403082663424</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2CF99A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AE5C3C1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_UserGet_FUNC_CHILD_SAU_Get_Self_200_OK_P1" searchProperties="true" id="406674fc-6523-4a9c-8f70-1f455a30afb6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="13a3f975-22b4-41c0-ad27-bd189351a53e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5f95144d-937a-41a2-990a-5af86df54ca1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="a322cfb9-8edf-460f-a104-67e2495c03eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="4127be9f-04c7-4fa0-86d4-cdec49a61b1b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD SAU" id="4568c3a5-777e-4874-aa89-0a89440f4b54"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Self");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B23B00FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B0FA08BA67E0401F0A07991D5D:5B90BA64"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051191403082669798</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B09814610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09814610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09814610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B23B00FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2CFBDA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B23B00FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2CFBDA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1PatJSPjjADKB4UFUHx6MudmIYSLEltEkB//U2KrYDo1TvDDJPdnbXX/shKjjmcx27Q4hyngjBq9E4a5j/Ac2suqniW58OqVS6XoQV9v2bhCqy4IfIcH0HT6HEucY9yAalomK4DypZTsUDt1qkHAAROrVSuuY+mMcYpV9DKpeSYxmoeUx5kYRumTGnAICc8oHCOeSBQMGpd9gPlGcCck9k8XrPMAqbNqRBJYNuoFGKE4xiVEJvbx/aWz3HIgxGJKBQyxe8xQ94w3/cul8vS0iuxNLJdx3Fsp24rn5CT6NBsHuSbcdijE7ZedyBllCAYkzeoSV1iMWWh0YojlhIxnX8BDWzgaGgLr5CFQJkemvZHgIzdD5G2SKYcWnwKQQ42xBOcYoqwcTfsNczDn3Vwvfc2hZRPWDrnO+vfUcJ0gWOW4NDieWY5u58j7ilX8xijoEdRLDlZ4Cs9JglEmBuDFE/Iqk+4Gr6QG1n7jRVXP5JPGUa/acuxvclVUbf3VOeERJiL/9OzzX6tUcYwlrh587QcdMLrew+x9qo68LoRE2wMrvg9b2QUNp3XpIp2v693h7WYrfdN44vRDC0uqtGQXl/IKJqS5XIwbPeuu+xNnv9JJ/1Vyw+fz3C/9txun5FFEp3ftsnf6HFydEQn3phPyal3NKXdh6cD3qkM0sFZ/SZyFsvReSRfqlU4vHw+777dzYTd/nPhh85VrZucz8DL3WPcOW0/YC+ZXcad5/Hb+CFsyaOb26sb8CTGB5N7vpSXMrzqT7zTV7/TXvLGR06bOWwbc0kYyacZRiJf6vHonRhd1S8ovpcXbSGhNclcg0RrFBeYCrOpd2lpCaQSIBIGqpnrdbcD6vV62/XajtNtVzunTtkBXaflVOt1cFIBuQatWexQ7DA6ITqWVtn1/HxPEM0DjmmIU2vBJJpibn6DeAIFNHp0qA4HoxzfMqXiPpA8QU6Z1yszfzYj3gzE7lMZmMYVE9f0Om1NBE63lBu4W8o9xIgkBGt51/PN1YBzoUrxAhdSxKC0gCWKpboAUq3BgVuu+TYn8yTGmqg9Z6GMcSmZJllhbL7+dy2IeGYlHCUsFTAG2fH7Mrvdb3khlE9ItAPXKbWxaib+dBM5gZ/n83Xe/mbeOXxLhkSfMlVVkRK0ZrL96WNY9JQUk1IkhngxFcWWX0LsAbC/4WfvlqaIFy7IRvT8dlUXhpKTZt7fF1h6KcnFQmYdrWqpTBW8rRQT2COMpNK711v2jKldQNg/um4K1juRC/s2PymmdCSgwHM1f0a2/MFbY4S5fmv01LlZ/fQhsxVS1U3gldhn68TqSaIZf/tqQQHSfso8UH9LloYf7dqDtRFH5akeGILQSK/0xfL6xWwgpmCJUkKWboLvA9gXfNtYFLngItQ0PUmBv/5iaIlrmBAhJqnonZiZYVN2M57iNcHBh9MnmEza3+/qFf/yrv572R8pAZxDs/Al/+1skWxcEDb1kyDj0jBX6umpgtNoQ+bfCe5ReqdeA+UKcFqF0vv1ulspu0UBtzJpfjJ/tmzUdPc8NP8F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1PatJSPjjADKB4UFUHx6MudmIYSLEltEkB//U2KrYDo1TvDDJPdnbXX/shKjjmcx27Q4hyngjBq9E4a5j/Ac2suqniW58OqVS6XoQV9v2bhCqy4IfIcH0HT6HEucY9yAalomK4DypZTsUDt1qkHAAROrVSuuY+mMcYpV9DKpeSYxmoeUx5kYRumTGnAICc8oHCOeSBQMGpd9gPlGcCck9k8XrPMAqbNqRBJYNuoFGKE4xiVEJvbx/aWz3HIgxGJKBQyxe8xQ94w3/cul8vS0iuxNLJdx3Fsp24rn5CT6NBsHuSbcdijE7ZedyBllCAYkzeoSV1iMWWh0YojlhIxnX8BDWzgaGgLr5CFQJkemvZHgIzdD5G2SKYcWnwKQQ42xBOcYoqwcTfsNczDn3Vwvfc2hZRPWDrnO+vfUcJ0gWOW4NDieWY5u58j7ilX8xijoEdRLDlZ4Cs9JglEmBuDFE/Iqk+4Gr6QG1n7jRVXP5JPGUa/acuxvclVUbf3VOeERJiL/9OzzX6tUcYwlrh587QcdMLrew+x9qo68LoRE2wMrvg9b2QUNp3XpIp2v693h7WYrfdN44vRDC0uqtGQXl/IKJqS5XIwbPeuu+xNnv9JJ/1Vyw+fz3C/9txun5FFEp3ftsnf6HFydEQn3phPyal3NKXdh6cD3qkM0sFZ/SZyFsvReSRfqlU4vHw+777dzYTd/nPhh85VrZucz8DL3WPcOW0/YC+ZXcad5/Hb+CFsyaOb26sb8CTGB5N7vpSXMrzqT7zTV7/TXvLGR06bOWwbc0kYyacZRiJf6vHonRhd1S8ovpcXbSGhNclcg0RrFBeYCrOpd2lpCaQSIBIGqpnrdbcD6vV62/XajtNtVzunTtkBXaflVOt1cFIBuQatWexQ7DA6ITqWVtn1/HxPEM0DjmmIU2vBJJpibn6DeAIFNHp0qA4HoxzfMqXiPpA8QU6Z1yszfzYj3gzE7lMZmMYVE9f0Om1NBE63lBu4W8o9xIgkBGt51/PN1YBzoUrxAhdSxKC0gCWKpboAUq3BgVuu+TYn8yTGmqg9Z6GMcSmZJllhbL7+dy2IeGYlHCUsFTAG2fH7Mrvdb3khlE9ItAPXKbWxaib+dBM5gZ/n83Xe/mbeOXxLhkSfMlVVkRK0ZrL96WNY9JQUk1IkhngxFcWWX0LsAbC/4WfvlqaIFy7IRvT8dlUXhpKTZt7fF1h6KcnFQmYdrWqpTBW8rRQT2COMpNK711v2jKldQNg/um4K1juRC/s2PymmdCSgwHM1f0a2/MFbY4S5fmv01LlZ/fQhsxVS1U3gldhn68TqSaIZf/tqQQHSfso8UH9LloYf7dqDtRFH5akeGILQSK/0xfL6xWwgpmCJUkKWboLvA9gXfNtYFLngItQ0PUmBv/5iaIlrmBAhJqnonZiZYVN2M57iNcHBh9MnmEza3+/qFf/yrv572R8pAZxDs/Al/+1skWxcEDb1kyDj0jBX6umpgtNoQ+bfCe5ReqdeA+UKcFqF0vv1ulspu0UBtzJpfjJ/tmzUdPc8NP8F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tq45nSD6jSjjCDIlfOEeUCgseXOzHdLTm2aWlSKP76mxRaAdGrd4YZJrs7a6/9kZVcMBSFltthDFJOYqr0uy31HxNso3neONcssH2t4fh17fkMOZrnYKv+bAM452eq0mcsgz5lHFHeUi3DbGjGmWY2J4bjmqb41Zq2/aQqU0iZgBYuNUNV8iikzC3CttQspW6MGGEuRREwl2N33BncusLTRSUntX2xYVkETNtzzhNX13HNAwxhiGs4jvQLfc/nwmPumAQU8SyFbUyPtdTt3tVqVVvVa3Ea6JZhGLrh6MLHYyQ4Vdsn5Wbw+tSPN+srRGNKMArJK5KkBsDnsad0wiBOCZ9HH0CbumlIaA1yrGGzQU9V/S1Awe6LSHskU4Y0NkdmCTYCH1KgGJSHUb+lnn6tg5u9kxRR5sdpxA7W36MEdAlhnICnsTKzkt3XEY+Uq30B2O1THGaMLOFOjkmCMDBlmIJP8lvCxPB5TCnar+RM/Eg5ZYC/05YLfZeroK4fqU6XBMD4/+nZbr82KFMUZtAej1bR3Ws2O+uOfP/R6Vl/jdLew7BLs6BVUNh13pCq2r1dHw5rNVvbTRQvJtPe+QA52UC37Dv7tj67fiKP8/U5ad7Pkqf7hA3Zax7Mu0/GI7JzB//2XyYPBvoxNwf4Zpj8Hth396tOoN+fvJq9NbfEyQvqr5eLS+PPw8zIJ/1Od0br6CqbRT9uiHNL7PXNdNkws79Z2rmJbn6Sl5v15XT6M0hYMvP8lL1M8l8nkz+zoT6NvGDV/MXoyn5Z91tvOe3msG8sJWGcPf8BzMulHI9+V+mJfiH+ubxIC/E0v3B1E6lRjAPlalvuktLiZkKAiOeKZm7WvSvTcZxL66p32e04151ro2GYPaNj2I5jndUbpQZtWBxQvIqpT2QsqbKb+fmcII5cBtSDVFvGGZ4DUz9B7CKOlD4dicMRUwaTWKj4ouHETX+B65lt+CFt8BcrR+SZq8pdzO/pfdrxOaR7ym1ae8o9AkwSAlLe5XwzMeCMi1Is0DLjoVlbohqFTFwAqdRg12o0bZ2RKAlBEtWj2MtCqCXzpCiMzjb/loYwK6yE4SROOQrN4vh9mN3ht7IQwscj0oHJlC5BNBOO3ERGmc+7vO2jN1YJ38k8Ik+ZqCpPCd4w2f/0NixySqpJqRLDzCy5V1u+CXEEQP+En35YmiqetyQ70cvbVVwYQk7aZX8XqLaoZctlVnT0XEplKuB1oZimPgacCb1bT+IXoHoFoX/puqlYH0Su7Pv8Mj6nY444RGL+lGL5hbfGGJh8a/TFucm/+pDZCynqxiHnx2xXoXiSSMafvlqwi6WfMA/F3ypOvbd2HcHaiSPyFA8MTmggV/JiWX8wGzgWsEQoYZzugh8DOBZ831gVueLCxTQ9Zxw+/qJIiWupCOM4o7zfVQvDruwWPPk6AffN6R1MIe3buzpnH97Vj4PbsRDACKmVL/lvZ40U44JBlU+CgktLzcXTUwSnwY7MbwkeUXrDaZqNM9M4UPqGVRVwL5P2O/N7y05ND89D+18=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051191403082669798</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051191403082669798</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051171403082667430</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051191403082669798</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B23B01FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2CFBEA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_UserGet_FUNC_CLG_Get_CHILD_200_OK_P1" searchProperties="true" id="b60020f8-3a15-47de-a20d-c92699c3e3e6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="484beceb-7e30-464d-92c9-ce47fcadbb11"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d2099641-75ac-4c84-a686-b92ae0472d6e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="13631824-e77c-41e2-ad07-85ce0e51cd30"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="30cc5809-2513-449c-a43d-9e1ac1b91b72"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD SAU" id="8b5d4e2d-e1c5-4a42-8719-b43cb322618e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","CLG");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B0FA0CBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B220B2DB33E0401F0A05992646:15B95F1F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0511171403082677011</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BC652EDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC652EDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC652EDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B0FA0CBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B0FA25BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FA0CBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FA25BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSxyo4CeGSCJAolJbeuUxnNC9HxnHA02BT24HA1x87kBQo7WmPhIS8s7322hcvuyHgPHaDthCYS8Ko0e82zX88J6raXq1moUkZWZ5T9S3ouaEVlqtRLapMQtuFptEXIsF9KiSksmm6tuNZdtVy6mPbDxwncCqlct39YxrPmAsFrVxKtmmk85iKIAvbNBNOAwYFEQGFcywCiYJR+/4uUJ4BzDmZrcaWZRaQt2ZSLgIAUCnECMcxKiE2Bw1w4NMIRTAiUwplwvEuZiia5m7varUqrcolxqfAtW0b2D5QPqEg0zOz9SPfjMM+jdh23YGUUYJgTDZQk7rHcsZCox1PGSdyNv8A2gGOraEtnCILOR49M8FbgIzdF5EOSHIBLTGDTg42xBHmmCJs/Bz2m+bZ1zq43TvmkIqI8bk4Wn+PEqZLHLMFDi2RZ5az+zriiXK1GhgFfYriRJAlftBjsoAIC+OJ44ikd0So4QuFkbXfSIX6kXzKMPpOWxpgn6uiDk5Up0umWMj/07P9fm1RnmGc4NbgQYr288s4fQFOdS3Bsn7JveFj7/VBNDMK+85bUkW7d+vjYS1ma7fpZnL1Uj0fTKP2qnZ9LWpP5Q266E2el88THqaxHKFzUU5BJ2HeZMN/EY+K+3DMoot727nm1QuvuqnXb24Xi+n1+Y/03PEG8XS1rkQJGYPezVV/4DM6gb/GlUHl2ldysHkcPrqj2ezl5zmrixUZDuohI4k/8q+g6LVl8nfl381u2pc/0HRcfga/K7e3Hu786a2XXdF8y2k/h0NjLgmjZPIXI5kv9Xj0u0ZP9QvKz+VFW0hoRZlrsNAaJSSm0mzpXVpagkQJEAkD1cztutdxfN+/sHttu3PRrtYubc92enbbrvm+0610cw3asjii2GE0IjqWVtnt/HxOEM0DgWmIubVkCZphYX6C2IUSGn06VIeDUYHHTKm4k3qb6TKkLyHerGtr5Kp+0STdpKbxwOQjfeTtSGJ+IN2OeyDdQ4zIgmCt73rAhZpwIVUtXuEykbFTWsISxYm6AbgW4cD16hUgyHwRY80UzFmYxLi0mC2yygCx/XctiERmJQItGJcwdrLz92F6x9/ySiifkGgHoVO6wKqb+MRVZOf5fJx3ZT/vHL6dhEQfM1VWyQnaMjn89DYtekyKUSkSQ8LJuRdbvglxAgB8wg8cl6aIFy7JXvT8elU3htKTVt7fV1h6LSXLZZJ1tKa1kit4oCTTASOMEiV46zF7wRQUEOBL903B+ihyYT/kl8gZHUko8VzNn5Etv/DYGGGhHxt9dXDSr75kDkKqukmcylO2TqzeJJrxp88WFCDtp8xP6m/FePjWrhNYe3FUnuqFIQmd6pW+WdYfzAZiCpYoKWR8H/wUwKngh8aiyAUXqaZpkkj88RdDa1zThAixhMp+18wM+7qb8ZTrBQ7enN7BZNq+u6xT8eFl/fv+bqQUcA7Nwpf8t7NFsnFB2NRvgoxL00zV21MFp9M9nd8RPCH1nWrFvex2y71C6iu+71YrdlHAg0xa78zvLXs1PT4PrX8B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSxyo4CeGSCJAolJbeuUxnNC9HxnHA02BT24HA1x87kBQo7WmPhIS8s7322hcvuyHgPHaDthCYS8Ko0e82zX88J6raXq1moUkZWZ5T9S3ouaEVlqtRLapMQtuFptEXIsF9KiSksmm6tuNZdtVy6mPbDxwncCqlct39YxrPmAsFrVxKtmmk85iKIAvbNBNOAwYFEQGFcywCiYJR+/4uUJ4BzDmZrcaWZRaQt2ZSLgIAUCnECMcxKiE2Bw1w4NMIRTAiUwplwvEuZiia5m7varUqrcolxqfAtW0b2D5QPqEg0zOz9SPfjMM+jdh23YGUUYJgTDZQk7rHcsZCox1PGSdyNv8A2gGOraEtnCILOR49M8FbgIzdF5EOSHIBLTGDTg42xBHmmCJs/Bz2m+bZ1zq43TvmkIqI8bk4Wn+PEqZLHLMFDi2RZ5az+zriiXK1GhgFfYriRJAlftBjsoAIC+OJ44ikd0So4QuFkbXfSIX6kXzKMPpOWxpgn6uiDk5Up0umWMj/07P9fm1RnmGc4NbgQYr288s4fQFOdS3Bsn7JveFj7/VBNDMK+85bUkW7d+vjYS1ma7fpZnL1Uj0fTKP2qnZ9LWpP5Q266E2el88THqaxHKFzUU5BJ2HeZMN/EY+K+3DMoot727nm1QuvuqnXb24Xi+n1+Y/03PEG8XS1rkQJGYPezVV/4DM6gb/GlUHl2ldysHkcPrqj2ezl5zmrixUZDuohI4k/8q+g6LVl8nfl381u2pc/0HRcfga/K7e3Hu786a2XXdF8y2k/h0NjLgmjZPIXI5kv9Xj0u0ZP9QvKz+VFW0hoRZlrsNAaJSSm0mzpXVpagkQJEAkD1cztutdxfN+/sHttu3PRrtYubc92enbbrvm+0610cw3asjii2GE0IjqWVtnt/HxOEM0DgWmIubVkCZphYX6C2IUSGn06VIeDUYHHTKm4k3qb6TKkLyHerGtr5Kp+0STdpKbxwOQjfeTtSGJ+IN2OeyDdQ4zIgmCt73rAhZpwIVUtXuEykbFTWsISxYm6AbgW4cD16hUgyHwRY80UzFmYxLi0mC2yygCx/XctiERmJQItGJcwdrLz92F6x9/ySiifkGgHoVO6wKqb+MRVZOf5fJx3ZT/vHL6dhEQfM1VWyQnaMjn89DYtekyKUSkSQ8LJuRdbvglxAgB8wg8cl6aIFy7JXvT8elU3htKTVt7fV1h6LSXLZZJ1tKa1kit4oCTTASOMEiV46zF7wRQUEOBL903B+ihyYT/kl8gZHUko8VzNn5Etv/DYGGGhHxt9dXDSr75kDkKqukmcylO2TqzeJJrxp88WFCDtp8xP6m/FePjWrhNYe3FUnuqFIQmd6pW+WdYfzAZiCpYoKWR8H/wUwKngh8aiyAUXqaZpkkj88RdDa1zThAixhMp+18wM+7qb8ZTrBQ7enN7BZNq+u6xT8eFl/fv+bqQUcA7Nwpf8t7NFsnFB2NRvgoxL00zV21MFp9M9nd8RPCH1nWrFvex2y71C6iu+71YrdlHAg0xa78zvLXs1PT4PrX8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH53Si7TQjjCDIG7ceAOOHnw5E9NViLZpTVJAf/1Jiq2A6NEzwwyT1ZVvfeuSLznmKImdoMM5MEFSqg16Lf2fMMLwYIFvhP6RY9RDcI1mIwTjIYoi1617UHdDXRtwnsOAcoGoaOmOZdcNyzPs5sTyA9sObL/mNbx7XbsFxiW0dKlZurZKYsqDImxLzxkNUsQJDyhKgAcCB+POxTCQngEqOent4zXLIiBrz4XIAtPEtRAwxDGu4TQxj80tn+OQB2Myo0jkDN5ihrylv+1dLpe15VEtZTPTsSzLtHxT+oSczA709q9yM4QDGqXrdRfRlBKMYvKKFKkLEPM01DrxLGVEzJNPoG3TthS0AStsYLtOD3TzPUDB7ptIWyQZRwafI7sEG0EEDCgG7a/RoKUffK+D670ThiiPUpbwnfXPKAFdQJxmEBq8zKxk933EPeVqHwMOBhTHOScLuFRjkiEMXLtmEJHVkHA5fCHXivZrKy5/pJwywD9py7G5yVVSN/dUp0dmwMX/6dlmv9YotyjOoe1fJ9E0Mu/I+OmwMVpO+X2fvjqNxbN70yoobDqvSVXtflvvDms1W2+bkg6f0q4nmn/uD5t0/MD56s+q0egsHy+9y0bnxDvPxstb9preXHln5NU7v5kNn+Yn16dnQ3TXO2RNd0h/3zjOqDO4+8UnMM6AT/Gke2TXu3B4jkbe+MockuVpb9X9fdUz7asJP/P69mJ6PbrL7tzw5sl88eeTCE0vlt3upQevD4+UZP6vWdOL8dHERkufjejEW4XT1ntOmzlsG0tJGOcPj4BFuVTjMehpfdkvJL6WF2UhoREVrkGmNIoLoEJvq11KWoJcChAJA9nM9brftX3fP7H6Hcc96XiNU6tu2X2rYzV83+65vVKD1ix2KHZTGhEVS6nsen6+JoiTgAMNgRmLNMdz4PoXiD0kkDagI3k4UsphkkoVt1MnnXtHtE78BbPzl5mbPXkewfmLrl2m4opesU4kgG1pt+1safcIMMkIKIFXE87liHMhi/GMFrmI7doC1Sjk8gpgSoUDp950TU6SLAZF1UzSMI+hls2zojQmX/87BsK8sBKOs5QJFNvFAfw0v91vZSmkT0iUA1cpnYBsJ+y5i6wynw95u3vvrBK+k4dEnTNZV8EIXjPZ/vQ+LmpOqlmpEsPcLrlXW34IsQfA/IKfuVuaKl64IBvRy/tVXhlSUNplf59R7bmWLxZ50dGGEksm4U2pmbY5BpxLxXuZpE9AzQrC/NaFU7HeiVzZt/nlYk7HAglI5PxpxfIbr40xcPXaGMiTs/ruU2YrpKybgJXYZ+vG8lGiGH/5bsEBVn7SfC3/lil7T3wf1kYcmad8YghCZ2qlrpaXT2YDpxKWSC1M2Sb4PoB9wbeNVZErLkJO00Mu4PMvmhK5lo4wTnMqBj29MGwKb8FTvGQQvDt9gCnE/e22XvFPb+u/L4ZjKYEJ0itf8t/OBinGBYOuHgUFl5a+ko9PGZzONoT+jeAere96rnPa6x31K613fd/xXKsq4FYm7Q/mj5aNmu6eh/a/</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0511171403082677011</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0511171403082677011</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0511131403082673596</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0511171403082677011</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B0FA0DBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B0FA26BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_UserGet_FUNC_NONCLG_FAU_Get_CHILD_200_OK_P1" searchProperties="true" id="d20dc8c6-7a74-469e-a131-52d7f28e36f7"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="14f29958-4dc1-4e7b-b23b-1ad9ae7fd723"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6cfa4831-5dc6-4b5b-8df8-a2373677d6de"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG" id="5b36e28d-7287-4cb5-8a3a-f9238c7340b9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG" id="88d8f2aa-fd88-41f5-8ed9-cab8ce159a08"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="fc5be3a6-bcd6-4e99-a37e-5d5a128cca24"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="cf458c48-0b8a-4414-a117-889614076fae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="10cab70e-60a9-4036-bd21-68b89d77701c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFA9A35309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B0FA5EBA67E0401F0A07991D5D:3D4381D4"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0511261403082686209</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B0FA40BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B0FA40BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B0FA40BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFA9A35309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AFA9BB5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B2AFFB496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFA9A35309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AFA9BB5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B2AFFB496AE0401F0A05992648</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH5nSC+XSjjBTQZyKoFuUo76cCekCoiXBJOWyf/1Oi62A6NEzwwyT1ZVvfeuSLzkVaB47fiAEcEkY1cJOU/8XVaBRBWdsNKoYG+64XjFQDRwDWRbGVbfqemNH10IhEgipkIjKpu5YtmtYNcNu3Fmeb9u+45SrXuNJ10bAhYJWLmVL19bzmAo/C9vUE059hgQRPkVzEL7E/jDoX/nK00c5J711umWZBeStmZQL3zRxOQIMcYzLmM3NU3PP5zQS/pBMKZIJh7eYkWjqb3tXq1V5VSkzPjUdy7JMyzOVTyTI9ERv/co3QxTSCduu24gySjCKyR+UkuqDnLFIC+Ip40TO5p9A26ZtpdAGrLGBbZee6OZ7gIzdN5H2SHKBDDFDdg52CxPgQDFo97dhUz/5Xge3e+84omLC+FwcrH9GCegSYraAyBB5Zjm77yMeKVfrFLAfUhwngixhkI7JAmEQ2g2HCVlfEaGGLxJa1n5tLdSP5FMG+CdtOTV3uSrq5pHqdMgUhPw/Pdvt1xZlhOIEWtPzGZ6NL3oPl15/PbfvTXRz/1SLhDvqNzMKu85bUkW739aHw1rM1tum0WDym90INAhrnRergnpnpDTodeso8bjjmtHvf9oj2ndwbzW6kCUWB0nffH6+e4w2G/P5YkRKox7pk9dL9Lju/rpfPZZEe7XochaON/wxXqLHSae2qk0fBuZlULI3T1eJqgy3kuv43Iae1xOd0L1yHkoL1rOsxuCPtaxcL5elmvj14MHsjvLNo82f0PVFHEZW8z2n3Rz2jbkkDJPxM2CZL9PxCDtaV/ULya/lJbWQyJhkrv4i1SghgUq9le5KpcVPlACRyFfN3K67bdvzvKAbeEGlWrG8c8u17K4VWFXPc2qVdq5BWxYHFNuMTkgaK1XZ7fx8TRDPfQE0Am4sWYJnIPQvEDtIIi2kt+pwMCrgjikVtycCJa+TzYu7kRFpxLL68lxfRy7o2oDJa3rNg4kEvifdtrMn3beAyYJAqu/pgAs14UKqWryiZSJju7xEZQqJugF4KsK+4zaqpiDzRQwpU3POoiSG8mK2yCpjiu2/kiEsMisReMG4RLGdnb9P0zv8lldC+UQkdRBpSmeguglHriI7z+fzvKu7eefwQRKR9JipskpO8JbJ/qf3aUnHpBiVIjEs7Jx7seWHEEcAzC/4mYelKeJFS7ITPb9e1Y2h9KSV9/cVlV/LyXKZZB2tp1rJFbypJNM2h4ATJXibO/YC1CwgzG/dNwXrg8iFfZ9fImd0KJGEuZo/LVt+47ExBJE+NkJ1cNbffcnshVR1k7CWx2ztWL1JUsZfPluwj1M/Zb5RfyvGo/d2HcHaiaPyVC8MSeg0XaU3y+aT2cBMwRIlhYzvgh8DOBZ831gUueAi1TSNEwmff9FSjWvqCGOWUBl29Mywq7sZT7lZgP/u9AEm0/a3y3otPr2sH/pXQ6WAc6QXvuS/nQ2SjQtWeqf8My5Nfa3enio4ne7o/BvBj1J/ZnUD1zoLavVC6uueZ3eqnaKAe5m0Ppg/WnZqengeWn8B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH5nSC+XSjjBTQZyKoFuUo76cCekCoiXBJOWyf/1Oi62A6NEzwwyT1ZVvfeuSLzkVaB47fiAEcEkY1cJOU/8XVaBRBWdsNKoYG+64XjFQDRwDWRbGVbfqemNH10IhEgipkIjKpu5YtmtYNcNu3Fmeb9u+45SrXuNJ10bAhYJWLmVL19bzmAo/C9vUE059hgQRPkVzEL7E/jDoX/nK00c5J711umWZBeStmZQL3zRxOQIMcYzLmM3NU3PP5zQS/pBMKZIJh7eYkWjqb3tXq1V5VSkzPjUdy7JMyzOVTyTI9ERv/co3QxTSCduu24gySjCKyR+UkuqDnLFIC+Ip40TO5p9A26ZtpdAGrLGBbZee6OZ7gIzdN5H2SHKBDDFDdg52CxPgQDFo97dhUz/5Xge3e+84omLC+FwcrH9GCegSYraAyBB5Zjm77yMeKVfrFLAfUhwngixhkI7JAmEQ2g2HCVlfEaGGLxJa1n5tLdSP5FMG+CdtOTV3uSrq5pHqdMgUhPw/Pdvt1xZlhOIEWtPzGZ6NL3oPl15/PbfvTXRz/1SLhDvqNzMKu85bUkW739aHw1rM1tum0WDym90INAhrnRergnpnpDTodeso8bjjmtHvf9oj2ndwbzW6kCUWB0nffH6+e4w2G/P5YkRKox7pk9dL9Lju/rpfPZZEe7XochaON/wxXqLHSae2qk0fBuZlULI3T1eJqgy3kuv43Iae1xOd0L1yHkoL1rOsxuCPtaxcL5elmvj14MHsjvLNo82f0PVFHEZW8z2n3Rz2jbkkDJPxM2CZL9PxCDtaV/ULya/lJbWQyJhkrv4i1SghgUq9le5KpcVPlACRyFfN3K67bdvzvKAbeEGlWrG8c8u17K4VWFXPc2qVdq5BWxYHFNuMTkgaK1XZ7fx8TRDPfQE0Am4sWYJnIPQvEDtIIi2kt+pwMCrgjikVtycCJa+TzYu7kRFpxLL68lxfRy7o2oDJa3rNg4kEvifdtrMn3beAyYJAqu/pgAs14UKqWryiZSJju7xEZQqJugF4KsK+4zaqpiDzRQwpU3POoiSG8mK2yCpjiu2/kiEsMisReMG4RLGdnb9P0zv8lldC+UQkdRBpSmeguglHriI7z+fzvKu7eefwQRKR9JipskpO8JbJ/qf3aUnHpBiVIjEs7Jx7seWHEEcAzC/4mYelKeJFS7ITPb9e1Y2h9KSV9/cVlV/LyXKZZB2tp1rJFbypJNM2h4ATJXibO/YC1CwgzG/dNwXrg8iFfZ9fImd0KJGEuZo/LVt+47ExBJE+NkJ1cNbffcnshVR1k7CWx2ztWL1JUsZfPluwj1M/Zb5RfyvGo/d2HcHaiaPyVC8MSeg0XaU3y+aT2cBMwRIlhYzvgh8DOBZ831gUueAi1TSNEwmff9FSjWvqCGOWUBl29Mywq7sZT7lZgP/u9AEm0/a3y3otPr2sH/pXQ6WAc6QXvuS/nQ2SjQtWeqf8My5Nfa3enio4ne7o/BvBj1J/ZnUD1zoLavVC6uueZ3eqnaKAe5m0Ppg/WnZqengeWn8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3icx4yR7HCJPYEZE0rqNISeQJq2L2eEtAE1tmwsmUu+vrKJHSAkJz0zzDDa3lp77YuWdCFJFDqeLyWkisfCCHpt819Sxw402NSanDUaVt0hxDpvTWzLPndce1KvM5i2TCOQMoNASEWEapsOtusWbmqfMXY92/aceu3ccX6ZxndIpYbWLjVsGusoFNIrwrbNLBVeTCSXniARSE9Rb+QPbjzt6ZGSk9m52LIsAqaduVKJhxCtMaAQhrRG4whdoD2fCya9EZ8JorIUnmMy2Taf965Wq9rqrBanM+RgjBF2kfZhks9OzM6ncjOwQEzj7fqSiFhwSkL+RHJSA1DzmBl+OItTrubRG9A2snEObcGaWtSuixMTvQQo2H0QaY9kKokl58Quwe5gCikICsb9XdA2Tz7Wwe3ecUqEnMZpJA/Wf0cJxBLCOAFmyTKzkt3HEY+Uq3MB1AsEDTPJl3Cbj0lCKEjjWwpTvr7hUg8fk0bRfmMt9Y+XUwb0b9pygXa5auroSHV6fAZS/Z+e7fZri/KdhBl0bvnDw4/5P8HstMn6mC5/Dia9yXDFs1+yXVDYdd6Sqtr9vD4c1mq2njeNBz+nN4w+nPKNP5VIMPb16j4g4WJw+ogS6F6L0x9P4xgTjifpcji+vmIDsL/97n1ZJfjqS9CKun6UnM59HMEnFqMrPhTRze1pUL/Ha/fzZtN/mCHWm7A0aPx8kl+byObzhF/jpvslu0GzwRqL7iUdOfbvdDN8eFjG36+cZdf+9ckm66xHFtAcR2IxHmZf2WP7JafdHPaNpSSMsslvoKpc5uMR9Iy+7hdR78tLbuHMmhauXpJrlFQglNnJd+XS4mVagDjzdDO36/6l7bqu3/fdbrdxht3PuI7tPvZxw3Wd5tllqUFbFgcUL2Mx5XmsXGW38/M+QRp5EgSD1FrGGZ2DNN9B7BFFjEDc6cMRCwnjWKv4GdV0ccjObOfxcR0+wSpSi1YdTOM2VkMxTP2pgnRPuW1nT7nvgPKEQy7v+XxLPeBS6VIsyDJToV1bkpqATF8Aaa7Bet95A0keJSHkRFEUsyyEWjJPisIguf13LEJlYeWSJnGqSGgXx+/N7A6/lYXQPoznDjJPqQu6mXDkJrLLfN7Ou7GbdwnvZ4znp0xXVaWcbpnsf3oZlnxKqkmpEqPSLrlXW/4S4ggAeocfOixNFY8t+U708nbVF4aWk07Z3wWpLWrZcpkVHW3lUplqeKQV00YjoJnWu804fgSBKgj0oeumYn0QubLv88vUXIwUURDp+TOK5QfeGiOQ+Vsj0Odm/dGHzF5IXTcFa3XMdhnqJ0nO+N1XC/Vo7qfN3/TfKk7ZS7uOYO3E0XnqB4biYpav8otl88Zs0FjDcq2EcboLfgzgWPB9Y1XkiovS0zTJFLz9xcglrm0SSuNMqKBnFoZd2S14qk0C3ovTK5hC2p/v6rV8867+MbgZaQGMiFn58v92tngxLlTrnfYvuLTNtX566uBitiPzzwRfK30X9/067vrNVqX0Lde1e41eVcC9TDqvzK8tOzU9PA+dPw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0Tp4yjkwi2JClKAMmVaegHa6ZyXI+M4YJrYwXaA9uvHDk0KlPa0R0JC3tlee+2Ll33GQRI7fsA5YgJTog16Lf3famPqWlHVNRp11zVqTRcYADhNw7KsOkK1sF516ro24DxDA8IFIKKlO5ZdM6yGYbsTy/Nt23fcims1/9G1B8S4hJYuFUvXNklMuJ+HbekZIz4FHHOfgARxX0B/HAyvfOnpg4KT3j7bsswDsvZciNQ3TVgJEURxDCuQJuaZuedzFnJ/jGcEiIyh15ghb+mve9frdWVdrVA2Mx2ZlGl5pvQJOZ6d6u2TYjMKBySi23UXEEowBDF+AYrUEIk5DbUgnlGGxTz5ANo2bUtBG2gDDWjXyKluvgXI2X0RaY8k48Dgc2AXYCMUIYYIRNr9aNDST7/Wwe3eCQOER5Ql/GD9PUqIrFBMUxQavMisYPd1xCPlap8h6A8IjDOOV+hajUkKIOLaLUMR3lxhLocv5Frefm3D5Q8XU4bgd9pyZu5yldTNI9Xp4Rni4v/0bLdfW5QHEGeofTu6zCKXkiV7+kme45p3PhtW77H3i/9p5RR2nbekyna/rg+HtZyt100Dq3o3607tLl9mtzC1HkbXV81F9vSDd2ujRX+egd5FNF2FLzd/7u6eJ0+/LzJxcR5QKqKLSZI21tReOL+ao2mv0T8JpsO7H8tq9bl+fhfZHYtNkvk4XkU2fmywF49e/u5gJ8LDkNDGdLap3i2ml91G6lk/+14d3F5NHgLHvZ8Nu9eLxcmYPsqtjYfa03Xn52Zz447c1ltOuznsGwtJGGfTBYKiWKrxGPS0vuwXEJ/Li7Lg0IhyVz9VGsUFIkJvq11KWvxMChAOfdnM7brftT3P6zhBv9+peY3g3KpZdt8KrLrnOY2aW2jQlsUBxS4lEVaxlMpu5+dzgjDxOSIhYsaKZnCOuP4JYg8IoA3ISB4OSjiaUKni9gZhL+XrOWFP63CRxC80m3tR7OraNRU35IYFkUBsT7ptZ0+6RwjiFCOl72rAuZxwLmQtlmCVidiurECFoEzeAEyJsO/U3LrJcZLGSDE1ExpmMaqk8zSvjMm3/44BIM+tmMOUMgFiOz9/H6Z3+K2ohPQJsXLgKqUOkt1ER64iu8jnXd71o1dWAR9kIVbHTJZVMAy3TPY/vU2LGpNyVMrEILcL7uWWb0IcATA/4WcelqaMF67wTvTiepU3htSTdtHfJagsK9lqleUdbSqtZBLelJJpm2MEMyl4zxP6hIhZQphfum9K1geRS/s+v0zMyVgAgRI5f1q+/MJjY4y4emwM5MHZfPUlsxdS1k2gjThm68byTaIYf/psgT5UftJ8K//WlIVv7TqCtRNH5ilfGAKTmVqpm+X5g9mAVMJiKYWU7YIfAzgWfN9YFrnkIuQ0TTOBPv6iKY1r6QBCmhEx6Om5YVd3c57iOUX+m9M7mFzbXy/rDf/wsn4cXo2lAiZAL33xfzsbOB8XiHT1Jsi5tPSNfHvK4GS2o/OvBI9IvdUPalYnaDRLqW96nt2r98oC7mXSfmd+b9mp6eF5aP8F</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0511261403082686209</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0511261403082686209</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0511211403082681496</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0511241403082684050</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0511261403082686209</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFA9A45309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AFA9BC5309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B2AFFC496AE0401F0A05992648</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_UserGet_FUNC_ADULT_SAU_Get_CHILD_200_OK_P1" searchProperties="true" id="8026e91e-425a-46cc-bef7-3e765835e988"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8f73e5e6-2d45-47c9-9232-21024dd8ca22"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9da92d9e-fd6a-4c77-967a-f3ce5b1d9f22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultSAU" id="2e5ce7d4-46d8-496c-a711-6c04bd257241"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultSAU" id="002f6b71-8c40-4842-8ea3-7a8b0151f2c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="af508476-8a8d-4a85-b3ba-c6769f407359"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="4827f9c2-3230-4516-9c4f-0d409e65d060"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="e88dbbc4-1224-478b-b4ee-1cea83120f03"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B3DE3C9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999AE5CC41C68E0401F0A07991D55:84207F88"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0511351403082695143</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B220C3DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B220C3DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B220C3DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B3DE3C9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B0985B610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B23B43FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B3DE3C9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B0985B610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B23B43FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tq45nSCwVpB5jhqlVEBfRTX87EdAPRNi1NCuiv/5JiKyB69Mwww2R3Z+21L1lJnaEwsNwWY5BwElHF6zbUf51p2bdsDBquYqzZ5bKp1SqOrcGT7Z9YuDrFTk1VPMZS8CjjiPKGahmmrRlVzaxNDMc1Tbdsluyy9agqd5AwAS1cSoaqrMOAMjcL21DThLoRYoS5FIXAXI7dcety4ApPF+Wc1GZ9wzILmDTnnMeuruOSDxiCAJdwFOp1fcen7jN3TGYU8TSB95g+a6jve1erVWlVLkXJTLcMw9ANRxc+PiOzY7V5lG8G36PTaLPuIBpRglFA3pAkdQl8HvlKK5hFCeHz8AtoUzcNCa3BGmvYtOmxqn8EyNj9EGmHZMKQxubIzMFGMIUEKAblduQ11OOfdXCzd5IgyqZRErK99e8oAV1CEMXgayzPLGf3c8QD5WrWAbsexUHKyBKGckxihIEp1wlMyXpAmBg+nylZ+5U1Ez+STxng37Slrm9zFdT1A9Xpkhkw/n96tt2vDcodClJorhZz+0942bFJehb0mcOe2wk/h3Y7sBsZhW3nDami3e/r/WEtZut90+zmbBS2rkJjdjc2gtN2cPvUfxgx4INRO0yHw8f78WCAVrS1PB1WrobTXs9+fEnN5HwR6Revy7ObP+T+Iu08P7zw8yP+Nuj1DbPlD19D/NIPa6fx5LHrXd3E2PPuBiahToLOJq993avFULlZVPuD9fr69qy3wD2dd+9bd7VL+/mRXMSdo39O584S7u+G92jQHT2jB2PW+MhpO4ddYy4J4/TpGTDPl3I8vK7SF/1C/Ht5kRbia9PM1Y2lRjEOlKtNuUtKi5sKASK+K5q5Wfc7puM47XK3V+44YtEzbMPsGy3jxHHMbsXJNWjDYo9iJ6JTImNJld3Mz/cEcegyoD4k2jJK8RyY+g1iF3GkeHQkDkdEGUwioeLztylfVJ7isrkmpoHnCzuITqrPT4GqDCN+Ra+S1pRDsiPdprUj3SPAJCYg9V0OOBMTzrioxQItUx6YpSUqUUjFDZBIEXYtu1bRGQnjACRTPYz8NIBSPI+zyuhs829pCLPMShiOo4SjwMzO35fp7X/LKyF8fCIdmEypDaKbcOAqsvJ8vs67sp13Dt9KfSKPmSgrTwjeMNn99DEtckyKUSkSw8zMuRdbfglxAED/hp++X5oinr8kW9Hz61XcGEJPmnl/F6i0KKXLZZp19ERqZSLgdSGZpj4GnArBe51EL0D1AkL/0X1TsN6LXNh3+aV8TscccQjF/CnZ8gePjTEw+djwxMFZ//QlsxNS1I3Dmh+ydQLxJpGMv322YBdLP2G+Fn+rKPE/2nUAayuOyFO8MDihM7mSN8vrF7OBIwFLhBRGyTb4IYBDwXeNRZELLlxM01PK4esvitS4hoowjlLKva6aGbZ1N+PJX2NwP5w+wWTa/n5Zr9mXl/X95WAsFDBEauFL/ttZI9m4YFDlmyDj0lDX4u0pgtPZls6/Ezwg9ZZldMrddrlcSH3FcayqXS0KuJNJ85P5s2WrpvvnofkX</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tq45nSCwVpB5jhqlVEBfRTX87EdAPRNi1NCuiv/5JiKyB69Mwww2R3Z+21L1lJnaEwsNwWY5BwElHF6zbUf51p2bdsDBquYqzZ5bKp1SqOrcGT7Z9YuDrFTk1VPMZS8CjjiPKGahmmrRlVzaxNDMc1Tbdsluyy9agqd5AwAS1cSoaqrMOAMjcL21DThLoRYoS5FIXAXI7dcety4ApPF+Wc1GZ9wzILmDTnnMeuruOSDxiCAJdwFOp1fcen7jN3TGYU8TSB95g+a6jve1erVWlVLkXJTLcMw9ANRxc+PiOzY7V5lG8G36PTaLPuIBpRglFA3pAkdQl8HvlKK5hFCeHz8AtoUzcNCa3BGmvYtOmxqn8EyNj9EGmHZMKQxubIzMFGMIUEKAblduQ11OOfdXCzd5IgyqZRErK99e8oAV1CEMXgayzPLGf3c8QD5WrWAbsexUHKyBKGckxihIEp1wlMyXpAmBg+nylZ+5U1Ez+STxng37Slrm9zFdT1A9Xpkhkw/n96tt2vDcodClJorhZz+0942bFJehb0mcOe2wk/h3Y7sBsZhW3nDami3e/r/WEtZut90+zmbBS2rkJjdjc2gtN2cPvUfxgx4INRO0yHw8f78WCAVrS1PB1WrobTXs9+fEnN5HwR6Revy7ObP+T+Iu08P7zw8yP+Nuj1DbPlD19D/NIPa6fx5LHrXd3E2PPuBiahToLOJq993avFULlZVPuD9fr69qy3wD2dd+9bd7VL+/mRXMSdo39O584S7u+G92jQHT2jB2PW+MhpO4ddYy4J4/TpGTDPl3I8vK7SF/1C/Ht5kRbia9PM1Y2lRjEOlKtNuUtKi5sKASK+K5q5Wfc7puM47XK3V+44YtEzbMPsGy3jxHHMbsXJNWjDYo9iJ6JTImNJld3Mz/cEcegyoD4k2jJK8RyY+g1iF3GkeHQkDkdEGUwioeLztylfVJ7isrkmpoHnCzuITqrPT4GqDCN+Ra+S1pRDsiPdprUj3SPAJCYg9V0OOBMTzrioxQItUx6YpSUqUUjFDZBIEXYtu1bRGQnjACRTPYz8NIBSPI+zyuhs829pCLPMShiOo4SjwMzO35fp7X/LKyF8fCIdmEypDaKbcOAqsvJ8vs67sp13Dt9KfSKPmSgrTwjeMNn99DEtckyKUSkSw8zMuRdbfglxAED/hp++X5oinr8kW9Hz61XcGEJPmnl/F6i0KKXLZZp19ERqZSLgdSGZpj4GnArBe51EL0D1AkL/0X1TsN6LXNh3+aV8TscccQjF/CnZ8gePjTEw+djwxMFZ//QlsxNS1I3Dmh+ydQLxJpGMv322YBdLP2G+Fn+rKPE/2nUAayuOyFO8MDihM7mSN8vrF7OBIwFLhBRGyTb4IYBDwXeNRZELLlxM01PK4esvitS4hoowjlLKva6aGbZ1N+PJX2NwP5w+wWTa/n5Zr9mXl/X95WAsFDBEauFL/ttZI9m4YFDlmyDj0lDX4u0pgtPZls6/Ezwg9ZZldMrddrlcSH3FcayqXS0KuJNJ85P5s2WrpvvnofkX</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jDwyJPYEZCEnqFpJcCEmblztCXkDFlhxLNqa/vpKJHSAkN70zzDBar86e/dCRzjiKI8fvcQ6pIIxqwaCj/+s2Ww5YrVMDOwgbrmeHxgy7yHBa0MJNu+m4tqNrAecZBJQLREVHdyzbNay2YZ/eWZ5v236z2Thtnzzq2j2kXEJLl4ala0UcUe6XYTt6llKfIU64T1EM3BfYn/RGQ196+qjipHfPtizLgGl3KUTimyZuhIAhinADs9g8M/d8zkLuT8iCIpGl8Bwz5B39ee96vW6smw2WLkzHsizT8kzpE3Ky+Kx3P1WbIQzonG3X54gySjCKyG+kSI1ALFmo9aIFS4lYxm9A26ZtKWgDCmxg26WfdfMlQMnug0h7JFOODL5EdgU2hjmkQDFo03HQ0T9/rIPbvXcponzO0pgfrP+OEtAcIpZAaPAqs4rdxxGPlKt7BtgPKI4yTnK4VmOSIAxcu01hTooh4XL4Qq6V7dcKLn+kmjLAf9OWM3OXq6RuHqnOgCyAi//Ts91+bVHuUZRBN+u1vjh8fPnt9Nv36HKFr0nYn92Ej7PHoFNS2HXekqrb/bw+HNZ6tp433Xh2f/Z0IZLp9yb0Tq48cnF+xYR1f1vcW+dN/uVy/bBwB27ykF8vvvbDx1GSeHYejYT4ffP1h2kGgk0fh8x8LL58CoOradwe/nYnuHBStGnm2Lodb/7xpst1f9abk+H32A36xRqFo5/X4/sfq6m7WtGnIfsarUbf4gs0mG3unoarn1fepwxy/GszeEhaJ5teCMNBNu285LSbw76xkoRJNvsFWFRLNR7BQLuU/ULifXlRFhIa89LVT5RGcQFU6F21S0mLn0kBIqEvm7ldX57bnuf1Le+01W/bVu/Cci370upZLc9z2q5TadCWxQHFc0bnRMVSKrudn/cJ4tjnQENIjZxleAlcfwdxgATSAjqWh4NRDndMqri9FkWRxRi81pLbv1rtcH4i2vmsaOraNRM39CbtzQWke9ptO3vaPQZMEgJK4NWEczniXMhiPKE8E5HdyFGDQiavgFSpsO+4py2TkziJQFE1YxZmETSSZVKWxuTbf8dAmJdWwnHCUoEiuzyAb+Z3+K0qhfQJiXLgKqU+yHbCkbvIqfJ5O+/Wbt4VfC8LiTpnsq4iJXjLZP/Ty7ioOalnpU4Mc7viXm/5S4gjAOY7/MzD0tTxwpzsRK/uV3llSEHpVv19Qo2nRpbnWdnREyWWqYQ3pWba5gRwJhVvc8dWQM0awvzQhVOzPohc2/f5ZWJJJwIJiOX8aeXyA6+NCXD12gjkySk++pTZCynrJqAQx2znkXyUKMbvvluwj5WfNN/KvzVLw5d2HcHaiSPzlE8MQehCrdTVsnljNjCTsERqIUt3wY8BHAu+b6yLXHMRcppmmYC3v2hK5Do6wphlVAQDvTTsCm/JU2wS8F+cXsGU4v58Wxf8zdv6x2g4kRIYI732Jf/tbJByXDDo6lFQcunohXx8yuB0sSP0zwSPaL3jyPtx0G82D7S+XRdwL5PuK/Nry05ND89D9w8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxGlj6OQCyGQqCBxGTTZ0pYl9DJ9WRnHAZfESW0Hwvz6tUOTAqXdzkpIyCfH3/nOxZ99yUASW16fMUQ5Tonij7rqP9DoOMBwgOa0F0CzHcvR3BYKNRTZbWfRiaxWx1UVn7Ec+YRxQHhXtQzT1gxHMztzw/VM02u2G5ZhP6nKPaJMQAuXhqEqRRIT5pVhu2pOiZcChplHQIKYx6EX9K8nnvD0QMVJ7V3uWZYBaW/FeebpOmyECKI4hg2YJvqlfuRzGTIvwEsCeE7Ra8yQddXXvdvttrFtNlK61C3DMHTD1YVPyPDyQu19qzaj0CdRul8PAUkJhiDGv4EkdY34Kg2VfrxMKear5ANoUzcNCa2hAmrQtMmFqr8FKNl9EemIJGVAYytgVmAzFCGKCETK3czvqhdf6+B+75wCwqKUJuxk/WeUENmgOM1EDFZlVrH7OuKZcvUuEfR8AuOc4Q26kWOSAYiYMqUowsUEMzF8IVPK9isFEz9cTRmCf9KWS/2Qq6Cun6nOCC8R4/+nZ4f92qPcgzhHvacJ6oCkqV/t1jdjhyQTmD6tf84GT8zvlhQOnfek6na/rk+HtZ6t100vs/UPs7N8Jq3W9V0e/M1of2cHAG/vhg/oOn/8Hj1vO8GvhR08jpa3D83J9Rr+dNrTPMLr4e3cmLd362zw8+FqPi2+Wa37X3/tHBI8jW/yVcGA3zJMF7Xbk3i+eLIm9Id7fzUb3UzvbpcDUmyDCNDpIpjtzGLUSrKH8ez7eE0fr7AdN7/loBUzf/k8ddcT+/E5dAy/+5bTYQ7HxkoSgnzxjCCvlnI8/JEyFv0C/HN5kRYcalHp6mVSoxhHhKs9uUtKi5cLAcKhJ5q5X4+Hpuu6A6s5sJvjQXv4w7ANc2z0jbbrmiPHrDRoz+KE4jAlEZaxpMru5+dzgjDxGCIhotomzeEKMfUTxBHgQPHJTByOlDA0T4WKm1hAGo6ZoKKdmOSlbRRJVsQ82qnKTcpvyS3tRxzRI+02rSPtniGIM4ykwMsJZ2LEGRfFeAGbnMdmYwMaBOXiCqBShT3L7rR0hpMsRpKqnqRhHqNGtsrK0uhs/29pALLSihnMUspBbJYH8MP8Tr9VpRA+IZYOTKY0QKKd6MxdZFX5vMu7dfbOquD7eYjlORN15RTDPZPjT2/jIueknpU6Mcjquai3/CHEGQD9E376aWnqeOEGH0Sv7ldxZQhB6VX9fQGNl0a+2eRlR9tSLKmA14VmmnqAYC4UbzdP14joNYT+pQunZn0SubYf88v5igQccJSI+VPK5RdeGwFi8rXhi5NTfPUpcxRS1I2jgp+zDWPxKJGMP323QA9KP2Geir9tSsO3dp3BOogj8hRPDI7JUq7k1bL7YDZgKmCx0MKUHoKfAzgX/NhYF7nmwsU0LXKOPv6iSJHrqgDCNCfcH6ml4VB4S558lyHvzekdTCnur7d1wT68rR+vJ4GQwASotS/+b2cNl+MCkSofBSWXrlqIx6cITpYHQv9K8JzWW8awORo0m7XWt1zXcmynLuBRJr135veWg5qenofevw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0511351403082695143</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0511351403082695143</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0511301403082690444</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0511321403082692884</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0511351403082695143</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B3DE3D9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B0985C610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B23B44FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_UserGet_FUNC_ADULT_BAU_Get_CHILD_200_OK_P1" searchProperties="true" id="107bef3e-c94c-4301-be01-6e23bfd6fb8b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="21990503-56db-4249-8a48-5982e72acd31"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a1101d77-8e9e-4040-9a42-8eb2709a48a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultBAU" id="e24833e7-73ad-4108-ac68-111416729551"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultBAU" id="775ec02f-43b3-4ee0-b4f4-c5d2e1494f38"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="69bf749c-d973-4dc5-a693-6e5e8cc1732b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="30a62470-1e99-41fb-8ab6-6cc0a7a18426"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="8016296a-882c-4519-b568-864c86d6c7ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BBF75676D4E0401F0A07991D71</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999AFAAD55309E0401F0A0599263C:16373F01"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0511431403082703628</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999AFAAA65309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999AFAAA65309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999AFAAA65309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BBF75676D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AE5CD11C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B23B6AFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BBF75676D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AE5CD11C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B23B6AFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/A4jx1jyxgTewIzEELrhiQUSNvNy46QLyBqS8SSgeyvX8nEDhCSTXeGGUbXV+ee+6EjXQicJm7YEQIySTkzol7L/BuCRtD0UWA1MKlbXuAj6xx7yHJR0/P8hk8cTEwjEiKHiAmJmWyZroM8y/EtdD5xghCh0HNqqO49mMYPyISCVi41xzS2acJEWIRtmXnGQo4FFSHDKYhQknDcuRmEyjPEJSezfbFjWQTM2gspV6Ftk1oMBJKE1AhP7Qv7wOciFuGYzhmWeQbPMWPRMp/3bjab2qZe49ncdh3HsZ3AVj6xoPMzs/2p3AxxxGZ8t77EjDNKcEL/wZrUDcgFj41OMucZlYv0DWhkI0dDW7AlFkEeOzPtlwAFuw8iHZDMBLbEAqMSbAQzyIARMO5HUcs8+1gHd3snGWZixrNUHK3/jBKwNSR8BbElysxKdh9HPFGu9gWQMGIkyQVdw60ekxUmIIxhBjO6HVChhi8WRtF+YyvUj5ZTBuRP2nJh73NV1O0T1enROQj5f3q2368dyg+c5NAmP+XPa783vxWReEhI/G0w2Xqby4jK762Cwr7zjlTV7uf18bBWs/W86Un1+/Y+S4dULBjJB50+Xn0e5ogOmsPUW8y6Y/6TTtK7IXztxo8o+vJjeS+pXf/q3ozd1M2mw1m/wcGZfV+JT7+dpbP0Gwvv3v/LRaMvy8ep/avbSabncr2+cgdf7rujrhvljHuzwegWZD51I/TZFXfYmUSoeXN3s0yWaXdBHPcT/Xo9cB970cOVIOn1LWXr762XnPZzODSWkjDOp0sgslzq8Yh6Rl/1C8v35UVbaGzNCtdwpTVKSGDSbOtdWlrCXAkQjUPVzN26f4mCIOh2+82G3/R73pXjOajvdJxmEKBeE5UatGNxRPGSsxnVsbTK7ubnfYIkDQWwGDJrzXOyAGG+g9jDEhsRG6nDwZmACVcqjghBmyeaT/1z1lAHk82IjH9vvMA0brm8Y3dZZyYhO5Bu5B5I9wgIXVHQ+q4HXKgJF1LV4hGvc5mg2hrXGOTqBsi0CIeud96wBU1XCWimdsrjPIHaarEqKmOL3b9rYSIKKxVkxTOJE1ScvzfTO/5WVkL5xFQ7CJ1SF1Q34cRVVC/zeTvvxn7eJXwnj6k+ZqqsMqNkx+Tw08u06DGpRqVKjIhqLKotfwhxAsB+h599XJoqXryme9HL61XdGEpP2mV/H3HtsZav13nR0abWykzB20oykT0GkivBe5rw38DsCsL+0H1TsT6KXNkP+eVywcYSS0jV/BnF8gOPjTEI/diI1MHZfvQlcxBS1U3CVp6yXSbqTaIZv/tsISHRfso8VH8bnsUv7TqBtRdH5aleGJKyuV7pm+XpjdkgXMFSJYU82wc/BXAq+KGxKnLFRappmuYS3v5iaI1rmZgQnjMZ9czCsK+7BU/5tILwxekVTKHtz5f1Vrx5Wf+6GYyVAqbYrHzpfztbtBgXAqZ+ExRcWuZWvT1VcDbf0/lngq+lvtPvdDp+o+4EldQ3gsD165dVAQ8yab8yv7bs1fT4PLT/BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/A4jx1jyxgTewIzEELrhiQUSNvNy46QLyBqS8SSgeyvX8nEDhCSTXeGGUbXV+ee+6EjXQicJm7YEQIySTkzol7L/BuCRtD0UWA1MKlbXuAj6xx7yHJR0/P8hk8cTEwjEiKHiAmJmWyZroM8y/EtdD5xghCh0HNqqO49mMYPyISCVi41xzS2acJEWIRtmXnGQo4FFSHDKYhQknDcuRmEyjPEJSezfbFjWQTM2gspV6Ftk1oMBJKE1AhP7Qv7wOciFuGYzhmWeQbPMWPRMp/3bjab2qZe49ncdh3HsZ3AVj6xoPMzs/2p3AxxxGZ8t77EjDNKcEL/wZrUDcgFj41OMucZlYv0DWhkI0dDW7AlFkEeOzPtlwAFuw8iHZDMBLbEAqMSbAQzyIARMO5HUcs8+1gHd3snGWZixrNUHK3/jBKwNSR8BbElysxKdh9HPFGu9gWQMGIkyQVdw60ekxUmIIxhBjO6HVChhi8WRtF+YyvUj5ZTBuRP2nJh73NV1O0T1enROQj5f3q2368dyg+c5NAmP+XPa783vxWReEhI/G0w2Xqby4jK762Cwr7zjlTV7uf18bBWs/W86Un1+/Y+S4dULBjJB50+Xn0e5ogOmsPUW8y6Y/6TTtK7IXztxo8o+vJjeS+pXf/q3ozd1M2mw1m/wcGZfV+JT7+dpbP0Gwvv3v/LRaMvy8ep/avbSabncr2+cgdf7rujrhvljHuzwegWZD51I/TZFXfYmUSoeXN3s0yWaXdBHPcT/Xo9cB970cOVIOn1LWXr762XnPZzODSWkjDOp0sgslzq8Yh6Rl/1C8v35UVbaGzNCtdwpTVKSGDSbOtdWlrCXAkQjUPVzN26f4mCIOh2+82G3/R73pXjOajvdJxmEKBeE5UatGNxRPGSsxnVsbTK7ubnfYIkDQWwGDJrzXOyAGG+g9jDEhsRG6nDwZmACVcqjghBmyeaT/1z1lAHk82IjH9vvMA0brm8Y3dZZyYhO5Bu5B5I9wgIXVHQ+q4HXKgJF1LV4hGvc5mg2hrXGOTqBsi0CIeud96wBU1XCWimdsrjPIHaarEqKmOL3b9rYSIKKxVkxTOJE1ScvzfTO/5WVkL5xFQ7CJ1SF1Q34cRVVC/zeTvvxn7eJXwnj6k+ZqqsMqNkx+Tw08u06DGpRqVKjIhqLKotfwhxAsB+h599XJoqXryme9HL61XdGEpP2mV/H3HtsZav13nR0abWykzB20oykT0GkivBe5rw38DsCsL+0H1TsT6KXNkP+eVywcYSS0jV/BnF8gOPjTEI/diI1MHZfvQlcxBS1U3CVp6yXSbqTaIZv/tsISHRfso8VH8bnsUv7TqBtRdH5aleGJKyuV7pm+XpjdkgXMFSJYU82wc/BXAq+KGxKnLFRappmuYS3v5iaI1rmZgQnjMZ9czCsK+7BU/5tILwxekVTKHtz5f1Vrx5Wf+6GYyVAqbYrHzpfztbtBgXAqZ+ExRcWuZWvT1VcDbf0/lngq+lvtPvdDp+o+4EldQ3gsD165dVAQ8yab8yv7bs1fT4PLT/BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6I6FP6+v4JhP3YQgqDCVGdYsbt0td1Wt9fdL3diCJpeCDYJaPfX3wQLVWt72zvjjJPDyXOe85InOecwS20/4BwzQXKqRWFf/9trwyS2HNvAtpsYTjvpGhCCxOh4na4HQC9JYlvXIs4LHFEuIBV93baAY1gdA/RmlucD4Dt2q+24v3XtDjMuoaVLy9K1bZZS7ldh+3rBqJ9DTrhPYYa5L5A/DSZjX3r6sOakD853LKuAbLASYu2bJmrFGOE0RS2UZ+a5eeBzHnN/SpYUioLhp5gx7+tPezebTWvTbuVsadqWZZmWZ0qfmJPlZ33wqd6M44gm+W49hDSnBMGU/IGK1ASLVR5rQbrMGRGr7BVoYAJLQRt4iwwEHPpZN58DVOzeiXRAknFo8BUENdgtTjDDFGHt523U1z+/r4O7vTMGKU9ylvGj9ccoYVriNF/j2OB1ZjW79yOeKNfgHCM/oigtOCnxlRqTNUSYaz8YTsh2TLgcvphrVfu1LZc/Uk8ZRh9py7m5z1VSN09UJyRLzMX/6dl+v3YodzAt8OCn/Z2FUXx9ZmXf3OU9Gl9cRdvJ7wAEeb+isO+8I9W0+2l9PKzNbD1tGs5ir3fjwYm7+F5c0qvNzeXc7HZtOA1Fpz0ZZXZAZ8NF53bxFcyd1bfRZfcBmvO2Of3puDdn1uX0LnRKnoo5cz+xiMZ/rm7L8eP92iXjqRkyel+06fxrL5mmI3uexygeU/MX+BXMOmfZXdqzu/e/un/dwMvR19Bdz9KydFbzLhrFn7xFm59NvO4N+0I4C+1xtOk/57Sfw6GxloRpsbjHSNRLNR5RqF3IfkHxtrwoC4mNpHL110qjuMBU6AO1S0mLX0gBIrEvm7lbXwyB53nByB2GAAw7vZHlWODCCqyu54HQdWsN2rE4ojjMaUJULKWyu/l5myDKfI5pjJlR5gVaYa6/gRhCAbWI3srDkVOOZ7lU8Tajpc03Dip6q+LRWcQJWS23AOnaVS6u6TULEoHZgXID+0C5bzEia4KVvKv55nLAuZCleIBlIVLQKmGL4kJeAExpsG87PdfkJFunWBE1szwuUtxar9ZVYUy++7cNiHhlJRytcyZgCqrj92p2x9/qQkifmCgHrlL6gmUz8YmbqF3n83re7n7eNXxQxESdMllVwQjaMTn89DwsakqaSWkSQxzU3JstH4Q4AWC+wc88Lk0TLy7JXvT6dpUXhpSTQd3fB9h6aBVlWVQd7SqpZBLelIoJzClGhdS7x1n+D6ZmA2G+67ppWB9FbuyH/AqxolMBBc7k/GnV8h1vjSnm6q0hJQpv3/uQOQgp6ybwVpyyDVP5JFGM33y1IB8pP2n+If82OYuf23UCay+OzFM+MAShS7VSF8vjK7OBcglLpBLmbB/8FMCp4IfGpsgNFyGnaVEI/PoXTUlcX4cI5QUVUahXhn3ZrXiKxzX2n51ewFTS/nRXb/mrd/V8Mp5KAcyg3viS/3Y2SDUuCOvqSVBx6etb+fSUwelyT+afCJ5Q+osgCDpu2/IapXc9z+60h00BDzIZvDC/tOzV9Pg8DP4F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3jcx47xhas9gRkD4dQtNA2QpMnLGUXegBJbNpJsaL6+kokdICQnPTPMMNreWnvti5Z0xlEcOZ7POTBBEqoFw67+r+U6sGhabcNtdupGw0G2cd8Om0a7fh+27XbD6YSWrgWcZxBQLhAVXd2x7IZhtQy7M7dcz7a9RrPWbrh3unYNjEto6VKTu7ZxRLlXhO3qGaNegjjhHkUxcE9gb+ZPxp709FDJSe+d7VgWAVlvJUTqmSauhYAhinANJ7F5Zh74nIXcm5ElRSJj8Bwz5F39ee9ms6lt6rWELU3HsizTck3pE3Ky/Kz3PpWbIQzoItmtB4gmlGAUkSekSE1ArJJQ86NlwohYxW9A26ZtKWgDttjAdoN+1s2XAAW7DyIdkGQcGXyF7BJsCgtgQDFoV9Ogq3/+WAd3e+cMUb5IWMyP1n9HCWgOUZJCaPAys5LdxxFPlKt3BtgLKI4yTnL4ocYkRRi49pPBgmzHhMvhC7lWtF/bcvkj5ZQB/pu2nJn7XCV180R1hmQJXPyfnu33a4dyjaIMenc3l+YX5xvqXy+vaer3Y7ia3wZzv5/ybkFh33lHqmr38/p4WKvZet6E7zYD4Vy1Ly+/itnPy8n6G82dbeDzBzL6llvh2GaD2fj2HPK5nQ0ekxC+RL+WXxtDf8Rx2NpOOxFLTXo3AqCflmP2dD9unA8e0NPqYRl01u7FU7byH76vp635P2CZl4stuxjmeMH47KvZ2d6NWpNH6+b28jy7/97Ek75wJvXxYNXin27mt47IO2vcgHg6IPVf9rL7ktN+DofGUhJm2f0DYFEu1XgEQ20k+4XE+/KiLCQ0FoWrlyqN4gKo0Htql5IWL5MCREJPNnO3Hg1s13X7Tr3f8kf99uDcalj2yPKttuvaw5ZdatCOxRHFQUIXRMVSKrubn/cJ4tjjQENgRp5keAVcfwdxiATSAjqVhyOhHOaJVHGSpW4L7EdrE0c2LFIrb3JhO+sHXfuRiAt6wfyFAHYg3bZzIN1TwCQloPRdDTiXE86FrMUa5ZmI7FqOahQyeQMwJcKe0+g0TU7iNALF1IyTMIuglq7SojIm3/07BsK8sBKO04QJFNnF+XszveNvZSWkT0iUA1cp9UF2E05cRfUyn1d5N09eWSW8n4VEHTNZVsEI3jE5/PQyLWpMqlGpEsO8Gotqy19CnAAw3+FnHpemihfmZC96eb3KG0PqSa/s7xrV1rUsz7Oio22llUzCm1IybXMGOJOC93uePAI1KwjzQ/dNxfoocmU/5JeJFZ0JJCCW86cVyw88NmbA1WMjkAdn+9GXzEFIWTcBW3HKNojkm0QxfvfZgj2s/KT5p/zbJCx8adcJrL04Mk/5whCELtVK3Sy/35gNnEhYIqUwYfvgpwBOBT80VkWuuAg5TfeZgLe/aErjujrCOMmoCIZ6YdjX3YKn+J2C9+L0CqbQ9ufLesvfvKx/TcYzqYAx0itf8t/OBinGBYOu3gQFl66+lW9PGZwu93T+meBrqfdHvu+3mnXLraS+6bpOqz6oCniQSe+V+bVlr6bH56H3Bw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0511431403082703628</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0511431403082703628</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0511391403082699403</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0511411403082701442</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0511431403082703628</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BBF75776D4E0401F0A07991D71</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AE5CD21C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B23B6BFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_UserGet_FUNC_YOUTH_SAU_Get_CHILD_200_OK_P1" searchProperties="true" id="c2b4c368-fd35-46e1-bec1-228f6dd3f3f7"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7cf016bd-e4d6-455c-9609-7fb257dbb6ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="37b2f067-9912-4498-b9b0-6bbd18fb9656"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthSAU" id="7a85ac8b-8461-4bfd-ba5f-5995f55dbf82"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create -YouthSAU" id="bc509cc2-8946-4fbb-ad57-154b083f64ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="d338e50b-926d-41b3-8dbd-b4617afc13eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="83821d0d-dbbd-4a87-b69d-c73c8dd8e621"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="ada26251-df17-4cf0-a5cd-6d872843a47a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E6FA2CADF51E0401F0A07993901</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC192E69CC674A8CE0401F0A05991C2E:5E1C554D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_045801403081880220</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E8345EE7A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E8345EE7A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E8345EE7A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E6FA2CADF51E0401F0A07993901</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E9C185D89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E5B13D9C083E0401F0A05991C3C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E6FA2CADF51E0401F0A07993901</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E9C185D89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E5B13D9C083E0401F0A05991C3C</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyjyjkwjVRQaIFZmiZ3uiZafty5NoOMU3s1Beg8/VjhyYFSns6R0JC3tlee+2Ll30kQJYG0UAIzCVh1JoMe/a/AHgdL4S+g7qo6TRBo+WEHmo7cSNoB+04AEEc29ZECIUnVEhAZc8OPL/peG3H79543ajViVrtetsL7m3rJ+ZCQ2uXumdb6yylIirC9mzFacSAICKiIMMikjCaDX5MI+0ZgZKT3T/asCwC8n4iZR65LqwjDHGawjpkmXvk7vgcIRHNyJwCqTh+iYlEz37Zu1qt6qtGnfG5G3ie53qhq32QIPOvdv9LuRmjCY3ZZn0CKKMEgpT8BobUDywThqxBOmecyCR7B9p3fc9AO3gNHeg36VfbfQ1QsPsk0g5JLoAjEuCXYNc4xhxTiK1/ric9++vnOrjZe8MBFTHjmdhb/x0lTJc4ZTlGjigzK9l9HvFAufpHGEYTClMlyBKfmzHJAcTCuuQ4JuspEXr4kLCK9ltroX+knDIM/6YtR+42V03dPVCdIZljIf9Pz7b7tUH5CVKF++fJ4232PLtsLH/do+HZ8uqXGk5Cv+NeDXoFhW3nDamq3S/r/WGtZutl09nj5TxZrH6PFqi2GD1fqxim32rHzUmyGvPu7VDltcXF4rQxQudr73R+1cm9+HgeSHYGa/7SD/D93dP0uwzjMHj4kk+7cXq58m4vjhu3XkrbMmRP2bLx7ZS7w/R+2hpI9VS7S0YqWU1r4dnAnc7u0Xrarv1Gi7hJHpJp0IUczXyZfvEvhGp9b6vbq/Dqbjyd3dHH3mtO2znsGktJmKmHBYayXJrxmAytse4XkB/Li7EQ5MSFa5QbjRISU2n3zS4jLZHSAkRQpJu5WY9P/DAYtceD4GQwHLf8kdf0/LE38Dph2Ag9v9SgDYs9iieMxsTEMiq7mZ+PCcIsEpgizJ0lUzDBwv4AcQgksCb0Wh8ORgW+YVrFfZW3OiueNNhathdJ2O1kOaDP3ty2zpm8oBd8EEvMd6Tb93ek+xpDkhNs9N0MuNATLqSuxRNYKpn69SWoU6z0DcCNCEdBs9tyBcnyFBumbsaQSnE9T/KiMq7Y/AcOgKKwEgFzxiVI/eL8vZve/reyEtoHEeMgTErHWHcTH7iKmmU+7+fd3M67hB8oRMwx02WVnMANk91Pr9NixqQalSoxKKqxqLb8JcQBAPcDfu5+aap4aEm2opfXq74xtJ70y/4+gfpTXS2Xquhox2gl1/CulkzfnWGotOA937BHTN0Kwv3UfVOx3otc2Xf5KZnQmQQSZ3r+rGL5icfGDAvz2Jjog7P+7EtmJ6Sum8Rrech2kuo3iWH84bMFRtD4afOl/lsxjl7bdQBrK47OU78wJKFzszI3y/M7swGZhiVaChnfBj8EcCj4rrEqcsVF6ml6UBK//8UyGtezAYRMUTkZ2oVhW3cLnvI5x9Gr0xuYQttfLuu1ePeyvv0xnWkFzIBd+ZL/dnZIMS4Q2+ZNUHDp2Wv99tTB6XxL518IvpX6bqPZGo06g1a4K/VBqyrgTib9N+a3lq2a7p+H/h8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyjyjkwjVRQaIFZmiZ3uiZafty5NoOMU3s1Beg8/VjhyYFSns6R0JC3tlee+2Ll30kQJYG0UAIzCVh1JoMe/a/AHgdL4S+g7qo6TRBo+WEHmo7cSNoB+04AEEc29ZECIUnVEhAZc8OPL/peG3H79543ajViVrtetsL7m3rJ+ZCQ2uXumdb6yylIirC9mzFacSAICKiIMMikjCaDX5MI+0ZgZKT3T/asCwC8n4iZR65LqwjDHGawjpkmXvk7vgcIRHNyJwCqTh+iYlEz37Zu1qt6qtGnfG5G3ie53qhq32QIPOvdv9LuRmjCY3ZZn0CKKMEgpT8BobUDywThqxBOmecyCR7B9p3fc9AO3gNHeg36VfbfQ1QsPsk0g5JLoAjEuCXYNc4xhxTiK1/ric9++vnOrjZe8MBFTHjmdhb/x0lTJc4ZTlGjigzK9l9HvFAufpHGEYTClMlyBKfmzHJAcTCuuQ4JuspEXr4kLCK9ltroX+knDIM/6YtR+42V03dPVCdIZljIf9Pz7b7tUH5CVKF++fJ4232PLtsLH/do+HZ8uqXGk5Cv+NeDXoFhW3nDamq3S/r/WGtZutl09nj5TxZrH6PFqi2GD1fqxim32rHzUmyGvPu7VDltcXF4rQxQudr73R+1cm9+HgeSHYGa/7SD/D93dP0uwzjMHj4kk+7cXq58m4vjhu3XkrbMmRP2bLx7ZS7w/R+2hpI9VS7S0YqWU1r4dnAnc7u0Xrarv1Gi7hJHpJp0IUczXyZfvEvhGp9b6vbq/Dqbjyd3dHH3mtO2znsGktJmKmHBYayXJrxmAytse4XkB/Li7EQ5MSFa5QbjRISU2n3zS4jLZHSAkRQpJu5WY9P/DAYtceD4GQwHLf8kdf0/LE38Dph2Ag9v9SgDYs9iieMxsTEMiq7mZ+PCcIsEpgizJ0lUzDBwv4AcQgksCb0Wh8ORgW+YVrFfZW3OiueNNhathdJ2O1kOaDP3ty2zpm8oBd8EEvMd6Tb93ek+xpDkhNs9N0MuNATLqSuxRNYKpn69SWoU6z0DcCNCEdBs9tyBcnyFBumbsaQSnE9T/KiMq7Y/AcOgKKwEgFzxiVI/eL8vZve/reyEtoHEeMgTErHWHcTH7iKmmU+7+fd3M67hB8oRMwx02WVnMANk91Pr9NixqQalSoxKKqxqLb8JcQBAPcDfu5+aap4aEm2opfXq74xtJ70y/4+gfpTXS2Xquhox2gl1/CulkzfnWGotOA937BHTN0Kwv3UfVOx3otc2Xf5KZnQmQQSZ3r+rGL5icfGDAvz2Jjog7P+7EtmJ6Sum8Rrech2kuo3iWH84bMFRtD4afOl/lsxjl7bdQBrK47OU78wJKFzszI3y/M7swGZhiVaChnfBj8EcCj4rrEqcsVF6ml6UBK//8UyGtezAYRMUTkZ2oVhW3cLnvI5x9Gr0xuYQttfLuu1ePeyvv0xnWkFzIBd+ZL/dnZIMS4Q2+ZNUHDp2Wv99tTB6XxL518IvpX6bqPZGo06g1a4K/VBqyrgTib9N+a3lq2a7p+H/h8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/C4jx3jD+yAPYEZF5KuW5LQQNI0LztCvgYRW3YkGcj++pVM7AAh2XRnmGF0fXXuuR860ilHWeoEIefABMmpFg17+t945swgtmPD9d3EcDtebPgnXcfwfLcdw2x2MsNY1yLOS4goF4iKnu5YtmtYJ4bdnVrdwOsEXrflO/69rt0C4xJaurQsXdtkKeVBFbanl4wGOeKEBxRlwAOBg0l4MQqkZ4BqTnr/dMuyCsj6CyGKwDRxKwYMaYpbOM/MU3PP5zTmwYTMKRIlg+eYMe/pz3vX63Vr3W7lbG46lmWZlm9Kn5iT+We9/6neDHFEk3y7HiCaU4JRSv5BitQFiEUea2E6zxkRi+wNaNu0LQVtwAYb2HbpZ918CVCx+yDSHknGkcEXyK7BriEBBhSDdnMd9fTPH+vgdu+UIcqTnGX8YP1nlICuIM0LiA1eZ1az+zjikXL1TwEHEcVpyckKLtWYFAgD18YMErIZES6HL+Za1X5tw+WP1FMG+E/acmrucpXUzSPVGZI5cPF/erbbry3KLUpL6J8nvzdwMVkR2zUvH9AYJ3Nx/oXPLBr2Kgq7zltSTbuf14fD2szW8yb69b5oz8Zj74mjW9G+m55cuh3kwR0rLd6Bm5EzedxAchH+aift5c9huFzHK2w5v65G7exhEPPudPo9nkSQDZef7m4u2dWTORzYd/7vDE2icfQl+R3+gOTSefzZic5/ud/uE8HJgKPyni7+mo9YaNk/RzfRg/VDXI+vTjIyDIWzTNin0bcbr/CGrJiHS2tyEd2OcO8lp90c9o21JEzK2RKwqJdqPKKhdi77hcT78qIsJDaSyjUolEZxAVTofbVLSUtQSgEicSCbuV2fD2zfOfMHdtcbdv3w5MxyLfvcCi3P9+2BE9YatGVxQHGQ04SoWEplt/PzPkGcBRxoDMxY5SVeANffQRwigbSIXsvDkVMO01yquJ2Wm5RltL16WGVkvViepPZj4bUfdO0yF1f0ioWJALYn3ba9J93XgElBQOm7GnAuJ5wLWYtHtCpFardWqEWhlDcAUyIcOG7XMznJihQUUzPL4zKFVrEoqsqYfPvvGAjzyko4LnImUGpX5+/N9A6/1ZWQPjFRDlyl9BVkN+HIVeTW+bydt7ubdw0fljFRx0yWVTCCt0z2P71MixqTZlSaxDC3a+7Nlj+EOAJgvsPPPCxNEy9ekZ3o9fUqbwypJ/26v4+o9dgqV6uy6mhHaSWT8KaUTNucAC6l4D1N8wegZgNhfui+aVgfRG7s+/xKsaATgQRkcv60avmBx8YEuHpsRPLgbD76ktkLKesmYCOO2QapfJMoxu8+W3CAlZ80j+XfOmfxS7uOYO3EkXnKF4YgdK5W6mZ5emM2cC5hiZTCnO2CHwM4Fnzf2BS54SLkNM1KAW9/0ZTG9XSEcV5SEQ31yrCruxVP8VRA8OL0CqbS9ufLesPfvKzvLkYTqYAZ0htf8t/OBqnGBYOu3gQVl56+kW9PGZzOd3T+meBrqe+2Xe/srBN6fiP1Hd9v+47XFHAvk/4r82vLTk0Pz0P/Xw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZZb/I4FH3vr4jSxypkY0tUkCjQNtMd+GiHl5HrOMElccB2wvLrxw5NCpR22pGQkG+uzz138bHPGYgjy+0whijHCVG8Xkv9x7GAY4B6XbOa9UCrGqCqvVqvjgatV6OOAhP4qKYqHmMp8gjjgPCWahlmVTPqmtkcGU231nQNq2JazYmqjBFlAlq4VAxVWcURYW4etqWmlLgJYJi5BMSIuRy6w87drSs8XVBwUtvnW5Z5QNqecj53dR1WfARRFMEKTGL9XN/zOfeZO8QhATyl6D2mz1rq+97lcllZ2pWEhrplGIZuOLrw8RkOT9X2SbEZ+R4Jku26C0hCMAQR3gBJ6g7xaeIrnShMKObT+AtoUzcNCa2hFdSgWSWnqv4RIGf3Q6Q9kpQBjU2BWYANUIAoIhApfwZeSz39WQe3e0cUEBYkNGYH699RQiRDUTJHvsaKzAp2P0c8Uq72OYKuR2CUMpyhezkmcwARUx4pCvDqFjMxfD5T8vYrKyZ+uJgyBH/TlnN9l6ugrh+pTg+HiPH/07Pdfm1RxiBKURvOZsB+DLsvzs3ieT2u9xp04U961x5MWjmFXectqbLd7+vDYS1n633Tik6qnedNGCzN+dWGLMwzexLE3pPRWd6N0MXTwrt4jAZGtiR9NvhzjRs3E/sODlIfrkOvWVvdTl6ixvNb1PlrdHNiBs44OOs/XYTh+oFc3VTJojse3VefZ2eT8WyWEfSU1a7BC6xuzqYrm6Z/R5Q/BI1V823Szy6XTXg/qI/ts9i+9E6q9ltSS53rp003pOAqNJ5nrY+cdnPYNxaSMExf3xDkxVKOh9dTLkW/AP9eXqQF+1qQu7pzqVGMI8LVttwlpcVNhQBh3xXN3K4vu6Zj9WsXpt1zukbT7htVw7w0OkbNccyu3S00aMvigGI3IQGWsaTKbufne4IwdhkiPqJalqRwipj6DWIPcKB4ZCAOR0IYGiVCxZvLdYKmPMwa5qYRwzDKnJkzp1xV7hP+QB5oJ+CI7im3ae4p9wBBPMdIyrucbyYGnHFRigXIUh6ZlQxUCErFBUClBrtWtVnTGY7nEZJE9Tjx0whV5tN5Xhidbf8tDUCWWzGD84RyEJn58fsyu8NvRSGEj4+lA5MpXSDRTPTpJmq4tSKfT3nXjt5YBXwn9bE8ZaKqnGK4ZbL/6WNY5JSUk1ImBplZcC+3/BLiCID+DT/9sDRlPD/DO9GL21VcGEJO2kV/F6CyqKRZluYdbUippAJeF4pp6kMEU6F361EyQ0QvIfQfXTcl64PIpX2fX8qnZMgBR7GYPyVf/uCtMURMvjU8cW5WP33I7IUUdeNoxY/ZupF4kkjG375aoAulnzA/ir9lQv2Pdh3B2okj8hQPDI5JKFfyYll/MRswEbBYKGFCd8GPARwLvm8si1xy4WKaXlOOvv6iSIlrqQDCJCXc66m5YVd2c558PUfuh9MnmFza3+/qFfvyrn65ux0KAYyBWvri/3bWcD4uEKnySZBzaakr8fQUwUm4I/PvBD8rfdOu1vr9RqfmlErfcBzbsT5meS+T9ifzZ8tOTQ/PQ/tf</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_045801403081880220</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_045801403081880220</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0457551403081875880</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0457581403081878046</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_045801403081880220</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E6FA2CBDF51E0401F0A07993901</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E9C185E89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E5B13DAC083E0401F0A05991C3C</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_UserGet_FUNC_YOUTH_BAU_Get_CHILD_200_OK_P1" searchProperties="true" id="fec9c655-6b13-4647-997d-f3e94914ecde"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="566efbc0-6eac-4664-9f96-07a2b9c60f56"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4877bce2-ef94-4b2b-817c-83ef32a6b396"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthBAU" id="cf337113-4641-4213-9466-4700f40fd01d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YouthBAU" id="a9dc8a7d-7b95-4f43-b2ef-7a1d03f8e315"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="97871053-a327-411d-83bd-62044534d66a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="92ca1547-2fcf-4bc6-bf4e-8ad0d91831ac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="79dfe40d-5e62-4bc6-b726-c89c4741207a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E6645C1F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC192E6C3D966DC6E0401F0A05991C32:AA9FD54F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_045881403081888436</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E6B2DB34C77E0401F0A07993917</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E6B2DB34C77E0401F0A07993917</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E6B2DB34C77E0401F0A07993917</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E6645C1F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E6CAB66F362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E6CAB83F362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E6645C1F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E6CAB66F362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E6CAB83F362E0401F0A05991C36</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VIAoFcVJC4FDW9TFugM3Pm5cg4DphJ7NR2AvTrxw5NCpT2dI6EhLyzvfbaFy/7nIM0aQZ9zhETmBItHHX1f11guw6YO4brOq7htNy24Xsdz4jnXtufO3HsOZ6uhZznKCRcACK6etOyHcPqGLY3s7yg7QWW02h5nV+69h0xLqGlS8PStU2aEB6UYbt6zkhAAcc8ICBFPBAwmPZvbwLpGYCKk94737EsA7LeUogsME3YiBBESQIbkKbmuXngcx7xYIoXBIicoZeYEe/qL3vX63Vj3WpQtjCblmWZlm9Kn4jjxVe996XajKKQxHS3HgJCCYYgwc9AkbpFYkkjrZ8sKMNimb4DbZu2paANtIEGtB3yVTdfA5TsPol0QJJxYPAlsCuwCYoRQwQi7XESdvWvn+vgbu+MAcJjylJ+tP47SogUKKEZigxeZVax+zziiXL1zhEMQgKTnOMCfVNjkgGIuHbPUIw3N5jL4Yu4VrZf23D5w9WUIfg3bTk397lK6uaJ6ozwAnHxf3q2368dyneQ5Kh3HU7a8/gXefbno+2MFNbgchz6l+xysOiWFPadd6Tqdr+sj4e1nq2XTdz6Pr9awO3Z9Apd395a+Mnb3q3oc7i6MdmK0dXZ9OaRuGtn9XjXKZ4HVjb7OV4MC54D29v+GDiPq2/mw8P4an7lfynWY2b9du47bhxbTf969MukF+4dXHRAdgXuJ1bh/XA295vO5cp2xhfon6v+4Hlw/zwf3zDvx+XZ4/X4jMKHaWsx879MLlu38+HdKm4+LgF5MtcPYfc1p/0cDo2VJEzz+QpBUS3VeIQjbSz7BcTH8qIsODLi0jXIlEZxgYjQe2qXkpYglwKEo0A2c7ceD22/edHpOO2hPXb67QvLseyx1bdc32/5drvSoB2LI4pDSmKsYimV3c3PxwRhGnBEIsSMguZwibj+AeIICKCFZCIPByUczahUcWLFrh8tyLKZpXa6pr9XBfNTIoG0b1TckTvWjwViB9Jt2wfSPUEQZxgpfVcDzuWEcyFr8QSKXCR2owANgnJ5AzAlwkHT8domx2mWIMXUTGmUJ6iRLbOyMibf/TcNAHlpxRxmlAmQ2OX5eze9429VJaRPhJUDVykNkOwmenMVuUG7yuf9vJ39vCv4fh5hdcxkWQXDcMfk8NPrtKgxqUelTgxyu+Jeb/lLiBMA5gf8zOPS1PGiAu9Fr65XeWNIPelV/X0CjadGXhR52VFXaSWT8KaUTNucIphLwdvO6G9EzBrC/NR9U7M+ilzbD/nlYkmmAgiUyvnTyuUnHhtTxNVjI5QHZ/PZl8xBSFk3gTbilG2YyDeJYvzhswUGUPlJ8738W1MWvbbrBNZeHJmnfGEITBZqpW6W7TuzAamExVIKKdsHPwVwKvihsS5yzUXIaZrnAr3/RVMa19UBhDQnIhzppWFfd0ueYpuh4NXpDUyp7S+X9Ya/e1n/vL2ZSgVMgV774v92NnA5LhDp6k1QcunqG/n2lMHJYk/nXwiekPpBczRoOUPXPZJ6ty7gQSa9N+a3lr2aHp+H3h8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VIAoFcVJC4FDW9TFugM3Pm5cg4DphJ7NR2AvTrxw5NCpT2dI6EhLyzvfbaFy/7nIM0aQZ9zhETmBItHHX1f11guw6YO4brOq7htNy24Xsdz4jnXtufO3HsOZ6uhZznKCRcACK6etOyHcPqGLY3s7yg7QWW02h5nV+69h0xLqGlS8PStU2aEB6UYbt6zkhAAcc8ICBFPBAwmPZvbwLpGYCKk94737EsA7LeUogsME3YiBBESQIbkKbmuXngcx7xYIoXBIicoZeYEe/qL3vX63Vj3WpQtjCblmWZlm9Kn4jjxVe996XajKKQxHS3HgJCCYYgwc9AkbpFYkkjrZ8sKMNimb4DbZu2paANtIEGtB3yVTdfA5TsPol0QJJxYPAlsCuwCYoRQwQi7XESdvWvn+vgbu+MAcJjylJ+tP47SogUKKEZigxeZVax+zziiXL1zhEMQgKTnOMCfVNjkgGIuHbPUIw3N5jL4Yu4VrZf23D5w9WUIfg3bTk397lK6uaJ6ozwAnHxf3q2368dyneQ5Kh3HU7a8/gXefbno+2MFNbgchz6l+xysOiWFPadd6Tqdr+sj4e1nq2XTdz6Pr9awO3Z9Apd395a+Mnb3q3oc7i6MdmK0dXZ9OaRuGtn9XjXKZ4HVjb7OV4MC54D29v+GDiPq2/mw8P4an7lfynWY2b9du47bhxbTf969MukF+4dXHRAdgXuJ1bh/XA295vO5cp2xhfon6v+4Hlw/zwf3zDvx+XZ4/X4jMKHaWsx879MLlu38+HdKm4+LgF5MtcPYfc1p/0cDo2VJEzz+QpBUS3VeIQjbSz7BcTH8qIsODLi0jXIlEZxgYjQe2qXkpYglwKEo0A2c7ceD22/edHpOO2hPXb67QvLseyx1bdc32/5drvSoB2LI4pDSmKsYimV3c3PxwRhGnBEIsSMguZwibj+AeIICKCFZCIPByUczahUcWLFrh8tyLKZpXa6pr9XBfNTIoG0b1TckTvWjwViB9Jt2wfSPUEQZxgpfVcDzuWEcyFr8QSKXCR2owANgnJ5AzAlwkHT8domx2mWIMXUTGmUJ6iRLbOyMibf/TcNAHlpxRxmlAmQ2OX5eze9429VJaRPhJUDVykNkOwmenMVuUG7yuf9vJ39vCv4fh5hdcxkWQXDcMfk8NPrtKgxqUelTgxyu+Jeb/lLiBMA5gf8zOPS1PGiAu9Fr65XeWNIPelV/X0CjadGXhR52VFXaSWT8KaUTNucIphLwdvO6G9EzBrC/NR9U7M+ilzbD/nlYkmmAgiUyvnTyuUnHhtTxNVjI5QHZ/PZl8xBSFk3gTbilG2YyDeJYvzhswUGUPlJ8738W1MWvbbrBNZeHJmnfGEITBZqpW6W7TuzAamExVIKKdsHPwVwKvihsS5yzUXIaZrnAr3/RVMa19UBhDQnIhzppWFfd0ueYpuh4NXpDUyp7S+X9Ya/e1n/vL2ZSgVMgV774v92NnA5LhDp6k1QcunqG/n2lMHJYk/nXwiekPpBczRoOUPXPZJ6ty7gQSa9N+a3lr2aHp+H3h8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQGBIuUUGipMxEvU5p6Zy+HBlnB9xJbBo73L5+7NCkQGlP50hIyDvba6998bJPBE6Tut8XAjJJOTPCoGv+62IvJrEbWfU2mViuF9Wttgd1a4KajY5HJk3PaZhGKEQOIRMSM9k16w5yLadpofad0/a9tu80a023+WgaY8iEglYuNcc0VmnChF+E7Zp5xnyOBRU+wykIXxJ/1L+88JWnj0tOZu9ky7IImPVmUs592ya1CAgkCakRnton9p7PSST8EZ0yLPMMXmJGomu+7F0ul7Vlo8azqV13HMd2OrbyiQSdfjV7X8rNEIUs5tv1ADPOKMEJ3WBN6hLkjEdGP5nyjMpZ+g40spGjoS1YEYsgl3017dcABbtPIu2RzAS2xAyjEuwWYsiAETDub8Ou+fVzHdzuvcswEzHPUnGw/jtKwBaQ8DlEligzK9l9HvFIuXonQPyQkSQXdAFXekzmmIAwbjKI6eqCCjV8kTCK9hsroX60nDIgf9OWE3uXq6JuH6lOQKcg5P/p2W6/tihjnOTQO/+18db9/Ik5YWOzXqYtHgRj1n68dpxuQWHXeUuqavfL+nBYq9l62bTBoYMXwS+cRWgy3YTZ7871E/k+DofLp2/5hk6Db/KSBq2zjncP0eIMZutxeJX+9J5QRsPpTyqix7ObwfRhcRN/ueL3P2Yj9JDPN9/vH9ad1d2Yp33n+TxAy99o9IDcp2Dpnv/zMLwgFzYO7+MBrMIciUf6wzur/5gPRdykzuhydnP7Jboik5t7hE+vntvB42DsjkX3NafdHPaNpSSM8skTEFku9XiEgTFU/cLyY3nRFhpZceHqz7VGCQlMmj29S0uLnysBopGvmrldDweoUz9rDvqnzeaw0ayfOa6Dhk7f8TodNGg0Sw3asjigOOAspjqWVtnt/HxMkKS+ABZBZi14TmYgzA8QAyyxEbJbdTg4E3DHlYoj1t40N5B7G4jbaPacQitaTNM1F6ZxxeU1u876sYRsT7sR2tPuWyB0TkELvJ5woUZcSFWMZ7zIZYJqC1xjkKsrINMq7NfdtmcLms4T0FTtlEd5ArX5bF6Uxhbb/7qFiSisVJA5zyROUHEA383v8FtZCuUTUe0gdEqnoNoJb+6ilu+V+byft7ubdwnfzyOqz5mqq8wo2TLZ//Q6LnpOqlmpEiMCldyrLX8JcQTA/oCffViaKl60oDvRy/tVXRlKUHplf59x7bmWLxZ50dGWFstMwdtKM5E9ApIrxVvf8d/A7ArC/tSFU7E+iFzZ9/nlcsZGEktI1fwZxfITr40RCP3aCNXJWX32KbMXUtVNwkoesw0S9SjRjD98txCfaD9lvlF/S55Fr+06grUTR+WpnhiSsqle6atl/c5sEK5gqdJCnu2CHwM4FnzfWBW54iLVNE1yCe9/MbTIdU1MCM+ZDAOzMOwKb8FTrufgvzq9gSnE/eW2Xol3b+tflxcjJYEpNitf+t/OFi3GhYCpHwUFl665Uo9PFZxNd4T+heARrT+tB6cNd9BqVVrf6nQaHdSqCriXSe+N+a1lp6aH56H3Bw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0TpYxUSBxJCBEgQikpLb9DLGV5GxjHgNrEhdoD2648dSAqUdtqRkJB3ttde++Jl1zmMI9tvcY4TQRjVep2G/q9Tq9ihi4BRgbZrVDwHGN7Y9QwLusB1ndArA6BrPc5T3KNcQCoaum2BimG5BvAeLM93PB9YJeBWR7r2hBMuoaVLydK1dRxR7mdhG3qaUJ9BTrhPYYy5L5A/bF33fenpw5yT3qxvWGYBk+ZMiLlvmqgUYoSjCJUQi826uedTD7k/JFMKRZrgbcyQN/Tt3tVqVVqVSyyZmrZlWaZVM6VPyMn0VG+e5Jtx2KMTtlkHkDJKEIzIO1SkrrGYsVBrRVOWEDGLv4AGJrAUtIHXyECgQk918yNAxu6HSHskEw4NPoMgBxvgCU4wRVh7HPQa+unPOrjZ+5BAyicsifnB+neUMF3iiM1xaPA8s5zdzxGPlKtZx8jvURSlnCzxjRqTOUSYa3cJnpB1n3A5fCHXsvZray5/JJ8yjH7Tlrq5y1VSN49Up0OmmIv/07Pdfm1QnmCU4ub73Rn+57L1hD22uBjdBQkcu++jAb9v9xoZhV3nDami3dv14bAWs7XdtLr840DRrlwGo/5keHa5uJ6NJ7VocfWMeZfYbjB9ab/UrscAoefHB2cRsMdF/5V0L5ZDJ7yfjioQ9skZCV7sRXAyYGdOJ/Du7PYquAP3V/bonVQQGLQea8+PnvMK72Nn6Yqb5QtZta9urq3zIHjsV29r1tkkXr3E02m5etU989yL8/ikbV5B/gzeRpdXwhtX31oub3zktJvDvjGXhGE6fsFI5Es1Hr2O1pX9guJ7eVEWEhqTzNWfK43iAlOhN9UuJS1+KgWIhL5s5mbdDUDNPneDVtsrd8uufW5VLNC1WpZTq4Gg7OYatGFxQDFgdEJULKWym/n5niCKfY5piBNjyVI0w1z/BrEDBdR6dCAPB6McPzCp4t4YpIBwsnhDCxClYOVxJ55XK2Ndu2Hilt4mrYnAyZ50A7An3QOMyJxgpe9qwLmccC5kLRZwmYoIlJawRHEqb4BEibBvS6ExOYnnEVZMzZiFaYRL89k8q4zJN/+2ARHPrISjOUsEjEB2/r5M7/BbXgnpExLlwFVKbSy7iY9cRVaez6e8naNXVg7fSkOijpksq0gI2jDZ//QxLWpMilEpEkMc5NyLLb+EOAJgfsPPPCxNES9ckp3o+fUqbwypJ828vwtYWpTS5TLNOlpVWplIeFNKJjCHGKVS8N4e2CumZgFh/ui+KVgfRC7s+/xSMaNDAQWO5fxp2fIHj40h5uqx0ZMHZ/3Tl8xeSFk3gdfimC2I5JtEMf722YJ8pPyk+U7+rVgSfrTrCNZOHJmnfGEIQqdqpW6Wty9mAzEJS6QUsmQX/BjAseD7xqLIBRchp2mcCvz1F01pXEOHCLGUil5Hzwy7upvxFG9z7H84fYLJtH17Wa/5l5f1n+v+UCpgDPXCl/y3s0GycUFYV2+CjEtDX8u3pwxOpzs6vyV4ROrbdqddrgTVaiH11VqtXAPVooB7mTQ/mT9bdmp6eB6afwE=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_045881403081888436</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_045881403081888436</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_045831403081883648</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_045851403081885808</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_045881403081888436</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E6645C2F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E6CAB67F362E0401F0A05991C36</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E6CAB84F362E0401F0A05991C36</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_UserGet_FUNC_CHILD_SAU_Get_CHILD_200_OK_P1" searchProperties="true" id="cf2bf137-2d6d-4378-935b-566dca39d85a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="99f91439-ab40-4a74-8530-bdaab6af24fc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0828fe51-2085-4389-9e87-eb8c6f0f47f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="08adc646-1311-416b-b5ab-b8f23f07cecf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="0c029175-97df-4aa3-bd58-e56abdbe6027"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="bea2c7bc-9454-4c3d-9c8f-ebcb7147b934"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="1a71d7cd-9740-4795-9c73-d358127197a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="3f78ace6-d0f2-4ef0-a832-9a4b60cb785b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BA0F578CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B0FABBBA67E0401F0A07991D5D:6188489D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0511521403082712877</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2D1A5A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2D1A5A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2D1A5A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BA0F578CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2D1BDA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BA0F778CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BA0F578CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D1BDA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BA0F778CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6I6FP6+v4JhP+4gYBGFqc7Qartu1bba2pcvd9IQNFtIaBJA99ffBAtVa3u7d8YZJ4eT5zznJU9yzEESN/2Ac8QEpkQb9rv6P23ouu2m9WRAt+MaThM4xpPtPBkIuNA+gk+g5bq6NuQ8Q0PCBSCiqzct2zEs17A7N5bn27bvdBpy96OuzRHjElq6NCxdWyUx4X4ZtqtnjPgUcMx9AhLEfQH9WTAe+dLTBxUnvXe8YVkGZL2lEKlvmrARIojiGDYgTcxjc8fnOOT+DC8IEBlDrzFD3tVf9xZF0SiOGpQtzKZlWablmdIn5HjxXe99qzajcEgiulmfAkIJhiDGf4AiNUZiSUMtiBeUYbFMPoC2TdtS0AZaQQPaDvmum28BSnZfRNohyTgw+BLYFdgURYghApF2Ox129e9f6+Bm7w0DhEeUJXxv/XeUEMlRTFMUGrzKrGL3dcQD5eodI+gPCYwzjnM0UWOSAoi4dsVQhFcjzOXwhVwr26+tuPzhasoQ/Ju2HJvbXCV180B1+niBuPg/Pdvu1wZlDuIM9caDS/fn+HqEjybPAXu5/xNNFrNg8XgVwG5JYdt5Q6pu9+t6f1jr2XrdVODbZetqfI6vCpS60fn818MPR0yH8R+Obuf2w+KGTaLbwWWeBZfe3SjnrundR3N2sbjAo/Mf5prC386kfUYzb/ltbXfGo+DiLmXX99frqbie//4p3NnzGkwtN2u1i8H1Q1wU8Do54eGDSK9+Us89c0F2dDI4NVHeivIZObfn0d1j8e2GroqBhdfN1q/JxAmjx1mn+5bTdg67xkoSZtnTbwRFtVTjMexrZ7JfQHwuL8qCQyMqXf1UaRQXiAi9p3YpafEzKUA49GUzN+uzU9vzvJPAOmu1O6eD9sByLPvMCqy259l996TSoA2LPYqnlERYxVIqu5mfzwnCxOeIhIgZOc3gEnH9E8Q+EEAbkqk8HJRwdEOlitvtTtYqWpHLHCsJc694bjedpJOudW1CxSW5ZEEkENuRbru5I91TBHGKkdJ3NeBcTjgXshYvIM9EbDdy0CAokzcAUyLsN51Oy+Q4SWOkmJoJDbMYNdJlWlbG5Jv/pgEgL62Yw5QyAWK7PH8fprf/raqE9AmxcuAqpRMku4kOXEVHVT4f593azruCD7IQq2MmyyoYhhsmu5/epkWNST0qdWKQ2xX3estfQhwAMD/hZ+6Xpo4X5ngrenW9yhtD6kmv6u8LaLw0sjzPyo62lVYyCW9KybTNGYKZFLz1DX1GxKwhzC/dNzXrvci1fZdfJpZkJoBAiZw/rVx+4bExQ1w9Noby4Ky++pLZCSnrJtBKHLKdxvJNohh/+myBPlR+0nwl/wrKwrd2HcDaiiPzlC8MgclCrdTNsv5gNiCVsFhKIWXb4IcADgXfNdZFrrkIOU1PmUAff9GUxnV1ACHNiBj29dKwrbslT7FOkf/m9A6m1PbXy3rFP7ys78ejmVTABOi1L/5vZwOX4wKRrt4EJZeuvpJvTxmcLLZ0/pXgAalv9u2gFXiDoJb6luc13SOnLuBOJr135veWrZrun4fevw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6I6FP6+v4JhP+4gYBGFqc7Qartu1bba2pcvd9IQNFtIaBJA99ffBAtVa3u7d8YZJ4eT5zznJU9yzEESN/2Ac8QEpkQb9rv6P23ouu2m9WRAt+MaThM4xpPtPBkIuNA+gk+g5bq6NuQ8Q0PCBSCiqzct2zEs17A7N5bn27bvdBpy96OuzRHjElq6NCxdWyUx4X4ZtqtnjPgUcMx9AhLEfQH9WTAe+dLTBxUnvXe8YVkGZL2lEKlvmrARIojiGDYgTcxjc8fnOOT+DC8IEBlDrzFD3tVf9xZF0SiOGpQtzKZlWablmdIn5HjxXe99qzajcEgiulmfAkIJhiDGf4AiNUZiSUMtiBeUYbFMPoC2TdtS0AZaQQPaDvmum28BSnZfRNohyTgw+BLYFdgURYghApF2Ox129e9f6+Bm7w0DhEeUJXxv/XeUEMlRTFMUGrzKrGL3dcQD5eodI+gPCYwzjnM0UWOSAoi4dsVQhFcjzOXwhVwr26+tuPzhasoQ/Ju2HJvbXCV180B1+niBuPg/Pdvu1wZlDuIM9caDS/fn+HqEjybPAXu5/xNNFrNg8XgVwG5JYdt5Q6pu9+t6f1jr2XrdVODbZetqfI6vCpS60fn818MPR0yH8R+Obuf2w+KGTaLbwWWeBZfe3SjnrundR3N2sbjAo/Mf5prC386kfUYzb/ltbXfGo+DiLmXX99frqbie//4p3NnzGkwtN2u1i8H1Q1wU8Do54eGDSK9+Us89c0F2dDI4NVHeivIZObfn0d1j8e2GroqBhdfN1q/JxAmjx1mn+5bTdg67xkoSZtnTbwRFtVTjMexrZ7JfQHwuL8qCQyMqXf1UaRQXiAi9p3YpafEzKUA49GUzN+uzU9vzvJPAOmu1O6eD9sByLPvMCqy259l996TSoA2LPYqnlERYxVIqu5mfzwnCxOeIhIgZOc3gEnH9E8Q+EEAbkqk8HJRwdEOlitvtTtYqWpHLHCsJc694bjedpJOudW1CxSW5ZEEkENuRbru5I91TBHGKkdJ3NeBcTjgXshYvIM9EbDdy0CAokzcAUyLsN51Oy+Q4SWOkmJoJDbMYNdJlWlbG5Jv/pgEgL62Yw5QyAWK7PH8fprf/raqE9AmxcuAqpRMku4kOXEVHVT4f593azruCD7IQq2MmyyoYhhsmu5/epkWNST0qdWKQ2xX3estfQhwAMD/hZ+6Xpo4X5ngrenW9yhtD6kmv6u8LaLw0sjzPyo62lVYyCW9KybTNGYKZFLz1DX1GxKwhzC/dNzXrvci1fZdfJpZkJoBAiZw/rVx+4bExQ1w9Noby4Ky++pLZCSnrJtBKHLKdxvJNohh/+myBPlR+0nwl/wrKwrd2HcDaiiPzlC8MgclCrdTNsv5gNiCVsFhKIWXb4IcADgXfNdZFrrkIOU1PmUAff9GUxnV1ACHNiBj29dKwrbslT7FOkf/m9A6m1PbXy3rFP7ys78ejmVTABOi1L/5vZwOX4wKRrt4EJZeuvpJvTxmcLLZ0/pXgAalv9u2gFXiDoJb6luc13SOnLuBOJr135veWrZrun4fevw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1PS1ILQEWYKyJFz/ATUoy930jTQaElKk0Lx19+kWAREr94ZZpjs7qy99kdWcirQNHY8XwiSSsqZ0e82zX+cY9d16tWaZQf1wHKDE9sKHIKtALs2qTVItR64ptEXIiN9JiRismk6NnQtu2bB+shueBB6VafiQPvJNO5JKhS0cqnYppFPYya8ImzTzFLmcSSo8BiaEuFJ7A39ywtPeXqo5GS2Tlcsi4BpK5Iy8QDAlZBgEse4gvkUnIItn9NQeEM6YUhmKXmLGYqm+bZ3sVhUFscVnk6AY9s2sBtA+YSCTg7N1kG5mYR9NuardQcxzihGMX1FmtQlkREPDT+e8JTKaPoJNATQ1tAWybGFocsOTfAeoGD3TaQtkqlAlogQLMEGZExSwjAx7gb9pnn4vQ6u9o5SxMSYp1Oxs/4ZJcLmJOYJCS1RZlay+z7innK1Tgn2+gzHmaBzcqXHJEGYCOMmJWOaX1Chhi8URtF+IxfqR8spI/gnbTkFm1wVdbCnOl06IUL+n55t9muFco/ijLTcJeic356dxCACXRbOHvLe/Wu7Pn3u2c2CwqbzitS63W/r3WFdz9bbpkF88xq3099/7V81d9HPl0eLxxm+QkdLODoT0WNt4o9ujh7zh/DpcdA/v+V+VPv9QOsPd5PxsWppxKPLyyGK73+dDw7un9nV1V17+WdWfwqDcHzRg8MXuJgFsRPY8+g8yBturzsBx8n5E6QdvOzyyyhZ+HnQqb7A8cPF9W2jC+f5CMb2wRlIXk9qvRO/vaifwfFr/Zw333PazGHbWErCMAueCZblUo9Hv2v0VL+Q/FpetIWG1rhw9RKtUUISJs2W3qWlxcuUANHQU81crXsd2Gg02k4Xtrt+48w/s10b9mzfrjYaTu3YLTVoxWKHYoezMdWxtMqu5udrgnjqCcJCklpznuGICPMLxC6SyOizgTocnAky4krFUzew89fZSyqzELJ6NahHEW8sX5R0X3F5za5TfyxJuiXd0NmS7gHBNKFE67secKEmXEhVixmaZzKGlTmqMJKpGyDVIuw5br0KBJ0mMdFMwZSHWUwqSZQUlQFi9e9YCIvCSgVOeCpRDIvz92l6u9/KSiifkGoHoVNqE9VNsucqcst8PuRd3XtllfB+FlJ9zFRZZUrxisn2p/dp0WOyHpV1YljAkvt6yw8h9gCAL/iB3dKs44VzuhG9vF7VjaH0pFX2d4Yqs0o2n2dFR0+0VqYKHijJhGBIcKYEbzniL4SBNQT41n2zZr0TeW3f5pfJiA0lkmSq5s8olt94bAyJ0I+Nvjo4+XdfMlshVd0kyeU+WydWbxLN+MtnC/aw9lPmG/W34Gn43q49WBtxVJ7qhSEpm+iVvlmWn8wG5gqWKink6Sb4PoB9wbeN6yKvuUg1TUEmyedfDK1xTRNhzDMm+12zMGzqbsFTLhPivTt9gCm0/e2yzsWnl/Xfy4uhUsApMte+9L+dLVqMCyamfhMUXJpmrt6eKjibbOj8G8H9Uu9Xv5L67UxaH8wfLRs13T0PrX8B</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+o4EH3vr4jSx1VIAgGaqCCl0O6mlI8LlF71ZWWcAdwmTho7KfDrrx2aFCjttishIU/GZ858+NiXDIVB1XEZg4STiCpet6X+a0O9VoWmqdkXyNAsGxYawo2qVm+AadUso2nVG6riMZaCRxlHlLfUqmFamtHQzIupYTum6dTrFcNuPKrKDBImoIVLxVCVdRhQ5uRhW2qaUCdCjDCHohCYw7Ezcft3jvB0UMFJbV/uWOYBk/aK89jRdVzxAUMQ4AqOQv1SP/C59JkzIUuKeJrAW0yftdS3va+vr5XXWiVKlnrVMAzdsHXh4zOyPFfbZ8Vm8D26iHbrDqIRJRgFZIskqT7wVeQrbrCMEsJX4SfQpm4aElqDNdawadFzVX8PkLP7JtIByYQhja2QWYCNYQEJUAzK/dhrqeff6+Bu7zRBlC2iJGRH659RAppBEMXga6zIrGD3fcQT5WpfAnY8ioOUkQwGckxihIEpowQWZH1HmBg+nyl5+5U1Ez9STBngn7TlUt/nKqjrJ6rTJUtg/P/0bL9fO5QZClJoW52nMNlsF8ZtbzoMzG3zujvY9lbISnErp7DvvCNVtvttfTys5Wy9bXoIssVoO5q5Vxt3Eq7uOpYfBJ1wMK3y1fwmcoPH8XrAbsYAgWHXgoVxtxrW7Xg6o3h69U+4rKNp3M9S/cLb+Gf39R6ZYX3g9juNThhD6o+T5+bUW8/+5qNZ5vbn973eOPzlP6doVvPM4fJ3PB0+3P41Hxi1Dus9Pt43a9bolrDYPwubZv/B3Yb203D9a06W7kPUes9pP4dDYyEJk3T+BJgXSzkeXle5Ef1C/Gt5kRbia4vc1YmlRjEOlKttuUtKi5MKASK+I5q5W990TNu2r1zjptm86Fw3rw3LMG8M12jattltXBUatGNxRLET0QWRsaTK7ubna4I4dBhQHxIti1K8AqZ+gdhFHCkeHYvDEVEG00iouJnV7Je5vc34cr7IbD+GVbydJ9xUlUHEh3SYuAsOyYF0m9UD6R4DJjEBqe9ywJmYcMZFLV5QlvLArGSoQiEVN0AiRdipWhd1nZEwDkAy1cPITwOoxKs4r4zOdv9VoUUstxKG4yjhKDDz8/dpesffikoIH59IByZTugLRTThxFVlFPh/yrp+8sgp4N/WJPGairDwheMfk8NP7tMgxKUelTAwzs+BebvkhxAkA/Qt++nFpynh+RvaiF9eruDGEnrSL/r6gykslzbI072hTamUi4HUhmaY+AZwKwdtMo2egegmhf+u+KVkfRS7th/xSvqITjjiEYv6UfPmNx8YEmHxseOLgrL/7kjkIKerGYc1P2TqBeJNIxl8+W7CDpZ8wj8Tfa5T47+06gbUXR+QpXhic0KVcyZtl88ls4EjAEiGFUbIPfgrgVPBDY1nkkgsX0zRPOXz+RZEa11IRxlFKuddVc8O+7uY8+SYG593pA0yu7W+X9Zp9eln/7t9NhAKGSC19yX87ayQfFwyqfBPkXFrqWrw9RXC63NP5N4InpL7aNd26a1+7pdTXbbvaqFllAQ8yaX8wf7Ts1fT4PLT/AA==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0511521403082712877</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0511521403082712877</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0511471403082707865</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0511491403082709941</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0511521403082712877</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BA0F588CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2D1BEA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BA0F788CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_UserGet_FUNC_CHILD_BAU_Get_CHILD_200_OK_P1" searchProperties="true" id="2d83eb93-5719-465d-a4e7-8199bd0eff99"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="bd3a37de-00fa-4c2d-bcc6-bed6dd8985df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="05920f35-d800-4965-8295-f62e3a506eb1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU1" id="dc912781-a3a5-4878-af64-7b33d111bb4a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU1" id="a1710c93-2fc6-4b17-ad18-e50491fef0ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="0b25a123-a332-4c50-aa5a-a8b079ccf404"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="34ea5fe9-02fc-4c21-9cf6-1d6a892cd46e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="bc64d2f3-11e7-41ff-804b-48f030e756fd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B098A4610AE0401F0A05992642</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B284927D05E0401F0A0599263A:2A48545D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051221403082722227</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B284797D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B284797D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B284797D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B098A4610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BBF7A076D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B3DEA69FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B098A4610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BBF7A076D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B3DEA69FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Tp41GwQ8IlUUEK9AK9QFtoz5l5GRnHIW4TB2In0H792KFJgdJOOxIS8s722mtfvOwTjuKo7nqck1TQhGnD047+z6zdhFYd+oY1g45hW4gYbWhBA0I/mLVwM6jDQNeGnGdkyLhATHT0OjRtAzYNsz2FjmuabqNVa0H7b117JCmX0NKlBnVtHUeMu0XYjp6lzE0Qp9xlKCbcFdideDfXrvR0UclJ755sWBYB024oxMIFANd8gkkU4RpOYnACdnxOfO5O6JwhkaXkLabPO/rb3tVqVVtZtSSdgzqEEEAHSB+f0/mx3j0qNxN/yIJks+4jljCKUURfkSJ1Q0SY+JoXzZOUijD+BNoEJlTQBlljA5s2O9bBe4CC3TeRdkimHBk8RGYJdk8CkhKGifZwP+zox9/r4GbvNEWMB0ka8731zygRlpMoWRDf4GVmJbvvIx4oV/eEYHfIcJRxmpORGpMFwoRrtykJ6Pqacjl8PteK9mtrLn+0nDKCf9KWE7DNVVIHB6pzSueEi//Ts+1+bVAeUZSR7rkX9y4c/vvh8dVcDmxgzZte+jo4S4J5p6Cw7bwhVbX7bb0/rNVsvW0aWHcDewzGv82zwdB8Ctdj//x6kY8avx4Hv3qDi5fwIcEXM+fPzfy517/q98l0aEVe+7mXPIERvgOj27YVhc2Jx/Kj5b2Qm1/hjXnetMa3Y++55WX89rJ37/WRxeojgPKrhxyh8VM0ti2wuj6b5oLA3lWcerf2E5guny+zO3OC138dXZHopt8cLC8m4eslWznXI9x5z2k7h11jKQmTbPZEsCiXajyGp9q57BcSX8uLslDfCApXd6E0igvChN5Vu5S0uJkUIOq7spmb9XnfdBynB522ZzdN6J1BG5rn0IMNx6k37XqpQRsWexT7CQuoiqVUdjM/XxPEscsJ80lq5EmGQ8L1LxBPkUDakN3Lw5EwTqaJVPGXwIevYvUUhtBa81A0/dYqWMwaujZKxJiNUy8QJN1RbrO+o9z3BNMFJUre1XxzOeBcyFIsUZ6JyKzlqMZIJi+AVGmwW7fbDcBpvIiIIgrixM8iUluEi6IwgG/+6wbCvLBSjhdJKlBkFsfv0+z2v5WFkD4+VQ5cpdQjspnkwE1kl/l8nndjO+8S3st8qk6ZrKpIKd4w2f30PixqSqpJqRLD3Cy5V1t+CHEAAHzBD+yXporn53Qrenm7ygtDykm37O8S1Za1LM+zoqMtJZWphAdSMU0wITiTevcyTZ4JAxUE+NZ1U7Hei1zZd/llImQTgQSJ5fxpxfIbb40J4eqtMZTnZv3dh8xOSFk3QdbikK0fySeJYvzlqwW7WPlJ8638WyWp/96uA1hbcWSe8oEhKJurlbpYXj6ZDZxIWCqVMEm3wQ8BHAq+a6yKXHERcppmmSCff9GUxHV0hHGSMTE81QvDtuwWPMXLgrjvTh9gCml/u6vX/NO7+s/N9UQKYIz0ypf+t7NBi3HBRFdPgoJLR1/Lp6cMzuZbMv9G8IDS19t2y2mdwsau0lteVcCdTLofzB8tWzXdPw/dfwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Tp41GwQ8IlUUEK9AK9QFtoz5l5GRnHIW4TB2In0H792KFJgdJOOxIS8s722mtfvOwTjuKo7nqck1TQhGnD047+z6zdhFYd+oY1g45hW4gYbWhBA0I/mLVwM6jDQNeGnGdkyLhATHT0OjRtAzYNsz2FjmuabqNVa0H7b117JCmX0NKlBnVtHUeMu0XYjp6lzE0Qp9xlKCbcFdideDfXrvR0UclJ755sWBYB024oxMIFANd8gkkU4RpOYnACdnxOfO5O6JwhkaXkLabPO/rb3tVqVVtZtSSdgzqEEEAHSB+f0/mx3j0qNxN/yIJks+4jljCKUURfkSJ1Q0SY+JoXzZOUijD+BNoEJlTQBlljA5s2O9bBe4CC3TeRdkimHBk8RGYJdk8CkhKGifZwP+zox9/r4GbvNEWMB0ka8731zygRlpMoWRDf4GVmJbvvIx4oV/eEYHfIcJRxmpORGpMFwoRrtykJ6Pqacjl8PteK9mtrLn+0nDKCf9KWE7DNVVIHB6pzSueEi//Ts+1+bVAeUZSR7rkX9y4c/vvh8dVcDmxgzZte+jo4S4J5p6Cw7bwhVbX7bb0/rNVsvW0aWHcDewzGv82zwdB8Ctdj//x6kY8avx4Hv3qDi5fwIcEXM+fPzfy517/q98l0aEVe+7mXPIERvgOj27YVhc2Jx/Kj5b2Qm1/hjXnetMa3Y++55WX89rJ37/WRxeojgPKrhxyh8VM0ti2wuj6b5oLA3lWcerf2E5guny+zO3OC138dXZHopt8cLC8m4eslWznXI9x5z2k7h11jKQmTbPZEsCiXajyGp9q57BcSX8uLslDfCApXd6E0igvChN5Vu5S0uJkUIOq7spmb9XnfdBynB522ZzdN6J1BG5rn0IMNx6k37XqpQRsWexT7CQuoiqVUdjM/XxPEscsJ80lq5EmGQ8L1LxBPkUDakN3Lw5EwTqaJVPGXwIevYvUUhtBa81A0/dYqWMwaujZKxJiNUy8QJN1RbrO+o9z3BNMFJUre1XxzOeBcyFIsUZ6JyKzlqMZIJi+AVGmwW7fbDcBpvIiIIgrixM8iUluEi6IwgG/+6wbCvLBSjhdJKlBkFsfv0+z2v5WFkD4+VQ5cpdQjspnkwE1kl/l8nndjO+8S3st8qk6ZrKpIKd4w2f30PixqSqpJqRLD3Cy5V1t+CHEAAHzBD+yXporn53Qrenm7ygtDykm37O8S1Za1LM+zoqMtJZWphAdSMU0wITiTevcyTZ4JAxUE+NZ1U7Hei1zZd/llImQTgQSJ5fxpxfIbb40J4eqtMZTnZv3dh8xOSFk3QdbikK0fySeJYvzlqwW7WPlJ8638WyWp/96uA1hbcWSe8oEhKJurlbpYXj6ZDZxIWCqVMEm3wQ8BHAq+a6yKXHERcppmmSCff9GUxHV0hHGSMTE81QvDtuwWPMXLgrjvTh9gCml/u6vX/NO7+s/N9UQKYIz0ypf+t7NBi3HBRFdPgoJLR1/Lp6cMzuZbMv9G8IDS19t2y2mdwsau0lteVcCdTLofzB8tWzXdPw/dfwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1PaQCu0I8wgPY5FERX8Oi93YprSaJuWJi3gr79JsRUQvXpnmGGyu7P22h9ZyQmDcdR0+ozhjJOEKp7bVf8J2gHu2AhrAPu+ZgKINBsipPkWsAzom3bHNFTFYyzHHmUcUt5VmwYwNeNYA52pYTug6RigYbWO/6rKPc6YgBYuDbFrGUeUOWXYrppn1EkgI8yhMMbM4ciZ9EeXjvB0YMVJ7Z2sWZYBs17IeeroOmr4GOEoQg2UxPqJvuVz4jNnQmYU8jzD7zF91lXf9y4Wi8ai1Uiymd40DEM3bF34+IzMDtXeQbUZ+x4NkvV6AGlCCYIReYOS1AjzMPGVfjRLMsLD+AtooANDQmt4iTQETHqo6h8BSnY/RNoimTGosRCCCuwWBzjDFGHl7tbrqoc/6+B67zSDlAVJFrOd9e8oYVrgKEmxr7Eqs4rdzxH3lKt3gpHjURTljBT4So5JChFmynWGA7K8JEwMn8+Usv3KkokfqaYMo9+05UTf5Cqo63uq45IZZvz/9GyzX2uUexjluBdcg+PEfQsfH1x29FjMLfPP+CYAVmf81C0pbDqvSdXtfl/vDms9W++bxt68eY6ejufW6fRo/DA4H7XCKB09I2vqFt5qNl/2C9188MLrtAgu5tOHaEDvHy8yOGy+zYOrYcZDv5gPb+a6uTxomUc+cUfDePka5n9PA2t4vgTBMHq5u3/0Xq7yi86IJ7ethxmzjibz63bqx9eLN0t/HS5GT8HF5QqzpjugNqF8dnDzBt3zm7sX/cKgT8Ur9C7N7kdOmzlsGytJmOTPLxjxainHw3OVM9EvyL+XF2khvhaUrk4qNYpxTLnak7uktDi5ECDiO6KZ6/XZANi2fXp61u4b7WPX/GOYBjgzxMK2gdsGlQatWexQHCQ0IDKWVNn1/HxPEMUOw9THmVYkOQoxU79BdCGHikdvxeFIKMPTRKg4IKFI6DVutsxWCuIVzIEdZa901VGVq4SP6TjrBxxnW9othHtTu28xIinBUuDlhDMx4oyLYsxhkfMINArYoDgXV0AmVdhpmh1LZyROIyyp6nHi5xFupGFalkZn6/+mBhErrYShNMk4jEB5AL/Mb/dbVQrh4xPpwGRKp1i0E3+6i4BjVfl8ytvae2dV8P3cJ/KcibryjKA1k+1PH+Mi56SelToxxOq5qLf8EmIPgP4NP323NHU8vyAb0av7VVwZQlB6VX/nsDFv5EWRlx1tS7HMBLwuNBPoE4xyoXirafKKqV5D6D+6cGrWO5Fr+za/nId0wiHHsZg/pVz+4LUxwUy+NjxxcpY/fcpshRR143jJ99kGkXiUSMbfvluQg6SfMF+Lv0WS+R/t2oO1EUfkKZ4YnNCZXMmrZfXFbKBEwBKhhUm2Cb4PYF/wbWNd5JoLF9P0nHP89RdFilxXFaVMcso9Vy0Nm8Jb8uSrFDsfTp9gSnF/v62X7Mvb+nF0ORESGEO19iX/7ayRclwQVuWjoOTSVZfi8SmC09mG0L8T3KP1zY7ZttuuYdVab9l287jVrwu4lUnvk/mzZaOmu+eh9y8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc7I6FH3vr2DoYwcBRStMdcaK/aq9V3v7Xs7EsNFUSJAExf76E7BQtbanPTPOONnsrL32JSs54SgMqk6Hc4gFYVTpuy31H2j4GPl2Q6vaxlizUM3QxiYYWt06blpj0zRrPqhKn/ME+pQLREVLrRqmpRkNzWyODNsxq45hVRq16l9VeYSYS2jpUjFUJQ0Dyp08bEtNYuowxAl3KAqBOwI7w87VpSM9HVRwUtsna5Z5wLg9FSJydB1XPMAQBLiCWaif6Fs+Jx53hmRCkUhieI/p8Zb6vne5XFaWtQqLJ3rVMAzdsHXp43EyOVTbB8Vm8PrUZ+t1F1FGCUYBeUMZqSsQU+YpnWDCYiKm4RfQpm4aGbQGKdawadFDVf8IkLP7IdIWyZgjjU+RWYDdgw8xUAzKw32/pR7+rIPrvaMYUe6zOOQ7699RArqAgEXgabzIrGD3c8Q95WqfAHb6FAcJJwu4zsYkQhi4chuDT9JLwuXweVzJ26+kXP5IMWWAf9OWE32Tq6Su76mOSybAxf/p2Wa/1iiPKEignaSruz9++DprulcXD2mnR996D4NT1B3dtXIKm85rUmW739e7w1rO1vumpNOtTap305c+hb/1m+rsyn56Wj6chmeP5vXNYDCon5PpvN5MLq/ouR6i8ST1b9Jl0rDYn6R5577dvjzPX579Wc2vH4yDoXjuX4zGvWg8OkKuFQ9Gg5UY9oLh7VnT7TZmN0ex1VvUZo9nyBiKGFw2h/MQHzcuzi+Wb5OjXuNx9dZg1hE9uLy27ubUurt4WqYsargD4K2PnDZz2DYWkjBMxq+ARbHMxqPvKmeyX0h8Ly+ZhXian7s6UaZRXAAVajvblUmLk0gBIp4jm7len3VN27ZPa26v07DlomdYhnlmdIxj2zbdul1o0JrFDsUuoz7JYmUqu56f7wni0OFAPYi1BUvwFLj6DaKLBFL69F4eDkY5jJhU8dV8FjfDCZpHr3N/vPJeEZtF84lQlWsmbuhN3PEFxFvKLWV7U7nvAZOIQCbv2XxzOeBcyFLM0SIRgVlZoAqFRF4AcabBTtVq1nVOwiiAjKgeMi8JoBJNo7wwOl//VzWEeW4lHEcsFigw8+P3ZXa734pCSB+PZA48S+kUZDPh001kOvUin0951/feWAV8J/FIdspkVUVM8JrJ9qePYcmmpJyUMjHMzYJ7ueWXEHsA9G/46bulKeN5C7IRvbhd5YUh5aRd9HeOKvNKslgkeUePM6mMJbwuFdPUh4ATqXerEZsB1UsI/UfXTcl6J3Jp3+aXiCkdCiQglPOn5MsfvDWGwLO3Rl+em/SnD5mtkLJuAlKxz9YN5JMkY/ztqwU7OPOT5lv5t2Sx99GuPVgbcWSe8oEhCJ1kq+xiWX0xG5hJWCKVkMWb4PsA9gXfNpZFLrkIOU3jRMDXX5RM4loqwpglVPRdNTdsym7OU6wicD6cPsHk0v5+V6f8y7v6+epyKAUwRGrpS/7bWSP5uGD5UpX+OZeWmsqnpwxOJxsy/05wj9JXm9axfewa9VLp67ZdbdQ6ZQG3Mml/Mn+2bNR09zy0/wU=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051221403082722227</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051221403082722227</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0511561403082716795</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0511591403082719274</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_051221403082722227</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B098A5610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BBF7A176D4E0401F0A07991D71</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B3DEA79FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_UserGet_FUNC_YOUTH_SAU_Get_CHILD_Blocked_touP2" searchProperties="true" id="24b623af-1469-41bb-be35-a91a05736f0d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7fad15b3-508c-4f14-ab9a-9546e7214f73"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="389dfd8b-0a02-477d-8087-0de2e63f03ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTHSAU" id="bc54e99a-abbb-4ae6-91cc-d47e93944813"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTHSAU" id="5399181d-f700-4052-a4f2-8b16e483f5e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="fa48ddef-98a6-403e-8c79-5ee35786e1b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="56e84f74-144a-4609-8df5-0421d96f3cac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="3a3d6558-2560-4034-a1bc-0747c1171192"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="259cef5e-a2c7-4092-8903-326d9151673f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E664611F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E539DA8608CE0401F0A079938F9:29207FA7"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0458351403081915431</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E981037F1E2E0401F0A07993921</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E981037F1E2E0401F0A07993921</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E981037F1E2E0401F0A07993921</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E664611F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E6836DEA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E6836FAA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E664611F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E6836DEA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E6836FAA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU/I4FP3ur+jUj05p06JAR5jhVbuiIoj67JedkKYQbdOSpAX89ZsUi4Do4s4ww+T25txzX3KSSw6j0HabnGMmSEw1r1PX/wGVC2xXoG0EkxoyyrAMjVq5YhnOBAWTqu2UATjXNY/zFHuUC0hFXbctUDasCwNUH62qe151HVCqWtbfuvaEGZfQ0qVk6doyCil387B1PWXUjSEn3KUwwtwVyB01b/uu9HRhwUlvXK5Z5gFZYyZE4pomKvkY4TBEJRRH5qW543Ppc3dEphSKlOGPmD6v6x97F4tFaeGUYjY1bcuyTKtmSh+fk+mp3jgpNmPfo0G8XrchjSlBMCTvUJG6xWIW+1oznMaMiFn0DTQwgaWgDbxEBgJleqqbnwFydkci7ZBkHBp8BkEBNsQBZpgirI2HXl0/Pa6D672PDFIexCzie+vfUcI0w2GcYN/gRWYFu+MRD5SrcYmR61EUppxk+E6NSQIR5tqA4YAs+4TL4fO5lrdfW3L5I8WUYfSbtlya21wldfNAdTpkirn4Pz3b7tca5QmGKW4EKG4mU3P67NCgv/LaSThdWi3rvnv1UM8pbDuvSW3a/bHeH9bNbH1sQvG7Hb6+OkHQ7FYG79c3zXckRvO363Ea3Q5u2h1nsHo6c4ZXbNnBYXb1Mhw/++PFc9livBb9sVaTu+gt8Du9l6uHE/QW9YIosW9Xrccr9Ayzweqs1aWe/zRq0te+N+49V6231YTBuzMWvs+HvcxzHt4eHsYv3ugBWdlNeGPyNPzzcrM4Ade3d8NWmznpX61hn14FA17/zGk7h11jIQmjdPKKkSiWajy8jtaT/YLiZ3lRFuIbQe7qJkqjuMBU6A21S0mLm0oBIr4rm7le99qgZncvLsoXAPTKzfOuVbZAz2palVrNqYHzQoPWLPYotmMaEBVLqex6fn4miCKXY+pjZmRximaY6z8gdqCAmkeH8nDElOPHWKo4ymZzNJ8I6lMBnFcULNKLWWC9Q127i8U9vWfNQGC2I90A7Ej3ECOSEKz0XQ04lxPOhazFHGapCEEpgyWKU3kDMCXCrl2unpucREmIFVMziv00xKVkluSVMfn63zYg4rmVcJTETMAQ5Ofv2/T2vxWVkD4+UQ5cpdTCspv4wFVkF/l8n3d5O+8Cvpn6RB0zWVbBCFoz2f30OS1qTDajskkMcVBw32z5JcQBAPMHfuZ+aTbx/IxsRS+uV3ljSD1pFP2dw9K8lGZZmne0orSSSXhTSiYwRxilUvBWj/EbpuYGwjzqvtmw3ou8se/yS8WMjgQUOJLzp+XLIx4bI8zVY8OTB2d57EtmJ6Ssm8BLccjWDuWbRDH+8dmCXKT8pHkg/xYx8z/bdQBrK47MU74wBKFTtVI3y+qb2UCxhCVSCmO2DX4I4FDwXeOmyBsuQk7TJBX4+y+a0ri6DhGKUyq8jp4btnU35ylWCXY/nb7A5Nr+cVkv+beX9cttfyQVMIL6xpf8t7NB8nFBWFdvgpxLXV/Kt6cMTqdbOv9B8KvU16rAcio90LV3pd7+PJI7mTS+mL9atmq6fx4a/wI=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU/I4FP3ur+jUj05p06JAR5jhVbuiIoj67JedkKYQbdOSpAX89ZsUi4Do4s4ww+T25txzX3KSSw6j0HabnGMmSEw1r1PX/wGVC2xXoG0EkxoyyrAMjVq5YhnOBAWTqu2UATjXNY/zFHuUC0hFXbctUDasCwNUH62qe151HVCqWtbfuvaEGZfQ0qVk6doyCil387B1PWXUjSEn3KUwwtwVyB01b/uu9HRhwUlvXK5Z5gFZYyZE4pomKvkY4TBEJRRH5qW543Ppc3dEphSKlOGPmD6v6x97F4tFaeGUYjY1bcuyTKtmSh+fk+mp3jgpNmPfo0G8XrchjSlBMCTvUJG6xWIW+1oznMaMiFn0DTQwgaWgDbxEBgJleqqbnwFydkci7ZBkHBp8BkEBNsQBZpgirI2HXl0/Pa6D672PDFIexCzie+vfUcI0w2GcYN/gRWYFu+MRD5SrcYmR61EUppxk+E6NSQIR5tqA4YAs+4TL4fO5lrdfW3L5I8WUYfSbtlya21wldfNAdTpkirn4Pz3b7tca5QmGKW4EKG4mU3P67NCgv/LaSThdWi3rvnv1UM8pbDuvSW3a/bHeH9bNbH1sQvG7Hb6+OkHQ7FYG79c3zXckRvO363Ea3Q5u2h1nsHo6c4ZXbNnBYXb1Mhw/++PFc9livBb9sVaTu+gt8Du9l6uHE/QW9YIosW9Xrccr9Ayzweqs1aWe/zRq0te+N+49V6231YTBuzMWvs+HvcxzHt4eHsYv3ugBWdlNeGPyNPzzcrM4Ade3d8NWmznpX61hn14FA17/zGk7h11jIQmjdPKKkSiWajy8jtaT/YLiZ3lRFuIbQe7qJkqjuMBU6A21S0mLm0oBIr4rm7le99qgZncvLsoXAPTKzfOuVbZAz2palVrNqYHzQoPWLPYotmMaEBVLqex6fn4miCKXY+pjZmRximaY6z8gdqCAmkeH8nDElOPHWKo4ymZzNJ8I6lMBnFcULNKLWWC9Q127i8U9vWfNQGC2I90A7Ej3ECOSEKz0XQ04lxPOhazFHGapCEEpgyWKU3kDMCXCrl2unpucREmIFVMziv00xKVkluSVMfn63zYg4rmVcJTETMAQ5Ofv2/T2vxWVkD4+UQ5cpdTCspv4wFVkF/l8n3d5O+8Cvpn6RB0zWVbBCFoz2f30OS1qTDajskkMcVBw32z5JcQBAPMHfuZ+aTbx/IxsRS+uV3ljSD1pFP2dw9K8lGZZmne0orSSSXhTSiYwRxilUvBWj/EbpuYGwjzqvtmw3ou8se/yS8WMjgQUOJLzp+XLIx4bI8zVY8OTB2d57EtmJ6Ssm8BLccjWDuWbRDH+8dmCXKT8pHkg/xYx8z/bdQBrK47MU74wBKFTtVI3y+qb2UCxhCVSCmO2DX4I4FDwXeOmyBsuQk7TJBX4+y+a0ri6DhGKUyq8jp4btnU35ylWCXY/nb7A5Nr+cVkv+beX9cttfyQVMIL6xpf8t7NB8nFBWFdvgpxLXV/Kt6cMTqdbOv9B8KvU16rAcio90LV3pd7+PJI7mTS+mL9atmq6fx4a/wI=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0Pzqlr5a2I8ywoGtnARXU6/rlTkjTErekNUlL9ddvUmwFRK97Z5hhcnrynOe85ElOGVilVjBgDFGOM6KEo576r+10fcfzXM0zbU9zYtfRAEC+5kKr6xtO5PqOrSohYwUKCeOA8J5qGaajGa5mejeGF5x4ge10DLf7oCp3iDIBLVw6hqpUq5SwoA7bUwtKggwwzAICVogFHAbzwWQcCM8ANJzU/umGZR2Q9pec54Guw06EIEpT2IHZSj/Vd3xOIxbMcUIALyh6jRmxnvq6d71ed9Z2J6OJbhmGoRu+LnwihpNvav+o2YyikMTZZj0EJCMYghS/AElqgvgyi5RBmmQU8+XqA2hTNw0JraEKatB0yDdVfwtQs/si0g5JyoDGlsBswGYoRhQRiJTbWdhTv32tg5u9NxQQFmd0xfbWf0cJkRKlWY4ijTWZNey+jnigXP1TBIOQwLRguERTOSY5gIgpVxTFuBpjJoYvYkrdfqVi4oebKUPwb9pyqm9zFdT1A9UZ4QQx/n96tt2vDcodSAvU/zH97bDbSxtcm+n0wo8e7e558fB0PkdJr6aw7bwh1bb7db0/rO1svW76cX97DAaX1PtRDgZmLI7NeDpeO4lrQbuaLkb/FC/fu9c/F8fr4f3k0V3n4SJPnKF7EvOlz/TJ8Hj1+Hg71a+rmX10QqYg97rX7PHmecWufl0Ml2c/3XGWxeHx3cv4xMJ0cvZQevfxlTVwh3FZ0uwiTC4nVUHDK8u8XBvEflm76AYlR88zZzHrLu5+PRUX2MrTe+713nLazmHX2EjCvFg8IsibpRyPcKSci34B/rm8SAuOtLh2DXKpUYwjwtW+3CWlJSiEAOEoEM3crM+Hpm+duZ7tjs4GlnV+ZjiGeW4MjBPfN4e20WjQhsUexWFGYixjSZXdzM/nBOEqYIhEiGplVsAlYuoniCPAgRKSmTgcGWHoJhMqnhtFuV6Ui6xivhnh3wm1nSfLrixVmWb8klzSQcwR3ZFu09yR7hmCOMdI6rsccCYmnHFRiydQFjw1OyXoEFSIG4BKEQ4sxzvRGV7lKZJM9VUWFSnq5Mu8rozONv+WBiCrrZjBPKMcpGZ9/j5Mb/9bUwnhE2HpwGRK35HoJjpwFVlNPh/n7Wzn3cAPigjLYybKyimGGya7n96mRY5JOyptYpCZDfd2y19CHADQP+Gn75emjReVeCt6c72KG0PoSb/p7xPoPHWKsizqjnalVlIBrwvJNPU5goUQvOeb7Dcieguhf+m+aVnvRW7tu/wKviRzDjhaiflT6uUXHhtzxORjIxQHp/rqS2YnpKgbRxU/ZBum4k0iGX/6bIEBlH7CfCX+1hmN3tp1AGsrjshTvDA4JolcyZvl+YPZgJmAxUIKM7oNfgjgUPBdY1vklgsX07QoOPr4iyI1rqcCCLOC8HCk1oZt3a158uccBW9O72BqbX+9rCv24WV9PxnPhQKugNr64v921nA9LhCp8k1Qc+mplXh7iuAk2dL5V4Lvpd73TEPcxuaZ1Up91/dt33o7kjuZ9N+Z31u2arp/Hvp/AA==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtb9o6FP6+XxFlH6eQVwhEBSnlZWWjHSqwrfty5TonYBbsNHYC3a+/dmhSoLS3uxIS8snxc57z4se+4GiTOEHIOWSCMKqNB139H2i6lgtNy/B8DIbn2mCgyPIM33fjpn9v2xFYujbmPIcx5QJR0dUdy/YMq2XY7bnVDprtwPUbfqv5S9e+Q8YltHRpyF27TUJ5UIbt6nlGA4Y44QFFG+CBwMEsvJ4E0jNAFSe9d7FnWQbMeish0sA0cSMCDEmCG5htzAvzyOci4sGMLCkSeQZPMSPe1Z/2brfbxtZtsGxpOpZlmVbHlD4RJ8uPeu9DtRmiMY3Zft1HlFGCUUL+IEXqGsSKRVqYLFlGxGrzCrRt2paCNmCHDWx79KNuPgco2b0T6YhkxpHBV8iuwG4hhgwoBm1xO+7qH9/Xwf3eeYYoj1m24Sfrv6MEtICEpRAZvMqsYvd+xDPl6l0ADsYUJzknBdyoMUkRBq5NM4jJbkK4HL6Ia2X7tR2XP1JNGeC/acuFechVUjfPVGdAlsDF/+nZYb/2KN9RkkNvt/jRBmcQJTeDz97OxpP4EuIxvVkvlt2SwqHznlTd7qf16bDWs/W0aX11tQ2j1R25/OTbrZDFMXz59DvfuLP+YuYWV0UaLu/WuJn1b/5cDqzBQDQXX8h0OI0d76db3JPtbACk9fXy+uv8Q5r4ebSehJfOBh5vp1OwW+A66wkPVy4v8OJOTCfjbfvX8MuCLCM2vLrr3H/m/kP03Ytvf7hJJL4uzc94vp6P2Icbc7kdtRj4u5Y3uvLWxe9h9zmnwxyOjZUkzPL7NWBRLdV4jAfaSPYLibflRVlIZMSla5AqjeICqNB7apeSliCXAkSiQDZzvx717Y4zbLXd1igMHWc0tDzLHlmh1ex07L5rVRq0Z3FCsc9oTFQspbL7+XmbIN4EHGgEmVGwHK+A628gDpBA2pjeysPBKIc5kypuJ2mHR57v4QTnglPsrkXcQSTTtRsmvtFvWRgLyI6k27aPpPsWMEkJKH1XA87lhHMha/GAilwkdqNADQq5vAEyJcKB47WbJiebNAHF1NywKE+gka7SsjIm3/87BsK8tBKOU5YJlNjl+Xs1vdNvVSWkT0SUA1cpyXPDMjhzFTlVPi/ybp69sir4MI+IOmayrCIjeM/k+NPztKgxqUelTgxzu+Jeb/lLiDMA5hv8zNPS1PGighxEr65XeWNIPelV/X1AjYdGXhR52VFfaWUm4U0pmbY5A5xLwXucs99AzRrCfNd9U7M+iVzbj/nlYkVnAgnYyPnTyuU7Hhsz4OqxMZYHZ/fel8xRSFk3ATtxztZP5JtEMX7z2YIDrPykeSr/tiyLntt1BusgjsxTvjAEoUu1UjfL4yuzgZmEJVIKWXYIfg7gXPBjY13kmouQ03SfC3j9i6Y0rqsjjFlOxXigl4ZD3S15iscUgmenFzCltj9d1jv+6mX983oykwq4QXrtS/7b2SDluGDQ1Zug5NLVd/LtKYPT5YHOPxF8KfWdtm25/sgeOrXU+52O23Gej+RRJr0X5peWg5qenofevw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0458351403081915431</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0458351403081915431</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0458301403081910861</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0458331403081913152</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0458351403081915431</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E664612F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E6836DFA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E6836FBA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_UserGet_FUNC_YOUTH_BAU_Get_CHILD_Blocked_tou_200_OK_P2" searchProperties="true" id="8ff93ce4-849f-4683-8624-c2e63038ba11"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a8d1ee1d-b7a5-4179-a9fa-426ac86d0362"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="67c86e60-a6c9-4226-b206-781274ac5f1d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTHBAU" id="b9d2b29e-192d-440f-92cf-2c97b234da67"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTHBAU" id="d6950b73-e462-4671-9c1f-88c5bd30f348"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="d5bf9e2e-204f-4ab6-a69a-9a75d60e4fbd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="150301c4-79dd-4836-b538-451643aba601"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="087ef90c-6100-4e48-a5c5-41c4ef2f4d6d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="cd7ac42d-7c49-4898-af45-b8fd457e3e5d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E98105AF1E2E0401F0A07993921</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E5A3262C0ADE0401F0A07993909:3A5A4F5"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0458441403081924118</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E539DAC608CE0401F0A079938F9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E539DAC608CE0401F0A079938F9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E539DAC608CE0401F0A079938F9</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E98105AF1E2E0401F0A07993921</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E9C18CA89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E5E0F53AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E98105AF1E2E0401F0A07993921</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E9C18CA89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E5E0F53AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tq45mStFzbAWYQvKBcFBD9fDkT0gDRkpYmpeCv/5JiKyB68Mwww2R3Z+21L1lJlaOFZzkNzkkoqM+0dqum/2tDa4Itq2zAYgUbBVguGZOCPTGKJrRL1hRP82VL19qcR6TNuEBM1HQLmgUDlgyzMoIVp1hxCjBXLMAXXRuTkEto6ZKDurZeeIw7SdiaHoXM8RGn3GFoQbgjsDNsdDuO9HRQykmvV7csk4BhfS5E4ACAcy7BxPNwDvsLUAV7PlWXO0M6Y0hEIfmI6fKa/rE3juNcnM/54QxYEEIAbSB9XE5n53r9LN1M3Dab+tt1EzGfUYw8+o4UqS4Rc9/VGt7MD6mYL76BNoEJFbRB1tjAZoGd6+AzQMLuRKQ9kiFHBp8jMwUbkCkJCcNEexy0a/r5aR3c7h2FiPGpHy74wfp3lAhbEc8PiGvwNLOU3emIR8pVrxLstBn2Ik5XpKfGJECYcO0+JFO67lAuh8/lWtJ+bc3lj6ZTRvBv2lIFu1wldXCkOi06I1z8n57t9muLMkZeROr5ccVr+4/NRjx+f3tZ92Pe7JT/ND1cqNQSCrvOW1JZuz/Wh8OazdbHprBjiXKYv43hyO3f9t7eO3cQ5f/8syZlC1mifRG78XKzvHwa3j483PWLl3GzWARdr9Qrrl6vn2/ee4+DlaDN25uOOCv1H0Gvsb73STCf8ufrabk5eHjzLoOnUjwe4cnKLo7zz+71aGOPlyVvODBf4fvtstsFo/7kFsR3G26OWoV+ryuuzy7G0fX85qnnjcaj+eCm8AJ47TOn3Rz2jakkDKPJK8EiXarxaLe0K9kvJH6WF2WhrjFNXJ1AaRQXhAm9rnYpaXEiKUDUdWQzt+urpmlbl3bFhMXGlXlpXcICNK9gA5ZtO29bZqpBWxYHFJs+m1IVS6nsdn5+JogXDifMJaGx8iM8J1z/AbGFBNLabCAPh884GflSxTnCy81itRGVAJr2fI7NWUQ9yiJd6/miz/phYypIuCfdprkn3QOCaUCJ0nc14FxOOBeyFku0ioRn5lYox0gkb4BQibBjFSpFwOki8IhiCha+G3kkF8yDpDKAb/8tA2GeWCnHgR8K5JnJ+fs2vcNvaSWkj0uVA1cpXRDZTXLkKsqn+Xyfd2E37xS+EblUHTNZVhFSvGWy/+lzWtSYZKOSJYZ5NhbZll9CHAEAP/ADh6XJ4rkruhM9vV7ljSH1pJ72d4lyy1y0WkVJR8tKK0MJD6RkmmBIcCQFbzPy3wgDGQQ46b7JWB9Ezuz7/CIxZ0OBBFnI+dOS5QmPjSHh6rHRlgdnfepLZi+krJsga3HM1vTkm0Qx/vHZgh2s/KT5Xv7Ffuh+tusI1k4cmad8YQjKZmqlbpbNN7OBfQlLpRT64S74MYBjwfeNWZEzLkJO0yQS5PsvmtK4mo4w9iMm2i09MezqbsJTbALifDp9gUm0/eOyXvNvL+vnbmcoFXCB9MyX/rezQZNxwURXb4KES01fy7enDM5mOzr/QfCr1BfzdqvRLMFKc0/qK1d2VsC9TOpfzF8tOzU9PA/1vw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tq45mStFzbAWYQvKBcFBD9fDkT0gDRkpYmpeCv/5JiKyB68Mwww2R3Z+21L1lJlaOFZzkNzkkoqM+0dqum/2tDa4Itq2zAYgUbBVguGZOCPTGKJrRL1hRP82VL19qcR6TNuEBM1HQLmgUDlgyzMoIVp1hxCjBXLMAXXRuTkEto6ZKDurZeeIw7SdiaHoXM8RGn3GFoQbgjsDNsdDuO9HRQykmvV7csk4BhfS5E4ACAcy7BxPNwDvsLUAV7PlWXO0M6Y0hEIfmI6fKa/rE3juNcnM/54QxYEEIAbSB9XE5n53r9LN1M3Dab+tt1EzGfUYw8+o4UqS4Rc9/VGt7MD6mYL76BNoEJFbRB1tjAZoGd6+AzQMLuRKQ9kiFHBp8jMwUbkCkJCcNEexy0a/r5aR3c7h2FiPGpHy74wfp3lAhbEc8PiGvwNLOU3emIR8pVrxLstBn2Ik5XpKfGJECYcO0+JFO67lAuh8/lWtJ+bc3lj6ZTRvBv2lIFu1wldXCkOi06I1z8n57t9muLMkZeROr5ccVr+4/NRjx+f3tZ92Pe7JT/ND1cqNQSCrvOW1JZuz/Wh8OazdbHprBjiXKYv43hyO3f9t7eO3cQ5f/8syZlC1mifRG78XKzvHwa3j483PWLl3GzWARdr9Qrrl6vn2/ee4+DlaDN25uOOCv1H0Gvsb73STCf8ufrabk5eHjzLoOnUjwe4cnKLo7zz+71aGOPlyVvODBf4fvtstsFo/7kFsR3G26OWoV+ryuuzy7G0fX85qnnjcaj+eCm8AJ47TOn3Rz2jakkDKPJK8EiXarxaLe0K9kvJH6WF2WhrjFNXJ1AaRQXhAm9rnYpaXEiKUDUdWQzt+urpmlbl3bFhMXGlXlpXcICNK9gA5ZtO29bZqpBWxYHFJs+m1IVS6nsdn5+JogXDifMJaGx8iM8J1z/AbGFBNLabCAPh884GflSxTnCy81itRGVAJr2fI7NWUQ9yiJd6/miz/phYypIuCfdprkn3QOCaUCJ0nc14FxOOBeyFku0ioRn5lYox0gkb4BQibBjFSpFwOki8IhiCha+G3kkF8yDpDKAb/8tA2GeWCnHgR8K5JnJ+fs2vcNvaSWkj0uVA1cpXRDZTXLkKsqn+Xyfd2E37xS+EblUHTNZVhFSvGWy/+lzWtSYZKOSJYZ5NhbZll9CHAEAP/ADh6XJ4rkruhM9vV7ljSH1pJ72d4lyy1y0WkVJR8tKK0MJD6RkmmBIcCQFbzPy3wgDGQQ46b7JWB9Ezuz7/CIxZ0OBBFnI+dOS5QmPjSHh6rHRlgdnfepLZi+krJsga3HM1vTkm0Qx/vHZgh2s/KT5Xv7Ffuh+tusI1k4cmad8YQjKZmqlbpbNN7OBfQlLpRT64S74MYBjwfeNWZEzLkJO0yQS5PsvmtK4mo4w9iMm2i09MezqbsJTbALifDp9gUm0/eOyXvNvL+vnbmcoFXCB9MyX/rezQZNxwURXb4KES01fy7enDM5mOzr/QfCr1BfzdqvRLMFKc0/qK1d2VsC9TOpfzF8tOzU9PA/1vw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU6s6FH73VzDsxzM0QG/A2M5gaxW3u1ut1svLmRgWbRQCktAWf/0OVLCt1eM+M46dLFa+9a1LvuSQ4yg0HZdzSAWNmeINe+q/3Y7+CNBqanZT/muZABpu2U3NNIN2YBukbXW7quJxnoHHuMBM9FRTN1qa3tEM61q3nLbltMxG17QfVGUKKZfQ0qWhq8oqChl3yrA9NUuZE2NOucNwBNwRxJm4v84d6engipPaP1yzLAOm/bkQiYMQafhAIAxJg8QROkRbPoc+dyZ0xrDIUniL6fOe+rZ3uVw2ls1GnM6Qqes60m0kfXxOZz/U/kG1GXyPBfF6PcAsZpTgkL7igtQvEPPYV9xwFqdUzKNPoA1k6AW0BiuiEaPFfqjoPUDJ7ptIWyRTjjU+x0YFdgUBpMAIKDdXXk/98b0Orvdep5jxIE4jvrP+O0rAFhDGCfgarzKr2H0fcU+5+odAHI+RMON0AeNiTBJMgCsXKQR0dU65HD6fK2X7lRWXf7SaMiB/05ZDtMlVUkd7qjOkM+Di//Rss19rlCkOM+j7P830Ph0Zv3GO2uxudnl0dsYGVy9TOa8lhU3nNam63W/r3WGtZ+ttE0u4lZ0HT9Oz80knOum8eMHzy7EeeMasPe6edtgleT5B48mA5bYcm9X5LfDbh9XAnd7p4fDm4thtounJySThx9MD1E2z08dLH7Ebuprcjinz7scTveOe2sfWq3n7j/swHl2d5fo8ilATPf3M9e5RJ09Gl8vZzavAzYeje4/e5Qv0OjpA96vLi6NpOG+lJkvyEOC5957TZg7bxkoSJtnjExBRLYvx8IbKSPYLi6/lpbBQXwtKVycpNIoLYELtF7sKaXEyKUDUd2Qz1+vRwLDNY3tgWAPXst3Osd7SjZHu6m3bNgamW2nQmsUOxUHMAlrEKlR2PT9fEySRw4H5kGqLOCNz4OoXiEMssOKxK3k4YsbhOpYqbgB7fFqZszDPl5YRNcEKxJLnUbBQlXEsfrPfqRsISLe02zC2tPsKCE0oFAJfTDiXI86FLMYLXmQiNBoL3GCQySsgLVTYMVtWG3EaJSEUVFEU+1kIjWSelKVBfP1rapjw0ko5SeJU4NAoD+Cn+e1+q0ohfXxaOPAipSOQ7YQ9d1GzyufzvFubeVfwbubT4pzJuoqUkjWT7U/v41LMST0rdWKEGxX3estfQuwBQF/wQ7ulqeP5C7oRvbpf5ZUhBaVf9fcFN14a2WKRlR3tFmKZSngkNdNAEyCZVLz8On4GhmoI9K0Lp2a9E7m2b/PLxJxNBBYQyflTyuU3XhsT4MVrw5MnZ/Xdp8xWSFk3ASuxzzYI5aOkYPzlu4U4pPCT5gv5s4xT/71de7A24sg85RNDUDYrVsXVkn8yGySWsFRqYZxugu8D2Bd821gXueYi5DQ9ZgI+/6IUItdTMSFxxoQ3VEvDpvCWPEWegPPu9AGmFPe323rFP72t736dT6QERlitfel/O2u0HBcCavEoKLn01JV8fMrgbLYh9G8EP2p9u2kP3UFHtwa11ndtu2mN7LqAW5n0P5g/WjZqunse+n8A</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUtpQK7QgzLKBbR8UVRd0vd2J6gGibQJNA2V9/k2IrIHrdO8MMk9OT5zznJU9ywlGa1MMu55AJwqgR9dvmPyjGTYzr2EJeA1sNDL4V+F7T8oPjOHjyEQBCphFxLiGiXCAq2mbdcRuWc2y5rVunFfqtsOHXmsfN36YxhowraOVSc0wjTxPKwyJs25QZDRnihIcUpcBDgcNR9/IiVJ4hKjmZnZMNyyJg1pkJMQ9tG9diwJAkuIZZap/YOz4nMQ9HZEqRkBm8xox523zdu1qtaiuvxrKpXXccx3YCW/nEnEy/m51v5WaIIzphm3UPUUYJRgn5gzSpSxAzFhvdZMoyImbpB9Cu7Toa2oIcW9ht0O+m/RagYPdFpB2SGUcWnyG3BLuBCWRAMRh3N1Hb/P61Dm723maI8gnLUr63/jtKQJeQsDnEFi8zK9l9HfFAuTongMOI4kRysoQrPSZzhIEb1xlMSH5BuBq+mBtF+42cqx8ppwzw37TlxN7mqqjbB6rTJ1Pg4v/0bLtfG5QxSiR07pnjPiyeH0b3V/6f8Wp9eXUkf/HYiRpRu6Cw7bwhVbX7db0/rNVsvW5ajsfy1xmssBy1bu8mz/bCuW685L9efrqrp+VPkvcGK/5yn56vbkjaumpkizq+yx8nP8Y/jq7OB81J8nT0O0rOosEQvnlBz2s51w89+955nnXJ/fhWDv1JMM2Gzz3fbtGz4fnTww07H/ZOHzN3uL4b944f44WHvMGfpuPe58FITmby7O5u9e3IX6OUrGX3HBx7RdnjtNt+y2k7h11jKQkj+fQMWJRLPR5R3zhV/ULic3nRFhJbk8I1nGuN4gKoMDt6l5aWUCoBInGomrlZn/bcoD7wB86p73UHnjtwGo576nSdZhB4rdN+qUEbFnsUe4xOiI6lVXYzP58TxGnIgcaQWUsm8Qy4+QliHwlkRPRGHQ5GOdwypeJijTw39cQ05U0XNZBIA5xzp5WZxhUTQzrMuhMB2Y50u+6OdN8AJnMCWt/1gHM14VyoWizQUorErS1RjYJUN0CmRTisN1q+zUk6T0AztVMWywRq89m8qIzNN/91C2FeWAnHc5YJlLjF+fswvf1vZSWUT0y0A9cp/QDVTThwFXllPu/y9g9eWSV8V8ZEHzNVVpERvGGy++ltWvSYVKNSJYa5W3KvtvwlxAEA+xN+9n5pqnjxkmxFL69XdWMoPemU/V2g2qIml0tZdLSptTJT8LaSTNceAZZK8Na37AWoXUHYX7pvKtZ7kSv7Lj8pZnQkkIBUzZ9RLL/w2BgB14+NSB2c/KsvmZ2Qqm4CcnHI1kvUm0Qz/vTZgkOs/ZT5Wv2tWBa/tesA1lYclad6YQhCp3qlb5b1B7OBmYIlSgpZtg1+COBQ8F1jVeSKi1DT9CQFfPzF0BrXNhHGTFIR9c3CsK27BU+xnkP45vQOptD218s65x9e1g+XFyOlgCkyK1/y384WKcYFg6nfBAWXtpmrt6cKTqdbOv9K8IDUe0G/2zt2Wr09qQ+qAu5k0nlnfm/Zqun+eej8Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0458441403081924118</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0458441403081924118</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0458391403081919558</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0458411403081921943</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0458441403081924118</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E98105BF1E2E0401F0A07993921</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E9C18CB89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E5E0F54AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_UserGet_FUNC_CHILD_SAU_Get_CHILD_Blocked_tou_200_OK_P2" searchProperties="true" id="df0d136e-2042-4ea7-b4cd-3e273e25429e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f0a81143-15af-4ed0-95c5-2ce59b8f4453"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="33b3e793-43cc-4b5e-b0c8-bdc4c5799a66"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="565942e9-4a39-4ab7-ae33-24a9af47b86d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="99e11afa-e127-4abe-afa0-110add47c6a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="e128cdb7-2033-4571-9481-b741edbfbc35"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="e26cae78-c26c-43b5-b081-bc8dbab74578"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="1a336dcc-4a93-4f40-9636-ff39d649db05"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B22218DB33E0401F0A05992646</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B36C9B2D4BE0401F0A07991D6D:A1D4B6A6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0512111403082731214</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999AFAB2F5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999AFAB2F5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999AFAB2F5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B22218DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BA0FBC8CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B284B97D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B22218DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BA0FBC8CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B284B97D05E0401F0A0599263A</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbUuM4EH2fr3B5Hrcc35IMdpFU5TIBA2FYEpgZXrYUue0IbMmx5Fz4+pUcbJIQWGarKFJqt06fvuhIpxylieP3OIdcEEa1YNjR//HCsNkC1zEAgWs0wZ4ZM/nfcJueY4dOC9uOrWsB5wUElAtERUd3LLtpWG3DPplanm87vvWtYbnWg67dQ84ltHRpWLq2ThPK/TJsRy9y6jPECfcpSoH7AvuT3vjKl54+qjjp3dMtyzJg3p0LkfmmiRshYEgS3MAsNU/NPZ/TkPsTElMkihxeYoa8o7/sXa1WjZXbYHlsOpZlmZZnSp+Qk/ir3v1SbYYwoBHbrgeIMkowSsgzUqTGIOYs1HpJzHIi5uk70LZpWwragDU2sN2kX3XzNUDJ7pNIeyRzjgw+R3YFdgsR5EAxaHe3QUf/+rkObvdOc0R5xPKUH6z/jBLQJSQsg9DgVWYVu88jHilX9xSwH1CcFJws4VqNSYYwcO0mh4isrwiXwxdyrWy/tubyj1RTBvhP2nJq7nKV1M0j1RmSGLj4Pz3b7dcW5R4lBXTz9JnMN2fBlNAU45tf06G1ODtH62nw1Ckp7DpvSdXtflkfDms9Wy+bzi7b6WW/n28eZlHoTiZ3G3OU/jxfF/H4sbeYjgs+YhPn9tvJFKKo1Yui6wFqW+Tv379WF4PW6vsPe/DznJxfPGV082WGwrvpauWdsDvXY2sajLyrC5z9vHkwQ7h+cFvjK+f+8uZ+cXfxVzYO3Zk5vCXictKeTgL+/Y7/PRjxsziLN+2H3pds2IdsdfZ8+bt9aT1mBfuNO6857eawb6wkYVLMHgGLaqnGIxhqI9kvJD6WF2UhoRGVrn6mNIoLoELvql1KWvxCChAJfdnM7Xo0sD3P6zuOY58M+6773Wpa9sjqWS3Pc9rNdqVBWxYHFAeMRkTFUiq7nZ+PCeLU50BDyI0lK/AcuP4B4hAJpAX0Vh4ORjlMmVTxmD2jsPUkiLOwV3EUt92n4tGhbV27ZuIH/ZH3IgH5nnJL2d5V7lvAJCOg5F3NN5cDzoUsxQItC5HYjSVqUCjkBZArDfad5knL5CTNElBEzZSFRQKNbJ6VhTH59tcxEOallXCcsVygxC6P37vZHX6rCiF9QqIcuEqpD7KZ8OYmsv1Wlc/7ebd2867ge0VI1CmTVRU5wVsm+59eh0VNST0pdWKY2xX3essfQhwBMD/gZx6Wpo4XLslO9Op2lReGlJNu1d8FaiwaxXJZlB39pqQyl/CmVEzbnAAupN5tpuwJqFlDmJ+6bmrWB5Fr+z6/QszpRCABqZw/rVx+4q0xAa7eGoE8N+vPPmT2Qsq6CViLY7ZBIp8kivGHrxbsY+UnzTfyZ8Xy8LVdR7B24sg85QNDEBqrlbpYNu/MBmYSlkglZPku+DGAY8H3jXWRay5CTtOsEPD+F01JXEdHGLOCimCol4Zd2S15ik0G/qvTG5hS2l/u6jV/967+Nb6aSAFMkV77kv92Nkg5Lhh09SQouXT0tXx6yuA03pH5F4Jvlb436vWdUcu1vH2ldwd1Afcy6b4xv7Xs1PTwPHT/BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbUuM4EH2fr3B5Hrcc35IMdpFU5TIBA2FYEpgZXrYUue0IbMmx5Fz4+pUcbJIQWGarKFJqt06fvuhIpxylieP3OIdcEEa1YNjR//HCsNkC1zEAgWs0wZ4ZM/nfcJueY4dOC9uOrWsB5wUElAtERUd3LLtpWG3DPplanm87vvWtYbnWg67dQ84ltHRpWLq2ThPK/TJsRy9y6jPECfcpSoH7AvuT3vjKl54+qjjp3dMtyzJg3p0LkfmmiRshYEgS3MAsNU/NPZ/TkPsTElMkihxeYoa8o7/sXa1WjZXbYHlsOpZlmZZnSp+Qk/ir3v1SbYYwoBHbrgeIMkowSsgzUqTGIOYs1HpJzHIi5uk70LZpWwragDU2sN2kX3XzNUDJ7pNIeyRzjgw+R3YFdgsR5EAxaHe3QUf/+rkObvdOc0R5xPKUH6z/jBLQJSQsg9DgVWYVu88jHilX9xSwH1CcFJws4VqNSYYwcO0mh4isrwiXwxdyrWy/tubyj1RTBvhP2nJq7nKV1M0j1RmSGLj4Pz3b7dcW5R4lBXTz9JnMN2fBlNAU45tf06G1ODtH62nw1Ckp7DpvSdXtflkfDms9Wy+bzi7b6WW/n28eZlHoTiZ3G3OU/jxfF/H4sbeYjgs+YhPn9tvJFKKo1Yui6wFqW+Tv379WF4PW6vsPe/DznJxfPGV082WGwrvpauWdsDvXY2sajLyrC5z9vHkwQ7h+cFvjK+f+8uZ+cXfxVzYO3Zk5vCXictKeTgL+/Y7/PRjxsziLN+2H3pds2IdsdfZ8+bt9aT1mBfuNO6857eawb6wkYVLMHgGLaqnGIxhqI9kvJD6WF2UhoRGVrn6mNIoLoELvql1KWvxCChAJfdnM7Xo0sD3P6zuOY58M+6773Wpa9sjqWS3Pc9rNdqVBWxYHFAeMRkTFUiq7nZ+PCeLU50BDyI0lK/AcuP4B4hAJpAX0Vh4ORjlMmVTxmD2jsPUkiLOwV3EUt92n4tGhbV27ZuIH/ZH3IgH5nnJL2d5V7lvAJCOg5F3NN5cDzoUsxQItC5HYjSVqUCjkBZArDfad5knL5CTNElBEzZSFRQKNbJ6VhTH59tcxEOallXCcsVygxC6P37vZHX6rCiF9QqIcuEqpD7KZ8OYmsv1Wlc/7ebd2867ge0VI1CmTVRU5wVsm+59eh0VNST0pdWKY2xX3essfQhwBMD/gZx6Wpo4XLslO9Op2lReGlJNu1d8FaiwaxXJZlB39pqQyl/CmVEzbnAAupN5tpuwJqFlDmJ+6bmrWB5Fr+z6/QszpRCABqZw/rVx+4q0xAa7eGoE8N+vPPmT2Qsq6CViLY7ZBIp8kivGHrxbsY+UnzTfyZ8Xy8LVdR7B24sg85QNDEBqrlbpYNu/MBmYSlkglZPku+DGAY8H3jXWRay5CTtOsEPD+F01JXEdHGLOCimCol4Zd2S15ik0G/qvTG5hS2l/u6jV/967+Nb6aSAFMkV77kv92Nkg5Lhh09SQouXT0tXx6yuA03pH5F4Jvlb436vWdUcu1vH2ldwd1Afcy6b4xv7Xs1PTwPHT/BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tq456SFEFpR5jhIvuwFW8gOr6cCekqRNsEm5SLv34nxVZA9OiZYYbJ6sq3vnXJl5xKEkdlvyklJIoJbvU6dfvfMQ0pJu7YCaBacyo1MnbGuBI6+Ph4PK4APgoDals9KVPocakIV3W7jN2KdnDc2hB7vlv2XVyqnlQfbWsEidTQ2qWEbWsZR1z6Wdi6nSbcF0Qy6XMSg/QV9QfN/oWvPX2Sc7Ibp2uWWcCkMVVq5iNESwFQiCJaoiJGp2jL5zSQ/oBNOFFpAm8xA1m33/YuFovS4qgkkgkqY4wR9pD2CSSbHNqNg3wzBD0eivW6TbjgjJKIvRJDqg9qKgKrGU1EwtQ0/gTaRS420A4sqUPdCj+00XuAjN03kbZIJpI4ckrcHOwWQkiAU7Dubnt1+/B7HVzvHSaEy1AksdxZ/4wS8DlEYgaBI/PMcnbfR9xTrsYpUL/HaZRKNodLMyYzQkFa1wmEbHnBpB6+QFpZ+62l1D+WTxnQn7TlFG1y1dTRnup02ASk+j892+zXGmVEohQaNyP3ZrWoRdHz2eOIz5dJFz+ftRWqBLV6RmHTeU2qaPfbendYi9l62/QyuEaxuu48U37UP4GLxaub8mh1LryH28t/fo8egpfhxRkQfKXUlTt/7Exw9+61hlE34GUiQ/U8v+ETiEPW7x2EXnL/4LW9bnkk1NOwGo7/PP3ynlw8oHd3eur6wWp0fs9C9/dweo5qLW/Z7z+cX7Zu7pvuK5v+4jN31Yyur4LjsHLQeq1UxNPv6M/q7ixZdh+fUKX+ntNmDtvGXBIG6fgJqMqXZjx6Haur+0XU1/JiLCxwwszVnxmNkgq4shtml5EWP9UCxAJfN3O97rZdz/NaTdxttWvts5MzXMFuFzfxiee5neNWrkFrFjsU24KHzMQyKruen68J0tiXwANInLlI6RSk/QVihyhi9fitPhyCSxgKreKuxwV7JuS4FsZHZXf8UktXkVCLmm1dCnXFr5JmqCDZkm6j2xvSfQuUzRgYfTcDLvWES6Vr8ULmqYrc0pyUOKT6BkiMCPvlSq2KJItnERimKBZBGkFpNp1llUFy/V92CJWZlUk6E4kikZudv0/T2/2WV0L7BMw4SJNSC3Q3Yc9VhPN8PuRd3Xtl5fDNNGDmmOmyqoTRNZPtT+/TYsakGJUiMSrdnHux5YcQewDQF/zQbmmKeMGcbUTPr1d9Y2g9aeT9fSGll1I6n6dZR0+MViYaHmnJdNEAaKoFbzUUz8BRAYG+dd8UrHciF/Ztfqma8oEiCmI9f1a2/MZjYwDSPDZ6+uAsv/uS2Qqp66ZgqfbZ2pF+kxjGXz5bqE+NnzZf67+FSIL3du3B2oij89QvDMX4xKzMzbL6ZDao0LBMS6FINsH3AewLvm0silxwUXqaxqmCz79YRuPqNqFUpFz1OnZm2NTdjKdazcB/d/oAk2n722W9lJ9e1g/9i4FWwJjYhS/7b2eHZeNCwTZvgoxL3V7qt6cOzicbOv9G8KPUN7vNVrlbPcJeIfVVzysfH7WLAm5l0vhg/mjZqOnueWj8BQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chMfdEBSlAadPS0kPonqN9OTKOAbeJk/oCaX/92qFJgdKe7pGQkCfjmW8u/mbOOEziuudzjpkgKTWCUc/8t+UuOm4Ttiy06AKrWW8DywXtjtUATrceNUFnEWHTCDiXOKBcQCp6Zt0BTctpW6A7d1wP1D3QqLW7nV+m8RMzrkwrlZpjGnkSU+4VbnumZNRLISfcozDB3BPIC/2biac0PVhiMvtnO5SFQ9ZfC5F5to1qEUY4jlENpYl9Zh/onEXcC8mKQiEZfvUZ8Z75ene73da2jVrKVnbdcRzbcW2lE3Gy+m72v5WXcRTQZbo7DyFNKUEwJi9Qg7rBYp1Ghh+vUkbEOvnANLCBo01bOEcWAk363bTfHBTovmjpACTj0OJrCEpjM7zEDFOEjftZ0DO/f62Cu7tzBilfpizhR+c/g4TpBsdphiOLl5GV6L5u8US6+mcYeQFFseRkg291m2QQYW7cMbwk+YRw1XwRN4ryGzlXP1J2GUZ/UpYzex+rgm6fyM6IrDAX/6dm+/XaWfkJY4n7F0M7vF+fdy8Sf9VZ/Zi+XMspS598vnzsFRD2lXegqnK/no+bteqt10vokjy61z/vWtfR/SyJsjtn9FeYt2h3FU7yIA7G7UVjAaGIwDz8ex4/w6srsg5Hg2Z32FijgS8v+eB8EozP5/7wWz6Nbxf2ZtS6ZrmYBnHSXUb2D/hDJu7Lw/LGuZjY4PYmvKyfj9x5Pl63Z62bQNq4teyy5vlVNvNB4F5PZyJ8cL/NHslyDO4DsL2Vo7n8tVaP9C2m/RgOhSUlhHLxgJEoj7o9gpExVvWC4nN60RISWctC1cs0R3GBqTD7+pamFk8qAiKRp4q5O4+HwHXdQb3bHLidkdM6d5oOGDu+03Ldervhlxy0Q3EEcZjSJdG+NMvu+udzgCjxOKYRZtYmlWiNufmJxREU0AjoTD2OlHI8TxWLg4hDINuLrUxTlj+8sG2jK7bbp8w0blMxpVPmLwVmB9SteXuPumcYkYxgze+6wbnqcC5ULp7gRooY1DawRrFUE4BpEvbqzW7L5iTJYqyR2kkayRjXsnVWZMbmu/+6BREvpISjLGUCxqB4fx+Gd/ytzITSiYhW4DqkAVbVxCdGkVPG8y7u1smRVZr3ZUT0M1NpFYygHZLDT2/dotukapUqMMRBib268ocmThiwP8FnH6em8hdtyJ73cryqiaH4pF/W9wnWnmpys5FFRTuaK5kybyvKBHaIkVSE9zxPHzG1KxP2l+ZNhfrIcyU/xCfFmoYCCpyo/jOK4xeWjRBzvWwE6uHkX91kDlyqvAmci1OyYax2Eo3407UFeUjrKfGd+tumLHor1wlbe35UnGrDEISu9ElPlucPegOpFx0RRYUp2zd+ysAp54fCKskVFqG6aSEF/viLoTmuZ0KEUklFMDILwT7vFjjFc4a9N6V3Zgpufx3WOf9wWP9zMwkVAybQrHTJfytbpGgXpFZVpV9g6Zm52j2Vc7ra4/lXgO+p3h/7g/q41XDcI6ofVgk8iKT/TvxespfT4/fQ/w0=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0512111403082731214</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0512111403082731214</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051261403082726220</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051281403082728462</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0512111403082731214</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B22219DB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BA0FBD8CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B284BA7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_UserGet_FUNC_CHILD_BAU_Get_CHILD_Blocked_tou_200_OK_P2" searchProperties="true" id="289f5783-a9c3-4d44-a5c1-6dac58d0e07e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="01457201-b291-4ada-91f7-37d5993e5d1d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6181d6d8-8711-4951-b460-4961cd3345fe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU1" id="71946d2b-b8ad-4649-82da-428d059fba6f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU1" id="5502ebb4-af22-4cec-8fc4-787a1eb056bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="cca219bc-342e-4697-b7f2-8f64a13c4116"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="7ea1b746-6c36-4798-b78d-117e0b33d993"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="eca81f92-4cf8-4ccb-a375-dbe94f3220c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="eb35db55-e704-43fc-9144-ce53e51c5fea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BA0FE68CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999BC6788DD3FE0401F0A05992650:CA9027B1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0512211403082741828</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B23BF2FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B23BF2FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B23BF2FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BA0FE68CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B23C02FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B36CBA2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BA0FE68CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B23C02FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B36CBA2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+jUj05JWxBsR5jhVcuC6xXWdf1yJ6QHiLRJbVJAf/0mxSKw6HXvDDNMTk+e85yXPMmlwHHk+k0hIJWUMyPo1M1/w0q54mJyYU3Ac61K2SWW51Qnlu3WKvZF1cFVYptGIEQGARMSM1k3XdupWHbVci7Gtuc7ru/USo5rP5rGPaRCQSuXktq1jiMm/Dxs3cxS5nMsqPAZjkH4kvij5nDgK08fF5zMxuWGZR4wbcylTHyESCkEAlFESoTH6BLt+VyGwh/RGcMyS+EtZijq5tve1WpVWpVLPJ0h17ZtZHtI+YSCzk7NxkmxGcKATflm3caMM0pwRF+xJjUEOeeh0YxmPKVyHn8A7SDH1tAWrIlFnAo7NdF7gJzdF5H2SKYCW2KOnQLsDqaQAiNg/LgL6ubp1zq42TtOMRNTnsbiYP13lIAtIeIJhJYoMivYfR3xSLkal0D8gJEoE3QJN3pMEkxAGLcpTOl6QIUavlAYefuNtVA/WkwZkL9pyyXa5aqooyPV6dAZCPl/erbbrw3KPY4yaESBnE4eHn7cjIPOoPezOxuhod0fZc7gop5T2HXekNq2+219OKzb2XrbxKaPfRlW2qPbm8erbyi07e6g7Hrj67P+hKPytXvOXrsIDZ9mAb0P786mZ786r8miF3ho/LRI8Ty9vvn1D2nbIhmeiOo3ejY5b61eW+37Zf/xodbrTReTeMxk7Sq8pletdvbQiYezV9kdPJcHP3lc7o4WKbg/sqV4PO+/4Hkrez2HlMcnZb4IwuEIu/3V1Utl3K96v+rvOe3msG8sJGGUTZ6AyGKpxyPoGD3VLyw/lxdtoaE1zV39RGuUkMCk2dC7tLT4mRIgGvqqmZt1r+14ntdq2r1u9aLdrXXtiu307KZd8zynU20VGrRhcUCxzdmU6lhaZTfz8zlBEvsCWAipteQZmYMwP0HsYImNgN2pw8GZgDFXKu5MksmE29UFCBo5me1Bbe5iTtTBNG64/M6+p82phHRPu7Vw72j3HRCaUNACrydcqBEXUhXjGS8zGTmlJS4xyNQVkGoV9t3KxTkSNE4i0FRRzMMsglIyT/LSILH5dy1MRG6lgiQ8lThy8gP4YX6H34pSKJ+QagehU2qBaiccuYvsIp+P8z7fzbuAb2Yh1edM1VWmlGyY7H96Hxc9J9tZ2SZGhFNw3275S4gjAOgTfuiwNNt44ZLuRC/uV3VlKEFpFP19xqXnUrZcZnlHa1osUwWPlGY6aAQkU4r3MuYLYGgLgb504WxZH0Te2vf5ZXLORhJLiNX8GfnyC6+NEQj92gjUyVl/9SmzF1LVTcJaHrO1I/Uo0Yw/fbcQn2g/Zb5Vfyuehu/tOoK1E0flqZ4YkrKZXumr5eWD2SBcwVKlhTzdBT8GcCz4vnFb5C0XqaZpkkn4+IuhRa5uYkJ4xmTQMXPDrvDmPOVLAv670x8wubi/3dZr8eFt/TAcjJQExtjc+tL/drZoPi5E6Z3yz7nUzbV6fKrgbLYj9G8Ej2i9W2713F6r1j7Q+vcjuZdJ4w/zn5admh6eh8Zv</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+jUj05JWxBsR5jhVcuC6xXWdf1yJ6QHiLRJbVJAf/0mxSKw6HXvDDNMTk+e85yXPMmlwHHk+k0hIJWUMyPo1M1/w0q54mJyYU3Ac61K2SWW51Qnlu3WKvZF1cFVYptGIEQGARMSM1k3XdupWHbVci7Gtuc7ru/USo5rP5rGPaRCQSuXktq1jiMm/Dxs3cxS5nMsqPAZjkH4kvij5nDgK08fF5zMxuWGZR4wbcylTHyESCkEAlFESoTH6BLt+VyGwh/RGcMyS+EtZijq5tve1WpVWpVLPJ0h17ZtZHtI+YSCzk7NxkmxGcKATflm3caMM0pwRF+xJjUEOeeh0YxmPKVyHn8A7SDH1tAWrIlFnAo7NdF7gJzdF5H2SKYCW2KOnQLsDqaQAiNg/LgL6ubp1zq42TtOMRNTnsbiYP13lIAtIeIJhJYoMivYfR3xSLkal0D8gJEoE3QJN3pMEkxAGLcpTOl6QIUavlAYefuNtVA/WkwZkL9pyyXa5aqooyPV6dAZCPl/erbbrw3KPY4yaESBnE4eHn7cjIPOoPezOxuhod0fZc7gop5T2HXekNq2+219OKzb2XrbxKaPfRlW2qPbm8erbyi07e6g7Hrj67P+hKPytXvOXrsIDZ9mAb0P786mZ786r8miF3ho/LRI8Ty9vvn1D2nbIhmeiOo3ejY5b61eW+37Zf/xodbrTReTeMxk7Sq8pletdvbQiYezV9kdPJcHP3lc7o4WKbg/sqV4PO+/4Hkrez2HlMcnZb4IwuEIu/3V1Utl3K96v+rvOe3msG8sJGGUTZ6AyGKpxyPoGD3VLyw/lxdtoaE1zV39RGuUkMCk2dC7tLT4mRIgGvqqmZt1r+14ntdq2r1u9aLdrXXtiu307KZd8zynU20VGrRhcUCxzdmU6lhaZTfz8zlBEvsCWAipteQZmYMwP0HsYImNgN2pw8GZgDFXKu5MksmE29UFCBo5me1Bbe5iTtTBNG64/M6+p82phHRPu7Vw72j3HRCaUNACrydcqBEXUhXjGS8zGTmlJS4xyNQVkGoV9t3KxTkSNE4i0FRRzMMsglIyT/LSILH5dy1MRG6lgiQ8lThy8gP4YX6H34pSKJ+QagehU2qBaiccuYvsIp+P8z7fzbuAb2Yh1edM1VWmlGyY7H96Hxc9J9tZ2SZGhFNw3275S4gjAOgTfuiwNNt44ZLuRC/uV3VlKEFpFP19xqXnUrZcZnlHa1osUwWPlGY6aAQkU4r3MuYLYGgLgb504WxZH0Te2vf5ZXLORhJLiNX8GfnyC6+NEQj92gjUyVl/9SmzF1LVTcJaHrO1I/Uo0Yw/fbcQn2g/Zb5Vfyuehu/tOoK1E0flqZ4YkrKZXumr5eWD2SBcwVKlhTzdBT8GcCz4vnFb5C0XqaZpkkn4+IuhRa5uYkJ4xmTQMXPDrvDmPOVLAv670x8wubi/3dZr8eFt/TAcjJQExtjc+tL/drZoPi5E6Z3yz7nUzbV6fKrgbLYj9G8Ej2i9W2713F6r1j7Q+vcjuZdJ4w/zn5admh6eh8Zv</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxGlj6OQOHxHBQnoMMtM2+kARRUvK+PcBM8mdho7Afrr1w5NCpR225WQkG+uzz33w8e+FDiOXG8gBKSScmZMrnrm3616l7i+37D8wCVWo45bVhcHgYUIcgNMOk7dbZvGRIgMJkxIzGTPdB3UsJyWhTpzp+sh13NRDbXQ0jQWkAoFrVxqjmls44gJrwjbM7OUeRwLKjyGYxCeJN5scHPtKU8Pl5zM/uWeZREw7a+lTDzbJjUfCEQRqREe25f2kc+lL7wZDRmWWQrPMX3RM5/3bjab2qZe42lou47j2E7XVj6+oOGF2f9SbgZ/wgK+X48w44wSHNEnrEndgFxz3xhEIU+pXMdvQCMbORragi2xCGqwC9N+CVCw+yDSEclUYEusMSrBphBACoyAcT+d9MyLj3Vwv3eeYiYCnsbiZP05SsByiHgCviXKzEp2H0c8U67+JRBvwkiUCZrDrR6TBBMQxl0KAd1eU6GGzxdG0X5jK9SPllMG5DNtubQPuSrq9pnqXNEQhPw/PTvs1x5lgaMM+tN2nFOIf6C8TtOnBazcJXd+7x5x2OkVFA6d96Sqdj+vT4e1mq3nTctVly9+QhjM0c8ozd3db/uv1tN982Hx/dt6eP2wbNV/oNEkbnfWclwf3c3J0u58rY++NyazxYCLp5mfbx47WfRtHHz5sxTRtBMtZe7crcLZfRoMnSaLw8X6fuI4zfowCX/7CVmPFzdJiG/Z7lfzYVa/l0nSmCdTZ+47f3Zf1zCy57fulx+rVmu0WYwe4nDwc2PfP2Sd3ktOhzkcG0tJmGWrP0BkudTjMbkyxqpfWL4vL9pCfSsoXL1Ea5SQwKTZ17u0tHiZEiDqe6qZ+/V4hLrd7tCtjxx3PGyPvjkNB42dgdPudtFVC5UatGdxQnHEWUB1LK2y+/l5nyCJPQHMh9TKeUbWIMx3EK+wxMaETdXh4EzAnCsVR27c7kbMfcR1H1CIm07i7jDiyco0brn8xX6lg0BCeqTdSrgPtXsKhCYUtMDrCRdqxIVUxXjEeSYjVMtxjUGmroBUq7DnNjpNW9A4iUBTtWPuZxHUknVSlMYW+3/XwkQUVipIwlOJI1QcwDfzO/1WlkL5+FQ7CJ3SEFQ74cxdhMp8XuXdPHtnlfCDzKf6nKm6ypSSPZPjTy/jouekmpUqMSKquai2fBLiDID9Dj/7tDRVPD+nB9HL+1VdGUpQ+mV/H3HtsZbleVZ0tK3FMlXwttJMZM+AZErxdnP+DzC7grA/dOFUrE8iV/Zjfplcs5nEEmI1f0ax/MBrYwZCvzYm6uRsP/qUOQqp6iZhK8/ZRpF6lGjG775biEe0nzLfqb8NT/2Xdp3BOoij8lRPDElZqFf6atm9MRuEK1iqtJCnh+DnAM4FPzZWRa64SDVNq0zC218MLXI9ExPCMyYnV2ZhOBTegqfcJeC9OL2CKcT9+bbeijdv64eb65mSwBiblS/9b2eLFuNCwNSPgoJLz9yqx6cKzsIDoX8meFbrh+N3tf44k/4r82vLQU1Pz0P/Xw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSxyPIhRRIVJC4lA4d6NDSm+blyDgbcEns1HYC9OvHDg0FSnvaIyEh72yvvfbFyz4TKI7coCUEcEkYNfrdhvkv+JOJ409xaTKZ+iUPeZMSwrVJya7W7bpbOfU8BKbRFyKFPhUSUdkwXdvxlEPJqd/afuC4geuV3Xrlj2ncAxcKWrmUbdNYxREVQR62YaacBgwJIgKKYhCBxMG4NRwEyjNABSezebZhmQfkzbmUSWBZuBwChijCZcxi68za8zkLRTAmM4pkyuE1Ziga5uve5XJZXlbKjM8s17Zty/Yt5RMKMjsxmz+KzRD26ZRt1h1EGSUYReQFaVJDkHMWGq1oxjiR8/gDaMdybA1dghUuYcejJ6b1FiBn90WkPZJcoJKYI6cAu4EpcKAYjLubfsM8+VoHN3tvOaJiyngsDtbfowQ0g4glEJZEkVnB7uuIR8rVPAMc9CmOUkEyuNJjkiAMwhhxmJLVgAg1fKEw8vYbK6F+pJgywN9py5m1y1VRt45Up0tmIOT/6dluvzYo9yhKoXn/ML64+rloi1iMUzetu5fX1fA+zGhkN3IKu84bUtt2v64Ph3U7W6+bBp2484CWyeVCinjipYNfXud2QGdRsrhD+PpitOSeaNGXx6HFe73Txch77p5ad0PnH+9X9HjFl5VZ6+nS+Umtpz8/1kPoPS/X9fOXVWsxSNnj8uW2+jBK2APvhXy+fsqixy67tsXD4poP4lXMCHHPB/XT7OfVuP4sOrWMVC/u5sNxtfaD32Cc9fzOQzzKass6oFGr8ZbTbg77xkISxunkCbAslno8+l2jp/qF5Ofyoi0kLE1z1yDRGiUkUGk29S4tLUGqBIiEgWrmZt3rOL7vtyvVTrvldr32ue3ZTs9u2TXfd7rVbqFBGxYHFDuMTomOpVV2Mz+fE8RxIICGwEsZS/EchPkJYhdJZPTpjTocjAq4ZUrF6WI5n7m+v65OJi+LCD1Vphl+qZrGFZO/6W/emkrge8KtVHtXuG8Ak4SAVnc93kLNt5CqEs8oS2XklDNUppAq/edagtW++qklSJxEoHlaMQvTCMrJPMnrYonNv6uUSORWInDCuESRk5++D5M7/FbUQfmERDsInVIbVC/hyEXkFPm8y/v06IVVwLfSkOhDpooqOcEbJvuf3mZFD8l2ULaJYeEU3LdbvglxBMD6hJ91WJptvDAjO9GLy1XdF0pNmkV/n1H5uZxmWZp3tKaVkit4SwmmY40Bp0ru1rdsAdTaQlhfum22rA8ib+37/FI5p2OJJMRq/ox8+YWnxhiEfmr01bFZffUdsxdS1U3CSh6zdSL1ItGMP3204ABrP2Ueqb8l4+Fbu45g7cRRear3hSR0plf6Xll/MBuYKViihJDxXfBjAMeC7xu3Rd5ykWqaJqmEj78YWuEaJsKYpVT2u2Zu2FXdnKdcJxC8Ob2DyZX99apeiQ+v6sfhYKz0L0bm1pf8t3OJ5OOC1UNV+edcGuZKvTxVcDrbUflXgkeE3q20e26vXescCP3bkdzLpPnO/N6yU9PD89D8Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0512211403082741828</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0512211403082741828</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0512161403082736245</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0512181403082738491</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0512211403082741828</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BA0FE78CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B23C03FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B36CBB2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_UserGet_FUNC_CLG_Get_CHILD_Blocked_tou_200_OK_P2" searchProperties="true" id="4de142fa-7e94-48a1-9f53-08163d3558cd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b1471b58-6532-4dab-9aab-44c302965924"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="384e8a67-ef09-4803-950c-ff1634da4a9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="3cca91a5-9997-4417-9e2f-e395cd9c1cbd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="16e108f4-5883-43d3-b133-42fbb05ee853"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="05f1d08d-2055-4934-b287-80923bb42260"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="d5be100b-1c7f-4ca0-a8de-ba44d4dfa3b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","CLG");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2B0C7496AE0401F0A05992648</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999BC6795DD3FE0401F0A05992650:C439C90D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0512281403082748362</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BB88433A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BB88433A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BB88433A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2B0C7496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2B0E0496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B0C7496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B0E0496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1XIlUuigpRC26E3ZoDSmb4cGWdD3CY2jR2g/fpjhyYFSns6R0JC3tlee+2Ll33MUZo4Qcg5ZIIwqvV7bf0fp2FZTW9mG3VoNA3PBd+YepFn1Bt13/Pd1mzm+brW5zyHPuUCUdHWHcv2DKth2K2x5Qe2EziNWsvz7nVtAhmX0NKlZunaOk0oD4qwbT3PaMAQJzygKAUeCByMwuurQHoGqOSkd443LIuAWScWYhGYJq5FgCFJcA2z1Dw2d3yOIx6MyJwikWfwGjPibf1172q1qq3cGsvmpmNZlmn5pvSJOJl/1zvfys0Q9emMbdZdRBklGCXkBSlS1yBiFmlhMmcZEXH6AbRt2paCNmCNDWx79LtuvgUo2H0RaYdkxpHBY2SXYEOYQQYUg3Y77Lf171/r4GbvOEOUz1iW8r3131ECuoSELSAyeJlZye7riAfK1TkGHPQpTnJOlnCjxmSBMHDtZwYzsr4iXA5fxLWi/dqayx8ppwzw37Tl2NzmKqmbB6rTI3Pg4v/0bLtfG5QJSnLoJKv58vy0H05O09gNz+v2xc1db/r4ktfn7YLCtvOGVNXu1/X+sFaz9bqpezlMBRtQyh4uxmen9/e5E7s/TDRcLVzCVk5vNnHSjFza9dC1Vo9/LrvuhCbu0c3yotG6m4rew0rMR4Nf912YfDsaT9zBEx//Ch9uzXOE/BNHPP4hdde6tG/OnIYz4C9HQ5LdXg/g4rd/Hq/oz0Xz+XoS87vxXfR0xY9GV/n58Igd/fh22fxDQ7w8tV/mo+nFaf9karXfctrOYddYSsIonz4AFuVSjUe/p53JfiHxubwoC4mMWeEaLJRGcQFU6B21S0lLkEsBIlEgm7lZn3Vt35fpnljdpuc3wlPLs+wzK7Tqvu80vFapQRsWexS7jM6IiqVUdjM/nxPEacCBRpAZS5bjGLj+CWIPCaT16VAeDkY5jJlUcTtav9iO/+g2c3duo7qP4+cVn8cPsa7dMDGggyycCch2tFsK97Z2DwGTBQEl8GrCuRxxLmQxntAyF4ldW6IahVxeAZlS4cDxWnWTk3SRgKJqpizKE6gt4kVRGpNv/h0DYV5YCccLlgmU2MUB/DC//W9lKaRPRJQDVymdgGwnHLiL7DKfj/Oub+ddwod5RNQ5k3UVGcEbJruf3sZFzUk1K1VimNsl92rLX0IcADA/4Wful6aKFy3JVvTyfpVXhhSUTtnfJ1R7quXLZV50tKnEMpPwptRM2xwBzqXiPY/ZI1CzgjC/dOFUrPciV/ZdfrmI6UggAamcP61YfuG1MQKuXht9eXLWX33K7ISUdROwFods3UQ+ShTjT98tOMDKT5p/yr8Vy6K3dh3A2ooj85RPDEHoXK3U1fL8wWxgJmGJ1EKWbYMfAjgUfNdYFbniIuQ0TXMBH3/RlMi1dYQxy6no9/TCsC28BU/xvIDgzekdTCHur7f1mn94W/++vhpJCUyRXvmS/3Y2SDEuGHT1KCi4tPW1fHzK4HS+JfSvBA9o/Umr5bluaPt7Wt+tCriTSeed+b1lq6b756HzLw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1XIlUuigpRC26E3ZoDSmb4cGWdD3CY2jR2g/fpjhyYFSns6R0JC3tlee+2Ll33MUZo4Qcg5ZIIwqvV7bf0fp2FZTW9mG3VoNA3PBd+YepFn1Bt13/Pd1mzm+brW5zyHPuUCUdHWHcv2DKth2K2x5Qe2EziNWsvz7nVtAhmX0NKlZunaOk0oD4qwbT3PaMAQJzygKAUeCByMwuurQHoGqOSkd443LIuAWScWYhGYJq5FgCFJcA2z1Dw2d3yOIx6MyJwikWfwGjPibf1172q1qq3cGsvmpmNZlmn5pvSJOJl/1zvfys0Q9emMbdZdRBklGCXkBSlS1yBiFmlhMmcZEXH6AbRt2paCNmCNDWx79LtuvgUo2H0RaYdkxpHBY2SXYEOYQQYUg3Y77Lf171/r4GbvOEOUz1iW8r3131ECuoSELSAyeJlZye7riAfK1TkGHPQpTnJOlnCjxmSBMHDtZwYzsr4iXA5fxLWi/dqayx8ppwzw37Tl2NzmKqmbB6rTI3Pg4v/0bLtfG5QJSnLoJKv58vy0H05O09gNz+v2xc1db/r4ktfn7YLCtvOGVNXu1/X+sFaz9bqpezlMBRtQyh4uxmen9/e5E7s/TDRcLVzCVk5vNnHSjFza9dC1Vo9/LrvuhCbu0c3yotG6m4rew0rMR4Nf912YfDsaT9zBEx//Ch9uzXOE/BNHPP4hdde6tG/OnIYz4C9HQ5LdXg/g4rd/Hq/oz0Xz+XoS87vxXfR0xY9GV/n58Igd/fh22fxDQ7w8tV/mo+nFaf9karXfctrOYddYSsIonz4AFuVSjUe/p53JfiHxubwoC4mMWeEaLJRGcQFU6B21S0lLkEsBIlEgm7lZn3Vt35fpnljdpuc3wlPLs+wzK7Tqvu80vFapQRsWexS7jM6IiqVUdjM/nxPEacCBRpAZS5bjGLj+CWIPCaT16VAeDkY5jJlUcTtav9iO/+g2c3duo7qP4+cVn8cPsa7dMDGggyycCch2tFsK97Z2DwGTBQEl8GrCuRxxLmQxntAyF4ldW6IahVxeAZlS4cDxWnWTk3SRgKJqpizKE6gt4kVRGpNv/h0DYV5YCccLlgmU2MUB/DC//W9lKaRPRJQDVymdgGwnHLiL7DKfj/Oub+ddwod5RNQ5k3UVGcEbJruf3sZFzUk1K1VimNsl92rLX0IcADA/4Wful6aKFy3JVvTyfpVXhhSUTtnfJ1R7quXLZV50tKnEMpPwptRM2xwBzqXiPY/ZI1CzgjC/dOFUrPciV/ZdfrmI6UggAamcP61YfuG1MQKuXht9eXLWX33K7ISUdROwFods3UQ+ShTjT98tOMDKT5p/yr8Vy6K3dh3A2ooj85RPDEHoXK3U1fL8wWxgJmGJ1EKWbYMfAjgUfNdYFbniIuQ0TXMBH3/RlMi1dYQxy6no9/TCsC28BU/xvIDgzekdTCHur7f1mn94W/++vhpJCUyRXvmS/3Y2SDEuGHT1KCi4tPW1fHzK4HS+JfSvBA9o/Umr5bluaPt7Wt+tCriTSeed+b1lq6b756HzLw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH53SCwVpR5ipIFqPyD7iVrcvZ0K6gGhJSpMW2L/+JMVWQPTomeEyWV351rcu/ZJTjuax4wecQyoIo1rYa+v/jOtgNestMMbO2DLc6AQMz202Dcf2rHpr7NhOZOlayHkGIeUCUdHWHct2Datp2K07y/Ntx69btaZlPenaPaRcQkuXmty1mseU+0XYtp6l1GeIE+5TNAfuC+yPgsG1Lz19VHLSO6cblkXAtDMTIvFNE9ciwBDHuIbZ3Dw1d3xOI+6PyJQikaXwGjPibf1173K5rC3rNZZOTceyLNPyTOkTcTI90js/ys0QhXTCNusuoowSjGLyBylSAxAzFmlBPGUpEbP5B9C2aVsK2oAVNrDt0iPdfAtQsPsi0g7JlCODz5Bdgt3CBFKgGLRft2FbP/paBzd771JE+YSlc763/h4loDnELIHI4GVmJbuvIx4oV+cUsB9SHGec5HCjxiRBGLj2M4UJWV0TLocv4lrRfm3F5YeUUwb4O205Nbe5Surmger0yBS4+D892+7XBuUexRl00MMJWcdJa3A/iHvye7fM8fr6+JlMw3ZBYdt5Q6pq9+t6f1ir2Xrd9PKcsD/p+ZCF+bBxwcO7/tlZBvf5Zbdxf3wJSX/USvv1YVQf/w7Ok/Nf0ysUpPZggS9vFy+/13HTymjgrZ6mdMx+2I16b5BFj7Ph8RVb/L1+eLqxpxc8Hqxh5v01rT9a65sXfBEM8jhrpu7imvIr57zbyifestltYa9PHi361Hq0H5wfgUvchA6948btif10tZg9LNtvOW3nsGssJWGUjZ8Bi3KpxiPsaX3ZLyQ+lxdlIZExKVz9RGkUF0CF3lG7lLT4mRQgEvmymZt1v2t7nnfmnFnnlus1A/lr2X0rsBqe5zTdVqlBGxZ7FLuMToiKpVR2Mz+fE8RznwONIDVyluEZcP0TxB4SSAvprXw5GOVwx6SK27LgiWvF82ySjG0qTuqwyt3G8tnVtRsmhnSYBhMB6Y52S+He1u5bwCQhoAReTTiXI86FLMYC5ZmI7VqOahQyeQSkSoV9x201TE7mSQyKqjlnURZDLZklRWlMvvl3DIR5YSUcJywVKLaLF/DD/PaflaWQPhFRDlyldAaynXDgLHLKfN7l3Th4ZpXwQRYR9Z7JuoqU4A2T3Udv46LmpJqVKjHM7ZJ7teWbEAcAzE/4mfulqeJFOdmKXp6v8siQgtIp+7tAtUUty/Os6OiJEstUwptSM21zBDiTire+Yy9AzQrC/NKBU7Hei1zZd/llYkZHAgmYy/nTiuUXbhsj4Oq2Eco3Z/XVq8xOSFk3AStxyNaN5aVEMf703oJ9rPyk+af8W7I0emvXAaytODJPecUQhE7VSh0t6w9mAzMJS6QWsnQb/BDAoeC7xqrIFRchp2mcCfj4iaZErq0jjFlGRdjTC8O28BY8xToB/83pHUwh7q+n9Yp/eFo/Dq5HUgLnSK98yX87G6QYFwy6uhQUXNr6Sl4+ZXA63RL6V4IHtP6s1XLr9cD29rS+WxVwJ5POO/N7y1ZN99+Hzr8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBQFFRUVxv3sJhWJRNBgT99e+g0ZPkJOfL+13p9PR0P73Q88wzNnyP7QCMUZy4YVBWxJfKP4jmmyxs72oWjxo1rl63am0G0rVmq2mxLGxwnNGulBWMU6QEODGC5KXC0ky9RvM1htHpdodtd2j2qcHz20p5iWJMTBOVJ7pSzn0vwJ2r25dKGged0MAu7gSGj3AngZ05UEcdotkx7pgqr883lFeH8auTJFGHouCTiSDyPPgEQ596pj7oPJu4M3ftwEjSGL35NPFL5e1slmVPWf0pjG2KpWmaonmK6JjYtX9VXkv3w8hUAiu8rbtGEAYuNDz3YhSgVJQ4oVkGnh3GbuL435hmKIYuTNdQDmuQ4YJfFeq3gyu6H1r6ADLGRg07BnM3NkMWilEAUXkxU14qv35WwdtZPTYCbIWxjz+t/xskFJyQF0bIrOF7ZHd0P7f4RbpenxHsKAH0Uuye0Lhok8iACJenMbLcfORi0nwmLl/LX87xvcMQ/C8leabe4ySwqS8yI7o2wsn/U6/3tbpZWRpeil5blwyeTFEculv5wp3kbh6zwGnScbR4uUJ4r3wD9Sj12/pzoz766u0Q4DjNEpgRs4K2FYLxBmssNrdwYtTrqT1hgh43dph0j1J301jlYp83dH0MjopfdTQbL4Xj0hq7DXNwXtClXnecN3x+OTWO/HoA0mUrsLut+HyOrD7L5xdtQqdMc6oM4hbHD3asQTmDY3thaht3oPXhgePp3TjzGpvQ2ZcGvfk08BZjcODi9VbGIYNffsf0PoYiriE6X4Ms/q8bNC8aifFYdItJYZHPM0GvqqJ0q2K3C1DXBpkiAFsRRhcwFuzD0Tm4PT6jBaAtZCCCszoDmWhvxKWmDaXMXC697VKRZUGdcVkfbMQS2RClfClu1wPaWG2jDSvT27kgmOtZuKsPIrN/yPoOHKu6mo115azupXysS/TqKrNzsr6oe5WZ6It6abUXeHUmZWJ29ShKmTPermbRZsFn8CJpKuB6gFlIXUft6/6SgfWZA/fSSAWHq1xw1O5yqeaSDqYlwR4vSWx6V95G0Dejne8574z3iXHd7C3Pu56Xbi/SXu1Kve782Jsru7qoSQMw2yx2q+XBWMmnEuyPwe7u0W24xjrM7G07E7XNYBhuFecEx0CTBEEDJF00UJXeAIQ9AagccPNLdy80w64pZ9SAxaUq7/Wa67N7XGOjR3sG024zm9GqOT02RSmobofpbu+ozlqeVIdz87TgE/6ywafqqWm4DMwjS1tL/WSYW31tXtpNxXwN+1XTHlDehZdjtTUA8eXseKo9S1bNCT7vXMtaCesJ57UsT63PIsuzojOu6qF2iOmmgOostTmfhkkJ2KoAQG+/2AuaKrSLpJpKpm1UwQCylKTgsmeTIbs8DvonD27qIMyHq8n+8FYYU8wkgco0ibSVVGqLwCyK0J8vJHkPFoJtx4ItyYIGRaBtlGG2Ifla9Iny5zzK1zzakgCk+hY0+X6pvqD5ZJLMOQ6cA2ERyLyjHvOV2fTp1hFJo/k44jIVj61guwoPqu/GizidL4bD8Sjf6WnvsCezyqLnw1N9W5JOhwi446HuHMRQNKbRZpNE1QDGMFEiX1Xyy2SL921359ODaoMRprQIW+zC32WLniFth7E9Z4b9WTCtt/gSTq1z36/u29mqqs+bUcvsBpZ4PlPbeEmHIJT5WeNo5ix7cBbZqJlZA3DYGew493jhzEvDrQ6zmTZczf1qo9Q4jUY+fdEpbhxNsnkv4yRNq9ZNQe/rOIrdTdq283gSmOzGSJqnLb1supF34Nn0oHNRfWn7pFjTkxm11GlJ49Zw69utCA6oGXUCUssaKb3z7mJcIn8CbwP083R4CG/zg3o/WT6MnjvpmJNuRTC5L4sLSBHLMrkVjOTvBKaQuGbNuqp2ooIF4QQFSeW1OFWQl05KKI5rdsiVcVtLTabdZLsS3W3XWbbRkGiOZmQa0C2ep1lRurOcG4pPELthYLmFr4LH3W6pvwOEfgejwERx7RSm0EG48heLRb7KSjAj128YYKSHhCfScotj5QbTrTfarEgLNFsHcotuy802XZeZVqU8DpNJMImBlaD4A0dkmA8ccYagG7moIJLFbYrJdYoTkpKjcUoTj3k6GU8BSgnVjAu212G5doPCrh95qABM+aGZeugpcqJrgih8+2VrBsRX6UzS/1Hm3etN/22In/fu2SA6plso4CIeAZGKoj8Ib6vTuAfzfdDc+6Dv5kFqusWFTlKbxC68Ifm49btjilZ5tAuJ6g75oflZ8MEq9TmghyPz5MJHzz+eA4RNEr7xei/J0Xg6PqWnU3otQqvgUjExTzEU3aLmCKaEEJ318IAC6mGC+hEXfaD+5Pkh/4gvTZxgnpDv2SctU74uf/AQmSNcPEQU0vL5T185H1ySvCUoT76SdT3yXikQ//VJAzuw0CPiKfnJwtj8Xa4vbL3zQ+IsBpgb2MWqYJ7nb5oChsSsS4ZYGL83/pWBr5x/FD6S/MCSkG7apQn6fqdcTKeXigFhmAaJIlaugvcT84ozOUeo81vpDzNX7vdG5nP8LZlfq6M5mV2+UXnouv9bueZe2wUicgq7VywvlZy8S4nzwH43od8Afjmk22T6/WVIf4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0512281403082748362</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0512281403082748362</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0512261403082746083</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0512281403082748362</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130911_020045</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2B0C8496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2B0E1496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E61862CE0C842255E0401F0A079902DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_UserGet_FUNC_NONCLG_FAU_Get_CHILD_Blocked_tou_200_OK_P2" searchProperties="true" id="0fdacc19-deeb-4672-8ba0-6f04fa9cd827"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d201df14-5434-4aec-862f-fc28e0003e00"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9984f865-a0af-44a3-82c0-b6847854cdc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG" id="4548db55-6eb6-4049-8dba-eddab2729f66"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG" id="7a349c5b-d0d1-4b83-a151-ba122375c314"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="8c63b3ec-f481-4d69-b354-dc48e05d94d1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="87905010-0143-4d30-98dd-7e4b88b352b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="c8d70d7c-e4e3-4372-8a03-222427f07689"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="0e188df6-6986-47bf-a510-25d3c512d8e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B23C3DFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999BA102C8CE7E0401F0A07991D6B:E62BB4E6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0512371403082757196</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B0FB24BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B0FB24BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B0FB24BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B23C3DFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B0991E610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B36D002D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B23C3DFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B0991E610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B36D002D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Tp4yjkAgESFaRADj05hV6gtJ2+jIxjwCWxIXYg7dePHZoUKHTakZCQd7bXXvviZV8wEEeW6zGGEo4pUQK/pf5jTydWHUwMzUFVQ6sZDVtrNu1Qm0wb9WbVajRqzYaqBIylKCCMA8JbqmWYNc2oa2bz3nBc03Kr1UrdNJ9V5QElTEALl4qhKlkcEebmYVtqmhCXAoaZS0CMmMuhO/IGfVd4uqDgpLYvtizzgEl7zvnS1XVYCRFEUQQrkMb6hb7ncxEyd4RnBPA0Qe8xQ9ZS3/duNpvKplqhyUy3DMPQDUcXPiHDs3O1fVZsRmFApnS77gJCCYYgwm9AkhogPqeh4kUzmmA+j09Am7ppSGgNZVCDZo2cq/pHgJzdN5H2SCYMaGwOzAJsiKYoQQQiZTwMWur59zq43XufAMKmNInZwfpnlBBZo4guUaixIrOC3fcRj5SrfYGgGxAYpQyv0bUckyWAiCm3CZrirI+ZGL6QKXn7lYyJHy6mDMGftOVC3+UqqOtHquPjGWL8//Rst19blAcQpaidLezR2Lhc0HkytB8GNljxq6c/d35kDlo5hV3nLamy3e/rw2EtZ+t9UzK4eR38xa2alVG9l740Lzemf+UsrJq3eXRw/bH6Nhzf/6adP7NNRC07xBAafaeud18C01941k33xXqa3N6+jrtnl3jz4r1N/36AV79Xo2C2XEfxnWWnvveY+aENblfjl0lq16+bg8kv8208T/rO74Gz6t/r14/z8RAjY/IczeHliHlnwdUoRKHxfHfb88gwtYMoaH3ktJvDvrGQhFE6eUGQF0s5HoGv9ES/AP9aXqQFh9o0d3WXUqMYR4SrbblLSoubCgHCoSuauV33uqbjOB2r2q36vU6j+8uoGWbP8IyG45h+3Sw0aMvigGKXkimWsaTKbufna4IwdhkiIUq0NU3hHDH1C0QfcKAEZCgOByUM3VOh4mZj/maSzAkXVUBN2Izf8GK5yDjjqnJN+Q25SbwpR8medgvh3tXuIYJ4iZEUeDnhTIw446IYK7BOeWRW1qBCUCqugESqsGvVmrbOcLyMkKSqxzRMI1RZzpd5aXS2/bc0AFluxQwuacJBZOYH8GR+h9+KUgifEEsHJlPqINFOdOQusop8Tudt7+ZdwHtpiOU5E3XlCYZbJvufPsZFzkk5K2VikJVzUW75IcQRAP0Lfvphacp44RrvRC/uV3FlCEFpF/1dgcqqkq7Xad7RhhTLRMDrQjNNfYRgKhTv9Z4uENFLCP1bF07J+iByad/nl/I5GXHAUSzmT8mX33htjBCTr41AnJzsu0+ZvZCibhxl/JitG4lHiWT85bsFulD6CfOt+NvQJPxo1xGsnTgiT/HE4JjM5EpeLa8nZgNSAYuFFtJkF/wYwLHg+8ayyCUXLqZpknJ0+osiRa6lAghpSnjgq7lhV3hznvx1idwPp08wubi/39YZO3lbPw36IyGBMVBLX/zfzhrOxwUiVT4Kci4tNROPTxGczHaE/p3gEa03eh2r1vHqjX2tt/2ygHuZtD+ZP1t2anp4Htr/Ag==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Tp4yjkAgESFaRADj05hV6gtJ2+jIxjwCWxIXYg7dePHZoUKHTakZCQd7bXXvviZV8wEEeW6zGGEo4pUQK/pf5jTydWHUwMzUFVQ6sZDVtrNu1Qm0wb9WbVajRqzYaqBIylKCCMA8JbqmWYNc2oa2bz3nBc03Kr1UrdNJ9V5QElTEALl4qhKlkcEebmYVtqmhCXAoaZS0CMmMuhO/IGfVd4uqDgpLYvtizzgEl7zvnS1XVYCRFEUQQrkMb6hb7ncxEyd4RnBPA0Qe8xQ9ZS3/duNpvKplqhyUy3DMPQDUcXPiHDs3O1fVZsRmFApnS77gJCCYYgwm9AkhogPqeh4kUzmmA+j09Am7ppSGgNZVCDZo2cq/pHgJzdN5H2SCYMaGwOzAJsiKYoQQQiZTwMWur59zq43XufAMKmNInZwfpnlBBZo4guUaixIrOC3fcRj5SrfYGgGxAYpQyv0bUckyWAiCm3CZrirI+ZGL6QKXn7lYyJHy6mDMGftOVC3+UqqOtHquPjGWL8//Rst19blAcQpaidLezR2Lhc0HkytB8GNljxq6c/d35kDlo5hV3nLamy3e/rw2EtZ+t9UzK4eR38xa2alVG9l740Lzemf+UsrJq3eXRw/bH6Nhzf/6adP7NNRC07xBAafaeud18C01941k33xXqa3N6+jrtnl3jz4r1N/36AV79Xo2C2XEfxnWWnvveY+aENblfjl0lq16+bg8kv8208T/rO74Gz6t/r14/z8RAjY/IczeHliHlnwdUoRKHxfHfb88gwtYMoaH3ktJvDvrGQhFE6eUGQF0s5HoGv9ES/AP9aXqQFh9o0d3WXUqMYR4SrbblLSoubCgHCoSuauV33uqbjOB2r2q36vU6j+8uoGWbP8IyG45h+3Sw0aMvigGKXkimWsaTKbufna4IwdhkiIUq0NU3hHDH1C0QfcKAEZCgOByUM3VOh4mZj/maSzAkXVUBN2Izf8GK5yDjjqnJN+Q25SbwpR8medgvh3tXuIYJ4iZEUeDnhTIw446IYK7BOeWRW1qBCUCqugESqsGvVmrbOcLyMkKSqxzRMI1RZzpd5aXS2/bc0AFluxQwuacJBZOYH8GR+h9+KUgifEEsHJlPqINFOdOQusop8Tudt7+ZdwHtpiOU5E3XlCYZbJvufPsZFzkk5K2VikJVzUW75IcQRAP0Lfvphacp44RrvRC/uV3FlCEFpF/1dgcqqkq7Xad7RhhTLRMDrQjNNfYRgKhTv9Z4uENFLCP1bF07J+iByad/nl/I5GXHAUSzmT8mX33htjBCTr41AnJzsu0+ZvZCibhxl/JitG4lHiWT85bsFulD6CfOt+NvQJPxo1xGsnTgiT/HE4JjM5EpeLa8nZgNSAYuFFtJkF/wYwLHg+8ayyCUXLqZpknJ0+osiRa6lAghpSnjgq7lhV3hznvx1idwPp08wubi/39YZO3lbPw36IyGBMVBLX/zfzhrOxwUiVT4Kci4tNROPTxGczHaE/p3gEa03eh2r1vHqjX2tt/2ygHuZtD+ZP1t2anp4Htr/Ag==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6uQjwZIooJEoXRTtZQF2u3uy5VxJuA2sdPYAbq//tqhSYGlvd0rISFPxmfOfPjYZxyliRP0OIdcEEa1cNDR//Hw3G3PnaZhQ4wM14FTw283bcP1vKbry3WMsK6FnBcQUi4QFR3dsWzXsFqG7c0sP7Cd4LTVsN32L127h5xLaOnSsHRtkyaUB2XYjl7kNGCIEx5QlAIPBA6mvZvrQHoGqOKkd8+2LMuAeXcpRBaYJm5EgCFJcAOz1Dwz93zOIh5MyYIiUeTwGjPiHf1173q9bqxPGyxfmI5lWablm9In4mTxVe9+qTZDFNKYbdd9RBklGCXkN1KkbkAsWaT1kgXLiVim70Dbpm0paAM22MC2S7/q5luAkt0nkfZI5hwZfInsCmwCMeRAMWh3k7Cjf/1cB7d7ZzmiPGZ5yg/Wf0cJ6AoSlkFk8Cqzit3nEY+Uq3sGOAgpTgpOVjBSY5IhDFwb5xCTzTXhcvgirpXt1zZc/kg1ZYD/pi1n5i5XSd08Up0BWQAX/6dnu/3aotyjpIDuYPmwmYix9zQ4db79LtiPeD4fhxcXHvQ6JYVd5y2put2v68NhrWfrdVN6+UTHk+I7SR42w+hu0of7ewbCu7lqzy/jy6t588o5+Xmbkqvx08vd5sQekfgxXi8vY/8lt8P5Wjycrk+sYnm/+v5ltBL+6noU/ZjHo290zJKe+fjzGmaz9c/Zr6c1pv3QWz7jmSCON3bdGB7GP5qtk/7o22PynF/cDTbm3fPwtj2eWBdfWDZkrV+4Gd2OmjQZ9e68Xuctp90c9o2VJEyL+SNgUS3VeIQDbSj7hcTH8qIsJDLi0jXIlEZxAVToXbVLSUtQSAEiUSCbuV0P+7bv++eW79sXLdvqXViuZQ+tntX0faflOpUGbVkcUOwzGhMVS6nsdn4+JojTgAONIDdWrMBL4PoHiAMkkBbSiTwcjHKYManiGW8nTcEKmhHPbpEoTbzkMX1hia6NmLilt3kvFpDvSbfU7V3pngAmGQGl72rAuZxwLmQtntGqEIndWKEGhULeALkS4cBxvabJSZoloJiaKYuKBBrZMisrY/Ltv2MgzEsr4ThjuUCJXZ6/d9M7/FZVQvpERDlwldI5yG7CkavIqfJ5P+/mbt4VfK+IiDpmsqwiJ3jLZP/T27SoMalHpU4Mc7viXm/5S4gjAOYH/MzD0tTxohXZiV5dr/LGkHrSrfr7jBrPjWK1KsqOtpVW5hLelJJpm1PAhRS8lxl7AmrWEOan7pua9UHk2r7PrxBLOhVIQCrnTyuXn3hsTIGrx0YoD87msy+ZvZCybgI24pitn8g3iWL84bMFB1j5SfNY/q1ZHr216wjWThyZp3xhCEIXaqVulpd3ZgMzCUukFLJ8F/wYwLHg+8a6yDUXIadpXgh4/4umNK6jI4ylvohwoJeGXd0teYqXDII3pz9gSm1/vaw3/N3L+uHmeioVMEV67Uv+29kg5bhg0NWboOTS0Tfy7SmD08WOzr8SPCb1w3PHPe+12rXUt6X4D5qDuoB7mXT/MP9p2anp4Xno/gs=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0Tp4yjkwq2JChI0Qw+d3mF6ezkyzg54mthgOzTt148dmhQo7WmPhIS8s7322hcv+1CgNPGCnhDAJWHUGIYd81/f9erxpIGsJvLaViNGroWwW7dQC2IvakZR02uYxlCIDIZUSERlx/Qct2E5Lcs9GDt+4HpB3a8dHPgPpnEDXCho5VJzTCNPEyqCImzHzDgNGBJEBBSlIAKJg1Hv7DRQngEqOZndwxXLIiDvzqScB7aNaxFgSBJcwyy1D+0Nn8NIBCMypUhmHF5jRqJjvu59enqqPdVrjE9tz3Ec2/Ft5RMJMt03u3vlZoiGNGar9RGijBKMEvKCNKkzkDMWGb1kyjiRs/QDaNd2HQ1tQY4t7Dbovmm/BSjYfRFpgyQXyBIz5JZg1xADB4rB+H097Jj7X+vgau+YIypixlOxtf4eJaBLSNgcIkuUmZXsvo64o1zdQ8DBkOIkE2QJ53pM5giDMC45xCQ/JUINXySMov1GLtSPlFMG+DttObTXuSrq9o7qhGQKQv6fnq33a4Vyg5IMunzedlG/neYPnKdHD85z8+h43EwnLdToFBTWnVekqna/rreHtZqt103XiycWkWP3bhaNJ63j6f0FSpJ8cD5ZptGofn7XlmcJvbse2PntyRRu75e9xeTi+Meif+48Dpz+SXr2nPy+tf1G2D7ds9vNX3cL9KN19UyPpeuHSeacnVzyZJYv+72X/PInDA68+xv25/7yH/9q8hguekCT6cnjoJd6Ib65Gzhs/CtOoptsrz57ubi6jIUz+mNLcp8uQtZ5y2k9h01jKQmjbPIHsCyXejyGoTFQ/ULyc3nRFhJZceEazLVGCQlUml29S0tLkCkBIlGgmrlaD45c3/f79VboOF7Y6P90Go47cHpO2/fdsBWWGrRisUXxiNGY6FhaZVfz8zlBnAYCaATcWrIMz0CYnyCGSCJjSK/V4WBUwJgpFSet+qzuTGI39jL3EabppNlECBrUNM6ZvKAXvBdL4BvSrXR7XbqvAZM5Aa3vesCFmnAhVS0WaJnJxK0tUY1Cpm4ArkU48BoHTVuQdJ6AZmqnLMoSqM1n86Iytlj9e0qLRGElAs8Zlyhxi/P3YXrb38pKKJ+IaAehU+qD6ibsuIq8Mp93eTd3XlklfC+LiD5mqqySE7xisvnpbVr0mFSjUiWGhVtyr7Z8E2IHgP0JP3u7NFW8aEnWopfXq7oxlJ50y/4uUG1Ry5bLrOhoW2slV/C2kkzXHgHOlOA9j9kjULuCsL9031SstyJX9k1+mZzRkUQSUjV/RrH8wmNjBEI/Nobq4ORffclshFR1k5DLXbajRL1JNONPny04wNpPmS/V3xPj0Vu7dmCtxVF5qheGJHSqV/pmef5gNjBTsERJIePr4LsAdgXfNFZFrrhINU2TTMLHXwytcR0TYcwyKoehWRjWdbfgKZ/nELw5vYMptP31ss7Fh5f13dnpSClgiszKl/y3s0WKccFg6jdBwaVj5urtqYLT6ZrOvxLcIfXOoO81+r1We1Pqm5XUb2bSfWd+b1mr6fZ56P4F</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0512371403082757196</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0512371403082757196</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0512321403082752527</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0512351403082755131</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0512371403082757196</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B23C3EFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B0991F610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B36D012D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_UserGet_FUNC_ADULT_SAU_Get_CHILD_Blocked_tou_200_OK_P2" searchProperties="true" id="ebabe9aa-2364-4e2c-b889-3f99da946eff"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="97eab2e9-e3c3-4dfa-a72b-339c8b483058"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="83f92868-6710-48fa-8e18-af79bb36901c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_SAU" id="fb220c42-bdb9-4a92-8ce4-acb2095d472e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_SAU" id="4647f0b3-35a0-4418-8e20-a123f2c86e9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="0efc1cbb-7576-4d75-8ad0-2d4d5b81cbdd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="6ce81ca6-575e-4529-a030-e6eff8b189d9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="e68847b5-6a71-4819-bbe9-3d649a74b6c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="cd25b754-c692-4968-82a1-825d1bcfc8a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2850C7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B2B128496AE0401F0A05992648:83699B76"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0512451403082765952</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2B112496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B112496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B112496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2850C7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BBF87A76D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B23C68FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2850C7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BBF87A76D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B23C68FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQC0lDooJE6eXQaUspdGbalyPjbILbxAm2w6VfP3ZoUmBoT+dISMg722uvffGyjzlKEyfscg5MkIxq/dO2/q/nBXZzMvUN30Mtw7WayJh4U8+IAJpu4DgIrKmu9TkvoE+5QFS0dceyXcM6MuzW2ApC2wldp+Ee+Y+69gMYl9DSpWHp2ipNKA/LsG29YDTMECc8pCgFHgocjrrXV6H0DFHFSe8cb1iWAVlnJkQemiZuRIAhSXADZ6l5bO74HEc8HJGYIlEweI0Z8bb+une5XDaWzUbGYtOxLMu0AlP6RJzEX/XOl2ozRH06zTbrHqIZJRgl5AUpUtcgZlmkdZM4Y0TM0negbdO2FLQBK2xg26VfdfMtQMnuk0g7JBlHBp8huwK7gykwoBi0+7t+W//6uQ5u9o4ZonyasZTvrf+OEtAFJFkOkcGrzCp2n0c8UK7OMeCwT3FScLKAGzUmOcLAtVsGU7K6IlwOX8S1sv3aissfqaYM8N+05djc5iqpmweqc0pi4OL/9Gy7XxuUHygpoGORbP1M3KR1iXyUe9mJObz8Of72OLnl7ZLCtvOGVN3u1/X+sNaz9bppMX2+8c5+5jejoTtALyd98nJGU2+c99iVM/hlDkfei9P3h/Ph+eD2yO+R3tM3/+xxUAzv6fcL9iCccffxIV340eLiS3RteUkTDU3hteBoGQ0Ds3sV54NLvnq8+fVtTrrn//Rmce/7VEaEPluvOXPXL1b6HHP/4eUpvr1g97j5cGGnwRcx95yr4eruHi+fMrgJLv3n9ltO2znsGitJGBWTJ8CiWqrx6J9q57JfSHwsL8pCImNauoa50igugAq9o3YpaQkLKUAkCmUzN+vznh0EwYnT8qyef2p5Z5Zr2edW1/KCwDlqdisN2rDYo9jL6JSoWEplN/PzMUGchhxoBMxYZAWeAdc/QDxFAml9eicPR0Y5jDOp4rYfu5jEjr1awNxeBpNJ5DKeTHiiazeZGNAB604FsB3tlsK9rd13gElOQAm8mnAuR5wLWYw5WhQisRsL1KBQyCuAKRUOHbflmZykeQKKqplmUZFAI5/lZWlMvvl3DIR5aSUc5xkTKLHLA/hufvvfqlJIn4goB65SOgHZTjhwFzWrfN7P29vOu4LvFhFR50zWVTCCN0x2P72Ni5qTelbqxDC3K+71lr+EOABgfsDP3C9NHS9akK3o1f0qrwwpKJ2qv3PUmDeKxaIoO+orsWQS3pSaaZsjwIVUvPU4ewZq1hDmpy6cmvVe5Nq+y68QMzoSSEAq508rl594bYyAq9dGX56c1WefMjshZd0ErMQhWy+RjxLF+MN3Cw6x8pPmW/m3zFj01q4DWFtxZJ7yiSEIjdVKXS3rd2YDZxKWSC3M2Db4IYBDwXeNdZFrLkJO06QQ8P4XTYlcW0cYZwUV/VO9NGwLb8lTrHMI35z+gCnF/fW2XvF3b+tf11cjKYEp0mtf8t/OBinHBYOuHgUll7a+ko9PGZzGW0L/SvCQ1p/YtuMGR91drXdbdQF3Mun8Yf7TslXT/fPQ+Q0=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQC0lDooJE6eXQaUspdGbalyPjbILbxAm2w6VfP3ZoUmBoT+dISMg722uvffGyjzlKEyfscg5MkIxq/dO2/q/nBXZzMvUN30Mtw7WayJh4U8+IAJpu4DgIrKmu9TkvoE+5QFS0dceyXcM6MuzW2ApC2wldp+Ee+Y+69gMYl9DSpWHp2ipNKA/LsG29YDTMECc8pCgFHgocjrrXV6H0DFHFSe8cb1iWAVlnJkQemiZuRIAhSXADZ6l5bO74HEc8HJGYIlEweI0Z8bb+une5XDaWzUbGYtOxLMu0AlP6RJzEX/XOl2ozRH06zTbrHqIZJRgl5AUpUtcgZlmkdZM4Y0TM0negbdO2FLQBK2xg26VfdfMtQMnuk0g7JBlHBp8huwK7gykwoBi0+7t+W//6uQ5u9o4ZonyasZTvrf+OEtAFJFkOkcGrzCp2n0c8UK7OMeCwT3FScLKAGzUmOcLAtVsGU7K6IlwOX8S1sv3aissfqaYM8N+05djc5iqpmweqc0pi4OL/9Gy7XxuUHygpoGORbP1M3KR1iXyUe9mJObz8Of72OLnl7ZLCtvOGVN3u1/X+sNaz9bppMX2+8c5+5jejoTtALyd98nJGU2+c99iVM/hlDkfei9P3h/Ph+eD2yO+R3tM3/+xxUAzv6fcL9iCccffxIV340eLiS3RteUkTDU3hteBoGQ0Ds3sV54NLvnq8+fVtTrrn//Rmce/7VEaEPluvOXPXL1b6HHP/4eUpvr1g97j5cGGnwRcx95yr4eruHi+fMrgJLv3n9ltO2znsGitJGBWTJ8CiWqrx6J9q57JfSHwsL8pCImNauoa50igugAq9o3YpaQkLKUAkCmUzN+vznh0EwYnT8qyef2p5Z5Zr2edW1/KCwDlqdisN2rDYo9jL6JSoWEplN/PzMUGchhxoBMxYZAWeAdc/QDxFAml9eicPR0Y5jDOp4rYfu5jEjr1awNxeBpNJ5DKeTHiiazeZGNAB604FsB3tlsK9rd13gElOQAm8mnAuR5wLWYw5WhQisRsL1KBQyCuAKRUOHbflmZykeQKKqplmUZFAI5/lZWlMvvl3DIR5aSUc5xkTKLHLA/hufvvfqlJIn4goB65SOgHZTjhwFzWrfN7P29vOu4LvFhFR50zWVTCCN0x2P72Ni5qTelbqxDC3K+71lr+EOABgfsDP3C9NHS9akK3o1f0qrwwpKJ2qv3PUmDeKxaIoO+orsWQS3pSaaZsjwIVUvPU4ewZq1hDmpy6cmvVe5Nq+y68QMzoSSEAq508rl594bYyAq9dGX56c1WefMjshZd0ErMQhWy+RjxLF+MN3Cw6x8pPmW/m3zFj01q4DWFtxZJ7yiSEIjdVKXS3rd2YDZxKWSC3M2Db4IYBDwXeNdZFrLkJO06QQ8P4XTYlcW0cYZwUV/VO9NGwLb8lTrHMI35z+gCnF/fW2XvF3b+tf11cjKYEp0mtf8t/OBinHBYOuHgUll7a+ko9PGZzGW0L/SvCQ1p/YtuMGR91drXdbdQF3Mun8Yf7TslXT/fPQ+Q0=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/C4jztGtuMA9gRmIECXlqRtoCTkZUfI1yBiy44lGye/fiUTO0BJNt0ZZhhdX5177oeOdMFxFNpej3NIBY2ZNh509H/AavnQXi6Ntmk7hrN0wVieBUvDcdpAWk3XBtzWtTHnGYwZF5iJjm6blmOYTcNqz0zXs2zPcRrNM/Ne1+aQcgktXRqmrhVRyLhXhu3oWcq8GHPKPYYj4J4g3rR3NfGkp4crTnr3YseyDJh210IkHkKk4QOBMCQNEkfoAh34XPjcm9IVwyJL4SWmzzv6y97tdtvYnjXidIVs0zSR6SLp43O6+qx3P1WbwR+zIN6tLzGLGSU4pM9YkboCsY59rReu4pSKdfQGtIUsU0EbUBCDWA77rKPXACW7DyIdkEw5NvgaWxXYDQSQAiOg/boZd/TPH+vgbu8sxYwHcRrxo/WfUQKWQxgn4Bu8yqxi93HEE+XqXgDxxoyEGac5XKsxSTABrv1IIaDFhHI5fD7XyvZrBZc/Wk0ZkD9pywXa5yqpoxPVGdAVcPF/erbfrx3KHIcZdNk3Orxrblrnl4tNdp+Hz8N09Gt1MxmTn52Swr7zjlTd7pf18bDWs/WyaT5158nTfLH9Yv4YrqfD5bAdLJbXg4frhcmumve3z+38a+RPi+IWx0WvmGQ3S7oKFngJi1lzvAn4Ojdno+dbe44+mfPn/oN1N/n+vLgbT1HS6hWD4dn6ftj/+sWdu/bPb/f3fxM/tWbzoYj+6i2eEJA7i5v56tfiIUNo0nqid207LkbBJzQotvYmdxPTvTrv+w/fbs3Oa077ORwaK0mYZssNEFEt1XiMB9pI9guL9+VFWahvBKWrlyiN4gKY0Ltql5IWL5MCRH1PNnO3Hl1aruv2+6N2q9dqDpyh6ZjWyOyZLde1Bi2r0qAdiyOKlzELqIqlVHY3P+8TJJHHgfmQGnmckTVw/R3EARZYG7MbeThixmEWSxVv8XRJimATnTnnkuAmiaImOM5K165j8Z19T3uBgPRAuaVs7yv3DRCaUFDyruabywHnQpbiEeeZCK1GjhsMMnkBpEqDPdtpnyNOoyQERRRFsZ+F0EjWSVkYxHf/toEJL62UkyROBQ6t8vi9md3xt6oQ0senyoGrlPogmwknbqKzKp+38z7fz7uC72U+VadMVlWklOyYHH56HRY1JfWk1IkRXk9FveUPIU4AoHf4oePS1PH8nO5Fr25XeWFIOelW/X3EjcdGludZ2dGWkspUwiOpmBaaAsmk3j3N4gdgqIZAH7puatZHkWv7Ib9MrNlUYAGRnD+tXH7grTEFrt4aY3luio8+ZA5CyroJKMQp22UonySK8buvFuIR5SfNP+TfNk7913adwNqLI/OUDwxB2Uqt1MXy9MZskFjCUqmEcboPfgrgVPBDY13kmouQ07TMBLz9RVMS19ExIXHGxHigl4Z92S15iqcEvFen32BKaX+5qwv+5l19dzWZSgGMsF770v92Nmg5LgR09SQouXT0Qj49ZXC22pP5F4InlN7uW5btuM1erfRSSO2m8zrLB5l0fzP/btmr6fF56P4L</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I4FH3vr4gyj6PgJARIooLER5nJTjudAdqO9mVlHAc8TWywnQD99WuHJgVKu52VkJBvrs8998PHvhQwS92wLwTmkjBqRKOu+U8Q+POm60Or3ULI8loxtOatoGm1EW5C2/GDtheYRiREjiMqJKSya7q241l223L8mR2Ejht6fsP2On+bxj3mQkErl4ZtGtsspSIsw3bNnNOQQUFESGGGRShROO3fXIfKM4QVJ7N3uWdZBuS9pZSrEADUiDHCaYoaiGXgEhz5XMYinJIFhTLn+DlmLLrm897NZtPYNBuML4Br2zawA6B8YkEWn8zeRbUZxxFN2H49hJRRgmBKnqAmdYPlksVGP10wTuQyewPaAY6toS28RRZyPPrJBC8BSnYfRDoiyQW0xBI6FdgEJ5hjirBxN4m65qePdXC/d8YhFQnjmThZ/xklTAucshWOLVFlVrH7OOKZcvUuMQojitJckAJ/12OygggL4wfHCdleE6GGLxZG2X5jK9SPVFOG0Z+05RIcclXUwZnqjMgCC/l/enbYrz3KPUxz3Nv9yvlmM/XvAhYPn+bFgz9d0kkbbAdRt6Rw6LwnVbf7eX06rPVsPW+a3XiPEf06mNzj1f1scpW27sd2U9wm6/tJkZNOLub96zT7WSS+eOo8/Cwm2KbDbOv5QeJ+vZtNgJ+NbPR5+fOvzQVIvq3t9u7LLGc3s/E65t8edtTOnQ0geMki13tYgy8uefwdZbRYbAfA+coBl8Jv5UFH7sb8bpCTzzBYZ9y5uOrHkyfwo7i7DvrBA0kehNd9yekwh2NjJQnTfP4bI1kt9XhEI2Os+gXl+/KiLSS2ktI1XGmNEhJTafb0Li0tYa4EiMShauZ+PR46QRAM3Oaw7Y8HneGV7dnO2O7bnSBwRm2n0qA9ixOKQ0YTomNpld3Pz/sEURYKTGPMrYLlaImF+Q7iCEpoRHSiDgejAs+YUnHn8WlOWzJZU24TB21R4BIMUcygaXxn8pbe8n4iMT/SbiXch9o9wYisCNYCrydcqBEXUhVjDYtcpk6jgA2Kc3UFcK3Coev5LSBItkqxpgoyFucpbqyWq7I0QOz/XQsiUVqJQCvGJUyd8gC+md/pt6oUyicm2kHolAZYtROfuYuaVT6v8m6dvbMq+H4eE33OVF0lJ2jP5PjTy7joOalnpU4MiXou6i1/CHEGALzDD5yWpo4XF+QgenW/qitDCUqv6u8aNtaNvCjysqMdLZZcwQOlmQ6YYpQrxdvN2COmoIYAH7pwatYnkWv7Mb9cLulUQokzNX9GufzAa2OKhX5tROrkbD/6lDkKqeom8Vaesw1T9SjRjN99t6AQaT9l/qH+NozHL+06g3UQR+WpnhiS0IVe6atl98ZsIKZgidJCxg/BzwGcC35srItcc5Fqmua5xG9/MbTIdU2IEMupjEZmaTgU3pKn3K1w+OL0CqYU9+fbeivevK1/3VxPlQRm0Kx9yX87W6QcF4RN/SgouXTNrXp8quB0cSD0zwTPaf3AcVwvaPdrrW8Fgdv2/LqAR5n0XplfWw5qenoeev8C</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0512451403082765952</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0512451403082765952</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0512411403082761613</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0512431403082763779</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0512451403082765952</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2850D7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BBF87B76D4E0401F0A07991D71</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B23C69FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_UserGet_FUNC_ADULT_BAU_Get_CHILD_Blocked_tou_200_OK_P2" searchProperties="true" id="a352c4ce-3bc5-46ea-80be-feb57e0f58f5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="13879345-1ba9-47ba-926c-71639a31160a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ebdfe1fb-1050-418b-952f-e19a98ce146e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_BAU" id="dbc60c9e-4d8f-46e1-9c18-9e2aba65732e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_BAU" id="ef2f99ab-1798-439a-a4fa-673f47f1bcd3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="e213bd99-a57c-4df7-a070-38c67c56f89e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="3c4c0335-1d44-4aa4-ba5d-bde74ee2e80d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="52fc307a-6526-4535-9e23-21b14c7f1dd3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="76a75ee7-0438-4c4b-9caf-72f8953ad41e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BA10448CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999BA106F8CE7E0401F0A07991D6B:C0F59543"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0512541403082774085</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B1CCA08AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1CCA08AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1CCA08AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BA10448CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AE5E5B1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999AE5E721C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BA10448CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AE5E5B1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999AE5E721C68E0401F0A07991D55</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0P5e2ULB0hBkEWequ6Aqsq1/uhPQA0TZtkxSqv/4mxVZg0at3hhkmpyfPec5LnuSMoyisez3OgQkSU80fdPR/UMtttJ2WZdh1CxlO08WGG7hNo+W6DbfRaizkT9d8zjPwKReIio5et2zHsFqG7U6ttmfXvaZVa7abD7r2GxiX0NKlZulaHoWUe0XYjp4x6sWIE+5RFAH3BPYmvaufnvT0UMlJ755tWRYBWXclROKZJq4FgCEMcQ3HkXlm7vmcBdybkCVFImPwGjPgHf1172azqW0atZgtzbplWabVNqVPwMnym949KTdD4NNFvF33EY0pwSgkL0iRugKxigOtFy5jRsQqegfaNm1LQRuQYwPbDv2mm28BCnafRNojyTgy+ArZJdgtLIABxaDNbv2O/u1zHdzunTJE+SJmET9Yf40S0DWEcQKBwcvMSnafRzxSru4ZYM+nOMw4WcNYjUmCMHDthsGC5D8Jl8MXcK1ov5Zz+SPllAH+SlvOzF2ukrp5pDoDsgQu/k/Pdvu1RfmNwgy6m/S8GeV3zuKGzNL+n9OnZ9J+mLFoeLfpFBR2nbekqna/rg+HtZqt102M4gCs+jhqEdNtJzeN+3tznM7r48uenS5X4ge5BeT0vqfhOJ1eTvhoOsiISK7v/+BzcW2KfHoPL3dWOG7bk5NsvhbBNBw8OYE/mjdeRkk8e5ykfpTlmAdZuKCj+Tq5aI5W6/R5Nru/pXf82bn63n+ElzwLyePFIx7lQ9y6a81OhuL85tev0YPpk8sFehpZ7qzzltNuDvvGUhIm2fwRsCiXajz8gTaU/ULiY3lRFhIYi8LVS5RGcQFU6F21S0mLl0kBIoEnm7ldD/t2u90+79mW47j9i9MLy7HsodWzTttte9A6LzVoy+KAYj+mC6JiKZXdzs/HBHHkcaABMGMdZ3gFXP8AcYAE0nx6Kw9HTDlMY6nic5aB/ZIuWbKYJ5ymp0/1GJ42DV0bx+KaXrPeQgDbU24p27vKfQuYJASUvKv55nLAuZClSNE6E6FdW6MahUxeAExpsFd33KbJSZSEoIiaUSzHAWrJKikKY/Ltf91AmBdWwnESM4FCuzh+72Z3+K0shPQJiHLgKqVzkM2EIzeRU+bzft7N3bxL+F4WEHXKZFUFI3jLZP/T27CoKakmpUoMc7vkXm35IsQRAPMDfuZhaap4wZrsRC9vV3lhSDnplv1NUS2tZet1VnT0VEklk/CmVEzbnADOpN49T+MnoGYFYX7quqlYH0Su7Pv8MrGiE4EERHL+tGL5ibfGBLh6a/jy3OSffcjshZR1E5CLY7Z+KJ8kivGHrxbsYeUnzTfybxOz4K1dR7B24sg85QNDELpUK3WxPL8zGziWsEQqYcx2wY8BHAu+b6yKXHERcprmmYD3v2hK4jo6wjjOqPAHemHYld2Cp3hOwHtz+gumkPbXuzrn797Vf65+TqQARkivfMl/OxukGBcMunoSFFw6ei6fnjI4Xe7I/CvBI0pv9/s9y+0N6wdKf1oVcC+T7l/mvy07NT08D91/AQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0P5e2ULB0hBkEWequ6Aqsq1/uhPQA0TZtkxSqv/4mxVZg0at3hhkmpyfPec5LnuSMoyisez3OgQkSU80fdPR/UMtttJ2WZdh1CxlO08WGG7hNo+W6DbfRaizkT9d8zjPwKReIio5et2zHsFqG7U6ttmfXvaZVa7abD7r2GxiX0NKlZulaHoWUe0XYjp4x6sWIE+5RFAH3BPYmvaufnvT0UMlJ755tWRYBWXclROKZJq4FgCEMcQ3HkXlm7vmcBdybkCVFImPwGjPgHf1172azqW0atZgtzbplWabVNqVPwMnym949KTdD4NNFvF33EY0pwSgkL0iRugKxigOtFy5jRsQqegfaNm1LQRuQYwPbDv2mm28BCnafRNojyTgy+ArZJdgtLIABxaDNbv2O/u1zHdzunTJE+SJmET9Yf40S0DWEcQKBwcvMSnafRzxSru4ZYM+nOMw4WcNYjUmCMHDthsGC5D8Jl8MXcK1ov5Zz+SPllAH+SlvOzF2ukrp5pDoDsgQu/k/Pdvu1RfmNwgy6m/S8GeV3zuKGzNL+n9OnZ9J+mLFoeLfpFBR2nbekqna/rg+HtZqt102M4gCs+jhqEdNtJzeN+3tznM7r48uenS5X4ge5BeT0vqfhOJ1eTvhoOsiISK7v/+BzcW2KfHoPL3dWOG7bk5NsvhbBNBw8OYE/mjdeRkk8e5ykfpTlmAdZuKCj+Tq5aI5W6/R5Nru/pXf82bn63n+ElzwLyePFIx7lQ9y6a81OhuL85tev0YPpk8sFehpZ7qzzltNuDvvGUhIm2fwRsCiXajz8gTaU/ULiY3lRFhIYi8LVS5RGcQFU6F21S0mLl0kBIoEnm7ldD/t2u90+79mW47j9i9MLy7HsodWzTttte9A6LzVoy+KAYj+mC6JiKZXdzs/HBHHkcaABMGMdZ3gFXP8AcYAE0nx6Kw9HTDlMY6nic5aB/ZIuWbKYJ5ymp0/1GJ42DV0bx+KaXrPeQgDbU24p27vKfQuYJASUvKv55nLAuZClSNE6E6FdW6MahUxeAExpsFd33KbJSZSEoIiaUSzHAWrJKikKY/Ltf91AmBdWwnESM4FCuzh+72Z3+K0shPQJiHLgKqVzkM2EIzeRU+bzft7N3bxL+F4WEHXKZFUFI3jLZP/T27CoKakmpUoMc7vkXm35IsQRAPMDfuZhaap4wZrsRC9vV3lhSDnplv1NUS2tZet1VnT0VEklk/CmVEzbnADOpN49T+MnoGYFYX7quqlYH0Su7Pv8MrGiE4EERHL+tGL5ibfGBLh6a/jy3OSffcjshZR1E5CLY7Z+KJ8kivGHrxbsYeUnzTfybxOz4K1dR7B24sg85QNDELpUK3WxPL8zGziWsEQqYcx2wY8BHAu+b6yKXHERcprmmYD3v2hK4jo6wjjOqPAHemHYld2Cp3hOwHtz+gumkPbXuzrn797Vf65+TqQARkivfMl/OxukGBcMunoSFFw6ei6fnjI4Xe7I/CvBI0pv9/s9y+0N6wdKf1oVcC+T7l/mvy07NT08D91/AQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxFlHquQZdgSFSSW0klb2k7pNn25Mo4J7iR28AKhv/7aoUmB0t7OlZCQT46/853Fn33MQZp4QY9zxASmxAiHHfMfv+W2Pc93LQia0KqDZtMCLcezgDdz4I/pD9AADdMIOZcoJFwAIjqm57h1y2labvvW8QPXCxperem3n0zjHjGuoJVLzTGNPE0ID4qwHVMyElDAMQ8ISBEPBAwmvfFFoDwDUHIyu8cblkVA1p0LkQW2DWsRgihJYA3S1D62d3yOIx5McEyAkAy9xox4x3zdu1qtaqsfNcpi23Mcx3Z8W/lEHMffze63cjOKQjKjm/UAEEowBAl+AZrUGIk5jYxeElOGxTz9ANq1XUdDWyiHFnTr5LtpvwUo2H0RaYck48Dic+CWYDdohhgiEBl3N2HH/P61Dm723jJA+IyylO+t/44SIkuU0AxFFi8zK9l9HfFAubrHCAYhgYnkeIku9ZhkACJuXDM0w/kF5mr4Im4U7Tdyrn64nDIE/6Ytx/Y2V0XdPlCdIY4RF/+nZ9v92qDcg0Si7jlO01ROX+b9c3J6DZOz5Zih07Hnv6w6BYVt5w2pqt2v6/1hrWbrdRMQaP17ssqc8OFhkD+By8Z9fiW5LaUXL9kTGP2q00lO+/FT3iD3d+Nsgs6nR3baH/yRP/ujMH2cgaMrz6ZO6+bb5c8e7seXV0cXR6uHh/hXu53l9XAakTv/rH7k1vvPIYx+hzztRVmz3ro5HZ/9bILHKVz7yRo8/pnb0oasT5/veotv81/ucDFcR/3R46R+4k6iHHbectrOYddYSsJETp8RFOVSj0c4NEaqX0B8Li/agiNrVrgGmdYoLhARZlfv0tISSCVAOApUMzfr0cD1fb930jhp9N1Bs33i1B135PSclu+7w0aj1KANiz2KA0pmWMfSKruZn88JwjTgiESIWUsq4Rxx8xPEIRDACMmNOhyUcHRLlYq7EfJf4kTEjfZi6jothrIFzVegLU3jkoorcsV6M4HYjnYr4d7W7hsEcYaRFng94VyNOBeqGAuwlCJxa0tQI0iqK4BpFQ68erthc5xmCdJU7ZRGMkG1bJ4VpbH55l/pEOSFFXOYUSZA4hYH8MP89r+VpVA+EdYOXKfUR6qd6MBdVC/z+TjvxnbeJXxPRlifM1VXwTDcMNn99DYuek6qWakSg9wtuVdb/hLiAID9CT97vzRVvGiJt6KX96u6MpSgdMv+LkBtUZPLpSw62tJiyRS8rTTTtScISqV461v6BxG7grC/dOFUrPciV/ZdflLMyUQo7UrV/BnF8guvjQni+rURqpOTf/UpsxNS1U2gXByyDRL1KNGMP323wABqP2W+Vn8ryqK3dh3A2oqj8lRPDIFJrFf6all/MBuQKlistJCybfBDAIeC7xqrIldchJqmqRTo4y+GFrmOCSCkkohwaBaGbeEteIp1hoI3p3cwhbi/3tY5//C2fhxfTJQEpsCsfPF/O1u4GBeITP0oKLh0zFw9PlVwEm8J/SvB91qvZH7Qc9q9kber9c1WVcCdTLrvzO8tWzXdPw/dfwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc6o6FH7vr2DoYwcBBRVGnaHSC7vXrW3Pbl/OxLDUVAxIglp//U5QqFrb054ZZ5wsVr71rUu+pMXQNKq6HmOQchJTJfDb6r/NWhjiah1pNq7ZmoWajuZAw9ScYROqhmlYVjNUlYCxDALKOKK8rQq7pRl1zWw+GI5rVl27XjFt80VVniBlAlq4VAxVWU4jytw8bFvNUurGiBHmUjQF5nLs9r2ba1d4uqjgpHZaa5Z5wLQz5jxxdR1XQsAQRbiC46ne0nd8WiFz+2REEc9S2MQMWVvd7F0sFpVFrRKnI71qGIZuOLrwCRkZHaudo2IzhAEdxut1F9GYEowiskKS1A3wcRwqXjSKU8LH00+gTd00JLQGS6xh06LHqv4eIGf3TaQdkilDGhsjswDrwRBSoBiUx17QVo+/18H13ocUUTaM0ynbW/+MEtA5RHECocaKzAp230c8UK5OC7AbUBxljMzhVo5JgjAw5T6FIVleEyaGL2RK3n5lycSPFFMG+CdtaenbXAV1/UB1fDICxv9Pz7b7tUZ5QlEGnfNX3nd+105/DXyd+4v5Q+9qPrJ73tPQaucUtp3XpMp2b9b7w1rO1mbTDRi46q8ejdkcO6tJdWVdouT+Yvl8doW8E+O+5p+OGdyTwc3l5QBuk2ya3j5NTlYXJ43Lx/59YLyeTR6Tf8a/cTQ7ih5vfl3rp97b8vYFMp1c1e3XPy81y3T8SAer2yPo4dm7SNA8sP3hrP98VwueZ8haZKNef9H3lydWOLn2e2eXT+OjiZM8Ro2V57+YF42XwdvVy6j9ntN2DrvGQhL62eAVMC+WcjwCXzkX/UL8a3mRFhJqw9zVTaRGMQ6Uqx25S0qLmwkBIqErmrlen3dNx3G8M/usUTW79eaZYRnmueEZDccxfdsuNGjNYo9iN6ZDImNJlV3Pz9cE8dRlQENItXmc4TEw9QtEH3GkBLQnDkdMGTzEQsWz2EyagxWym5OJOXij43qWJbw6slTlNuZ39C71hhzSHekWur0t3T3AJCEg9V0OOBMTzrioxQzNMx6ZlTmqUMjEDZBKEXarVtPWGZkmEUim+jQOswgqyTjJK6Oz9X9VQ5jlVsJwEqccRWZ+/j5Nb/9bUQnhExLpwGRKpyC6CQeuIqvI50Pe9sErq4D3spDIYybKylOC10x2P71PixyTclTKxDAzC+7llh9CHADQv+Cn75emjBfOyVb04noVN4bQk07R3xmqzCrZfJ7lHW1IrUwFvC4k09T7gDMheG8P8QSoXkLo37pvStZ7kUv7Lr+Mj2mfIw5TMX9KvvzGY6MPTD42AnFwlt99yeyEFHXjsOSHbN1IvEkk4y+fLdjF0k+Y78XfIk7fEz+EtRVH5CleGJzQkVzJm+Xtk9nAsYAlQgrjdBv8EMCh4LvGssglFy6maZBx+PyLIjWurSKM44zywFdzw7bu5jz5WwLuu9MHmFzbN5f1kn16Wf+5ue4LBZwitfQl/+2skXxcMKjyTZBzaatL8fYUweloS+c3BD9K/anZ7XpG0zuv7kp9vVEWcCeTzgfzR8tWTffPQ+cv</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0512541403082774085</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0512541403082774085</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0512491403082769757</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0512511403082771870</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0512541403082774085</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BA10458CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AE5E5C1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999AE5E731C68E0401F0A07991D55</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_UserGet_FUNC_YOUTH_SAU_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="666287ea-8b89-416d-8755-d5159a90ec71"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7e3fe7eb-0204-4d2c-a316-589c6d842b92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dbea87c0-95ce-4aa6-9ce3-baa62dce177d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthSAU" id="21ab1125-2947-450f-9bcf-0cec8e65b235"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create -YouthSAU" id="69f29ebf-a671-43bc-8f3f-a2e1bba02cac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="31116452-0c5a-4c48-9add-70d0d0690c17"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="912029ea-bac0-4b5c-a565-d4a04eed0494"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="b4830d9c-88ec-4c42-ae57-ec8dbcee4bfd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="3a415aee-2be5-46f8-8990-aa2c7865cc85"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E8346E77A59E0401F0A07993925</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC192E6837D0A22FE0401F0A05991C30:E7185865"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0459441403081984085</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E539E47608CE0401F0A079938F9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E539E47608CE0401F0A079938F9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E539E47608CE0401F0A079938F9</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E8346E77A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E5AC4F1B7C3E0401F0A0799390F</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E5E0FE5AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E8346E77A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E5AC4F1B7C3E0401F0A0799390F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E5E0FE5AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o4FH7vr/C4jxnjK/FlAjMEkhQKJAXadPdlR5ZlELUlx5IN9NevZGIHCMmmO8MMo+Oj73znok+6YiBNrKDHGMo5pkQZDjrqP77nIhO6oWaGpq05ttXWvNCzNN8LoQUu255tuKoyZKxAQ8I4ILyjWobpaMalZnoLwwvafuAYLefS/FtVfqCcCWjh0jJUZZsmhAVV2I5a5CSggGEWEJAiFnAYzHuTcSA8A1BzUrtXe5ZVwLy74jwLdB22IgRRksAWpKl+pR/5XEUsmOMlAbzI0XPMiHXU572bzaa1sVs0X+qWYRi64evCJ2J4+Vntfqo3o2hIYrpf9wGhBEOQ4N9AkpogvqKR0kuWNMd8lb4BbeqmIaE1tIUaNB3yWdVfAlTsPoh0RDJnQGMrYNZgMxSjHBGIlO+zYUf9/LEO7vcuckBYTPOUnaz/jBIiJUpohiKN1ZnV7D6OeKZc3SsEgyGBScFwiaZyTDIAEVMechTj7RgzMXwRU6r2K1smfrieMgT/pC1X+iFXQV0/U50BXiLG/0/PDvu1R/kBkgJ1wZf16OcIhYV158fAc++9b3hcPG3GxV+disKh855U0+7n9emwNrP1vOnL2ja2Tyvr1z1K8zvjYvewvCt7rNATOlrm7uNwZX4Np/H1/Db/tlsYtkt3o/vtxWyeTqf67Cvz+/7F3C+zh9KZfHrc+pGzLnjoPixxP8TGtKf3UTz2EwM/3lkjI1mO5qNkOl2P17vJAn0f5C6Y3CzCMnIt24ZsGkc314tvvayYfbpe/CBPbbskd5PN8mKwjh5p5yWnwxyOjbUkzItwjSCvl3I8hgPlVvQL8PflRVpwpMWVa5BJjWIcEa525S4pLUEhBAhHgWjmfn3bN33rxrOdyxvX7bX9G8MxzFujZ7i+b/tWu9agPYsTin1KYixjSZXdz8/7BGEaMEQilGslLeAKMfUdxAHgQBmSmTgclDC0oELF8yyM7dgJwbrApWXRtrFaRRucqMqU8ntyn/dijvIj5TbNI+WeIYgzjKS8y/lmYsAZF6V4AmXBE7NVghZBhbgAcqnBgeV4bZ3hNEuQJKqnNCoS1MpWWVUYne3/LQ1AVlkxgxnNOUjM6vi9md3pt7oQwifC0oHJlK6RaCY6cxPZdT5v5+0c5l3D94oIy1MmqspzDPdMjj+9DIuckmZSmsQgM2vuzZY/hDgDoL/DTz8tTRMvKvFB9Pp2FReGkJNu3d8n0HpqFWVZVB11pVTmAl4XimnqcwQLoXe7Bf2FiN5A6B+6bhrWJ5Eb+zG/gq/InAOOUjF/SrX8wFtjjph8awzFudl+9CFzFFLUjaMtP2frJ+JJIhm/+2qBAZR+wvwg/jY0j17adQbrII7IUzwwOCZLuZIXy+6N2YBUwGKhhDQ/BD8HcC74sbEpcsOFi2kKC47e/qJIieuoAEJaED4cqJXhUHYrnnyXoeDF6RVMJe3Pd/WWvXlX/5yM50IAU6A2vvi/nTVcjQtEqnwSVFw66lY8PUVwsjyQ+WeCr5W+bfs3jntpeP0jpfdu/aaAR5l0X5lfWw5qenoeuv8C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o4FH7vr/C4jxnjK/FlAjMEkhQKJAXadPdlR5ZlELUlx5IN9NevZGIHCMmmO8MMo+Oj73znok+6YiBNrKDHGMo5pkQZDjrqP77nIhO6oWaGpq05ttXWvNCzNN8LoQUu255tuKoyZKxAQ8I4ILyjWobpaMalZnoLwwvafuAYLefS/FtVfqCcCWjh0jJUZZsmhAVV2I5a5CSggGEWEJAiFnAYzHuTcSA8A1BzUrtXe5ZVwLy74jwLdB22IgRRksAWpKl+pR/5XEUsmOMlAbzI0XPMiHXU572bzaa1sVs0X+qWYRi64evCJ2J4+Vntfqo3o2hIYrpf9wGhBEOQ4N9AkpogvqKR0kuWNMd8lb4BbeqmIaE1tIUaNB3yWdVfAlTsPoh0RDJnQGMrYNZgMxSjHBGIlO+zYUf9/LEO7vcuckBYTPOUnaz/jBIiJUpohiKN1ZnV7D6OeKZc3SsEgyGBScFwiaZyTDIAEVMechTj7RgzMXwRU6r2K1smfrieMgT/pC1X+iFXQV0/U50BXiLG/0/PDvu1R/kBkgJ1wZf16OcIhYV158fAc++9b3hcPG3GxV+disKh855U0+7n9emwNrP1vOnL2ja2Tyvr1z1K8zvjYvewvCt7rNATOlrm7uNwZX4Np/H1/Db/tlsYtkt3o/vtxWyeTqf67Cvz+/7F3C+zh9KZfHrc+pGzLnjoPixxP8TGtKf3UTz2EwM/3lkjI1mO5qNkOl2P17vJAn0f5C6Y3CzCMnIt24ZsGkc314tvvayYfbpe/CBPbbskd5PN8mKwjh5p5yWnwxyOjbUkzItwjSCvl3I8hgPlVvQL8PflRVpwpMWVa5BJjWIcEa525S4pLUEhBAhHgWjmfn3bN33rxrOdyxvX7bX9G8MxzFujZ7i+b/tWu9agPYsTin1KYixjSZXdz8/7BGEaMEQilGslLeAKMfUdxAHgQBmSmTgclDC0oELF8yyM7dgJwbrApWXRtrFaRRucqMqU8ntyn/dijvIj5TbNI+WeIYgzjKS8y/lmYsAZF6V4AmXBE7NVghZBhbgAcqnBgeV4bZ3hNEuQJKqnNCoS1MpWWVUYne3/LQ1AVlkxgxnNOUjM6vi9md3pt7oQwifC0oHJlK6RaCY6cxPZdT5v5+0c5l3D94oIy1MmqspzDPdMjj+9DIuckmZSmsQgM2vuzZY/hDgDoL/DTz8tTRMvKvFB9Pp2FReGkJNu3d8n0HpqFWVZVB11pVTmAl4XimnqcwQLoXe7Bf2FiN5A6B+6bhrWJ5Eb+zG/gq/InAOOUjF/SrX8wFtjjph8awzFudl+9CFzFFLUjaMtP2frJ+JJIhm/+2qBAZR+wvwg/jY0j17adQbrII7IUzwwOCZLuZIXy+6N2YBUwGKhhDQ/BD8HcC74sbEpcsOFi2kKC47e/qJIieuoAEJaED4cqJXhUHYrnnyXoeDF6RVMJe3Pd/WWvXlX/5yM50IAU6A2vvi/nTVcjQtEqnwSVFw66lY8PUVwsjyQ+WeCr5W+bfs3jntpeP0jpfdu/aaAR5l0X5lfWw5qenoeuv8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tq457SCxVoR5gB1G1HFA8Xde+XMyENNNomJUmh7F+/k2IrIHr0zDiDWV351rcu+ZJzDpLY8bucIyYwJVpw0db/dWCILMttGZZXh4bruMDwvHnD8Gy3eeZaM9etI10LOM9QQLgARLR1x7Jdw2oYdmtitfwzz3edWtOt/9a1B8S4hJYuNUvX8iQm3C/CtvWMEZ8CjrlPQIK4L6A/7t4OfOnpg5KT3jnfsiwCsk4kROqbJqyFCKI4hjVIE/Pc3PM5D7k/xgsCRMbQa8yQt/XXvev1urau1yhbmI5lWablmdIn5HhxqndOys0oDMicbtd9QCjBEMT4D1CkbpGIaKh14wVlWETJB9C2aVsK2kA5NKDtklPdfAtQsPsi0h5JxoHBI2CXYCM0RwwRiLTpKGjrp1/r4HbvhAHC55Ql/GD9PUqIrFBMUxQavMysZPd1xCPl6pwj6AcExhnHK3SnxiQFEHHtnqE5zgeYy+ELuVa0X8u5/MPllCH4nbacm7tcJXXzSHUu8AJx8X96ttuvLcoDiDPUeWzwa3K7fGlkUfpP0rz2ftiB/WMzhI1Wu6Cw67wlVbX7dX04rNVsvW4K40j+v+kSNuzfLRa8NbwO7lsN+ji9b4zOnBu7edFL8M/fL8NfowA5YDLgL5Hl5SFbruejS3h9mZvd8Y04G9UfT9Kol7We40GvPpn2RkHu0cYf8HDzdOeGv4abZB1xYLJudD+bZivQtTbTl5vH/Ha4bjxMBqI/vE5mvZYjHi06e7k9yfsNa7pJ3Smwn37exw/P7rr9ltNuDvvGUhLG2ewZQVEu1XgEF9qV7BcQn8uLsuDQmBeufqo0igtEhN5Ru5S0+JkUIBz6spnb9VXf9pzLs27fvbJ7zX790nIt+8rqWk3Pq3vWValBWxYHFPuUzLGKpVR2Oz+fE4SJzxEJETNWNIMR4voniBdAAC0gI3k4KOFoQqWK25A74QwvG8izIHTzEM+iTbxZMl27o2JIhqw7F4jtSbdt70n3CEGcYqT0XQ04lxPOhazFEqwyEdu1FagRlMkbgCkR9h23dWZynKQxUkzNhIZZjGpplBaVMfn21zEA5IUVc5hSJkBsF+fvw/QOv5WVkD4hVg5cpdRDspvoyFVUL/P5OG93N+8SvpuFWB0zWVbBMNwy2f/0Ni1qTKpRqRKD3C65V1u+CXEEwPyEn3lYmipeuMI70cvrVd4YUk86ZX+XoLasZatVVnS0qbSSSXhTSqZtjhHMpOBtJvQFEbOCML9031SsDyJX9n1+mYjIWACBEjl/WrH8wmNjjLh6bATy4ORffcnshZR1EygXx2z9WL5JFONPny3Qh8pPmu/lz5qy8K1dR7B24sg85QtDYLJQK3WzbD6YDUglLJZSSNku+DGAY8H3jVWRKy5CTtMsE+jjL5rSuLYOIKQZEcGFXhh2dbfgKTYp8t+c3sEU2v56Wef8w8v66XYwlgqYAL3yxf/tbOBiXKB8qkr/gktbz+XbUwYnix2dfyV4ROrr3qXbbFit/p7Ut668qoB7mXTemd9bdmp6eB46fwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3S6H53SC63SjjCDBdzgBTfgVvfLmZAuINom2KRc9q8/SbEVED16ZpzBrK5861uXfMkZR0nsBE3OIRWEUa3bquv/+Gjs+9WTU8PyfNdwa/K/8Ql2DeT6tcizLdc5jXSty3kGXcoFoqKuO5btGtaJYddGVi3w/MA9qVQ9/4+u/YaUS2jpUrF0bZXElAd52LqepTRgiBMeUJQADwQOhs3rq0B6BqjgpDfONizzgGljJsQ8ME1ciQBDHOMKZol5Zu74nEU8GJIpRSJL4TVmxOv6697lcllZVissnZqOZVmm5ZvSJ+Jk+kNvHBWbIerSCdusQ0QZJRjF5C9SpK5BzFikNeMpS4mYJR9A26ZtKWgDVtjAtkt/6OZbgJzdF5F2SKYcGXyG7AJsABNIgWLQ7gbduv7jax3c7B2liPIJSxO+t/4eJaALiNkcIoMXmRXsvo54oFyNM8BBl+I442QBN2pM5ggD125TmJDVFeFy+CKu5e3XVlz+kWLKAH+nLWfmNldJ3TxQnRaZAhf/p2fb/dqg/EZxBo3Y79NZh/reMR3ORvf3rN+qXmHP7p3gek5h23lDqmz363p/WMvZet304Pc6Kxhcm7W/x87qkj2GYac37UN0YYns8mkgju/vFg/iZ9h+cgaX4c/l7RN9tLJfi+ckDN2HP+PZ+uFXc32xfk6co98wnTwufz1duLcPF9dtPGKXYVhDvQXNni9Pb8RT1OlRfpfFIX/2mr3aC3nsm/cpTiyn03JCtl5fTgftkX1+y++Oxk61lo3656zfH62yqdcU1/W3nLZz2DUWkjDMxk+ARbFU49FtaR3ZLyQ+lxdlIZExyV2DudIoLoAKvaF2KWkJMilAJApkMzfrTmj7TttrW52212xX7bblWnbHalqn8qzVOq1CgzYs9iiGjE6IiqVUdjM/nxPEScCBRpAaC5bhGXD9E8QWEkjr0oE8HIxyGDGp4vNnbr94zEbjlHssjvzF39oLTSa6dsNEn/bT5kRAuqPctr2j3APAZE5Aybuaby4HnAtZihe0yERsVxaoQiGTF0CqNDhw3JpncpLMY1BEzYRFWQyV+WyeF8bkm1/HQJjnVsLxnKUCxXZ+/D7Mbv9bUQjpExHlwFVK5yCbCQduomqRz7u8vYM3VgHfzCKiTpmsqkgJ3jDZ/fQ2LGpKykkpE8PcLriXW74JcQDA/ISfuV+aMl60IFvRi9tVXhhSThpFf19Q5aWSLRZZ3tFTJZWphDelYtrmEHAm9W49Ys9AzRLC/NJ1U7Lei1zad/llYkaHAglI5Pxp+fILb40hcPXW6Mpzs/rqQ2YnpKybgJU4ZAtj+SRRjD99teAAKz9pvpU/S5a+JX4IayuOzFM+MAShU7VSF8v6g9nATMISqYQs3QY/BHAo+K6xLHLJRchpGmcCPv6iKYmr6whjllHRbem5YVt2c55iPYfgzekdTC7tr3f1in94Vz9cXw2lACZIL33JfzsbJB8XDLp6EuRc6vpKPj1lcDrdkvlXggeUvuq33dMTqxbuKb1fFnAnk8Y783vLVk33z0PjXw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0459441403081984085</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0459441403081984085</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0459391403081979796</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0459411403081981834</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0459441403081984085</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E8346E87A59E0401F0A07993925</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E5AC4F2B7C3E0401F0A0799390F</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E5E0FE6AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4830d9c-88ec-4c42-ae57-ec8dbcee4bfd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_UserGet_FUNC_YOUTH_BAU_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="d4b0cdd3-2698-446a-8815-831f65fc9860"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="953ed321-5faf-4eb3-bc0e-a1aa9e110893"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="75b46636-6169-4066-bd77-c8f075a4446e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthBAU" id="9aba3240-7187-4d2c-be37-5822f8e84758"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create -YouthBAU" id="21350de1-46e0-414f-affa-8e3d11e971ea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="58aed2bb-142f-473a-b651-1716fe554fdc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="2b59eeab-090e-4831-a521-3da39375a696"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="ab6b3b7d-96f7-4977-9377-60c9f2a16781"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="a9e98015-3f6d-4c19-a9ee-be1b02e2e2c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E592660CDDEE0401F0A07993905</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC192E5A89EA7266E0401F0A0799390B:8985E754"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0459521403081992405</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E73BF20C05FE0401F0A0799391D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E73BF20C05FE0401F0A0799391D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E73BF20C05FE0401F0A0799391D</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E592660CDDEE0401F0A07993905</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E9C19C089A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E6837DAA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E592660CDDEE0401F0A07993905</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E9C19C089A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E6837DAA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tq45nSC+XWEWYql71R8Ya37cuZkCwg2qa1SaH463dSbAVEj54ZRyarK9/61iVfcsRRGDiezzkkgkZMG/ba+r+N1tSdENc1sO3YhluftAzk2A1j6gIgmNSQ/KdrQ85TGDIuEBNt3bFs17Dqht28sZpereW5zUrTqT7q2h0kXEJLl4qla1kYMO7lYdt6mjAvQpxyj6EQuCewN/ZHZ5709FDBSe8crVnmAZPOXIjYM01cIYAhCHAFR6F5ZG75HBHujemMIZEm8BaT8Lb+tne5XFaW1UqUzEzHsizTapnSh3A6O9Q7B8VmIEM2jdbrLmIRoxgF9BUpUiMQ84hofjCLEirm4SfQtmlbCtqADMtquuxQN98D5Oy+ibRFMuHI4HNkF2DXMIUEGAbt9nrY1g+/18H13psEMT6NkpDvrH9GCdgCgigGYvAis4Ld9xH3lKtzBNgbMhyknC7gXI1JjDBw7TKBKc3OKJfDR7iWt1/LuPyjxZQB/klbjsxNrpK6uac6PToDLv5Pzzb7tUa5Q0EKnb5133UveuHCJXP71Z9cOd36yS8+yBzczilsOq9Jle1+W+8Oazlbb5t4dtHt91dZvf/79Rkh68+xP0j9l6e+uB9NTk/sx8Vr1T+d8Et3hcnT6pk45/eN+D6c3VxZJw8nzbvbJrA/MzPyl4MDcvXrwr++I/HSWiT9UdDrnl6cjOPr8ex2uRqe2H5rFt89nj4GpyIcjRg9h0Y9MI/dvp+xeZ38vrl6eZzXYXB2Rf45GLcS6RObY7sX9R/qLTKw2u85beawbSwkYZxOngCLYqnGY9jTBrJfSHwtL8pCiTHNXb1YaRQXwITeUbuUtHipFCBKPNnM9XrQtVtOv9Zy6nWr2+v1+5Zr2QPLtxqtVrVl1QoNWrPYodiN2JSqWEpl1/PzNUEcehwYgcRYRCmeA9e/QOwhgbQhu5aHI2IcbiKp4nOLoOoLa+ClG6zmKHMJar5mdk3XziNxwS4Sfyog2VJu295S7mvANKag5F3NN5cDzoUsxQtapCKwKwtUYZDKCyBRGuw5brNmchrGASiiZhiRNIBKPI/zwph8/esYCPPcSjmOo0SgwM6P36fZ7X4rCiF9CFUOXKV0DLKZsOcmqhb5fJ63u5l3Ae+nhKpTJqsqEorXTLY/vQ+LmpJyUsrEMLcL7uWWH0LsATC/4GfulqaMRxZ0I3pxu8oLQ8pJp+jvC6q8VNLFIs072lBSmUh4UyqmbY4Bp1LvVjfRMzCzhDC/dd2UrHcil/ZtfqmYs7FAAkI5f1q+/MZbYwxcvTWG8txk333IbIWUdROQiX22biCfJIrxl68W7GHlJ82X8mcZJeS9XXuwNuLIPOUDQ1A2Uyt1saw+mQ0cSVgqlTBKNsH3AewLvm0si1xyEXKaJqmAz79oSuLaOsI4SpkY9vTcsCm7OU+xisF7d/oAk0v7212d8U/v6ofR2VgKYIj00pf+t7NB83HBoKsnQc6lrWfy6SmDs9mGzL8R/Kj0jerxwLG6Vm2wrfR2ryzgViadD+aPlo2a7p6Hzl8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tq45nSC+XWEWYql71R8Ya37cuZkCwg2qa1SaH463dSbAVEj54ZRyarK9/61iVfcsRRGDiezzkkgkZMG/ba+r+N1tSdENc1sO3YhluftAzk2A1j6gIgmNSQ/KdrQ85TGDIuEBNt3bFs17Dqht28sZpereW5zUrTqT7q2h0kXEJLl4qla1kYMO7lYdt6mjAvQpxyj6EQuCewN/ZHZ5709FDBSe8crVnmAZPOXIjYM01cIYAhCHAFR6F5ZG75HBHujemMIZEm8BaT8Lb+tne5XFaW1UqUzEzHsizTapnSh3A6O9Q7B8VmIEM2jdbrLmIRoxgF9BUpUiMQ84hofjCLEirm4SfQtmlbCtqADMtquuxQN98D5Oy+ibRFMuHI4HNkF2DXMIUEGAbt9nrY1g+/18H13psEMT6NkpDvrH9GCdgCgigGYvAis4Ld9xH3lKtzBNgbMhyknC7gXI1JjDBw7TKBKc3OKJfDR7iWt1/LuPyjxZQB/klbjsxNrpK6uac6PToDLv5Pzzb7tUa5Q0EKnb5133UveuHCJXP71Z9cOd36yS8+yBzczilsOq9Jle1+W+8Oazlbb5t4dtHt91dZvf/79Rkh68+xP0j9l6e+uB9NTk/sx8Vr1T+d8Et3hcnT6pk45/eN+D6c3VxZJw8nzbvbJrA/MzPyl4MDcvXrwr++I/HSWiT9UdDrnl6cjOPr8ex2uRqe2H5rFt89nj4GpyIcjRg9h0Y9MI/dvp+xeZ38vrl6eZzXYXB2Rf45GLcS6RObY7sX9R/qLTKw2u85beawbSwkYZxOngCLYqnGY9jTBrJfSHwtL8pCiTHNXb1YaRQXwITeUbuUtHipFCBKPNnM9XrQtVtOv9Zy6nWr2+v1+5Zr2QPLtxqtVrVl1QoNWrPYodiN2JSqWEpl1/PzNUEcehwYgcRYRCmeA9e/QOwhgbQhu5aHI2IcbiKp4nOLoOoLa+ClG6zmKHMJar5mdk3XziNxwS4Sfyog2VJu295S7mvANKag5F3NN5cDzoUsxQtapCKwKwtUYZDKCyBRGuw5brNmchrGASiiZhiRNIBKPI/zwph8/esYCPPcSjmOo0SgwM6P36fZ7X4rCiF9CFUOXKV0DLKZsOcmqhb5fJ63u5l3Ae+nhKpTJqsqEorXTLY/vQ+LmpJyUsrEMLcL7uWWH0LsATC/4GfulqaMRxZ0I3pxu8oLQ8pJp+jvC6q8VNLFIs072lBSmUh4UyqmbY4Bp1LvVjfRMzCzhDC/dd2UrHcil/ZtfqmYs7FAAkI5f1q+/MZbYwxcvTWG8txk333IbIWUdROQiX22biCfJIrxl68W7GHlJ82X8mcZJeS9XXuwNuLIPOUDQ1A2Uyt1saw+mQ0cSVgqlTBKNsH3AewLvm0si1xyEXKaJqmAz79oSuLaOsI4SpkY9vTcsCm7OU+xisF7d/oAk0v7212d8U/v6ofR2VgKYIj00pf+t7NB83HBoKsnQc6lrWfy6SmDs9mGzL8R/Kj0jerxwLG6Vm2wrfR2ryzgViadD+aPlo2a7p6Hzl8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HlNGljEXuwJVDoSEnVxmgGQzedkSchuUsWXGkrnk61cysQOEZDNblQqlduv06YuOdCpIEjt+IARkkqXcGPY75j9TDM2wVQcLOziyXAdci7jNuhV6ttfCjgct2zWNoRA5DLmQhMuO6djYteymhdsTu+03PL+Ba3XXeTSNe8iEglYuNds01knMhV+E7Zh5xv2UCCZ8ThIQvqT+OLi+8pWnT0pOZvd0y7IImHXnUi58hGgtBApxTGs0TdAp2vM5DYU/ZjNOZJ7BS8xQdMyXvavVqraq19JshhzbtpHtIeUTCjb7ana/lJshHPIo3a57hKecURKzZ6JJXYOcp6ERxLM0Y3KevAONEbY1tAVralHs8q8meg1QsPsk0h7JTBBLzAkuwUYQQQacgnE3GnbMr5/r4HbvJCNcRGmWiIP1n1ECvoQ4XUBoiTKzkt3nEY+Uq3sK1B9yGueCLeFGj8mCUBDG9wwitr5iQg1fKIyi/cZaqD9WThnQP2nLKdrlqqijI9XpsxkI+X96ttuvLco9iXPoOrE7u60PRicX9WTqJMvUtfnN+LJ+P7ruFBR2nbekqna/rA+HtZqtl02jSS9fb6Y/71bnGSKzzSN4LJlcuxjxE9TbLAbTp7nt3E3S/mM06qOL+a85mk5un3/Sy5tBHc6i1cMZWU7PN/cB/dJ31xeX87gRXHnUxQJ5jdVD62r5dH7hXAaTH9K9m7Jv5xc/Lk+eh381I7dnNzaP7dwJ2nI8FDFu3g6zVvvk28NFFHyJxM1976c6U+LvdBLiB/xddF5z2s1h31hKwjifPgGV5VKPx7BvDFS/iPxYXrSFhVZUuPoLrVFCApdmV+/S0uLnSoBY6KtmbteDHvacc0/979ltL2ie266NB3ZgNzwP95yg1KAtiwOKvZRHTMfSKrudn48J0sQXwEPIrGWa0zkI8wPEPpHEGPKROhwpFzBJlYpjeOLt9jOsmotNW/KGEzLczjYyMY2bVN7y2yyIJGR70o3xnnSPgLIFA63vesCFmnAhVS1+k2UuY1xbkhqHXN0AmRZh33HbDSRYsohBM0VJGuYx1BbzRVEZJLa/jkWoKKxM0EWaSRLj4vy9m97ht7ISyidk2kHolM5AdROOXEVumc/7ebu7eZfwQR4yfcxUWWXG6JbJ/qfXadFjUo1KlRgVuORebflDiCMA6AN+6LA0VbxwyXail9erujGUnnTL/v4mtd+1fLnMi462tFZmCh4pycRoDDRXgreZpL+AowoCfeq+qVgfRK7s+/xyOedjSSQkav6MYvmJx8YYhH5sDNXBWX/2JbMXUtVNwloes/Vi9SbRjD98tlCfaj9l/q5+VmkWvrbrCNZOHJWnemFIxmd6pW+WzTuzQVMFy5QUptku+DGAY8H3jVWRKy5STdM0l/D+F0NrXMcklKY5l8O+WRh2dbfgKTcL8F+d3sAU2v5yWa/Fu5f1w/XVWClgQszKl/23s8WKcaFg6jdBwaVjrtXbUwXnsx2dfyH4Vupb9bOBY6sLbFBJfcvz6h7uVwXcy6T7xvzWslPTw/PQ/Rc=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tq45nSlrZCO8IMgpzTox4VFDm+3EnTDQTbtDQpoL/+JsVWQPTqnWGGye7O2mt/ZCWnDMVR3eswBhknCVX8Xkv9J6jjk6blhpoNRqDZCIOGLCfUwGhayHEcA0xLVXzGcvAp44jyllo3TFszTjSzeWc0Pcf1HLvmNIxHVRlBxgS0cKkZqrKOI8q8ImxLzTPqJYgR5lEUA/M49oadq0tPeHqo5KS2Tzcsi4BZe8Z56uk6roWAIYpwDSexfqrv+JyGzBuSKUU8z+A1Zsha6uve1WpVW1m1JJvqdcMwdMPVhU/IyPRYbR+VmyH06STZrLuIJpRgFJEXJEldAZ8lodKJpklG+Cz+ANrUTUNCa7DGGjZteqzqbwEKdl9E2iGZMaSxGTJLsAFMIAOKQbkf+C31+Gsd3Oy9yxBlkySL2d76e5SALiFKUgg1VmZWsvs64oFytU8Bez7FUc7IEv7IMUlFOky5yWBC1peEieELmVK0X1kz8SPllAH+TltO9W2ugrp+oDo9MgXG/0/Ptvu1QRmhKIc2DPuXPy6cft1vNKfB6Go2zaLRann7MjdaBYVt5w2pqt2v6/1hrWbrddNF4hrzxWJh2fG8MdZDyxnZcH/mrp3n7PLKxYP5GILfJ078K36OX0adzrjbwUEzGMziwWCkTxfx+dysO77eODk/eoSxPh7jx+b1KjizX2h6lz1erIzzW2fZcyfLh/jlZmLhcWCPzhu/jUUv+BtCOjx7gB/z2yd+4j6Y84tfD5c/5z+t+VGO7BsKA8vXZ8Hf2f3jrW+33nLazmHXWErCMA/mgHm5lOPh95S+6Bfin8uLtJBQmxSuXio1inGgXG3LXVJavFwIEAk90czNut813fq5OFeNXqdTr/fPDdsw+0bHcFzX7FpGqUEbFnsUuwmdEBlLquxmfj4niGOPAQ0h05ZJjmfA1E8Qe4gjxacDcTgSyuAuESrOX0L7xHwKuOMGOQp4aoo5enpuqMqfhF/T66wz4ZDtKLdp7ij3ADBJCUh5l/PNxIAzLkqxQMucR2ZtiWoUcnEBZFKDvbrddHRG4jQCSVSPkzCPoJbO0qIwOtv81zWEWWElDKdJxlFkFsfvw+z2v5WFED4hkQ5MpnQGoplw4Cayy3ze5e0cvLFK+E4eEnnKRFV5RvCGye6nt2GRU1JNSpUYZmbJvdryTYgDAPon/PT90lTxwiXZil7eruLCEHLSLvu7QLVFLV8u86KjDSmVmYDXhWKa+hBwLvTu+S55AqpXEPqXrpuK9V7kyr7LL+czOuSIQyzmTymWX3hrDIHJt4Yvzs36qw+ZnZCibhzW/JCtG4kniWT86asFe1j6CfON+FslWfjWrgNYW3FEnuKBwQmdypW8WJ4/mA2cCFgilDDJtsEPARwKvmusilxx4WKagpzDx18UKXEtFWGc5JT7PbUwbMtuwZM/p+C9Ob2DKaT99a5esw/v6vHV5VAIYIzUypf8t7NGinHBoMonQcGlpa7F01MEp9MtmX8l+F7pG9ZZv250DedN6Ruua7lmryrgTibtd+b3lq2a7p+H9r8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0459521403081992405</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0459521403081992405</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0459481403081988041</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0459501403081990275</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0459521403081992405</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E592661CDDEE0401F0A07993905</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E9C19C189A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E6837DBA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4830d9c-88ec-4c42-ae57-ec8dbcee4bfd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_UserGet_FUNC_CHILD_SAU_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="4e068d44-cb12-4d9d-8339-f16e46424b1d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2851fbab-c34d-4cee-bd7a-40f97f6b4f4f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e7c6a259-3303-48e0-9788-d07cfb02b56b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="8ea591dd-954d-4452-95a9-7d8295caebb0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="b72b182e-b592-4431-91d6-08134ed09b8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="3330096a-b371-4230-84c4-d663a7c4a758"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="42683605-6320-4ce9-b79d-752921375b9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="b42d8979-93d1-4286-be67-4d6352012d01"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="68e8b84c-17ee-44ba-89fc-acc7fbec8fa9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFAB9E5309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B0997E610AE0401F0A05992642:D1DDC4C7"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051331403082783640</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BA10758CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BA10758CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BA10758CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFAB9E5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BB88A93A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B36D9D2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFAB9E5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BB88A93A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B36D9D2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUvgK2I8xUEGUVRWDx7n65E9MDxC1padJS+fWbFFsB0at3hhkmpyfPec5LnuSMoWVoeT5jkHASUaXfban/WoZl267Z0JDRqGvODDW1x7rR0NxHhOtNy0BNQKrSZyyFPmUcUd5SLcN0NOFjnk4M1zMtr+7WzGbjt6pMIWECWrjUDFXJlyFlXhG2paYJ9SLECPMoWgLzOPbG/uDGE54eKjmp7bMtyyJg0l5wHnu6jmsBYAhDXMPRUj/T93zOAuaNyZwinibwEjNgLfVl73q9rq3tWpTMdcswDN1wdeETMDL/rra/lZsh6NNZtF13EI0owSgkGyRJDYAvokDxw3mUEL5YvgNt6qYhoTXIsYZNh35X9dcABbtPIu2RTBjS2AKZJdgIZpAAxaD8HPVb6vfPdXC7d5IgymZRsmQH669RAppBGMUQaKzMrGT3ecQj5WqfAfb6FIcpIxncyjGJEQamDBOYkfyGMDF8AVOK9is5Ez9SThngr7TlTN/lKqjrR6rTJXNg/P/0bLdfW5QpClNo/7ie3S5Wi2n4WGd4MPiTb3L7umFc3flRq6Cw67wlVbX7ZX04rNVsvWwiP+7Yc9y56t1cnuCmPumBPR6d/hyyJ7fnXA5hjbuwuT5xpr/sFSB70HUH5vncHeX39oauRnWHPdjh1Ph9yZzet8lqaI3Dze3V/dhPjeHD6sLED/PMPr33DTs25z+c3qQX3G+Sy+zemT5Fl0/uM1nOogsGxjAdzo07MwtG8cO1/cv6lp8sMurfXE2HD+ntZnAzz43Wa067OewbS0kYp49PgHm5lOPR7yo90S/EP5YXaSGBNitcvVhqFONAudqWu6S0eKkQIBJ4opnbda9juq7r9/xz96JuG+6F4Rhmz/CNuutaDbtTatCWxQHFTkRnRMaSKrudn48J4qXHgAaQaFmU4gUw9QPELuJI6dOROBwRZTCJhIqbK5vbj+tFvb4OEzNvOEH2bKU4w0+qchvxO3qX+DMOyZ52C+He1e4RYBITkAIvJ5yJEWdcFGOFspSHZi1DNQqpuAISqcKe5ZzWdUaWcQiSqr6MgjSEWryIi9LobPtvaQizwkoYjqOEo9AsDuC7+R1+K0shfAIiHZhM6RxEO+HIXeSU+byfd3037xLeTwMiz5moK08I3jLZ//Q6LnJOqlmpEsPMLLlXW74IcQRA/4CffliaKl6QkZ3o5f0qrgwhKO2yvytUW9XSLEuLjjalWCYCXheaaepjwKlQvOdJ9AeoXkHon7pwKtYHkSv7Pr+UL+iYIw5LMX9KsfzEa2MMTL42+uLk5J99yuyFFHXjkPNjtk4oHiWS8YfvFuxh6SfMQ/G3jpLgtV1HsHbiiDzFE4MTOpcrebU8vzMbOBKwRGhhlOyCHwM4FnzfWBW54sLFND2mHN7/okiRa6kI4yilvN9VC8Ou8BY8+XMM3qvTG5hC3F9u65y9e1v/M7gZCwlcIrXyJf/trJFiXDCo8lFQcGmpuXh8iuB0viP0LwTfav25bxrN+mnnollpfdN1zW7jvCrgXibtN+a3lp2aHp6H9l8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUvgK2I8xUEGUVRWDx7n65E9MDxC1padJS+fWbFFsB0at3hhkmpyfPec5LnuSMoWVoeT5jkHASUaXfban/WoZl267Z0JDRqGvODDW1x7rR0NxHhOtNy0BNQKrSZyyFPmUcUd5SLcN0NOFjnk4M1zMtr+7WzGbjt6pMIWECWrjUDFXJlyFlXhG2paYJ9SLECPMoWgLzOPbG/uDGE54eKjmp7bMtyyJg0l5wHnu6jmsBYAhDXMPRUj/T93zOAuaNyZwinibwEjNgLfVl73q9rq3tWpTMdcswDN1wdeETMDL/rra/lZsh6NNZtF13EI0owSgkGyRJDYAvokDxw3mUEL5YvgNt6qYhoTXIsYZNh35X9dcABbtPIu2RTBjS2AKZJdgIZpAAxaD8HPVb6vfPdXC7d5IgymZRsmQH669RAppBGMUQaKzMrGT3ecQj5WqfAfb6FIcpIxncyjGJEQamDBOYkfyGMDF8AVOK9is5Ez9SThngr7TlTN/lKqjrR6rTJXNg/P/0bLdfW5QpClNo/7ie3S5Wi2n4WGd4MPiTb3L7umFc3flRq6Cw67wlVbX7ZX04rNVsvWwiP+7Yc9y56t1cnuCmPumBPR6d/hyyJ7fnXA5hjbuwuT5xpr/sFSB70HUH5vncHeX39oauRnWHPdjh1Ph9yZzet8lqaI3Dze3V/dhPjeHD6sLED/PMPr33DTs25z+c3qQX3G+Sy+zemT5Fl0/uM1nOogsGxjAdzo07MwtG8cO1/cv6lp8sMurfXE2HD+ntZnAzz43Wa067OewbS0kYp49PgHm5lOPR7yo90S/EP5YXaSGBNitcvVhqFONAudqWu6S0eKkQIBJ4opnbda9juq7r9/xz96JuG+6F4Rhmz/CNuutaDbtTatCWxQHFTkRnRMaSKrudn48J4qXHgAaQaFmU4gUw9QPELuJI6dOROBwRZTCJhIqbK5vbj+tFvb4OEzNvOEH2bKU4w0+qchvxO3qX+DMOyZ52C+He1e4RYBITkAIvJ5yJEWdcFGOFspSHZi1DNQqpuAISqcKe5ZzWdUaWcQiSqr6MgjSEWryIi9LobPtvaQizwkoYjqOEo9AsDuC7+R1+K0shfAIiHZhM6RxEO+HIXeSU+byfd3037xLeTwMiz5moK08I3jLZ//Q6LnJOqlmpEsPMLLlXW74IcQRA/4CffliaKl6QkZ3o5f0qrgwhKO2yvytUW9XSLEuLjjalWCYCXheaaepjwKlQvOdJ9AeoXkHon7pwKtYHkSv7Pr+UL+iYIw5LMX9KsfzEa2MMTL42+uLk5J99yuyFFHXjkPNjtk4oHiWS8YfvFuxh6SfMQ/G3jpLgtV1HsHbiiDzFE4MTOpcrebU8vzMbOBKwRGhhlOyCHwM4FnzfWBW54sLFND2mHN7/okiRa6kI4yilvN9VC8Ou8BY8+XMM3qvTG5hC3F9u65y9e1v/M7gZCwlcIrXyJf/trJFiXDCo8lFQcGmpuXh8iuB0viP0LwTfav25bxrN+mnnollpfdN1zW7jvCrgXibtN+a3lp2aHp6H9l8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1N64dZ2hBlu7s2IgqLurS9nQrKAaJuWJuXirz9JsRUQPXpmmGGyuvKtb13yJecchYHjtziHRNCIaf1uQ/9nWq3bUHeI4U0AGxXLwYZXwcQAILWpXam79QrWtT7nKfQZF4iJhu5YdsWwaobt3lmeb5d9yym5rv2kaw+QcAktXUqWrq3DgHE/C9vQ04T5EeKU+wyFwH2B/XHrauBLTx/lnPTm+ZZlFjBpzoWIfdPEJQIYggCXcBSa5+aezznh/pjOGBJpAm8xCW/ob3tXq1VpVS5Fycx0LMsyLc+UPoTT2anePMk3A+mzabRddxCLGMUooK9IkboCMY+I1gpmUULFPPwE2jZtS0EbsMYGtivsVDffA2Tsvom0RzLhyOBzZOdgtzCFBBgG7f6239BPv9fB7d67BDE+jZKQH6x/RgnYEoIoBmLwPLOc3fcRj5SreQ7Y7zMcpJwu4VqNSYwwcG2UwJSuB5TL4SNcy9qvrbn80XzKAP+kLefmLldJ3TxSnS6dARf/p2e7/dqiPKAghaZFSGq7o7Q8Rim/JEF5NnitXblR2HIbGYVd5y2pot1v68NhLWbrbVPYRnfXlyHxNr/O+uz27DcLwmV7dPbIX3qJ9WsT9u5rD/T2cjEij0/TaHTftntVB68Hc/YnYcHNau7xm/tb6/nv6vVkAL1g/lBfPNjt+GZcGZvDysi5mpudvum+tNOFZbuDVboYLrkY4ui5Gz+bw/nauxi6Uzq8nMwqm/iivnIn5PeifBL86Y75xLx6eoSH3tPLhG3cxntOuznsG3NJGKeTZ8AiX6rx6He1C9kvJL6WF2WhxJhmrn6sNIoLYEJvql1KWvxUChAlvmzmdn3RsT3Pa7ddt+WVW7bXsyqWfWG1rKrnObVKJ9egLYsDip2ITamKpVR2Oz9fE8Shz4ERSIxllOI5cP0LxC4SSJOtlYcjYhzuIqnidpmS2H2Z8JqFXuKwjAIgbsJfY127jsSQDZPWVECyJ922syfdt4BpTEHpuxpwLiecC1mLBVqmIrBLS1RikMobIFEi7DsVt2pyGsYBKKZmGJE0gFI8j7PKmHz77xgI88xKOY6jRKDAzs7fp+kdfssrIX0IVQ5cpdQG2U34cBU5fjXP50Pe1aNXVg7fSglVx0yWVSQUb5nsf3qfFjUmxagUiWFu59yLLT+EOAJgfsHPPCxNEY8s6U70/HqVN4bUk2be3wUqLUrpcplmHa0rrUwkvCkl0zbHgFMpeJu76AWYWUCY37pvCtYHkQv7Pr9UzNlYIAGhnD8tW37jsTEGrh4bfXlw1t99yeyFlHUTsBbHbJ1AvkkU4y+fLdjHyk+aR/JvFSXkvV1HsHbiyDzlC0NQNlMrdbNsPpkNHElYKqUwSnbBjwEcC75vLIpccBFymiapgM+/aErjGjrCOEqZ6Hf1zLCruxlPsYnBf3f6AJNp+9tlveafXtZ/rwZjqYAh0gtf+t/OBs3GBYOu3gQZl4a+lm9PGZzNdnT+jeARqW/ZVr3qdnr1Qurrnmd3a+2igHuZND+YP1p2anp4Hpr/Ag==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc7I6FH3vr2DoYwcBq6JMdcZLban2am/nezkTwwbTQkASlPrrvwQLVWt72jPjjJPNztprX7KSE4bCoGp3GYOEk4gqzqCt/utBtWYZ04YGFva0GkBVQwZ4moEso9kw6mDVG6riMJaCQxlHlLfVqmHWNKOhmc17o2Wbx7ZRrzSs6h9VeYSECWjhUjFUJQsDyuw8bFtNE2pHiBFmUxQCszm2J93LsS08bVRwUjsna5Z5wKQz4zy2dR1XXMAQBLiCo1A/0bd8TlxmT4hPEU8TeI/psrb6vne5XFaWx5Uo8fWqYRi60dKFj8uIf6h2DorN4DrUi9brPqIRJRgFZIUkqUvgs8hVuoEfJYTPwi+gTd00JLQGGdawWaOHqv4RIGf3Q6QtkglDGpshswC7Aw8SoBiUhzunrR7+rIPrvfcJosyLkpDtrH9HCegCgigGV2NFZgW7nyPuKVfnBLDtUBykjCzgSo5JjDAw5SYBj2RjwsTwuUzJ269kTPxIMWWAf9OWE32Tq6Cu76nOgPjA+P/p2Wa/1iiPKEihE17X2LM/mrrZY/A2ek77DTSheLW8haidU9h0XpMq2/2+3h3WcrbeN7347Klnrbz5rH/xFE/mTcvwQ5+3bh4empfN8dR7mI7g6T6z0Gry2I2O/cazV+3qyfmtno7d8GJ6OsSB0wNuHI0Ojoavw1F29s/EqdbiJ4NY7LzZ4vrdRebWeGv1cn+LB48UHZ0/PY6fTx+OkhUfXI9fJ2fxba/XY/3R8vg5mL+9Lmru6sD745zd+W8v8+6V+WRcXnjD0/ZHTps5bBsLSZik0xfAvFjK8XAGylD0C/Hv5UVaiKt5uasdS41iHChXO3KXlBY7FQJEXFs0c70e9s1Wq9U7bgxag+qg1js1aoY5NLqG1WqZg8ag0KA1ix2K/Yh6RMaSKruen+8J4tBmQF1ItEWU4hkw9RvEAeJIceidOBwRZXAfCRWfNn0vnTIznrWWZuBm0xfcrNMVUFW5ivg1vU66HodkS7rN6pZ03wEmMQGp73LAmZhwxkUt5miR8sCsLFCFQipugESKsF2tNes6I2EcgGSqh5GbBlCJZ3FeGZ2t/4UWYZZbCcNxlHAUmPn5+zK93W9FJYSPS6QDkyn1QHQTPl1FVbte5PMp7/reK6uA76YukcdMlJUnBK+ZbH/6mBY5JuWolIlhZhbcyy2/hNgDoH/DT98tTRnPXZCN6MX1Km4MoSedor9zVJlX0sUizTtqSa1MBLwuJNPUJ4BTIXhv99ErUL2E0H9035SsdyKX9m1+KZ/RCUccQjF/Sr78wWNjAkw+NhxxcLKfvmS2Qoq6ccj4Pls/EG8SyfjbZwu2sfQT5hvxt4wS96Nde7A24og8xQuDE+rLlbxZ3r6YDRwJWCKkMEo2wfcB7Au+bSyLXHLhYpqmKYevvyhS49oqwjhKKXcGam7Y1N2cJ3+Lwf5w+gSTa/v7ZZ2xLy/r58vxRChgiNTSl/y3s0byccGgyjdBzqWtZuLtKYJTf0Pn3wnukfquaVj1Zv/U2pH6XlnArUw6n8yfLRs13T0Pnb8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051331403082783640</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051331403082783640</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0512581403082778193</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051301403082780609</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_051331403082783640</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFAB9F5309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BB88AA3A19E0401F0A0599264C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B36D9E2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_UserGet_FUNC_CHILD_BAU_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="9a25b3f6-6b0c-49b0-8ad9-5cd56bcb4d6a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c4c4dbb0-244a-4562-81c3-720def55214d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="553c6ca6-97f0-47b9-81bd-41dfb715ac25"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU1" id="e9722f10-e236-424e-bd17-d3385b0f89e0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU1" id="ffadda5c-0f0d-47c0-89c2-727c327050b3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="3e0aaec9-ef16-4154-84d9-7989cb9a4034"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="b5a4f06a-cad2-449c-8c4c-6db5d3ac77d0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="3c0a48b2-e27a-45e8-b354-80fe5314c1de"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="60694828-13cb-48fd-87a1-b0cee5cabc81"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2B155496AE0401F0A05992648</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B3B096494BE0401F0A05992630:DBF5902B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0513121403082792618</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B1CCC98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1CCC98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1CCC98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2B155496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AFABC35309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B3DF999FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B155496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AFABC35309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B3DF999FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHquQC4GSqCBRMt1Jt/QCZTrty8o4B+I2sdPY4dJfv3ZoUqC021kJCfnk+DvfufizTzhKE8fvcw65IIxqYdDV/4labc+dTS1j6mFsuM1oZnht1zGakdO2mrPWcQsd61rIeQEh5QJR0dUdy3YNq23YnVvL8+2mb3UarWP3Qdd+Qc4ltHRpWLq2ShPK/TJsVy9y6jPECfcpSoH7Avvj/vDCl54+qjjpvZMNyzJg3ouFyHzTxI0IMCQJbmCWmifmjs9JxP0xmVMkihxeY0a8q7/uXS6XjWWzwfK56ViWZVqeKX0iTubf9d63ajNEIZ2xzXqAKKMEo4S8IEVqCCJmkdZP5iwnIk4/gLZN21LQBqywgW2XftfNtwAluy8i7ZDMOTJ4jOwKbAQzyIFi0CajsKt//1oHN3tvc0T5jOUp31v/GSWgC0hYBpHBq8wqdl9HPFCu3glgP6Q4KThZwKUakwxh4Np1DjOyuiBcDl/EtbL92orLH6mmDPCftOXE3OYqqZsHqhOQOXDxf3q23a8Nyi+UFNAjw/guD0RiF33nZhhPTJbO0GTiQNHvlhS2nTek6na/rveHtZ6t101rO4j7o6P22hrNnNCMTh2rPTJXYbZ8LH43h3/dtx+KaRBc39y1r7xmfznOb19+PDmtu7+J6/yIb/KL5orAb+f+iT9+W3SSu85R8ZItfi7vzq+un8/DwdPg7OU0SayH6fnTzc3t/QQF7CqeTB4iNE/t4OjRHTSHa7iJV6O0HV/wy9PFPVsf4W+j48uhGDafni9+eq0iOHrIlt23nLZz2DVWkjAupo+ARbVU4xEG2pnsFxKfy4uykMiYla5+pjSKC6BC76ldSlr8QgoQiXzZzM36bGB7nnfqnNqtluu1+z8s17LPrL7V8jyn7XYqDdqw2KM4YHRGVCylspv5+ZwgTn0ONILcWLACx8D1TxADJJAW0pE8HIxyuGVKxafP3CmmKxvWsd1c4iSeLh47zHV07ZKJK3qV92cC8h3ptp0d6R4BJhkBpe9qwLmccC5kLZ7RopAT21igBoVC3gC5EmHfcTstk5M0S0AxNVMWFQk0sjgrK2Pyzb9jIMxLK+E4Y7lAiV2evw/T2/9WVUL6REQ5cJXSKchuwruryPFbVT4f593azruC7xcRUcdMllXkBG+Y7H56mxY1JvWo1Ilhblfc6y1/CHEAwPyEn7lfmjpetCBb0avrVd4YUk96VX+fUeO5USwWRdnRY6WVuYQ3pWTa5hhwIQVvfcuegJo1hPml+6ZmvRe5tu/yK0RMxwIJSOX8aeXyC4+NMXD12AjlwVl99SWzE1LWTcBKHLINEvkmUYw/fbZgHys/ab6Wf0uWR2/tOoC1FUfmKV8YgtC5WqmbZf3BbGAmYYmUQpZvgx8COBR811gXueYi5DRNCwEff9GUxnV1hDErqAgDvTRs627JU6wz8N+c3sGU2v56Wa/4h5f17+HFWCpgivTal/y3s0HKccGgqzdByaWrr+TbUwan8y2dfyV4QOrtwWDgdfpnTi31x55nB+23Wd7JpPfO/N6yVdP989D7Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHquQC4GSqCBRMt1Jt/QCZTrty8o4B+I2sdPY4dJfv3ZoUqC021kJCfnk+DvfufizTzhKE8fvcw65IIxqYdDV/4labc+dTS1j6mFsuM1oZnht1zGakdO2mrPWcQsd61rIeQEh5QJR0dUdy3YNq23YnVvL8+2mb3UarWP3Qdd+Qc4ltHRpWLq2ShPK/TJsVy9y6jPECfcpSoH7Avvj/vDCl54+qjjpvZMNyzJg3ouFyHzTxI0IMCQJbmCWmifmjs9JxP0xmVMkihxeY0a8q7/uXS6XjWWzwfK56ViWZVqeKX0iTubf9d63ajNEIZ2xzXqAKKMEo4S8IEVqCCJmkdZP5iwnIk4/gLZN21LQBqywgW2XftfNtwAluy8i7ZDMOTJ4jOwKbAQzyIFi0CajsKt//1oHN3tvc0T5jOUp31v/GSWgC0hYBpHBq8wqdl9HPFCu3glgP6Q4KThZwKUakwxh4Np1DjOyuiBcDl/EtbL92orLH6mmDPCftOXE3OYqqZsHqhOQOXDxf3q23a8Nyi+UFNAjw/guD0RiF33nZhhPTJbO0GTiQNHvlhS2nTek6na/rveHtZ6t101rO4j7o6P22hrNnNCMTh2rPTJXYbZ8LH43h3/dtx+KaRBc39y1r7xmfznOb19+PDmtu7+J6/yIb/KL5orAb+f+iT9+W3SSu85R8ZItfi7vzq+un8/DwdPg7OU0SayH6fnTzc3t/QQF7CqeTB4iNE/t4OjRHTSHa7iJV6O0HV/wy9PFPVsf4W+j48uhGDafni9+eq0iOHrIlt23nLZz2DVWkjAupo+ARbVU4xEG2pnsFxKfy4uykMiYla5+pjSKC6BC76ldSlr8QgoQiXzZzM36bGB7nnfqnNqtluu1+z8s17LPrL7V8jyn7XYqDdqw2KM4YHRGVCylspv5+ZwgTn0ONILcWLACx8D1TxADJJAW0pE8HIxyuGVKxafP3CmmKxvWsd1c4iSeLh47zHV07ZKJK3qV92cC8h3ptp0d6R4BJhkBpe9qwLmccC5kLZ7RopAT21igBoVC3gC5EmHfcTstk5M0S0AxNVMWFQk0sjgrK2Pyzb9jIMxLK+E4Y7lAiV2evw/T2/9WVUL6REQ5cJXSKchuwruryPFbVT4f593azruC7xcRUcdMllXkBG+Y7H56mxY1JvWo1Ilhblfc6y1/CHEAwPyEn7lfmjpetCBb0avrVd4YUk96VX+fUeO5USwWRdnRY6WVuYQ3pWTa5hhwIQVvfcuegJo1hPml+6ZmvRe5tu/yK0RMxwIJSOX8aeXyC4+NMXD12AjlwVl99SWzE1LWTcBKHLINEvkmUYw/fbZgHys/ab6Wf0uWR2/tOoC1FUfmKV8YgtC5WqmbZf3BbGAmYYmUQpZvgx8COBR811gXueYi5DRNCwEff9GUxnV1hDErqAgDvTRs627JU6wz8N+c3sGU2v56Wa/4h5f17+HFWCpgivTal/y3s0HKccGgqzdByaWrr+TbUwan8y2dfyV4QOrtwWDgdfpnTi31x55nB+23Wd7JpPfO/N6yVdP989D7Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6sQJ6RAooJEQ7NLt6UUaPcuL1fGMeBusKnthHR//dqhSYHS3vZKSMiT8cyZD5+ZMwFXiRt0hcBcEkaNfq9t/ttsuNiboZYFwSm0PBd51qyJ61bTbQEfz5qtJmyaRl+IFPepkJDKtukCx7NAw3JaE+AHTj1w3BqoN6amcY+5UKaVSg2YRr5KqAgKt20z5TRgUBARULjCIpAoGHevrwKlGcASk9k526IsHPLOUsp1YNuoFmOEkwTVEFvZZ/aezlksgjFZUChTjp99xqJtPt/dbDa1Tb3G+MJ2AQA28G2lEwuy+Gp2vpSXcdync7Y9h5AyShBMyB+oQV1juWSx0U0WjBO5XL1h2rEdoE1bOEcWcjz61bRfHBToPmhpDyQX0BJL6JTGRniOOaYIG3ejftv8+rEKbu9OOKRizvhKHJw/BwnTDCdsjWNLlJGV6D5u8Ui6OmcYBX2KklSQDA90m6whwsIYcjwn+RURqvliYRTlN3KhfqTsMow+U5Yzexergm4fyU6PLLCQ/6dmu/XaWrmHSYo7l13gyH40HF63fixPIjqZ+puJn2e39m27gLCrvAVVlfv5fNisVW89X+I/okVK5eV5suBR+BjPs/jbcBpN76+evvPbzUXWXd7wIb0G4Qw64upxNDm5I7/s8Xo4RSfzdODZ/E8IHtc4uaRffo4aE9m6HQDvOs+mvexqkBD+q7lkyV0O84e8+V3GAzpqTcbh+QwyUL8Vm+j3hTf59hvd33jew80wagCndxra919A5NDk5608GYxW0/Ps/sfgov0S024M+8KSEsbp7AEjWR51e/R7RqTqBeX79KIlJLbmhWqw1hwlJKbS7OhbmlqCVBEQiQNVzO05Ch3f97tR9zysn9aBfwE84ESgC059323Uw5KDtigOIIaMzon2pVl22z/vA0SrQGAaY25lLEVLLMx3LPaghEafjtTjYFTgCVMs7tAYyqZoSs91G85GPizjhMFs6bqmMWDyht7w7lxivsfdjrvH3SOMyJpgTfC6w4VqcSFVMh5hlsrEqWWwRnGqRgDXLBy4XuvUFmS1TrCGaq9YnCa4tl6ui9TYYvvvWhCJQkoEWjMuYeIUD/DN+A6/lalQOjHRCkKHdI5VOfGRWQTKeF7FfXp0ZpXmu2lM9DtTeZWcoC2S/U8v7aL7pOqVKjAknBJ7deWTJo4YsN/BZx+mpvIXZ2THezlf1chQhNIp6/sIa4+1NMvSoqJNTZZcmbcVZzr2GKNUMd7ThP3G1K5M2B8aOBXqA8+VfB9fKpd0LKHEK9V/RnH8wLYxxkJvG331cvKPrjJ7LlXeJM7lMVmYqKVEI353b0EB0npKPFR/G8bjl3IdsbXjR8WpVgxJ6EKf9Gh5eqM3EFNmieJCxneNHzNwzPm+sEpyhUWqbpqlEr/9xdAk1zYhQkxNln7PLAS7xFvglE9rHLwovTJTkPvztM7Fm9P6n+ursaLAFTQrXfLfyhYp2gVhUy8FBZa2mavlUzmnix2ifwb4muvPnTAM/VY3ciuub/q+02u89PJeJJ1X4teSnZwevofOXw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH53SCwJtR5hB2GzrVlSKut0vZ0K6gGibtknKxV9/0mIrIHr0zDDDZHXlW9+65EtOOYpCy+1yDkyQmCpev63+U5/aU9xoYM1pTBztpIWa2gRMpGHbQSbUG45tg6p4nGfgUS4QFW3VMswTzWhqpj02HNesu2aj1rScv6pyD4xLaOlSM1RlFYWUu0XYtpox6saIE+5SFAF3BXb97tWlKz1dVHJSO6cblkVA1pkLkbi6jmsBYAhDXMNxpJ/qOz6nAXd9MqNIZAxeYwa8rb7uXS6XtWW9FrOZbhmGoRuOLn0CTmZHaudHuRkCj07jzbqHaEwJRiF5QTmpKxDzOFC64SxmRMyjD6BN3TRyaA1WWMPmCT1S9bcABbsvIu2QZBxpfI7MEmwEU2BAMSh3I6+tHn2tg5u9Y4Yon8Ys4nvr71ECuoAwTiDQeJlZye7riAfK1TkF7HoUhxknCxjmY5IgDFy5YTAlq0vC5fAFXCnar6y4/JFyygB/py2n+jZXSV0/UJ0+mQEX/6dn2/3aoNyjMIPOWH9xWt4tezLOJ2f2719mejXmhvAvGl67oLDtvCFVtft1vT+s1Wy9brrxU5sk65F199D1wb68xWCsnbV3e5zS++Hq+hxGeNE87gds3bpPB7yZjOw4c56f/fTYDhtW3w9GM3o35JOX9Mdg2OxGAUvQZYbvMCz1m5G1sMYj9Bw+rK9vru4er/UGn+P6g/0bDbBwJvWrYWsxbD3692J0HUXi7/NPdtw8b6XHP+yn9CL7gyc3t/b4+eJXbD4u2285beewaywlwc8mT4BFuczHw+srA9kvJD6Xl9xCAm1auLpJrlFcABVqJ9+VS4ubSQEigSubuVkPeqbjOGf1/kD+ycVP48QwB0bXaDmO2W84pQZtWOxR7MV0SvJYucpu5udzgjhyOdAAmLaIMzwHrn6C2EcCKR4dycMRUw7jWKo4t54ahpHNbZZOzKWBpk/pycs6CKQID2NxTa9ZdyqA7Ui3ae1I9wgwSQjk+p4POJcTzoWsRYoWmQjN2gLVKGTyBmC5CLvWid3QOYmSEHKmehQHWQi1ZJ4UldH55t/SEOaFlXCcxEyg0CzO34fp7X8rKyF9ApI78DylM5DdhANXkVHm8y7vxsErq4TvZgHJj5ksq2AEb5jsfnqblnxMqlGpEsPcLLlXW74JcQBA/4Sfvl+aKl6wIFvRy+tV3hhSTzplf1NUS2vZYpEVHW3lWskkvC4l09R9wJkUvPU4fgaqVxD6l+6bivVe5Mq+yy8Tc+oLJCCS86cUyy88Nnzg+WPDkwdn9dWXzE5IWTcBK3HI1gvlmyRn/OmzBbs495PmG/m3jFnw1q4DWFtxZJ7yhSEIneWr/GZZfzAbOJawREphzLbBDwEcCr5rrIpccRFymiaZgI+/KLnGtVWEcZxR4fXVwrCtuwVPsU7AfXN6B1No++tlveIfXtZ/ri59qYARUitf8t/OGinGBcunqvQvuLTVlXx7yuB0tqXzrwQPSL3Z6/UcuzuwdqW+2aoKuJNJ5535vWWrpvvnofMv</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0513121403082792618</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0513121403082792618</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051371403082787610</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051391403082789835</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0513121403082792618</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2B156496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AFABC45309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B3DF9A9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_UserGet_FUNC_CLG_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="2c94c539-a988-48c8-a4cc-c306cf372755"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c35aee0f-0639-4c07-925e-355da4a1b0bc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c4b16b57-9b84-4a10-b018-d8bcfecc669c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="2d835a55-f47f-404a-bb7a-cadb7f91fb90"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="e9bb2ebb-f4a5-4902-bd06-863fea346c22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="395f3c1e-0f2a-45b8-b818-a610c14a5970"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="c8d33c58-43d8-4c63-92e7-4563fd084484"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","CLG");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B0FBB6BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999AE5EF01C68E0401F0A07991D55:77174BA1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0513201403082800138</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2B17D496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B17D496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B17D496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B0FBB6BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AE5ED81C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FBB6BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AE5ED81C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZxyo4ScMlUUEKUDqZaTszBTrTvhy5zgZMEyeNHS79+mOHJgWG9tAjISHvbK+99sXLPuc4jmzP5xwyQROmBf22/k+TNEndcWzDdcjEcMKmbTzWzYbRrJPWmWuaVqPe1LWA8xwCxgVmoq3bpuUY0sdqjUzXs848q1VrmK0HXbuDjEto6VIzdW0VR4x7Rdi2nmfMSzCn3GM4Bu4J4g396ytPenq45KR3zjcsi4BZZyZE6iFEaiEQiCJSI0mMztGOz3nIvSGdMizyDF5jhrytv+5dLpe15VktyabINk0TmS6SPiGn0y9656TcDGHAJslm3cMsYZTgiL5gReoaxCwJNT+aJhkVs/gdaAtZpoI2YEUMYjnsi47eAhTsjkTaIZlxbPAZtkqwW5hABoyANr4N2vqX4zq42TvKMOOTJIv53vpzlIAtIEpSCA1eZlayOx7xQLk650C8gJEo53QBN2pMUkyAaz8zmNDVFeVy+EKuFe3XVlz+aDllQD7TlnO0zVVSRweq06dT4OL/9Gy7XxuUOxzl0IH7/Lswnd92a0zDUwvju/uwxe96tnPdLihsO29IVe1+Xe8PazVbr5sS9DIRfjBeDrllr+azeGlngzU8/qCNX0j8uujG4cSv9x/pJH9GZHQzHzxchTer9csILUaNy+By+eK0GB+MH37Cyf1yOK43Lm9JetWl4XQ1n/9hvvVV3Fywub28vPya+ncr4c5O+bWZhvjbeHZxml453waiiwfTmRi+PARU3LVOv33vnrSsM/97E/2eCTap99wx7pvtt5y2c9g1lpIwzB/nQES5VOMR9LWB7BcWH8uLstDQmBSuXqo0igtgQu+oXUpavFwKEA092czNetCzXNftmoNut9H1G80L0zGtgembTde1+vV+qUEbFnsUewmbUBVLqexmfj4mSGKPAwshMxZJTmbA9Q8Q+1hgLWC38nAkjMMokSqePc1t+4kQ21qvLeY6FJvzRcLXoGs3ifjBfmT+REC2I92WvSPdt0BoSkHpuxpwLiecC1mLZ7zIRWTVFrjGIJc3QKZE2LOdVh1xGqcRKKYoTsI8glo6S4vKIL75tw1MeGGlnKRJJnBkFefv3fT2v5WVkD4hVQ5cpdQF2U04cBWZZT7v513fzruE9/OQqmMmyyoySjZMdj+9TYsak2pUqsQIt0ru1ZZPQhwAQB/wQ/ulqeKFC7oVvbxe5Y0h9aRT9vcZ155r+WKRFx1tKq3MJDySkmmhIZBcCt56lDwBQxUEOuq+qVjvRa7su/xyMWNDgQXEcv60YnnEY2MIXD02AnlwVse+ZHZCyroJWIlDtl4k3ySK8YfPFuIR5SfNP+XfMsnCt3YdwNqKI/OULwxB2VSt1M2yfmc2SCJhqZTCJNsGPwRwKPiusSpyxUXIaXrMBbz/RVMa19YxIUnORNDXC8O27hY8xToF783pL5hC218v6xV/97L+c301lAoYY73ypf/tbNBiXIjUO+lfcGnrK/n2lMHZdEvnXwkekHq7azX7jtvwK6mvu67dcFpVAXcy6fxl/tuyVdP989D5Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZxyo4ScMlUUEKUDqZaTszBTrTvhy5zgZMEyeNHS79+mOHJgWG9tAjISHvbK+99sXLPuc4jmzP5xwyQROmBf22/k+TNEndcWzDdcjEcMKmbTzWzYbRrJPWmWuaVqPe1LWA8xwCxgVmoq3bpuUY0sdqjUzXs848q1VrmK0HXbuDjEto6VIzdW0VR4x7Rdi2nmfMSzCn3GM4Bu4J4g396ytPenq45KR3zjcsi4BZZyZE6iFEaiEQiCJSI0mMztGOz3nIvSGdMizyDF5jhrytv+5dLpe15VktyabINk0TmS6SPiGn0y9656TcDGHAJslm3cMsYZTgiL5gReoaxCwJNT+aJhkVs/gdaAtZpoI2YEUMYjnsi47eAhTsjkTaIZlxbPAZtkqwW5hABoyANr4N2vqX4zq42TvKMOOTJIv53vpzlIAtIEpSCA1eZlayOx7xQLk650C8gJEo53QBN2pMUkyAaz8zmNDVFeVy+EKuFe3XVlz+aDllQD7TlnO0zVVSRweq06dT4OL/9Gy7XxuUOxzl0IH7/Lswnd92a0zDUwvju/uwxe96tnPdLihsO29IVe1+Xe8PazVbr5sS9DIRfjBeDrllr+azeGlngzU8/qCNX0j8uujG4cSv9x/pJH9GZHQzHzxchTer9csILUaNy+By+eK0GB+MH37Cyf1yOK43Lm9JetWl4XQ1n/9hvvVV3Fywub28vPya+ncr4c5O+bWZhvjbeHZxml453waiiwfTmRi+PARU3LVOv33vnrSsM/97E/2eCTap99wx7pvtt5y2c9g1lpIwzB/nQES5VOMR9LWB7BcWH8uLstDQmBSuXqo0igtgQu+oXUpavFwKEA092czNetCzXNftmoNut9H1G80L0zGtgembTde1+vV+qUEbFnsUewmbUBVLqexmfj4mSGKPAwshMxZJTmbA9Q8Q+1hgLWC38nAkjMMokSqePc1t+4kQ21qvLeY6FJvzRcLXoGs3ifjBfmT+REC2I92WvSPdt0BoSkHpuxpwLiecC1mLZ7zIRWTVFrjGIJc3QKZE2LOdVh1xGqcRKKYoTsI8glo6S4vKIL75tw1MeGGlnKRJJnBkFefv3fT2v5WVkD4hVQ5cpdQF2U04cBWZZT7v513fzruE9/OQqmMmyyoySjZMdj+9TYsak2pUqsQIt0ru1ZZPQhwAQB/wQ/ulqeKFC7oVvbxe5Y0h9aRT9vcZ155r+WKRFx1tKq3MJDySkmmhIZBcCt56lDwBQxUEOuq+qVjvRa7su/xyMWNDgQXEcv60YnnEY2MIXD02AnlwVse+ZHZCyroJWIlDtl4k3ySK8YfPFuIR5SfNP+XfMsnCt3YdwNqKI/OULwxB2VSt1M2yfmc2SCJhqZTCJNsGPwRwKPiusSpyxUXIaXrMBbz/RVMa19YxIUnORNDXC8O27hY8xToF783pL5hC218v6xV/97L+c301lAoYY73ypf/tbNBiXIjUO+lfcGnrK/n2lMHZdEvnXwkekHq7azX7jtvwK6mvu67dcFpVAXcy6fxl/tuyVdP989D5Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxGlj1VIHEggUUGiUKZohl6Asrt9WRnnBNwGJ8QOl/n1Y4cmBUq7zEqVqE+Ov/Odiz/7iuNFZPttziEVNGZav9vU/204VRdPoWqQBgqMWtWqGrhqyf8wcqb1emjXaq6u9TnPoM+4wEw0ddtCNcNyDdQYW56Pqr5tV9yq86xrE0i5hJYuFUvXNouIcT8P29SzlPkx5pT7DC+A+4L4o/bgpy89fVxw0ltXO5Z5wLQ1FyLxTZNUAiAQRaRC4oV5ZR74XAXcH9EZwyJL4S1mwJv62971el1ZVytxOjNty7JMyzOlT8Dp7EJvfSs2Q9BnYbxbdzCLGSU4or+wIjUAMY8DrR3N4pSK+eITaGQiS0EbsCEGQTV2oZvvAXJ2ZyIdkEw5NvgcowJsCCGkwAhoT8N+U784r4O7veMUMx7G6YIfrf+MErAVRHECgcGLzAp25yOeKFfrCojfZyTKOF3BnRqTBBPg2kMKId38pFwOX8C1vP3ahss/WkwZkD9py5W5z1VSN09Up0tnwMX/6dl+v3YoExxl0OKNG/xPMJzWrlNX1F+WiXhujyZ0+fTKmzmFfecdqbLdb+vjYS1n623T+NWz1g4WU/o9SW/jifUyG7tRcD9JLSd87oc33++SjcdCF6HOpHcznVY9B90F6+9bGLrz/vzysmOPL1+dH+vn6TcKSR3/2DQGL8PJaPgXXD8PrsPBfc2avPxyt0/pMqTZ7cbtCktSI7fi8mHReOw5uBfSxvLHY1QfrqZihDBcvkbfBjZYt8PeGBgNBihMNu5j8z2n/RwOjYUkjLLpCxBRLNV49LtaT/YLi6/lRVloYIS5q58ojeICmNBbapeSFj+TAkQDXzZzt+51kOd57RvnpttAHbdxY9Us1LPaVt3zUNdxCg3asTii2IlZSFUspbK7+fmaIFn4HFgAqbGKMzIHrn+B2MUCa302lIcjZhzGsVRx5IaBLWb1tSCzYLtijep8Frtbt6prd7G4Z/dpOxSQHkg3sg+kewiEJhSUvqsB53LCuZC1WOJVJiJUWeEKg0zeAKkSYd+uNRyT00USgWJqLuIgi6CSzJO8Mibf/doGJjy3Uk6SOBU4Qvn5+zS9429FJaRPQJUDVyldg+wmnLiKUJHPh7ydk1dWAd/OAqqOmSyrSCnZMTn89D4takzKUSkTIxwV3MstfwhxAsD8gp95XJoyXrCie9GL61XeGFJPWkV/l7iyrGSrVZZ3tK60MpXwppRMZI6AZFLwtuP4FZhZQphn3Tcl66PIpf2QXybmbCSwgIWcPy1fnvHYGAFXj42+PDibc18yByFl3QRsxClbJ5JvEsX4y2cL8Ynyk+YH+bOO0+C9XSew9uLIPOULQ1A2Uyt1s2w/mQ0SS1gqpTBO98FPAZwKfmgsi1xyEXKappmAz79oSuOaOiYkzpjod/XcsK+7OU+xTcB/d/oAk2v722W94Z9e1n8Pfo6kAi6wXvrS/3Y2aD4uBHT1Jsi5NPWNfHvK4Gy2p/NvBD9K/bV9jerdmue2S6l3PM92a42ygAeZtD6YP1r2anp8Hlq/AQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBQFFRUVxv3sJhWJRNBgT99e+g0ZPkJOfL+13p9PR0P73Q88wzNnyP7QCMUZy4YVBWxJfKP4jmmyxs72oWjxo1rl63am0G0rVmq2mxLGxwnNGulBWMU6QEODGC5KXC0ky9RvM1htHpdodtd2j2qcHz20p5iWJMTBOVJ7pSzn0vwJ2r25dKGged0MAu7gSGj3AngZ05UEcdotkx7pgqr883lFeH8auTJFGHouCTiSDyPPgEQ596pj7oPJu4M3ftwEjSGL35NPFL5e1slmVPWf0pjG2KpWmaonmK6JjYtX9VXkv3w8hUAiu8rbtGEAYuNDz3YhSgVJQ4oVkGnh3GbuL435hmKIYuTNdQDmuQ4YJfFeq3gyu6H1r6ADLGRg07BnM3NkMWilEAUXkxU14qv35WwdtZPTYCbIWxjz+t/xskFJyQF0bIrOF7ZHd0P7f4RbpenxHsKAH0Uuye0Lhok8iACJenMbLcfORi0nwmLl/LX87xvcMQ/C8leabe4ySwqS8yI7o2wsn/U6/3tbpZWRpeil5blwyeTFEculv5wp3kbh6zwGnScbR4uUJ4r3wD9Sj12/pzoz766u0Q4DjNEpgRs4K2FYLxBmssNrdwYtTrqT1hgh43dph0j1J301jlYp83dH0MjopfdTQbL4Xj0hq7DXNwXtClXnecN3x+OTWO/HoA0mUrsLut+HyOrD7L5xdtQqdMc6oM4hbHD3asQTmDY3thaht3oPXhgePp3TjzGpvQ2ZcGvfk08BZjcODi9VbGIYNffsf0PoYiriE6X4Ms/q8bNC8aifFYdItJYZHPM0GvqqJ0q2K3C1DXBpkiAFsRRhcwFuzD0Tm4PT6jBaAtZCCCszoDmWhvxKWmDaXMXC697VKRZUGdcVkfbMQS2RClfClu1wPaWG2jDSvT27kgmOtZuKsPIrN/yPoOHKu6mo115azupXysS/TqKrNzsr6oe5WZ6It6abUXeHUmZWJ29ShKmTPermbRZsFn8CJpKuB6gFlIXUft6/6SgfWZA/fSSAWHq1xw1O5yqeaSDqYlwR4vSWx6V95G0Dejne8574z3iXHd7C3Pu56Xbi/SXu1Kve782Jsru7qoSQMw2yx2q+XBWMmnEuyPwe7u0W24xjrM7G07E7XNYBhuFecEx0CTBEEDJF00UJXeAIQ9AagccPNLdy80w64pZ9SAxaUq7/Wa67N7XGOjR3sG024zm9GqOT02RSmobofpbu+ozlqeVIdz87TgE/6ywafqqWm4DMwjS1tL/WSYW31tXtpNxXwN+1XTHlDehZdjtTUA8eXseKo9S1bNCT7vXMtaCesJ57UsT63PIsuzojOu6qF2iOmmgOostTmfhkkJ2KoAQG+/2AuaKrSLpJpKpm1UwQCylKTgsmeTIbs8DvonD27qIMyHq8n+8FYYU8wkgco0ibSVVGqLwCyK0J8vJHkPFoJtx4ItyYIGRaBtlGG2Ifla9Iny5zzK1zzakgCk+hY0+X6pvqD5ZJLMOQ6cA2ERyLyjHvOV2fTp1hFJo/k44jIVj61guwoPqu/GizidL4bD8Sjf6WnvsCezyqLnw1N9W5JOhwi446HuHMRQNKbRZpNE1QDGMFEiX1Xyy2SL921359ODaoMRprQIW+zC32WLniFth7E9Z4b9WTCtt/gSTq1z36/u29mqqs+bUcvsBpZ4PlPbeEmHIJT5WeNo5ix7cBbZqJlZA3DYGew493jhzEvDrQ6zmTZczf1qo9Q4jUY+fdEpbhxNsnkv4yRNq9ZNQe/rOIrdTdq283gSmOzGSJqnLb1supF34Nn0oHNRfWn7pFjTkxm11GlJ49Zw69utCA6oGXUCUssaKb3z7mJcIn8CbwP083R4CG/zg3o/WT6MnjvpmJNuRTC5L4sLSBHLMrkVjOTvBKaQuGbNuqp2ooIF4QQFSeW1OFWQl05KKI5rdsiVcVtLTabdZLsS3W3XWbbRkGiOZmQa0C2ep1lRurOcG4pPELthYLmFr4LH3W6pvwOEfgejwERx7RSm0EG48heLRb7KSjAj128YYKSHhCfScotj5QbTrTfarEgLNFsHcotuy802XZeZVqU8DpNJMImBlaD4A0dkmA8ccYagG7moIJLFbYrJdYoTkpKjcUoTj3k6GU8BSgnVjAu212G5doPCrh95qABM+aGZeugpcqJrgih8+2VrBsRX6UzS/1Hm3etN/22In/fu2SA6plso4CIeAZGKoj8Ib6vTuAfzfdDc+6Dv5kFqusWFTlKbxC68Ifm49btjilZ5tAuJ6g75oflZ8MEq9TmghyPz5MJHzz+eA4RNEr7xei/J0Xg6PqWnU3otQqvgUjExTzEU3aLmCKaEEJ318IAC6mGC+hEXfaD+5Pkh/4gvTZxgnpDv2SctU74uf/AQmSNcPEQU0vL5T185H1ySvCUoT76SdT3yXikQ//VJAzuw0CPiKfnJwtj8Xa4vbL3zQ+IsBpgb2MWqYJ7nb5oChsSsS4ZYGL83/pWBr5x/FD6S/MCSkG7apQn6fqdcTKeXigFhmAaJIlaugvcT84ozOUeo81vpDzNX7vdG5nP8LZlfq6M5mV2+UXnouv9bueZe2wUicgq7VywvlZy8S4nzwH43od8Afjmk22T6/WVIf4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0513201403082800138</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0513201403082800138</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0513171403082797352</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0513201403082800138</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130911_020045</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B0FBB7BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AE5ED91C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E61862CE0C842255E0401F0A079902DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_UserGet_FUNC_NONCLG_FAU_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="dc9356f8-07bb-465d-99eb-ce6a41c3f1e6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="73d8911e-da19-4df7-bb0c-5c07034965cb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dc9b951d-8c98-421c-8558-4875400a73ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG" id="bcd14a2b-7bd0-453e-81ab-bb1140d1339a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG" id="ce1e736e-b838-41d1-8ff7-0d7c50117737"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="b1be01bd-eb48-47aa-bb39-92476df1a7ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="aed02876-e19c-46c7-a20e-3a4776bac667"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="c681b710-c74b-441a-b09e-e0542ffb9f8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="3679e886-d7b8-4c65-ada0-7f4de4067b3d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B3DFCB9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999AE5F2E1C68E0401F0A07991D55:761EB36C"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0513291403082809466</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BB88E03A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BB88E03A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BB88E03A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B3DFCB9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2B19A496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BA10D48CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B3DFCB9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B19A496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BA10D48CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0TpIwq5cE1UkAKUmcxpCy2czjl9GRlnB0yDQ2Mb0n792KFJgdJOOxIS8s722mtfvOwLhlax4/mMQcpJQrVg0NH/gcipuxiaRtNpIaOOo7aBGrO20a7P2i7YEFmWq2sBYwICyjiivKM7ll03rKZht6eW69k1z2lU683Wg67dQ8oktHSpWrqWrWLKvDxsRxcp9RLECPMoWgHzOPYm/vWVJz09VHDSuxc7lnnAtLvgfO2ZJq6GgCGOcRUnK/PCPPC5CJk3IXOKuEjhNWbIOvrr3u12W93Wqkk6Nx3LskzLNaVPyMj8XO+eFZshDGiU7NZ9RBNKMIrJC1KkroEvklDz43mSEr5YfQBtm7aloA3IsIHtOj3XzbcAObsvIh2QTBky2ALZBdgdRJACxaD9vAs6+vnXOrjbO00RZVGSrtjR+nuUgG4gTtYQGqzIrGD3dcQT5epeAPYCimPByAZu1JisEQamjVOISHZFmBy+kGl5+7WMyR8ppgzwd9pyYe5zldTNE9UZkDkw/n96tt+vHco9igV0R/5taxpHogJk87t1s37gT2JxMycvc6uTU9h33pEq2/26Ph7WcrZeN/nh7XA25sO/KkJg9lBvjReVZqMVOLRm0+XL48OIN6+ibPlA6fhxNcqisYWv2PXNnRhV7pfLJBRROP25EXe9mnUW9UNre7l9ePzRmwe/gx/TPxtOZeqnYuBXWG82aouxa8Zbf/Lctt2Jn/0x8W+j4d+VVvPxZhk/mvWaPURzN10H0Du7vr4iLvo1MSuXeOFCPLFvO2857edwaCwkYSJmS8C8WKrxCAbaUPYL8c/lRVlIaES5q7dWGsU4UK531S4lLZ6QAkRCTzZztx72bdd1e7XBsN9z5eLSqlv20PKtluvag4ZbaNCOxRHFfkIjomIpld3Nz+cE8cpjQENIjU0i8AKY/gniAHGkBfROHo6EMpgmUsXtJa0lmctb8OQ829lLq2ZbIpmFrVTXbhI+oqPUjzikB9ptOwfafQeYrAkogVcTzuSIMy6L8YQ2gsd2dYOqFIS8AlKlwp5TbzdMRlbrGBRVcyVHJ4bqerHOS2Oy3b9jIMxyK2F4naQcxXZ+AD/M7/hbUQrpExLlwFRKPZDthBN3kV3k83Hejf28C3hfhESdM1lXnhK8Y3L46W1c1JyUs1ImhpldcC+3fBPiBID5CT/zuDRlvHBD9qIX96u8MqSgdIv+PqHqU1VsNiLvaEuJZSrhTamZtjkBLKTiPU+TR6BmCWF+6cIpWR9FLu2H/ARf0AlHHFZy/rR8+YXXxgSYem0E8uRkX33KHISUdeOQ8VO2fiwfJYrxp+8W7GHlJ81j+bdN0vCtXSew9uLIPOUTgxM6Vyt1tTx/MBs4kbBEamGS7oOfAjgV/NBYFrnkwuU0zQSHj79oSuQ6OsI4EZQHAz037AtvzpM/r8F7c3oHk4v7622dsQ9v61/XVxMpgSukl77kv50Nko8LBl09CnIuHT2Tj08ZnM73hP6V4Amt77Xbl1bNt91S6xuu6zTr/bKAB5l035nfW/Zqenweuv8C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0TpIwq5cE1UkAKUmcxpCy2czjl9GRlnB0yDQ2Mb0n792KFJgdJOOxIS8s722mtfvOwLhlax4/mMQcpJQrVg0NH/gcipuxiaRtNpIaOOo7aBGrO20a7P2i7YEFmWq2sBYwICyjiivKM7ll03rKZht6eW69k1z2lU683Wg67dQ8oktHSpWrqWrWLKvDxsRxcp9RLECPMoWgHzOPYm/vWVJz09VHDSuxc7lnnAtLvgfO2ZJq6GgCGOcRUnK/PCPPC5CJk3IXOKuEjhNWbIOvrr3u12W93Wqkk6Nx3LskzLNaVPyMj8XO+eFZshDGiU7NZ9RBNKMIrJC1KkroEvklDz43mSEr5YfQBtm7aloA3IsIHtOj3XzbcAObsvIh2QTBky2ALZBdgdRJACxaD9vAs6+vnXOrjbO00RZVGSrtjR+nuUgG4gTtYQGqzIrGD3dcQT5epeAPYCimPByAZu1JisEQamjVOISHZFmBy+kGl5+7WMyR8ppgzwd9pyYe5zldTNE9UZkDkw/n96tt+vHco9igV0R/5taxpHogJk87t1s37gT2JxMycvc6uTU9h33pEq2/26Ph7WcrZeN/nh7XA25sO/KkJg9lBvjReVZqMVOLRm0+XL48OIN6+ibPlA6fhxNcqisYWv2PXNnRhV7pfLJBRROP25EXe9mnUW9UNre7l9ePzRmwe/gx/TPxtOZeqnYuBXWG82aouxa8Zbf/Lctt2Jn/0x8W+j4d+VVvPxZhk/mvWaPURzN10H0Du7vr4iLvo1MSuXeOFCPLFvO2857edwaCwkYSJmS8C8WKrxCAbaUPYL8c/lRVlIaES5q7dWGsU4UK531S4lLZ6QAkRCTzZztx72bdd1e7XBsN9z5eLSqlv20PKtluvag4ZbaNCOxRHFfkIjomIpld3Nz+cE8cpjQENIjU0i8AKY/gniAHGkBfROHo6EMpgmUsXtJa0lmctb8OQ829lLq2ZbIpmFrVTXbhI+oqPUjzikB9ptOwfafQeYrAkogVcTzuSIMy6L8YQ2gsd2dYOqFIS8AlKlwp5TbzdMRlbrGBRVcyVHJ4bqerHOS2Oy3b9jIMxyK2F4naQcxXZ+AD/M7/hbUQrpExLlwFRKPZDthBN3kV3k83Hejf28C3hfhESdM1lXnhK8Y3L46W1c1JyUs1ImhpldcC+3fBPiBID5CT/zuDRlvHBD9qIX96u8MqSgdIv+PqHqU1VsNiLvaEuJZSrhTamZtjkBLKTiPU+TR6BmCWF+6cIpWR9FLu2H/ARf0AlHHFZy/rR8+YXXxgSYem0E8uRkX33KHISUdeOQ8VO2fiwfJYrxp+8W7GHlJ81j+bdN0vCtXSew9uLIPOUTgxM6Vyt1tTx/MBs4kbBEamGS7oOfAjgV/NBYFrnkwuU0zQSHj79oSuQ6OsI4EZQHAz037AtvzpM/r8F7c3oHk4v7622dsQ9v61/XVxMpgSukl77kv50Nko8LBl09CnIuHT2Tj08ZnM73hP6V4Amt77Xbl1bNt91S6xuu6zTr/bKAB5l035nfW/Zqenweuv8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tqo1N6AZR2hBkuOlZREZQPz8uZkAQabRNIUi7++i8ptgKiR88MM0x2d9Ze+5KVnAuQxF7QFAJzSRg1wk7d/NcDZ7WxX3UsFyFgVSoIWzW/emq5cAxO/ep4XBlXTSMUIsUhFRJQWTc9x61YjvKpPTp+4JYDr1Zyqu4/pjHEXCho5VJyTGOVxFQEWdi6mXIaMCCICChIsAgkDAbN226gPAOQczIb5xuWWUDeiKScBbYNSwhDHMewBFlin9s7PudIBAMypUCmHL/HRKJuvu9dLpelZbnE+NT2HMexHd9WPkiQ6bHZOMo3YxTSCdus24AySiCIyRvQpG6xjBgymvGUcSKj5Ato13YdDW3hFbSgW6HHpv0RIGP3Q6QdklwAS0TAzcH6eII5phAbT/2wbh7/rIObvY8cUDFhPBF7699RwnSBYzbDyBJ5Zjm7nyMeKFfjHMMgpDBOBVngOz0mMwCxMHocT8iqS4QaPiSMrP3GSqgfyacMw9+05dze5qqo2weq0yFTLOT/6dl2vzYoQxCnuFG7BXLuzFdoPVyDmI/GSb8D4q43RKyeUdh23pAq2v2+3h/WYrbeN4lurycWj/23l7OTP+4gnYPLxE7H+OUt7PRrtec5g/2Iz6/Xw9Pne1KZ2H9G/RG/eBm2y+HJBDXv40HfLt+1bpqn6VE77ZYrD3MOntDCu4paSy9el+/lw2h5N+olkbiZ9WeejNti+Fa9cto9AVmvdXWNzuZh7al/c3N/MYajh8jryKlz9Hw9WbpoPhqNlydx6ne89bT+kdN2DrvGXBIG6fgFQ5kv9XiEHeNS9QvI7+VFWwiyJplrMNMaJSSm0mzoXVpaglQJEEGBauZmfdl2fd9veS3Xb1b80+aFU3HcS6fpVH3fO63Ucg3asNij2GZ0QnQsrbKb+fmeIEwCgSnC3FqwFEZYmN8gdoAERkj76nAwKvAjUyruRj5HK37mzZP41S2veQQm41eK/FfTuGPynt7z5kRivqPdrrej3X0MyYxgLfB6woUacSFVMeZgkcrYLS1AieJUXQFcq3DgVWpVW5BkFmNN1U4YSmNcmkWzrDS22Px7FoAisxIBZ4xLELvZAfwyv/1veSmUDyLaQeiUWli1Ex+4i9w8n6/zrm7nncM3U0T0OVN1lZzADZPdTx/jouekmJUiMSjcnHux5ZcQBwDsb/jZ+6Up4qEF2Yqe36/qylCC0sj7OweleSldLNKso2daLLmCt5VmuvYAw1Qp3vqRvWJqFxD2jy6cgvVe5MK+yy+VER1IIHGi5s/Ilj94bQyw0K+NUJ2c1U+fMjshVd0kXslDtnasHiWa8bfvFhhA7afMPfW3ZBx9tOsA1lYclad6YkhCp3qlr5b1F7MBmYIlSgsZ3wY/BHAo+K6xKHLBRappGqcSf/3F0CJXNwGELKUy7JiZYVt4M55yPcPBh9MnmEzc32/rlfjyth7ddgdKAhNgFr7kv50tko0LxKZ+FGRc6uZKPT5VcDrdEvp3gge0vlWrXTjlpuvvaX27KOBOJo1P5s+WrZrun4fGXw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbZbts6EH3vVwjqYyFr8SohNuC1162zNHbSJC8XNDWSmUikIlKKna8vKUeK7Ti56QUMGBwNz5xZeMgTjuLI8fqcQyoIo9p01NX/bQQOONixjQ50sNFYLl0D+U3HgLoFCBq41W5bujblPIMp5QJR0dUdy24YVsuwOwvL9ey6V7drrtu+07VrSLmEli41uWsdR5R7RdiunqXUY4gT7lEUA/cE9ub905knPT1UctJ7J1uWRcC0txIi8UwT13zAEEW4hllsnph7Pic+9+YkpEhkKbzE9HlXf9n79PRUe6rXWBqajmVZpuWa0sfnJPyq976Um8Gf0oBt10NEGSUYReQZKVKnIFbM1/pRyFIiVvE70LZpWwragDU2sN2gX3XzNUDB7pNIeyRTjgy+QnYJdgkBpEAxaFeX067+9XMd3O5dpIjygKUxP1j/HSWgOUQsAd/gZWYlu88jHilX7wSwN6U4yjjJ4UyNSYIwcO0ihYCsZ4TL4fO5VrRfW3P5I+WUAf6btpyYu1wldfNIdUYkBC7+T892+7VFuUZRBj3T3ly3fiwer/Kf9XT0vLE7GbWSq+fLJ9YtKOw6b0lV7X5ZHw5rNVsvm+js+pe5wg22ubyfzB8v2vWHaCw46jfpBcmjxTzK6521yf8Znc/S2TffTAbhKriN4+BmGYX+ada5YHfOcnwfrb9/+e0Gzt1qcHbrr9JJG9ltOP9OWvVNB/9e2vXxGH0f9vvoDE9bQTSZPizq4U18m4/tZPUgRmH46+GH//zzfjC6Zt+ev0yGE/th3Znwm+zMH80er7Jx9zWn3Rz2jaUkzLPlPWBRLtV4TEfaRPYLiY/lRVmIbwSFq5cojeICqNB7apeSFi+TAkR8TzZzu54Mbdd1B33bGjU6w3F7bDUse2L1rbbr2qPWoNSgLYsDikNGA6JiKZXdzs/HBHHscaA+pEbOMrwCrn+AOEICaVN6KQ8HoxwWTKo4ITTMmv7mngRLhNutZg6rkLTvde2MiXN6nvYDAemectvOnnJfAiYJASXvar65HHAuZCkeUZ6JyK7lqEYhkxdAqjTYcxqdpslJnESgiJox87MIaskqKQpj8u2/YyDMCyvhOGGpQJFdHL93szv8VhZC+vhEOXCV0gBkM+HITeSU+bzJu3n0xirh+5lP1CmTVRUpwVsm+59eh0VNSTUpVWKY2yX3astfQhwBMD/gZx6Wporn52Qnenm7ygtDykmv7O8jqj3WsjzPio62lVSmEt6Uimmbc8CZ1LvNgj0ANSsI81PXTcX6IHJl3+eXiRWdCyQglvOnFctPvDXmwNVbYyrPzfqzD5m9kLJuAtbimG0YySeJYvzhqwV7WPlJ84X8e2Kp/9quI1g7cWSe8oEh5KlVK3WxbN6ZDcwkLJFKyNJd8GMAx4LvG6siV1yEnKZlJuD9L5qSuK6OMGYZFdORXhh2ZbfgKTYJeK9Ob2AKaX+5q9f83bv65nQ2lwIYI73yJf/tbJBiXDDo6klQcOnqa/n0lMFpuCPzLwSPKP2g0xlb9b7tVkrfdF2n1RhWBdzLpPfG/NayU9PD89D7Aw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0513291403082809466</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0513291403082809466</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0513241403082804523</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0513271403082807042</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0513291403082809466</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B3DFCC9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2B19B496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BA10D58CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_UserGet_FUNC_ADULT_SAU_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="916df3e0-4be0-4386-b9a1-c5aa9f249e95"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1d022432-f766-489d-9ed4-6ad5599a6c87"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="96e2568e-8426-4daf-8a07-a9d4aa8cf379"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_SAU" id="9d347a8c-09f4-486b-9679-a923545ccded"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_SAU" id="8bede22e-1d1b-4349-a2e4-ba14e4c702b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="cb905b69-deeb-4d99-829c-ca45804c31e8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="8d36e96a-02cb-4f04-baca-8e7964aebcde"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="c98f8046-d278-4ca3-93c1-98afc7bcfe5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="64049b45-48bc-4bc3-b0f4-9e975f0905c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B0FBF0BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999BA11058CE7E0401F0A07991D6B:6B4D7123"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0513391403082819756</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B223D8DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B223D8DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B223D8DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B0FBF0BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BB89043A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BC6836DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FBF0BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BB89043A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BC6836DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlfBSbgEooIEZGjpfYB2mXlZGedA3CZOGjsQ5tevHZoUGNrtrISEfHL8ne9c/NlnHEeh7fY5h1TQmGljr6v/YxLitBu2ZdjYsYyG2bCNxcIhBrEwLKz2sm2bLV0bc57BmHGBmejqtmk1DLNlWO2Z2XGtultv1pqO81PXHiHlElq61Exdy6OQcbcI29WzlLkx5pS7DEfAXUHcaf/m2pWeLi456b2zHcsiYNoLhEhchEjNBwJhSGokjtAZOvA587k7pSuGRZbCa0yfd/XXvZvNprap1+J0hWzTNJHZQdLH53T1Ve99KTeDP2bLeLceYhYzSnBIf2FF6gZEEPtaP1zFKRVB9A60hSxTQRuQq/I12FcdvQUo2H0S6YBkyrHBA2yVYBNYQgqMgPYwGXf1r5/r4G7vLMWML+M04kfrP6MEbA1hnIBv8DKzkt3nEU+Uq3cGxB0zEmacruFWjUmCCXDtPoUlza8pl8Pnc61ov5Zz+aPllAH5k7acoX2ukjo6UR2ProCL/9Oz/X7tUB5xmEFveCEsfy7mzw/J1SxqrG+nrTs+Fv5sTboFhX3nHamq3a/r42GtZut100P9/tIZBbfL83YE8/p91o9RHfUn/fkwun68/JlAdBHSfDUKOldWvV2PFmywuRw3t8GseZEkfe9x6TjzTev5GS6+vKydxnlbXLYXrb9Hm6s7EW+eH5b3o/ltFi1+fT9vN82ri9tgIbzvTxms/qoPv0U/Z/eOl08mQfyyRbidt847P75dJt6XgFsDlKEUN8SvS/9q+6PZ6L7ltJ/DobGUhGm2eAIiyqUaj7GnjWS/sPhYXpSF+saycHUTpVFcABN6T+1S0uJmUoCo78pm7tajodXpdAbmaDAyB/2W881smNbI7JtOp2N5Ta/UoB2LI4rDmC2piqVUdjc/HxMkkcuB+ZAa6zgjAXD9A0QPC6yN2UQejphxmMVSxbf2k/2UBdgMzKaFI3MR5K1tsGW5rt3G4o7dpf2lgPRAui37QLonQGhCQem7GnAuJ5wLWYsXvM5EaNXWuMYgkzdAqkTYtRvtJuI0SkJQTFEU+1kItSRIisogvvu3DUx4YaWcJHEqcGgV5+/d9I6/lZWQPj5VDlylNADZTThxFdllPu/n3dzPu4TvZz5Vx0yWVaSU7JgcfnqbFjUm1ahUiRFuldyrLX8IcQIAfcAPHZemiuev6V708nqVN4bUk17Z3xdce6ll63VWdNRRWplKeCQl00JTIJkUvO0sfgaGKgj0qfumYn0UubIf8stEwKYCC4jk/GnF8hOPjSlw9dgYy4OTf/YlcxBS1k1ALk7ZhqF8kyjGHz5biEuUnzTfy79NnPpv7TqBtRdH5ilfGIKylVqpm2X7zmyQWMJSKYVxug9+CuBU8ENjVeSKi5DTtMgEvP9FUxrX1TEhccbE2NMLw77uFjzFNgH3zek3mELbXy/rnL97Wc9vrqdSASOsV770v50NWowLAV29CQouXT2Xb08ZnK32dP6V4Ampt+261/YG9Xol9c1Ox2413mb5IJPeb+bfLXs1PT4PvX8B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlfBSbgEooIEZGjpfYB2mXlZGedA3CZOGjsQ5tevHZoUGNrtrISEfHL8ne9c/NlnHEeh7fY5h1TQmGljr6v/YxLitBu2ZdjYsYyG2bCNxcIhBrEwLKz2sm2bLV0bc57BmHGBmejqtmk1DLNlWO2Z2XGtultv1pqO81PXHiHlElq61Exdy6OQcbcI29WzlLkx5pS7DEfAXUHcaf/m2pWeLi456b2zHcsiYNoLhEhchEjNBwJhSGokjtAZOvA587k7pSuGRZbCa0yfd/XXvZvNprap1+J0hWzTNJHZQdLH53T1Ve99KTeDP2bLeLceYhYzSnBIf2FF6gZEEPtaP1zFKRVB9A60hSxTQRuQq/I12FcdvQUo2H0S6YBkyrHBA2yVYBNYQgqMgPYwGXf1r5/r4G7vLMWML+M04kfrP6MEbA1hnIBv8DKzkt3nEU+Uq3cGxB0zEmacruFWjUmCCXDtPoUlza8pl8Pnc61ov5Zz+aPllAH5k7acoX2ukjo6UR2ProCL/9Oz/X7tUB5xmEFveCEsfy7mzw/J1SxqrG+nrTs+Fv5sTboFhX3nHamq3a/r42GtZut100P9/tIZBbfL83YE8/p91o9RHfUn/fkwun68/JlAdBHSfDUKOldWvV2PFmywuRw3t8GseZEkfe9x6TjzTev5GS6+vKydxnlbXLYXrb9Hm6s7EW+eH5b3o/ltFi1+fT9vN82ri9tgIbzvTxms/qoPv0U/Z/eOl08mQfyyRbidt847P75dJt6XgFsDlKEUN8SvS/9q+6PZ6L7ltJ/DobGUhGm2eAIiyqUaj7GnjWS/sPhYXpSF+saycHUTpVFcABN6T+1S0uJmUoCo78pm7tajodXpdAbmaDAyB/2W881smNbI7JtOp2N5Ta/UoB2LI4rDmC2piqVUdjc/HxMkkcuB+ZAa6zgjAXD9A0QPC6yN2UQejphxmMVSxbf2k/2UBdgMzKaFI3MR5K1tsGW5rt3G4o7dpf2lgPRAui37QLonQGhCQem7GnAuJ5wLWYsXvM5EaNXWuMYgkzdAqkTYtRvtJuI0SkJQTFEU+1kItSRIisogvvu3DUx4YaWcJHEqcGgV5+/d9I6/lZWQPj5VDlylNADZTThxFdllPu/n3dzPu4TvZz5Vx0yWVaSU7JgcfnqbFjUm1ahUiRFuldyrLX8IcQIAfcAPHZemiuev6V708nqVN4bUk17Z3xdce6ll63VWdNRRWplKeCQl00JTIJkUvO0sfgaGKgj0qfumYn0UubIf8stEwKYCC4jk/GnF8hOPjSlw9dgYy4OTf/YlcxBS1k1ALk7ZhqF8kyjGHz5biEuUnzTfy79NnPpv7TqBtRdH5ilfGIKylVqpm2X7zmyQWMJSKYVxug9+CuBU8ENjVeSKi5DTtMgEvP9FUxrX1TEhccbE2NMLw77uFjzFNgH3zek3mELbXy/rnL97Wc9vrqdSASOsV770v50NWowLAV29CQouXT2Xb08ZnK32dP6V4Ampt+261/YG9Xol9c1Ox2413mb5IJPeb+bfLXs1PT4PvX8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3TqI1N641I6wAyCfqcq6gEU9eVMTHchWlJs0nL59ScptgKiB88MM0x2d9Ze+5KVNBmahZbbYQxiTiKqeL2W+g+A3Qgcx9Ecx3e0ivniaAhZLxpGZlBBFajVraqqeIwl4FHGEeUt1TLMimbUNNMZGQ3XtF27Xm40Gs+q8gAxE9DCpWyoynIWUuZmYVtqElM3Qowwl6IZMJdjd9jpX7vC00U5J7Xd3LDMAsbtKedzV9dx2QcMYYjLOJrpTX3Hp+kzd0gmFPEkho+YPmupH3sXi0V5YZejeKJbhmHoRkMXPj4jk1O1fZJvBt+jQbRZdxGNKMEoJGskSfWBTyNf6YSTKCZ8OvsG2tRNQ0JrsMQaNiv0VNU/A2TsjkTaIRkzpLEpMnOwAQQQA8Wg3A+8lnp6XAc3e0cxoiyI4hnbW/+OEtAUwmgOvsbyzHJ2xyMeKFe7Cdj1KA4TRlK4kWMyRxiYchdDQJbXhInh85mStV9ZMvEj+ZQB/k1bmvo2V0FdP1CdHpkA4/+nZ9v92qA8oDCB9stDWjcux8tqoPvJ6PV9bJK7pG4+l5y3VkZh23lDqmj3x3p/WIvZ+tg0rd70z0s121lzPBi/TB6f1lfhRXjnXA7fkv56sHqgVsmb4OCBlOzzfm3YHT97I/3V7uJR97pHht51sPKsp7V32zvRuybyU4ONV9XlY7h4fX67Qz4e9ELbrLxP/L8XNGWXN2tkdeppzXl+gtI9GZyxR/w6uKyW0i7Cb4/3EP5ZDm7+OoFgNb7rrHu++ce6CkZXo2jR+sxpO4ddYy4Jw+TlFTDPl3I8vJ5yIfqF+M/yIi3E14LM1Z1LjWIcKFfbcpeUFjcRAkR8VzRzs77omkLRzs6chlGxO2bj3KgY5oXRMaqNhlWrdHMN2rDYo9iNaEBkLKmym/n5mSCeuQyoD7GWRgmeAlN/QOwhjhSPDsThiCiDUSRU3FxE84VhBxWLhJUatqlTpYSn07qq3ET8lt7GnYBDvCPdprUj3QPAZE5A6rsccCYmnHFRi3eUJjw0yykqU0jEDRBLEXatilPVGZnNQ5BM9VnkJyGU59N5Vhmdbf4tDWGWWQnD8yjmKDSz8/dtevvf8koIH59IByZTOgPRTThwFVl5Pt/nXd3OO4fvJD6Rx0yUlccEb5jsfvqcFjkmxagUiWFm5tyLLb+EOACg/8BP3y9NEc9PyVb0/HoVN4bQk3be33dUfi8naZpkHa1LrYwFvC4k09SHgBMheKtR9AZULyD0o+6bgvVe5MK+yy/hUzrkiMNMzJ+SLY94bAyByceGJw7O8tiXzE5IUTcOS37I1g3Fm0Qy/vHZgl0s/YT5Tvwtotj/bNcBrK04Ik/xwuCETuRK3iyrb2YDRwKWCCmM4m3wQwCHgu8aiyIXXLiYppeEw/dfFKlxLRVhHCWUez01M2zrbsaTr+bgfjp9gcm0/eOyXrJvL+vH/vVQKOAMqYUv+W9njWTjgkGVb4KMS0tdirenCE4nWzr/QfCA1FuW3XN6Z7a9J/W1ooA7mbS/mL9atmq6fx7a/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4j4zxFxDsCcxQXBo3IQ2Bprd9uSPkBdTakmPJ4PDrK5nYAUJykzvDDKP16uzZDx3pnKMkdvwB55AJwqgWBj393wgAOV7bM7zOHBstZ4ENz3M7hmWhNkbQwZbt6FrIeQ4h5QJR0dMdy24ZVsewuzPL823Xb9nNrmf/0rU7yLiEli5NS9eKJKbcL8P29DyjPkOccJ+iBLgvsD8djK986emjipPeP9+xLANm/ZUQqW+auBkBhjjGTcwS89w88DmPuD8lS4pEnsFjzIj39Me9m82muXGbLFuajmVZpuWZ0ifiZPlR73+oNkMU0gXbrYeIMkowiskWKVJjECsWaYN4yTIiVskL0LZpWwragAIb2G7Rj7r5FKBk90akA5IZRwZfIbsCu4UFZEAxaN9vw57+8W0d3O2dZYjyBcsSfrR+HyWga4hZCpHBq8wqdm9HPFGu/jlgP6Q4zjlZw7UakxRh4NpNBgtSXBEuhy/iWtl+reDyR6opA/yetpyb+1wldfNEdQKyBC7+T8/2+7VDuUNxDv1wsLDsyWiD4FfSmnYvLvGsfZ9dX6Dun15JYd95R6pu9+P6eFjr2XrctGqHo3TzZTbAjUbWsH9YE9px7cuxtw1j3PAmJgvCwPk+uWqMf24bsRtu7wI5PT/dTLC4oCS9XUW/h8Fs0iLWh8nwbDkfsQ4Z/j6zvYvNFiXXF2L8I3Y3k8/3Yz4MOFsGndHX2Zf2Nty6lrlBYmZeNi6+kDkm26vJfHkz/OnBWXH5oQtfp7BeOkHD+Xq1erhZdf70nnLaz+HQWEnCNJ//BiyqpRqPMNBGsl9IvC4vykIiY1G6+qnSKC6ACr2vdilp8XMpQCTyZTN369HQ9jzv07DTdTtB4I4+Wy3LHlkDq+15TqdtVRq0Y3FEccjogqhYSmV38/M6QZz4HGgEmbFmOV4B119BDJBAWkhv5eFglMOMSRVPt4QUhbXqekXLJplI5q1YkO1DS9eumfhGv2WDhYDsQLpt50C6bwGTlIDSdzXgXE44F7IW92idi9hurlGTQi5vgEyJsO+0um2TkySNQTE1ExblMTTTVVpWxuS7f8dAmJdWwnHKMoFiuzx/L6Z3/K2qhPSJiHLgKqVPILsJJ64it8rnWd7tk1dWBT/II6KOmSyryAjeMTn89DQtakzqUakTw9yuuNdb3glxAsB8hZ95XJo6XrQme9Gr61XeGFJP+lV/71Hzvpmv13nZ0TOllZmEN6Vk2uYUcC4F72HG/gA1awjzTfdNzfoocm0/5JeLFZ0KJCCR86eVyzc8NqbA1WMjlAeneOtL5iCkrJuAQpyyDWP5JlGMX322YB8rP2m+kX8blkVP7TqBtRdH5ilfGILQpVqpm+XhhdnATMISKYUs2wc/BXAq+KGxLnLNRchpmucCXv6iKY3r6QhjllMRBnpp2Nfdkqd4SMF/cnoGU2r742Vd8Bcv63/GV1OpgAnSa1/y384GKccFg67eBCWXnl7It6cMTpd7Ov9I8ITUO44bdINPrnso9a1OXcCDTPrPzM8tezU9Pg/9vw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0513391403082819756</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0513391403082819756</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0513341403082814220</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0513371403082817132</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0513391403082819756</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B0FBF1BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BB89053A19E0401F0A0599264C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BC6837DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_UserGet_FUNC_ADULT_BAU_Get_CHILD_Blocked:clg_200_OK_P2" searchProperties="true" id="66dbb909-a2fd-4e5f-964c-e03eec4d0d47"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="17a11109-478b-4d5c-8a9d-b3a48c95b526"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c65a0742-40da-4265-a113-24fe55d16c77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_BAU" id="aa6f9bac-4c8f-45e4-b214-6469b5df387c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_BAU" id="a88b62d1-a413-4e79-96e1-08617d40f9fd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="13d72481-23a5-42f1-a292-a42573a57447"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="18cee723-ae12-46f9-8093-e9e997c643f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="0f769580-b714-4e2c-81d2-42605ecdee9c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="24ada911-ba06-4419-94b9-1247f67f9e34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B286007D05E0401F0A0599263A</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999BC6882DD3FE0401F0A05992650:89481989"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0513481403082828140</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B3B0DF494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B3B0DF494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B3B0DF494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B286007D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B3E0099FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B36E072D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B286007D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B3E0099FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B36E072D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Q5j1XIhUBJVJC4tNP0foB2Dudl5NobMCR2iB1K+/Vjh4YCh3bakZCQd7bXXvviZZ8KlMRe2BYCMkk5M6Je0/zHr0PDCapgOU6DWH6jgawgOKlZTwT5qB744FQd04iEyCFiQiImm6bnuL7l1C23MXSC0K2Gvl/xfe+3aTxCJhS0cqmoXaskZiIswjbNPGMhR4KKkKEERChxOGjfXIfKM0QlJ7N1umZZBMxaUynT0LZxhQCGOMYVzBP71N7xOSUiHNAJQzLP4C0mEU3zbe/z83PluVrh2cT2HMexncBWPkTQyQ+zdVRuBhKxMV+vu4hxRjGK6SvSpG5ATjkx2vGEZ1ROkw+gXdt1NLQFK2xh12c/TPs9QMHui0g7JDOBLDFFbgnWhzFkwDAYD/2oaf74WgfXe4cZYmLMs0Tsrb9HCdgSYp4CsUSZWcnu64gHytU6BRxGDMe5oEu41WOSIgzCuM9gTFfXVKjhI8Io2m+shPrRcsoAf6ctp/Y2V0XdPlCdHp2AkP+nZ9v9WqM8ojiH1ii/Jwu4F5fSPb65Gncnd16nN7df3eq8WVDYdl6T2rT7bb0/rJvZett0NRp1Z+ks7mSjh2M7uJndPsyuCFTdYSrT4cRDUXo7JYsprISbLvhV+3XF/+oFyOnfrpay/vMCL2LqPo6j2ev0qH+2uOZp4uRkfjEQN/7f55OUvFz+6h8zdxHl593r6c87++zkcXiFfnca5GH+Ehwf/xpmJ6vo50i0R7V+TLx7PnUv744eL/tRddZ2FhfLeY4e7tjxqPme03YOu8ZSEgb50wywLJd6PKKeca76heTn8qItlFjjwjVMtUYJCUyaLb1LS0uYKwGiJFTNXK/Pu24QBB2vUXeck55TO3N8xz132k4tCLx6tV1q0JrFHsUuZ2OqY2mVXc/P5wRxEgpgBDJryXM8BWF+gthDEhkR66vDwZmAIVcq7noLwZdPc4+LWt1dcPnMveoTnyW5adxyecfusvZYQraj3a63o919wDSloAVeT7hQIy6kKsYCLXMZu5UlqjDI1RWQaRUOPb9RswVN0hg0VTvhJI+hkk7TojS2WP97FsKisFKBU55JFLvFAfwwv/1vZSmUD6HaQeiUOqDaCQfuomqZz8d517bzLuHbOaH6nKm6yoziNZPdT+/joudkMyubxLBwS+6bLd+EOABgf8LP3i/NJh5Z0q3o5f2qrgwlKK2yvwtUWVTy5TIvOnqixTJT8LbSTNceAM6V4r0M+RyYvYGwv3ThbFjvRd7Yd/nlcsoGEklI1PwZxfILr40BCP3aiNTJWX31KbMTUtVNwkoesnVj9SjRjD99t+AQaz9lvld/zzwj7+06gLUVR+WpnhiSsole6avl5YPZwFzBUqWFPNsGPwRwKPiucVPkDReppukpl/DxF0OLXNNEGPOcyahnFoZt4S14ypcUwnenP2AKcX+7rVfiw9v61831QElggsyNL/1vZ4sW44LB1I+CgkvTXKnHpwrOJltC/0bwgNZXO07v3A/8zp7Wv8/yTiatP8x/WrZqun8eWv8C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Q5j1XIhUBJVJC4tNP0foB2Dudl5NobMCR2iB1K+/Vjh4YCh3bakZCQd7bXXvviZZ8KlMRe2BYCMkk5M6Je0/zHr0PDCapgOU6DWH6jgawgOKlZTwT5qB744FQd04iEyCFiQiImm6bnuL7l1C23MXSC0K2Gvl/xfe+3aTxCJhS0cqmoXaskZiIswjbNPGMhR4KKkKEERChxOGjfXIfKM0QlJ7N1umZZBMxaUynT0LZxhQCGOMYVzBP71N7xOSUiHNAJQzLP4C0mEU3zbe/z83PluVrh2cT2HMexncBWPkTQyQ+zdVRuBhKxMV+vu4hxRjGK6SvSpG5ATjkx2vGEZ1ROkw+gXdt1NLQFK2xh12c/TPs9QMHui0g7JDOBLDFFbgnWhzFkwDAYD/2oaf74WgfXe4cZYmLMs0Tsrb9HCdgSYp4CsUSZWcnu64gHytU6BRxGDMe5oEu41WOSIgzCuM9gTFfXVKjhI8Io2m+shPrRcsoAf6ctp/Y2V0XdPlCdHp2AkP+nZ9v9WqM8ojiH1ii/Jwu4F5fSPb65Gncnd16nN7df3eq8WVDYdl6T2rT7bb0/rJvZett0NRp1Z+ks7mSjh2M7uJndPsyuCFTdYSrT4cRDUXo7JYsprISbLvhV+3XF/+oFyOnfrpay/vMCL2LqPo6j2ev0qH+2uOZp4uRkfjEQN/7f55OUvFz+6h8zdxHl593r6c87++zkcXiFfnca5GH+Ehwf/xpmJ6vo50i0R7V+TLx7PnUv744eL/tRddZ2FhfLeY4e7tjxqPme03YOu8ZSEgb50wywLJd6PKKeca76heTn8qItlFjjwjVMtUYJCUyaLb1LS0uYKwGiJFTNXK/Pu24QBB2vUXeck55TO3N8xz132k4tCLx6tV1q0JrFHsUuZ2OqY2mVXc/P5wRxEgpgBDJryXM8BWF+gthDEhkR66vDwZmAIVcq7noLwZdPc4+LWt1dcPnMveoTnyW5adxyecfusvZYQraj3a63o919wDSloAVeT7hQIy6kKsYCLXMZu5UlqjDI1RWQaRUOPb9RswVN0hg0VTvhJI+hkk7TojS2WP97FsKisFKBU55JFLvFAfwwv/1vZSmUD6HaQeiUOqDaCQfuomqZz8d517bzLuHbOaH6nKm6yoziNZPdT+/joudkMyubxLBwS+6bLd+EOABgf8LP3i/NJh5Z0q3o5f2qrgwlKK2yvwtUWVTy5TIvOnqixTJT8LbSTNceAM6V4r0M+RyYvYGwv3ThbFjvRd7Yd/nlcsoGEklI1PwZxfILr40BCP3aiNTJWX31KbMTUtVNwkoesnVj9SjRjD99t+AQaz9lvld/zzwj7+06gLUVR+WpnhiSsole6avl5YPZwFzBUqWFPNsGPwRwKPiucVPkDReppukpl/DxF0OLXNNEGPOcyahnFoZt4S14ypcUwnenP2AKcX+7rVfiw9v61831QElggsyNL/1vZ4sW44LB1I+CgkvTXKnHpwrOJltC/0bwgNZXO07v3A/8zp7Wv8/yTiatP8x/WrZqun8eWv8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlchCQnQRAWJ60x6L3TaZV5Wxj6Ap8GG2IHQX792aFJgaLezEhLyyfF3vnPxZ58LtIirYVsISCTlzIh6TfOfSeBOg8YUW4T4dcsH4lkT5IFVr/nBWQ37E8/1TCMSIoWICYmYbJpVx/Utp265Zw9OELpe6NcrdSf4aRqPkAgFrVwqjmlki5iJMA/bNNOEhRwJKkKGFiBCicNR+/oqVJ4hKjiZrfMdyzxg0ppLuQxtG1cIYIhjXMF8YZ/bBz7nRIQjOmNIpgm8xiSiab7u3Ww2lY1X4cnMrjqOYzuBrXyIoLOvZutLsRlIxKZ8t+4ixhnFKKYvSJO6BjnnxGjHM55QOV+8A+3arqOhLciwhV2ffTXttwA5u08iHZBMBLLEHLkF2BCmkADDYPwYRk3z6+c6uNv7kCAmpjxZiKP1n1ECtoaYL4FYosisYPd5xBPlap0DDiOG41TQNdzoMVkiDMK4S2BKsysq1PARYeTtNzKhfrSYMsB/0pZze5+rom6fqE6PzkDI/9Oz/X7tUB5RnEKrFm9wVWTuNkaDy4dJP7uRq2w1livHaeYU9p13pMp2v66Ph7WcrddNg+1lJ/6+ItG2HW/EiroTES2eItK73tCzS+/XaOp3OW+Pu/X77e3g8snfXojh5uWXSzbk+9kUqo/f5PUPHq96d7dffvb9bj/q4mjZeBySK5f/2ODEHVajybjDyOPF87faVf/pfpu0a9HG7fjD+/u/ZvXbn+Pni2BUh/Fw9bgc+1f0uu7Dl5r37ftFcu8/Pd302944vm04zbec9nM4NBaSMEonvwDLYqnHI+oZA9UvJD+WF22hxJrmruFSa5SQwKTZ0ru0tISpEiBKQtXM3XrQdYMg6Hh9xwkCteg7vuMOnLbTCAK3VwsKDdqxOKLY5WxKdSytsrv5+ZggXoQCGIHEWvMUz0GYHyD2kERGxIbqcHAm4IErFXd5ffVSo7zx3JhlQZAx78VBwM6mpnHD5S27TdpTCcmBdLvVA+keAqZLClrf9YALNeFCqlqs0DqVsVtZowqDVN0AiRbhsOqf1WxBF8sYNFN7wUkaQ2U5X+aVscXuv2ohLHIrFXjJE4liNz9/76Z3/K2ohPIhVDsInVIHVDfhxFXkFfm8n3dtP+8Cvp0Sqo+ZKqtMKN4xOfz0Ni16TMpRKRPDwi24l1v+EOIEgP0BP/u4NGU8sqZ70YvrVd0YSk9aRX9XqLKqpOt1mne0obUyUfC2kkzXHgFOleBtH/gzMLuEsD9135SsjyKX9kN+qZyzkUQSFmr+jHz5icfGCIR+bETq4GSffckchFR1k5DJU7ZurN4kmvGHzxYcYu2nzHfqb8MT8tauE1h7cVSe6oUhKZvplb5Ztu/MBuYKliop5Mk++CmAU8EPjWWRSy5STdMklfD+F0NrXNNEGPOUyahn5oZ93c15yu0Swjen32BybX+9rDPx7mX99/XVSCngApmlL/1vZ4vm44LB1G+CnEvTzNTbUwVnsz2dfyV4Suo7Tm/gB36nlPpaEFTrnlMW8CCT1m/m3y17NT0+D61/AQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tq457SCwVsR5hRkJm6FRDwss/LmZiuQrSkkKSl+ut3UmwFRI+eGUcmqyvf+tYlX3LK0SJ2/DPOgQmSUC3otfV/T5yWE0LdNZw61A3Xlf8eIxQZjuO0WpEDj48Q6lrAeQoB5QJR0dYdy3YNq2nYJ1PL8+2637BqrtP8R9fugHEJLV1qlq7li5hyvwjb1lNG/QRxwn2KFsB9gf3J2fWVLz19VHLSO6cblkVA1pkLsfRNE9dCwBDHuIaThXlq7vichtyfkBlFImXwFjPkbf1t73q9rq3rtYTNTMeyLNPyTOkTcjI71jtH5WYIAxolm3UX0YQSjGLyihSpaxDzJNTO4lnCiJgvPoG2TdtS0Abk2MC2S4918z1Awe6bSDskGUcGnyO7BBtDBAwoBu12HLT14+91cLN3yhDlUcIWfG/9M0pAM4iTJYQGLzMr2X0f8UC5OqeA/YDiOOUkg4EakyXCwLURg4jkV4TL4Qu5VrRfy7n8I+WUAf5JW07Nba6SunmgOj0yAy7+T8+2+7VBuUNxCh3MroIgGz33E+reDezx00n32U7/sFH2p11Q2HbekKra/bbeH9Zqtt42ifPrcZy7+CLPg9HIvHPd25ecDIevaXjjva5nZjNusCi6T9On4XBF83vnevLCumn2bK3c9U1cD91f6X139HjX6x5duVFoXf86Hw5vJ6vpzKPTOBn0f19OLu5De+xGkM+t4W97NH1o3Naff5v2ZLWG8W3r4VUMBlM+FuTy0ju5uBf3l7Oj/g0fRDc5f2jYziLHGPWs9ntO2znsGktJmKSPT4BFuVTjEfS0vuwXEl/Li7KQ0IgKV3+pNIoLoELvqF1KWvxUChAJfdnMzbrftT3PO683L6yW03PPLyzXsvvWmdXyPLvX7JUatGGxR7Gb0IioWEplN/PzNUG88DnQEJiRJSmeA9e/QOwhgbSAjuXhSCiHaSJVvNV0XPcEZVG2zOzVK3mpu5hlzXqia4NEDOmQnUUC2I50286OdI8BkyUBpe9qwLmccC5kLVYoS0Vs1zJUo5DKG4ApEfYd96RhcrJYxqCYmoskTGOoLefLojIm3/w6BsK8sBKOlwkTKLaL8/dpevvfykpIn5AoB65SOgfZTThwFbllPh/ybhy8skr4szQk6pjJsgpG8IbJ7qf3aVFjUo1KlRjmdsm92vJDiAMA5hf8zP3SVPHCjGxFL69XeWNIPemU/V2h2qqWZlladLSltJJJeFNKpm1OAKdS8F6myTNQs4Iwv3XfVKz3Ilf2XX6pmNOJQAIWcv60YvmNx8YEuHpsBPLg5N99yeyElHUTkItDtm4s3ySK8ZfPFuxj5SfNI/mzTth74oewtuLIPOULQxA6Uyt1s7x8Mhs4kbBESmHCtsEPARwKvmusilxxEXKaHlMBn3/RlMa1dYRxklIR9PTCsK27BU/xsgT/3ekDTKHtb5d1zj+9rB+uryZSARdIr3zJfzsbpBgXDLp6ExRc2nou354yOJ1t6fwbwUNSf271+q63JfUNz3Oadasq4E4mnQ/mj5atmu6fh85f</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0513481403082828140</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0513481403082828140</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0513431403082823569</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0513451403082825783</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0513481403082828140</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B286017D05E0401F0A0599263A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B3E00A9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B36E082D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_UserGet_FUNC_CHILD_Get_Self_Blocked:clg_403_FORBIDDEN_P2" searchProperties="true" id="b7ba9f6d-4119-436a-9b26-daa9b166adc1"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="05dcbb4f-e726-4c9e-ba28-2e200eb144e8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="aaffe25d-e3a2-4ddb-bd52-b9fc0de441b3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="b0a79a82-9713-4d62-ae97-1a0b8082b15e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="4ff2e104-12a9-44e1-824d-a07a9ec0ef89"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="027aba9f-4602-45c5-b486-7ebd54fae0f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="df94ec7f-5298-474a-9448-d149291d11ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","USER_INACTIVE");
myTC.setPropertyValue("RequestorType","Self");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFAD245309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0513541403082834722</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B3B11D494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B3B11D494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B3B11D494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFAD245309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B36E2F2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFAD245309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B36E2F2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0TpYxVy4VISARIN5ZQz0NMBWgovI+MYcJvYaWwD5evHDiQFCp12JCTkne2117542TUGotDxmoyhhGNKtE6rrv8zC0rlAM3KxrRcsY2SUwXGtHJdNWzogsBBzrQIbF3rMCZQhzAOCK/rjmWXDKti2NWh5Xp20SsXC3bpeqJrTyhhElq6FCxdW0chYV4atq6LhHgUMMw8AiLEPA69QbPX9aSnBzJOeqO2ZZkGTBoLzmPPNGEhQBCFISxAGpk188CnFjBvgOcEcJGgXcyA1fXd3tVqVVgVCzSZm45lWablmtInYHh+qTcuss0o6JAZ3a59QCjBEIR4AxSpHuILGmjNcE4TzBfRGWjbtC0FbaA1NKBdIpe6+REgZfdNpAOSCQMGW8gm7MD6aIYSRCDSHvudun75vQ5u9w4TQNiMJhE7Wv+MEiJLFNIYBQbLMsvYfR/xRLkaNQS9DoGhYHiJ7tWYxAAipj0kaIbXXczk8AVMS9uvrZn84WzKEPxJW2rmPldJ3TxRnRaeI8b/T8/2+7VFeQKhQI2+WE9Gleq4TMrj8pyM/MV9hTo0HldhPaWw77wllbd7tz4e1ny2dpuWwcYcvcFN156s/e44ejTlGIfxuli8u6GtjVmxekGxx0JwZ713r6aM4ZcqdH61/ej17u/xXdAewrYvHHc8ssMLOuxPqu6LNbi5xq1BFJRHd0/FwW3fem4+Av+au6w7EVfkV7fUdx6m/ecr2qS++5d/Ox350QMWdBZu3ia/R9O73/OLV2vc6k1mExpO8eh5GCZ+r/6R034Oh8ZMEgZi+oIgz5ZqPDotrS37BfjX8qIsODBmqasXK41iHBGuN9QuJS2ekAKEA082c7tu+7brus12s+WUykXLvbVKlt22mlbZdZ1K0c80aMviiKJPyQyrWEplt/PzNUEYeQyRACXGkgq4QEz/ArEFONA6pC8PByUMDalUcTuKp8RaOWLO2RsWeFWEG0dsrqmu3VP+h/xJmjOOkgPptp0D6e4jiGOMlL6rAWdywhmXtXgDS8FDu7AEBYKEvAESJcKeU6qWTYajOESKqRnRQISoEC/itDIm2/47BoAstWIGY5pwENrp+Tub3vG3rBLSJ8DKgamUbpDsJjpxFZWyfM7nXd7PO4NvigCrYybLyhMMt0wOP31MixqTfFTyxCCzM+75lh9CnAAwv+BnHpcmjxcs8V707HqVN4bUk0bW3zdQeCuI5VKkHb1WWplIeFNKpm0OEBRS8N6H9BURM4cwv3Xf5KyPIuf2Q36CL8iAA44iOX9auvzGY2OAmHpsdOTBWX/3JXMQUtaNozU/ZfND+SZRjL98tkAPKj9pfpB/K5oEH+06gbUXR+YpXxgck7laqZvl/cxsQCphsZRCmuyDnwI4FfzQmBc558LlNE0FR+e/aErj6jqAkArCOy09NezrbsqTv8fI+3D6BJNq++6yXrOzl/VzrzuQChgBPffF/+1s4HRcINLVmyDlUtfX8u0pg5P5ns7vCH6W+pvijW23Sm7p5kjqrbyAB5k0Ppk/W/ZqenweGv8C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0TpYxVy4VISARIN5ZQz0NMBWgovI+MYcJvYaWwD5evHDiQFCp12JCTkne2117542TUGotDxmoyhhGNKtE6rrv8zC0rlAM3KxrRcsY2SUwXGtHJdNWzogsBBzrQIbF3rMCZQhzAOCK/rjmWXDKti2NWh5Xp20SsXC3bpeqJrTyhhElq6FCxdW0chYV4atq6LhHgUMMw8AiLEPA69QbPX9aSnBzJOeqO2ZZkGTBoLzmPPNGEhQBCFISxAGpk188CnFjBvgOcEcJGgXcyA1fXd3tVqVVgVCzSZm45lWablmtInYHh+qTcuss0o6JAZ3a59QCjBEIR4AxSpHuILGmjNcE4TzBfRGWjbtC0FbaA1NKBdIpe6+REgZfdNpAOSCQMGW8gm7MD6aIYSRCDSHvudun75vQ5u9w4TQNiMJhE7Wv+MEiJLFNIYBQbLMsvYfR/xRLkaNQS9DoGhYHiJ7tWYxAAipj0kaIbXXczk8AVMS9uvrZn84WzKEPxJW2rmPldJ3TxRnRaeI8b/T8/2+7VFeQKhQI2+WE9Gleq4TMrj8pyM/MV9hTo0HldhPaWw77wllbd7tz4e1ny2dpuWwcYcvcFN156s/e44ejTlGIfxuli8u6GtjVmxekGxx0JwZ713r6aM4ZcqdH61/ej17u/xXdAewrYvHHc8ssMLOuxPqu6LNbi5xq1BFJRHd0/FwW3fem4+Av+au6w7EVfkV7fUdx6m/ecr2qS++5d/Ox350QMWdBZu3ia/R9O73/OLV2vc6k1mExpO8eh5GCZ+r/6R034Oh8ZMEgZi+oIgz5ZqPDotrS37BfjX8qIsODBmqasXK41iHBGuN9QuJS2ekAKEA082c7tu+7brus12s+WUykXLvbVKlt22mlbZdZ1K0c80aMviiKJPyQyrWEplt/PzNUEYeQyRACXGkgq4QEz/ArEFONA6pC8PByUMDalUcTuKp8RaOWLO2RsWeFWEG0dsrqmu3VP+h/xJmjOOkgPptp0D6e4jiGOMlL6rAWdywhmXtXgDS8FDu7AEBYKEvAESJcKeU6qWTYajOESKqRnRQISoEC/itDIm2/47BoAstWIGY5pwENrp+Tub3vG3rBLSJ8DKgamUbpDsJjpxFZWyfM7nXd7PO4NvigCrYybLyhMMt0wOP31MixqTfFTyxCCzM+75lh9CnAAwv+BnHpcmjxcs8V707HqVN4bUk0bW3zdQeCuI5VKkHb1WWplIeFNKpm0OEBRS8N6H9BURM4cwv3Xf5KyPIuf2Q36CL8iAA44iOX9auvzGY2OAmHpsdOTBWX/3JXMQUtaNozU/ZfND+SZRjL98tkAPKj9pfpB/K5oEH+06gbUXR+YpXxgck7laqZvl/cxsQCphsZRCmuyDnwI4FfzQmBc558LlNE0FR+e/aErj6jqAkArCOy09NezrbsqTv8fI+3D6BJNq++6yXrOzl/VzrzuQChgBPffF/+1s4HRcINLVmyDlUtfX8u0pg5P5ns7vCH6W+pvijW23Sm7p5kjqrbyAB5k0Ppk/W/ZqenweGv8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlnkPi8JmoIAFptwztlEKn7fRlZZwLuCR2iB0K++vXDk0KlHY7KyEh31yfe+6Hj30mcBy5flcISCXlzBgEbfPv+rTZcqYNZDlea2bVWl7TaoHbtBqAWyh0EJk6NdMYCJHBgAmJmWybroNqltOwUOvO8XxU9evNitOsPpnGPaRCQSuXimMamzhiws/Dts0sZT7Hggqf4RiEL4k/6V5f+crTxwUns3O2Y5kHTDsLKRPftkklBAJRRCqEx/aZfeBzFgp/QucMyyyF15ihaJuve19eXiov1QpP57brOI7teLbyCQWdfzc734rNEA7YjO/Wfcw4owRH9B+sSV2DXPDQ6EZznlK5iD+ARjZyNLQFG2IRVGPfTfstQM7ui0gHJFOBLbHAqAAbwwxSYASMX+NB2/z+tQ7u9t6lmIkZT2NxtP4zSsDWEPEEQksUmRXsvo54olydMyD+gJEoE3QNP/WYJJiAMEYpzOjmigo1fKEw8vYbG6F+tJgyIH/SljN7n6uibp+oTkDnIOT/6dl+v3Yo9zjKoDPckB8T7g5jCDDcj4N4e4keQ8RY/badU9h33pEq2/26Ph7WcrZeN/2Y/TV/5FX3CVay8XvRf7iit9MFm/TW99PrpNt92Wbno1Yjvrx0579+zX9PGwmt3Q2biTN8mq564V8Xm6vtLNjezEetbz9bQ75c1+cPy9FDeNuskjW9YCvSWGXP9Ut42Dw5Wz6h04fbcDl+RP1Lvp2Sm2qtO5S3fRjxy9QZNXuN+vl66C2/DcfV57rnBsu4LiMx+jF4vG2/5bSfw6GxkIRJNn0GIoulHo9BYFyofmH5ubxoCw2tWe7qJ1qjhAQmzY7epaXFz5QA0dBXzdytL/rI87xetXHuXrhBrXfu1Bx04XSdpuehoBEUGrRjcUSxz9mM6lhaZXfz8zlBEvsCWAipteYZWYAwP0EMsMTGgI3V4eBMwB1XKo5aLFwsqy5eLZscLVvN53iD6lEjqZrGTy5v2E3anUlID7QbuQfaPQZCEwpa4PWECzXiQqpirPA6kxGqrHGFQaaugFSrsO/WWnVb0DiJQFO1Yx5mEVSSRZKXxha7f9fCRORWKkjCU4kjlB/AD/M7/laUQvmEVDsInVIPVDvhxF1UK/J5l3f95J1VwHezkOpzpuoqU0p2TA4/vY2LnpNyVsrEiEAF93LLH0KcALA/4Wcfl6aMF67pXvTiflVXhhKUTtHfFa6sKtl6neUdbWqxTBW8rTQT2RMgmVK87R1fArNLCPtLF07J+ihyaT/kl0klURJLiNX8GfnyC6+NCQj92hiok7P56lPmIKSqm4SNPGXrR+pRohl/+m4hPtF+yjxSfy88Dd/adQJrL47KUz0xJGVzvdJXy/aD2SBcwVKlhTzdBz8FcCr4obEscslFqmmaZhI+/mJokWubmBCeMTkIzNywL7w5T7lNwH9zegeTi/vrbb0RH97Wj9dXEyWBMTZLX/rfzhbNx4WAqR8FOZe2uVGPTxWczfeE/pXgKa3vIRTUvD2tr3ue26g6ZQEPMum8M7+37NX0+Dx0/gU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0513541403082834722</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0513541403082834722</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0513521403082832241</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0513541403082834722</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFAD255309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B36E302D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>027aba9f-4602-45c5-b486-7ebd54fae0f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_UserGet_FUNC_CHILD_Get_Self_Blocked:tou_200_OK_P2" searchProperties="true" id="fd6b96a6-9e54-455b-9436-53d6118f7bec"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="079a8ad2-9361-416d-b1e9-3f9332abbcb3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3782a2da-e177-44d2-9802-27974ec8da4e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="b1b15dbd-ec48-4171-b8f6-acdc015b4295"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="c0a02f1b-0bca-4c69-a556-6b31a4f2611e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="36461d84-7a65-4714-a1b6-332c458c97b4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="2c6b327c-8bba-4a0d-a454-f6c0354e3bef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Self");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B22423DB33E0401F0A05992646</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B0FC51BA67E0401F0A07991D5D:96CB2949"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051421403082842197</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B36E4F2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B36E4F2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B36E4F2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B22423DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BC68B7DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B22423DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BC68B7DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZT+M6FH7nV0SZ5zRrl0S0UhdgwpSlFJjSlyvXcRoPqR1spwu//topCW0pXOZKlSqfHH/nO4s/+5SDReoEXc4RE5gSLRy09X9AbDvRrAWNeGbHhud7TaPlwrrRciLHbzqRF/t1XQs5z1FIuABEtHXHsj3Dahh2697yA9sLLKtmWdZU1x4R4xJautQsXVsvUsKDImxbzxkJKOCYBwQsEA8EDMbdq2EgPQNQctI7p1uWRUDWSYTIAtOEtQhBlKawBunCPDX3fE4jHozxnACRM/QWM+Jt/W3varWqrdwaZXPTkSRNyzelT8Tx/IfeOSk3oygkMd2u+4BQgiFI8StQpK6QSGikddM5ZVgki0+gbdO2FLSB1tCAtkd+6OZ7gILdN5H2SDIODJ4AuwS7QzFiiECkPdyFbf3H9zq43XvPAOExZQt+sP47SogsUUozFBm8zKxk933EI+XqnCIYhASmOcdLdK3GJAMQce2WoRivh5jL4Yu4VrRfW3P5w+WUIfg3bTk1d7lK6uaR6gzwHHHxf3q2268tyiNIc9TZPNRfmHOfNB5S52LuJxN7Onoy42sPtdoFhV3nLamq3W/rw2GtZuttE/PHj9dP/Y03tWC6cZP1ZMleG4Pb37Qx6Z5Z+c3sZboOfzv12+mGLc+9Xzynz2J1kbrD1uNlfDu9/JWK7s3wPEPJSe9p1Oy688u6O3EurdHs6gKC2fVolbyurgW+bF29rH563H0QLch7sfO0EeHkYjpq+NnIHk7tSTob9ft20mw0Q/dk3Ay9YTxYPIqfXv/5treaPLXfc9rNYd9YSsI4n/1BUJRLNR7hQDuX/QLia3lRFhwZceEaZEqjuEBE6B21S0lLkEsBwlEgm7ldn/dt3/d7juM57qDnumeWZ9nnVteq+77T8BqlBm1ZHFDsUxJjFUup7HZ+viYIFwFHJELMWNIcJojrXyAOgABaSO7k4aCEo3sqVXwJEWiliUM3tjtDsbt+zl6br/yPrl1TcUNuWDcWiO0pt+3sKfcdgjjDSMm7mm8uB5wLWYoXsMxFateWoEZQLi8ApjQ4cLxW3eR4kaVIETUXNMpTVMuSrCiMybf/jgEgL6yYw4wyAVK7OH6fZnf4rSyE9ImwcuAqpR6SzUQfbiI3qJf5fJ53fTfvEr6bR1idMllVwTDcMtn/9D4sakqqSakSg9wuuVdb/hLiCID5BT/zsDRVvGiJd6KXt6u8MKScdMr+voDaSy1fLvOio00llUzCm1IxbXOMYC71bnNPnxExKwjzW9dNxfogcmXf55eLhIwFEGgh508rlt94a4wRV2+NUJ6b9XcfMnshZd0EWotjtn4qnySK8ZevFhhA5SfNt/JvRVn03q4jWDtxZJ7ygSEwmauVulg2n8wGpBIWSyWkbBf8GMCx4PvGqsgVFyGnaZYL9PkXTUlcWwcQ0pyIcKAXhl3ZLXiKTYaCd6cPMIW0v93Va/7pXT25Go6lAC6AXvni/3Y2cDEuEOnqSVBwaetr+fSUwcl8R+bfCB5Rerdx5p07A69XKX3T9+1BY1AVcC+TzgfzR8tOTQ/PQ+df</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZT+M6FH7nV0SZ5zRrl0S0UhdgwpSlFJjSlyvXcRoPqR1spwu//topCW0pXOZKlSqfHH/nO4s/+5SDReoEXc4RE5gSLRy09X9AbDvRrAWNeGbHhud7TaPlwrrRciLHbzqRF/t1XQs5z1FIuABEtHXHsj3Dahh2697yA9sLLKtmWdZU1x4R4xJautQsXVsvUsKDImxbzxkJKOCYBwQsEA8EDMbdq2EgPQNQctI7p1uWRUDWSYTIAtOEtQhBlKawBunCPDX3fE4jHozxnACRM/QWM+Jt/W3varWqrdwaZXPTkSRNyzelT8Tx/IfeOSk3oygkMd2u+4BQgiFI8StQpK6QSGikddM5ZVgki0+gbdO2FLSB1tCAtkd+6OZ7gILdN5H2SDIODJ4AuwS7QzFiiECkPdyFbf3H9zq43XvPAOExZQt+sP47SogsUUozFBm8zKxk933EI+XqnCIYhASmOcdLdK3GJAMQce2WoRivh5jL4Yu4VrRfW3P5w+WUIfg3bTk1d7lK6uaR6gzwHHHxf3q2268tyiNIc9TZPNRfmHOfNB5S52LuJxN7Onoy42sPtdoFhV3nLamq3W/rw2GtZuttE/PHj9dP/Y03tWC6cZP1ZMleG4Pb37Qx6Z5Z+c3sZboOfzv12+mGLc+9Xzynz2J1kbrD1uNlfDu9/JWK7s3wPEPJSe9p1Oy688u6O3EurdHs6gKC2fVolbyurgW+bF29rH563H0QLch7sfO0EeHkYjpq+NnIHk7tSTob9ft20mw0Q/dk3Ay9YTxYPIqfXv/5treaPLXfc9rNYd9YSsI4n/1BUJRLNR7hQDuX/QLia3lRFhwZceEaZEqjuEBE6B21S0lLkEsBwlEgm7ldn/dt3/d7juM57qDnumeWZ9nnVteq+77T8BqlBm1ZHFDsUxJjFUup7HZ+viYIFwFHJELMWNIcJojrXyAOgABaSO7k4aCEo3sqVXwJEWiliUM3tjtDsbt+zl6br/yPrl1TcUNuWDcWiO0pt+3sKfcdgjjDSMm7mm8uB5wLWYoXsMxFateWoEZQLi8ApjQ4cLxW3eR4kaVIETUXNMpTVMuSrCiMybf/jgEgL6yYw4wyAVK7OH6fZnf4rSyE9ImwcuAqpR6SzUQfbiI3qJf5fJ53fTfvEr6bR1idMllVwTDcMtn/9D4sakqqSakSg9wuuVdb/hLiCID5BT/zsDRVvGiJd6KXt6u8MKScdMr+voDaSy1fLvOio00llUzCm1IxbXOMYC71bnNPnxExKwjzW9dNxfogcmXf55eLhIwFEGgh508rlt94a4wRV2+NUJ6b9XcfMnshZd0EWotjtn4qnySK8ZevFhhA5SfNt/JvRVn03q4jWDtxZJ7ygSEwmauVulg2n8wGpBIWSyWkbBf8GMCx4PvGqsgVFyGnaZYL9PkXTUlcWwcQ0pyIcKAXhl3ZLXiKTYaCd6cPMIW0v93Va/7pXT25Go6lAC6AXvni/3Y2cDEuEOnqSVBwaetr+fSUwcl8R+bfCB5Rerdx5p07A69XKX3T9+1BY1AVcC+TzgfzR8tOTQ/PQ+df</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlHkfBCYSERAWJFugybelsYdm2Lyvj3IBp4tDYCdBfv3ZoUqC021kJCfnm+txzP3zsM47jqO53OYdU0IRpw15b/wfcEGzAtuGRlmnYsyYxZp45M0JzVneclmu7MNO1IecZDBkXmIm2Xjct2zAdw2pNTM+3bN+0a07LftS1KaRcQkuXmqlrmzhi3C/CtvUsZX6COeU+wzFwXxB/3L259qWnj0tOeudsx7IImHYWQqx8hEgtAAJRRGokidEZOvA5C7g/pnOGRZbCa8yAt/XXvev1urZu1JJ0juqmaSLTQ9In4HT+Xe98KzdDMGRhsltfYJYwSnBEX7AidQNikQRaN5onKRWL+ANoC1mmgjZgQwxi2ey7jt4CFOy+iHRAMuXY4AtslWB3EEIKjID2192wrX//Wgd3eycpZjxM0pgfrX+PErAcomQFgcHLzEp2X0c8Ua7OGRB/yEiUcZrDSI3JChPg2q8UQrq5plwOX8C1ov3ahssfLacMyO+05Qztc5XU0Ynq9OgcuPg/Pdvv1w5liqMMOrbrvGw3o/ll2A9HD/cTcnuZv6BH5ycftgsK+847UlW7X9fHw1rN1usmuL7fPm5tdvfDXaOsMarbV5v8ZtT6ubh0/0QiMBe9qXMdR/O5O3BmzfzqgZgPzebS+/s2sfj9qOtMn1oPI2dzz8m36OppmbwsbjjQ6VUc94XbP5/89WPaSnPvp2vNGMnZsufM4qu7rLnpo8eRFy8aMBVd1m8OSMN2f9mTJcqGjxH7djFGP67/mN5chpOHVe48D/J++y2n/RwOjaUkjLPZEogol2o8hj1tIPuFxefyoiw0MMLC1V8pjeICmNA7apeSFj+TAkQDXzZztx5cWJ7nnV84rXO312sM+qZtWgOzazY9r+40zVKDdiyOKF4kLKQqllLZ3fx8TpDEPgcWQGrkSUYWwPVPEHtYYG3I7uThSBiHSSJVHD81t3M7JUsB1ApDBpg986W5TnRtlIhbdpt2QwHpgXRb9QPpvgNCVxSUvqsB53LCuZC1eMZ5JiKrluMag0zeAKkSYb9ut5qI03gVgWKK4iTIIqitFquiMojv/usGJrywUk5WSSpwZBXn78P0jr+VlZA+AVUOXKV0DrKb8O4qavjNMp93eTdPXlklfDcLqDpmsqwipWTH5PDT27SoMalGpUqMcKvkXm35TYgTAOgTfui4NFW8IKd70cvrVd4YUk86ZX+fce25luV5VnTUVVqZSngkJdNCYyCZFLztJHkChioI9KX7pmJ9FLmyH/LLxIKNBRYQy/nTiuUXHhtj4OqxMZQHZ/PVl8xBSFk3ARtxynYRyTeJYvzps4X4RPlJ8y/5t07S4K1dJ7D24sg85QtDUDZXK3WzbD+YDZJIWCqlMEn3wU8BnAp+aKyKXHERcppmmYCPv2hK49o6JiTJmBj29MKwr7sFT7Fdgf/m9A6m0PbXy3rDP7ys72+ux1IBY6xXvvS/nQ1ajAsBXb0JCi5tfSPfnjI4m+/p/CvBE1LfcPr2oN6zzyupdz3P6jm9qoAHmXTemd9b9mp6fB46/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051421403082842197</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051421403082842197</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0513591403082839116</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051421403082842197</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B22424DB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BC68B8DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>027aba9f-4602-45c5-b486-7ebd54fae0f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_UserGet_FUNC_CLG_Get_CHILD_Active_and_Deleted_CLG_403_FORBIDDEN_P2" searchProperties="true" id="c27e6ce4-309d-4538-86cf-fb4c8762d5bd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="47c01fa0-83ae-46d9-a623-510a190730a7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="69aee0d5-d88a-4cb9-bbbe-778112d177d0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="e7ba0329-3918-4590-9a76-8f693ed0a29b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="ece099ad-0e8a-4727-af54-1ba9de592246"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="41ad144a-356d-41cf-aa2d-7b052490add9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));
myTC.setPropertyValue("Status","deleted");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="2da2dae6-2283-41a8-8ba5-c19c12213147"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","USER_INACTIVE");
myTC.setPropertyValue("RequestorType","CLG");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B23D87FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051481403082848796</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999AE603D1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE603D1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE603D1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B23D87FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B23DACFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B23D87FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B23DACFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VIQoCQqCBRKCM6vUKv83JknJ3gNrFD7HCZrz92aFKgtKc9EhLyzvbaa1+87GOOkrju9ziHTBBGtdGgo/8DTtiEEFkGhgCMRqsdGtMpdg23WbedJmph3HJ0bcR5DiPKBaKio9ctu2FYLcNu31qebzd8y605nvtH1+4h4xJautQsXVslMeV+Ebaj5xn1GeKE+xQlwH2B/Unv4tyXnj4qOend4w3LImDWnQmR+qaJawFgiGNcwywxj80dn+OA+xMSUSTyDF5jBryjv+5dLpe1pVNjWWTWLcsyLc+UPgEn0U+9+6PcDMGIhmyz7iPKKMEoJn+RInUBYsYCrRdHLCNilnwAbZu2paANWGED2w36UzffAhTsvoi0QzLjyOAzZJdgYwghA4pBuxuPOvrPr3Vws/c2Q5SHLEv43vp7lIAuIGYpBAYvMyvZfR3xQLm6x4D9EcVxzskCLtWYpAgD164zCMnqnHA5fAHXivZrKy5/pJwywN9py7G5zVVSNw9UZ0Ai4OL/9Gy7XxuUexTn0LWex1E7JU/O4Gz2NLmaXGYt7kR5SG7uOgWFbecNqardr+v9Ya1m63XTE6zm1ml6HUdub3xB4wntNefT+dw9+xXewjh2G2LmHXl2yPLl2uXuEsaJE8+HjeXdw0MvP2lmafzi1s17dn/646jxePfn3nMHrbNo+BBcrMXauYPL1o11JKY8gSOnNb3l5Jr8uohjLibtG4avSOt8fRrl0WPc6M9m5ulyPV3G+fWPVfvm7GQ0tF/av6cwstO8yTtvOW3nsGssJWGST58Bi3KpxmM00IayX0h8Li/KQgIjLFz9VGkUF0CF3lW7lLT4uRQgEviymZv1sG97nndSdwZtd3ji9k+thmUPrZ7lep49aNmlBm1Y7FHsMxoSFUup7GZ+PieIE58DDSAzFizHM+D6J4gDJJA2omN5OBjlcMukijeC6d+/DbZYpMSzm9EKllD3Vu7zTNcumbiiV1kvFJDtSLdd35HuMWCSElD6rgacywnnQtZijha5iO3aAtUo5PIGyJQI+/VGu2lykqQxKKZmwoI8hlo6S4vKmHzzXzcQ5oWVcJyyTKDYLs7fh+ntfysrIX0Cohy4SukEZDfh3VXk+M0yn4/zbm7nXcL38oCoYybLKjKCN0x2P71NixqTalSqxDCvxqLa8k2IAwDmJ/zM/dJU8YIF2YpeXq/yxpB60i37O0e1eS1fLPKio67SykzCm1IybXMCOJeCt75lL0DNCsL80n1Tsd6LXNl3+eViRicCCUjk/GnF8guPjQlw9dgYyYOz+upLZiekrJuAlThk68fyTaIYf/pswT5WftJ8Lf+WLAve2nUAayuOzFO+MAShkVqpm2X9wWxgJmGJlEKWbYMfAjgUfNdYFbniIuQ0TXMBH3/RlMZ1dIQxy6kYDfTCsK27BU+xTsF/c3oHU2j762W94h9e1o8X5xOpgAnSK1/y384GKcYFg67eBAWXjr6Sb08ZnEZbOv9K8L3U905bljOw+632rtQ3m1UBdzLpvjO/t2zVdP88dP8F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VIQoCQqCBRKCM6vUKv83JknJ3gNrFD7HCZrz92aFKgtKc9EhLyzvbaa1+87GOOkrju9ziHTBBGtdGgo/8DTtiEEFkGhgCMRqsdGtMpdg23WbedJmph3HJ0bcR5DiPKBaKio9ctu2FYLcNu31qebzd8y605nvtH1+4h4xJautQsXVslMeV+Ebaj5xn1GeKE+xQlwH2B/Unv4tyXnj4qOend4w3LImDWnQmR+qaJawFgiGNcwywxj80dn+OA+xMSUSTyDF5jBryjv+5dLpe1pVNjWWTWLcsyLc+UPgEn0U+9+6PcDMGIhmyz7iPKKMEoJn+RInUBYsYCrRdHLCNilnwAbZu2paANWGED2w36UzffAhTsvoi0QzLjyOAzZJdgYwghA4pBuxuPOvrPr3Vws/c2Q5SHLEv43vp7lIAuIGYpBAYvMyvZfR3xQLm6x4D9EcVxzskCLtWYpAgD164zCMnqnHA5fAHXivZrKy5/pJwywN9py7G5zVVSNw9UZ0Ai4OL/9Gy7XxuUexTn0LWex1E7JU/O4Gz2NLmaXGYt7kR5SG7uOgWFbecNqardr+v9Ya1m63XTE6zm1ml6HUdub3xB4wntNefT+dw9+xXewjh2G2LmHXl2yPLl2uXuEsaJE8+HjeXdw0MvP2lmafzi1s17dn/646jxePfn3nMHrbNo+BBcrMXauYPL1o11JKY8gSOnNb3l5Jr8uohjLibtG4avSOt8fRrl0WPc6M9m5ulyPV3G+fWPVfvm7GQ0tF/av6cwstO8yTtvOW3nsGssJWGST58Bi3KpxmM00IayX0h8Li/KQgIjLFz9VGkUF0CF3lW7lLT4uRQgEviymZv1sG97nndSdwZtd3ji9k+thmUPrZ7lep49aNmlBm1Y7FHsMxoSFUup7GZ+PieIE58DDSAzFizHM+D6J4gDJJA2omN5OBjlcMukijeC6d+/DbZYpMSzm9EKllD3Vu7zTNcumbiiV1kvFJDtSLdd35HuMWCSElD6rgacywnnQtZijha5iO3aAtUo5PIGyJQI+/VGu2lykqQxKKZmwoI8hlo6S4vKmHzzXzcQ5oWVcJyyTKDYLs7fh+ntfysrIX0Cohy4SukEZDfh3VXk+M0yn4/zbm7nXcL38oCoYybLKjKCN0x2P71NixqTalSqxDCvxqLa8k2IAwDmJ/zM/dJU8YIF2YpeXq/yxpB60i37O0e1eS1fLPKio67SykzCm1IybXMCOJeCt75lL0DNCsL80n1Tsd6LXNl3+eViRicCCUjk/GnF8guPjQlw9dgYyYOz+upLZiekrJuAlThk68fyTaIYf/pswT5WftJ8Lf+WLAve2nUAayuOzFO+MAShkVqpm2X9wWxgJmGJlEKWbYMfAjgUfNdYFbniIuQ0TXMBH3/RlMZ1dIQxy6kYDfTCsK27BU+xTsF/c3oHU2j762W94h9e1o8X5xOpgAnSK1/y384GKcYFg67eBAWXjr6Sb08ZnEZbOv9K8L3U905bljOw+632rtQ3m1UBdzLpvjO/t2zVdP88dP8F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxHlPI5CnBBuUUHi0ktaKKfQnmn7MjL2BtwmDo0doHz92KFJgdJOz0hIyDvba6998bJPBI5C128LAYlkMTeCXtP8h1SrDVKuUguXy8TyoEGsepU6FvIAT2u1KSBSN41AiBQCLiTmsmm6yPEsVLWc+i1q+I7nO07JKdceTeM3JEJBK5cSMo11FHLhZ2GbZppwP8aCCZ/jCIQviT9uD/q+8vRxzslsnWxZZgGT1lzKhW/bpESBQBiSEokj+8Te8zmhwh+zGccyTeAtJhVN823varUqrcqlOJnZLkLIRg1b+VDBZj/N1o98M9CAT+Ptuot5zBnBIdtgTWoAch5Tox3O4oTJefQJtGM7SENbsCYWcTz+07TfA2Tsvom0RzIR2BJz7ORgI5hCApyAcTcKmubP73Vwu/c2wVxM4yQSB+s/owR8CWG8AGqJPLOc3fcRj5SrdQLEDzgJU8GWcK3HZIEJCONXAlO27jOhho8KI2u/sRbqx/IpA/InbTmxd7kq6vaR6vTYDIT8Pz3b7dcW5TcOU2jRtj1/uE42rot7yaQfIDTchDV+4dKbZkZh13lLqmj32/pwWIvZetsUjr3uakAf7joTtzLswQQ1rp6Tu1pMB7fp/Tq8eUbnV09X037vcfI6qCDv+RI9z2dPj0/306ffA2/onIcYNhvPGW5+kMd655GSxlP3/nHt4MvK2VWA2tPwbE2DWe/y3OXn8a/KxbJNr19HN+4o/Otu8TB49WhSrf5d7kz6V5N+p3PKiRyJHzJoVwdiSBrojl50Vik7vWm+57Sbw74xl4RxOnkCIvOlHo+gZ5ypfmH5tbxoC6PWNHP1F1qjhAQuzZbepaXFT5UAMeqrZm7XZ12n0Wh03HKv3T3r1LqnyEPOGWqjWqPh9KpOrkFbFgcUuzGfMh1Lq+x2fr4mSCJfAKeQWMs4JXMQ5heIPSyxEfCROhwxF3AbKxWvyxXeTBDM2Sx1WMXjEVqTiIvYNK5jOeTDpD2VkOxJt+PuSfcICFsw0PquB1yoCRdS1eIFL1MZOqUlLnFI1Q2QaBH2Xa9esQWLFiFopnYU0zSE0mK+yCpji+2/a2EiMisTZBEnEodOdv4+Te/wW14J5UOZdhA6pQ6obsKRqwjl+XzIu3L0ysrh2yll+pipssqEkS2T/U/v06LHpBiVIjEiirEotvwhxBEA+wt+9mFpinh0yXai59erujGUnrTy/r7g0kspXS7TrKM1rZWJgreVZDr2GEiqBO/1Nn4GbhcQ9rfum4L1QeTCvs8vlXM+llhCpObPyJbfeGyMQejHRqAOzvq7L5m9kKpuEtbymK0bqjeJZvzls4X4RPsp8y/1t4oT+t6uI1g7cVSe6oUhGZ/plb5ZXj+ZDRIrWKakME52wY8BHAu+byyKXHCRapomqYTPvxha45omJiROuQx6ZmbY1d2Mp3xdgP/u9AEm0/a3y3otPr2s7wf9sVLACJuFL/tvZ4tl40LA1G+CjEvTXKu3pwrOZzs6/0bwo9S3T6uo3HO61fq+1FcqRQH3Mml9MH+07NT08Dy0/gU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBQFFRUVxv3sJhWJRNBgT99e+g0ZPkJOfL+13p9PR0P73Q88wzNnyP7QCMUZy4YVBWxJfKP4jmmyxs72oWjxo1rl63am0G0rVmq2mxLGxwnNGulBWMU6QEODGC5KXC0ky9RvM1htHpdodtd2j2qcHz20p5iWJMTBOVJ7pSzn0vwJ2r25dKGged0MAu7gSGj3AngZ05UEcdotkx7pgqr883lFeH8auTJFGHouCTiSDyPPgEQ596pj7oPJu4M3ftwEjSGL35NPFL5e1slmVPWf0pjG2KpWmaonmK6JjYtX9VXkv3w8hUAiu8rbtGEAYuNDz3YhSgVJQ4oVkGnh3GbuL435hmKIYuTNdQDmuQ4YJfFeq3gyu6H1r6ADLGRg07BnM3NkMWilEAUXkxU14qv35WwdtZPTYCbIWxjz+t/xskFJyQF0bIrOF7ZHd0P7f4RbpenxHsKAH0Uuye0Lhok8iACJenMbLcfORi0nwmLl/LX87xvcMQ/C8leabe4ySwqS8yI7o2wsn/U6/3tbpZWRpeil5blwyeTFEculv5wp3kbh6zwGnScbR4uUJ4r3wD9Sj12/pzoz766u0Q4DjNEpgRs4K2FYLxBmssNrdwYtTrqT1hgh43dph0j1J301jlYp83dH0MjopfdTQbL4Xj0hq7DXNwXtClXnecN3x+OTWO/HoA0mUrsLut+HyOrD7L5xdtQqdMc6oM4hbHD3asQTmDY3thaht3oPXhgePp3TjzGpvQ2ZcGvfk08BZjcODi9VbGIYNffsf0PoYiriE6X4Ms/q8bNC8aifFYdItJYZHPM0GvqqJ0q2K3C1DXBpkiAFsRRhcwFuzD0Tm4PT6jBaAtZCCCszoDmWhvxKWmDaXMXC697VKRZUGdcVkfbMQS2RClfClu1wPaWG2jDSvT27kgmOtZuKsPIrN/yPoOHKu6mo115azupXysS/TqKrNzsr6oe5WZ6It6abUXeHUmZWJ29ShKmTPermbRZsFn8CJpKuB6gFlIXUft6/6SgfWZA/fSSAWHq1xw1O5yqeaSDqYlwR4vSWx6V95G0Dejne8574z3iXHd7C3Pu56Xbi/SXu1Kve782Jsru7qoSQMw2yx2q+XBWMmnEuyPwe7u0W24xjrM7G07E7XNYBhuFecEx0CTBEEDJF00UJXeAIQ9AagccPNLdy80w64pZ9SAxaUq7/Wa67N7XGOjR3sG024zm9GqOT02RSmobofpbu+ozlqeVIdz87TgE/6ywafqqWm4DMwjS1tL/WSYW31tXtpNxXwN+1XTHlDehZdjtTUA8eXseKo9S1bNCT7vXMtaCesJ57UsT63PIsuzojOu6qF2iOmmgOostTmfhkkJ2KoAQG+/2AuaKrSLpJpKpm1UwQCylKTgsmeTIbs8DvonD27qIMyHq8n+8FYYU8wkgco0ibSVVGqLwCyK0J8vJHkPFoJtx4ItyYIGRaBtlGG2Ifla9Iny5zzK1zzakgCk+hY0+X6pvqD5ZJLMOQ6cA2ERyLyjHvOV2fTp1hFJo/k44jIVj61guwoPqu/GizidL4bD8Sjf6WnvsCezyqLnw1N9W5JOhwi446HuHMRQNKbRZpNE1QDGMFEiX1Xyy2SL921359ODaoMRprQIW+zC32WLniFth7E9Z4b9WTCtt/gSTq1z36/u29mqqs+bUcvsBpZ4PlPbeEmHIJT5WeNo5ix7cBbZqJlZA3DYGew493jhzEvDrQ6zmTZczf1qo9Q4jUY+fdEpbhxNsnkv4yRNq9ZNQe/rOIrdTdq283gSmOzGSJqnLb1supF34Nn0oHNRfWn7pFjTkxm11GlJ49Zw69utCA6oGXUCUssaKb3z7mJcIn8CbwP083R4CG/zg3o/WT6MnjvpmJNuRTC5L4sLSBHLMrkVjOTvBKaQuGbNuqp2ooIF4QQFSeW1OFWQl05KKI5rdsiVcVtLTabdZLsS3W3XWbbRkGiOZmQa0C2ep1lRurOcG4pPELthYLmFr4LH3W6pvwOEfgejwERx7RSm0EG48heLRb7KSjAj128YYKSHhCfScotj5QbTrTfarEgLNFsHcotuy802XZeZVqU8DpNJMImBlaD4A0dkmA8ccYagG7moIJLFbYrJdYoTkpKjcUoTj3k6GU8BSgnVjAu212G5doPCrh95qABM+aGZeugpcqJrgih8+2VrBsRX6UzS/1Hm3etN/22In/fu2SA6plso4CIeAZGKoj8Ib6vTuAfzfdDc+6Dv5kFqusWFTlKbxC68Ifm49btjilZ5tAuJ6g75oflZ8MEq9TmghyPz5MJHzz+eA4RNEr7xei/J0Xg6PqWnU3otQqvgUjExTzEU3aLmCKaEEJ318IAC6mGC+hEXfaD+5Pkh/4gvTZxgnpDv2SctU74uf/AQmSNcPEQU0vL5T185H1ySvCUoT76SdT3yXikQ//VJAzuw0CPiKfnJwtj8Xa4vbL3zQ+IsBpgb2MWqYJ7nb5oChsSsS4ZYGL83/pWBr5x/FD6S/MCSkG7apQn6fqdcTKeXigFhmAaJIlaugvcT84ozOUeo81vpDzNX7vdG5nP8LZlfq6M5mV2+UXnouv9bueZe2wUicgq7VywvlZy8S4nzwH43od8Afjmk22T6/WVIf4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051481403082848796</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051481403082848796</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051461403082846474</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051481403082848796</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130911_020045</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B23D88FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B23DADFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E61862CE0C842255E0401F0A079902DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="8e5d5c59-162e-4432-92c5-81d8b2567f02"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ce2d0227-1d44-44a0-9e9a-1e84f84b58ae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="865f6cd1-c6da-489f-8795-dbe5af667971"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="f43bba82-a662-4d97-9e4c-c35d6eff3a26"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="ec7248b4-524b-443d-945e-235b376202b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH BAU" id="09c4ccaf-1dd2-44c4-bca2-e6039cf584f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Self");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"18132227863AD3DFE0533E991F0ABFE1:8FD9FCA1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20150609_0257501433842070210</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>1813222785C7D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:1813222785C7D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:1813222785C7D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>1813222785C8D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>181322278603D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:1813222785C8D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:181322278603D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl7ALK5AFcGBOJVt4lyS3JcpITcgMJKxZJZ8/UgGHCDAcOfJpXbr9OlFR7rmaBrZbotzSARhtLCcRpS7mbWhpQl1GeKEuxRNgbsCu0Hr8cG1i6aLtlu0gu81tH8Gdr8PJTPUB+VKVS/XwdH7pXJVRxWnataqIbJqVenKeQo+5QJR0dBs03J0s6Kb9Tez7tplt1QuWo71Wyv0IOESW7oUTW1Daskb2kiI2DWMxWJRXJSKLBkatmlaxsfjQ4BHMEVa83qdURYoaW78cTEEDFGEi5hNjWtjz+c65G5AhhSJNIFNrPBULNMw64b0CTkZXmn5Xgh9OmDZso0oowSjiHwhVZ9HECMWFlrRkCVEjKYnk7BMBazDEuvYKtMrzdindiHQHsOEI52PkLXBeoUBJEAxFH69+g3t6rKuZVvfEkT5gCVTvr/8Mz5A5xCxGEKdb9PaULsc8EilmteAXZ/iKOVkDk9qWGOEgW+6CfhyqMJLAgOyfCBcDuiSK3bGLr2D5boaHhkCF/+nQTvNWYP0UJRC82+7XrZfvkzkPVmd597z3ary13JQ90erYSMjsOucGfLWrpcHQ5kP0XrHJA7vPxZLVur2nq1Zi8TPtjOvBC8Mmytx5z+t2qz7fl9Og/fh2LsDPkeV8O2Gcc8xxjMnCXpePF7c/fZry7AWicD/rM+/rNHNfRixpzfaSY3u8NGbBWZ3dQ/jz37v1YdPDz19pXU2mNxg2/z8FUZVII+m3TXvx+1J+31ulqP3jueFH92WE/d7Xq3Wjb+GuJGns8N/37Y980HaHwMW26UaA98rdGSXkDgvZspC5CHIXN1YiQ8XQIXWVLuUdriplDsSurKH67VVs0q2bVdrTrvmlbzOremUSrf1utUxWzedW2srMmsWBxTbjA6IiqUkdz025wniqcuBhpDoc5ZKpePaGUQPCVTw6as8BIxyeGNSni0rsYg5QosYJk4akgX6Wk0qtepYKzwx8Uyfk9ZAQLKnyZa9p8mvgElMQAm3mmsuB5sLWYsZmqcisopzVKSQSmlPlMrKrTXH4GQaR6CYGlMWphEU41GcVcbg66+tI8wzK+E4ZolAUXYgjJPpHf7bVkL6hEQ5cJXSDchuwpE7xt7mczpvZzfvLXxLVk2dL1lWkRC8ZrL/63ta1Jjko5Inhnk+FvmWP4Q4AmCc4WccliaPF87JTvTtZS6vBSkkzW1/Z8gqzorpfJ5mLS2XS0Yi4Q2pm5YRAE6lzq3e2ASokUMYF10qOeuDyLl9n18qRjQQSMBUzl8hW17wigiAq1eELw/O8tInyl5IWTcBS3HM1o7kC0gxPvtIwi5WftL8Ij8LloTf7TqCtRNH5ikfEYLQoVqpC2V1YjYwk7BESiFLdsGPARwLvm/Mi5xzEXKa+qmA038KSuMaGsKYpVT4npYZdnU34ylWMbjfTj9gMmnP33rkvx97OslGAIN8IXKS4asr21XzT4c72r0JekK+q+fke59d84f5p2WnTocz3vwX</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl7ALK5AFcGBOJVt4lyS3JcpITcgMJKxZJZ8/UgGHCDAcOfJpXbr9OlFR7rmaBrZbotzSARhtLCcRpS7mbWhpQl1GeKEuxRNgbsCu0Hr8cG1i6aLtlu0gu81tH8Gdr8PJTPUB+VKVS/XwdH7pXJVRxWnataqIbJqVenKeQo+5QJR0dBs03J0s6Kb9Tez7tplt1QuWo71Wyv0IOESW7oUTW1Daskb2kiI2DWMxWJRXJSKLBkatmlaxsfjQ4BHMEVa83qdURYoaW78cTEEDFGEi5hNjWtjz+c65G5AhhSJNIFNrPBULNMw64b0CTkZXmn5Xgh9OmDZso0oowSjiHwhVZ9HECMWFlrRkCVEjKYnk7BMBazDEuvYKtMrzdindiHQHsOEI52PkLXBeoUBJEAxFH69+g3t6rKuZVvfEkT5gCVTvr/8Mz5A5xCxGEKdb9PaULsc8EilmteAXZ/iKOVkDk9qWGOEgW+6CfhyqMJLAgOyfCBcDuiSK3bGLr2D5boaHhkCF/+nQTvNWYP0UJRC82+7XrZfvkzkPVmd597z3ary13JQ90erYSMjsOucGfLWrpcHQ5kP0XrHJA7vPxZLVur2nq1Zi8TPtjOvBC8Mmytx5z+t2qz7fl9Og/fh2LsDPkeV8O2Gcc8xxjMnCXpePF7c/fZry7AWicD/rM+/rNHNfRixpzfaSY3u8NGbBWZ3dQ/jz37v1YdPDz19pXU2mNxg2/z8FUZVII+m3TXvx+1J+31ulqP3jueFH92WE/d7Xq3Wjb+GuJGns8N/37Y980HaHwMW26UaA98rdGSXkDgvZspC5CHIXN1YiQ8XQIXWVLuUdriplDsSurKH67VVs0q2bVdrTrvmlbzOremUSrf1utUxWzedW2srMmsWBxTbjA6IiqUkdz025wniqcuBhpDoc5ZKpePaGUQPCVTw6as8BIxyeGNSni0rsYg5QosYJk4akgX6Wk0qtepYKzwx8Uyfk9ZAQLKnyZa9p8mvgElMQAm3mmsuB5sLWYsZmqcisopzVKSQSmlPlMrKrTXH4GQaR6CYGlMWphEU41GcVcbg66+tI8wzK+E4ZolAUXYgjJPpHf7bVkL6hEQ5cJXSDchuwpE7xt7mczpvZzfvLXxLVk2dL1lWkRC8ZrL/63ta1Jjko5Inhnk+FvmWP4Q4AmCc4WccliaPF87JTvTtZS6vBSkkzW1/Z8gqzorpfJ5mLS2XS0Yi4Q2pm5YRAE6lzq3e2ASokUMYF10qOeuDyLl9n18qRjQQSMBUzl8hW17wigiAq1eELw/O8tInyl5IWTcBS3HM1o7kC0gxPvtIwi5WftL8Ij8LloTf7TqCtRNH5ikfEYLQoVqpC2V1YjYwk7BESiFLdsGPARwLvm/Mi5xzEXKa+qmA038KSuMaGsKYpVT4npYZdnU34ylWMbjfTj9gMmnP33rkvx97OslGAIN8IXKS4asr21XzT4c72r0JekK+q+fke59d84f5p2WnTocz3vwX</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTH10SvoFlo4wg4JHjqIcQI/Xlzsx3UCgTaBJEf31JylQAYHLuU+d7O6svfZHVnIpcBw5QV0ISCTlrLCIIyaCzFo10oQFHAsqAoZjEIEkQa/evg+cohXg9Raj0GpUjX9txw9tF1dMu+xj06t4ofl2gX1zcFEpaxP2ACtXIVJoMSExk1XDseySaZVNq9K3KoHjBV6p6JbKr0bhGRKhsJVL0TJWpBaiaoyknAYIvb+/F9/dIk+GyLEsG72073tkBDE2apfLjLJASW3lT4ohEIgiUiQ8Rpdoy+cyFEGPDhmWaQKrWOGhWBayKkj5hIIOz4x8L4QtNuDZ8hozzijBEf3Euj5tkCMeFurRkCdUjuKDSdiWBjZhQUxie+zMQNvUTgTaYpgIbIoRtldYXRhAAoxA4anbqhpnp3Ut29pPMBMDnsRie/l3fIDNIeJTCE2xTmtF7XTAPZWqXQIJWoxEqaBzeNDDOsUExKqbQE6HKnQSGNDFPRVqQBdCs0Ob9HaWy2o06BCE/D8N2mjOEuQZRynUbsR5o+eNkzoptcbsRYxR4+XZIfyX5VczApvOmSFv7XK5M5T5EC13tNGg89uePbffvH9CPu69nd9NJuVGXeJn5w4m4pV1eLny5E2ct8HrqEMb0+79ZDJ5cAmDTqPPLn6mcSxur+ftl6vRL8ttLvzWU3Lruc744fHlZ+uj4zXtT+/TJfEHb8pKnXriGuY/Ro8/3GafOvXw/rb7nozbs8fovu/9vonKT87n7PmuB7epwEg2uxedu/MmKnnVPJ0N/tu29ZnvpW9jIHK91GPQahRuVJewPC5m2kJDc5C5BlMtPkICk0ZN79LaEaRK7mgYqB4u17Zvu47jXPhly224jZumVXLdZqVi31j1q5umvRaZJYsditecDaiOpSV3OTbHCZI4EMBCSMw5T5XSCeMIYgNLXGixrjoEnAnocy3P/tCn/kd5Rrwwsv1wHnscf9qE+0bhgctH9pjUBxKSLVG2nS1R7gKhUwpaufVgCzXZQqpizPA8lZFdnOMig1Rpe6JlVm31S0jQeBqBpopiHqYRFKejaVYaJJZfx8REZFYqyJQnEkfZiUAH89v9ty6F8gmpdhA6pStQ7YQ9l4y7zudw3qXNvNfw9TSk+oCpusqEkiWT7V9f46LnJJ+VPDEi8rnIt/wlxB4AdIQf2i1NHi+c043o69tc3QtKSWrr/s6wXZwV0/k8zVrqeS5KFDxSwmmjHpBUCd1Hn0+AoRwCnXSr5Kx3Iuf2bX6pHLGexBJiNX+FbHnCM6IHQj8jWurkLE59o2yFVHWTsJD7bNeRegJpxkdfSSQg2k+ZO+rzzpPwq117sDbiqDzVK0JSNtQrfaN8HJgNwhUsVVrIk03wfQD7gm8b8yLnXKSaprdUwuE/BS1yVQMTwlMmWw0jM2wKb8ZTfkwh+HL6BpNpe/7Yo//92jNpNgIE1BNR0Axf39mBnn823BDvVdC9+l26vjim39vsat/M3y0bddqd8dof</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxieR8NmExFjuiMKQUXFDfeXE1gUi7JJsemvP4XdOnafnrlzboQRWElW5pcLWV/9wIbvsR2AMYoTNwyqqvxa+5sXBZ4zuUMDiU2u0eR5tiGKsN3gWpZ1gC2LgzRfq6oYp0gNcGIEyWuNpRmuQYsNhl4yTIcnP/alybL7WnWNYkxME5UXulYtfC/AnZvb11oaB53QwC7uBIaPcCeBHR1o4w7R7Bh3TLW3H+8obw7jNydJog5FwRcTQeR58AWGPvWD+qTzw8Qd3bUDI0lj9OHTxK+1j715nr/k3EsY2xRL0zRFixTRMbFr/1V7q9w3I1MNrPB93TWCMHCh4blXowSlocQJzSrw7DB2E8f/hWmGYujSdAMVsAGZZvBXjfrp4IbuDy19Ahljo4Edg7kbWyALxSiAqLpaqK+1v/6sgu97l7ERYCuMffxl/d8goSBDXhghs4Hvkd3R/bnFb9L19gPBjhpAL8VuhiZlm0QGRLg6i5HlFmMXk+YzcfVW/mqB7x2G4H8pyQ/qGSeBTX2TGdm1EU7+n3o91+rdytrwUvRm1C+51D5ch4dTT3CiNWLX07Hht9kwfL1BeFZ+B/Uo9cf6a6M++upjk7Ucj1f9vTxL47NXrEfaYrLb9/yLinB2tlpcL5ZUIVGOttRuXwTAqENnNd0JfWErOofNQt/Z7pifzi+y4EwrgwMyjxpFR1KvvZjOjhIfSdP2UOjrOqK1ka0Nzx67DbShuldW8/rYkE/N4+qqWetdMh5tiyyV5WxgjmhlO664+inczA6tMbEmZ/xlVl+9/ozpOYYyrhG63IIs/295WpSNxHgsuuWksMjnmaA3TVW7dbnbBahrg1yVgK1K4yuYSPbp7JzcvpjTEpivekAGF20Bctneyev5fKTk5nrt7ddqrydpi2Y+ADu5Ql7ISrGW99shbWz20Y7t0XtdksztIjxww8gcnPKBAyfaUssnS/WiHZVislTozU1mF2R91Y4aM12uuMrmKInaQsnl/OZRVnJnst8sot1KzOFVmWug2QfMSuk62mDprxnILRx4VMYaON3kkqN112utUJZgVpHsyZrEtuz29hH0zejge86T8QExvjT768uh76X7q3LUukq/q5/7unrg5LkyBIvd6rBZn4xNL6vAwQQc7h5d3jW2YW7v27k83w1H4V51MjgBc0WS5oCkiwaa2h+CsC8BrQnc4to9Sq2wa/ZyasjiSl30+q3txT1vsdGnPYNpt5ndeNOanVuyEtT3o/RwdDRn25vWR7qZrcREvO5wVs9ahsvAIrLmW2WQjAprMNcrh5lcbOGgbtpDyruKvVgThiC+XhxPsxfJpjXFl4NrWRtpO216guVp3CKyPCu64PoynJ9iuiUhjqV2l2yUVICtSQD0j6ujNNekdplUU83nO00yQE9JUnA9ssmIXZ+Hg8yDOw6ExWgzPZ4+CmPKuSJR+VwhbaVU2jIwyyIM9JXSO4KVZNuxZCs9aQ5lMN+po3xH8rUaEOWveezd8mgrElC4PWiJgwq3osVkmujNJrgE0iroiY52LjZmy6eFM1LG+iRq5hqeWMF+E540341XcaqvRqPJuDgs0/7pSGaVReujjNtXlOwUAXcyWjonOZSNWbTbJVE9gDFM1MjX1OI63eNj2z349LDOM9KMlqHArvxDvuobyn4U2zozGiyCGSeIFZxal4FfP7bzTX2ptyLB7AaWfLlQ+3hNhyDsiQv+bBYse3JW+biVW0NwOhjspPBE6SIqo/0S5ov5aKP7db7CZ+OxT1+XVHMSTXO9nzeV+bzOmdJysMRR7O7Stl3E08Bkd0bSyvb0uuVG3klk09OyGXFr2yfFmmVmJGizyry5hXvfFiI4pBZUBhTBGqv9y+FqXCN/Ct8H6Nfp8BC+zw/qebJ8Gj130qGTbkUwuS/LA0iVqz1yKhjJ7wlMKXHNhnVT7UQlC8IJCpLaW7mrJC+dlFAc1+yQI+N9rbRogRApgeUYlm0xnEI3aaZHA5oXRUaUpDvLeUfxBWI3DCy39FXyuPdT6vcAod/BKDBR3MjCFDoI135jscxXVQ0W5PgNA4yWIeGJnMAxIujyNM+32rzMdMUW1+UZWhHpNs3LSq06CZNpMI2BlaD4M0dsfuKICwTdyEUlkSxPU0yOU5yQlJyNLE085iUzXgKUEqoZl2yvwzbbPIVdP/JQCZjyQzP10EvkRLcEUfj9yTYMiG/ShbL8W9W7t5P+lyF+fXfPBtEx3VIBl/FIiFQUfUN4m/dgfh208Bz03TxITbc80Elqk9iF70g+v/rZMWWrPNqFRHWH/ND8Kvhklfoa0MORmbnw0fOP6wBhk4RvvN1LcjZezi9plqW3Iggll4qJeYqhaIHSEUwJIboswxMKqIcJ6o+46AP1F88P+Wd8aeIEekK+Z5+0TPW2/IOLiI5weRFRScsXf3rL+eSS5C1BRfKdrOuR+0qJ+LdXGtiBpR4Rz8gjD2PzZ7m+sfXkh8RZDjA3sMtVyTwvv2gKGBKzLhliYfxs/DsD3zn/LHwk+YElId10SBP06zfVcjq91gwIwzRIVLl2EzxPzBvO5BKhzk+lf5m5cb8PMl/gX5L5rTbWyezyjdpD1/3fyg331i4QkV3YvWF5rRXkXkqcB/bThP4A+HVIM4LMKjwHWizfeh7StAAeQ/pzJG//Ev9b8pTTr9/D2z8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20150609_0257501433842070210</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20150609_0257501433842070210</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20150609_0257361433842056380</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20150609_0257501433842070210</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_052433</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>1813222785D1D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>181322278604D3DFE0533E991F0ABFE1</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E607201723132613E0401F0A059919BB</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="58ce5055-0bfe-4906-a247-c84a5244e475"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b40bbda7-1d27-4e6d-a355-48e9b2905164"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="90513f71-ccd2-4a7b-9b36-2de363d10cd4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="1b9543f1-330e-4de1-ba98-7312a40b4313"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="2333d9ab-088c-4b4f-a33b-c1b22267cbf2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="a58ed7b7-da9c-48cd-aa4d-3499f50342b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Self");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"18132227895DD3DFE0533E991F0ABFE1:8FD9FCA1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181324EB051C4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181324EB051D4186E0533D991F0ACB06</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:181317967E6DB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXyDAK5AFYEk4xrCZEPI7WVLyG1QYkuOJBvI149kwAEGssw+udRunT590ZHOBUpi1+8KAVwSRiuLJKbCL6xtI+PUZ0gQ4VOUgPAl9kfdm4HvVm0fbbYYlaDfNv49Q7VmHbVa5gRHnlnzYGKihjsxvUarhpEdnbW8unIVIoOAComobBuu7dRN+8y0W/d2y/dc36lXz5zWi1F5AC4UtnKp2saa1EK0jZmUqW9Z8/m8OveqjE8t17Yd6+lmMMIzSJDROV9lVATinbU/roaAIY5xFbPEOrd2fM5D4Y/IlCKZcVjHCo/Fsi27ZSmfUJDpN6PcC2FAI1Yse4gySjCKyQfS9bkBOWNhpRtPGSdylhxNwrE1sAkLbGKnRr8Z1i61E4F2GHKBTDFDzhrrDiLgQDFUxndB2/h2WteKrfccURExnojd5d/xAZpDzFIITbFJa03tdMADleqcA/YDiuNMkByGelhThEGsuwn4dKjKLYeILAZEqAFdCM3O2qa3t1xVo0+mIOT/adBWc1YgDyjOoDOgacaEtbyts0kePD734rEYD6z8SfzTLghsOxeGsrWr5d5QlkO02pHFDF02Hr878ctdeC35+1PqOE2aRV3E5NUoDwaYNxm/uY6bL8/3yeuPx4A2WJTP6jD0nHpz0rta/syHy9ZF8PHm/nyL4T58HC5cD568t+h1/HzdrU9+Tq7H8x8CT+ez29tLHgv3e/32siuHyzh+eV0OcAS4OZ7O7qwfyUsDz94/7IZ8zK/d5/fLp2F37FkP8nWd7h7/XdvmzI+yyStguVnqMQj6lSvVJSS/FjNtIaEZFa5+qsVHSKDS6OhdWjv8TMkdCX3Vw9XaaTqeW7u8sOtOv+Y0zy7tuuf1Wy3nyu72LuyzjcisWOxR7DEaER1LS+5qbL4miBNfAA2BmznLlNIJ4wvEPpKoEtA7dQgYFXDPlDw7YYMx1kAciUk4nzdTL0wiRCQYlSGTv+gv3o0k8B1NdtwdTb4DTFICWrj1XAs12EKqWryjPJOxU81RlUKmpJ1rlfVdpSyWIEkag2ZqJSzMYqims7SojCVWX9dEWBRWInDKuERxcSCso+nt/9tUQvmERDsIndIFqG7CgTvG3uRzPO/6dt4b+G4WEn2+VFklJ3jFZPfX57ToMSlHpUwMC2fDvdzylxAHAKwv+Fn7pSnjhTnZir65zNW1oISks+nvO3Kq79Usz7OipbWaZ3EFbynddKwR4Ezp3PKevQG1SgjrpEulZL0XubTv8svkjI4kkpCo+asUyxNeESMQ+hURqIOzOPWJshNS1U3CQh6y9WL1AtKMv3wkYR9rP2W+VZ854+Fnuw5gbcVReapHhCR0qlf6QlkemQ3MFCxRUsj4NvghgEPBd41lkUsuUk3TJJNw/E9Fa1zbQBizjMqgbxSGbd0teMplCv6n0x8whbSXbz3y3489kxQjgJWGKf8CX1/Zvp5/Ot3S7nXQI/Ld+0q+d9l1/jD/admq0/6Md34D</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXyDAK5AFYEk4xrCZEPI7WVLyG1QYkuOJBvI149kwAEGssw+udRunT590ZHOBUpi1+8KAVwSRiuLJKbCL6xtI+PUZ0gQ4VOUgPAl9kfdm4HvVm0fbbYYlaDfNv49Q7VmHbVa5gRHnlnzYGKihjsxvUarhpEdnbW8unIVIoOAComobBuu7dRN+8y0W/d2y/dc36lXz5zWi1F5AC4UtnKp2saa1EK0jZmUqW9Z8/m8OveqjE8t17Yd6+lmMMIzSJDROV9lVATinbU/roaAIY5xFbPEOrd2fM5D4Y/IlCKZcVjHCo/Fsi27ZSmfUJDpN6PcC2FAI1Yse4gySjCKyQfS9bkBOWNhpRtPGSdylhxNwrE1sAkLbGKnRr8Z1i61E4F2GHKBTDFDzhrrDiLgQDFUxndB2/h2WteKrfccURExnojd5d/xAZpDzFIITbFJa03tdMADleqcA/YDiuNMkByGelhThEGsuwn4dKjKLYeILAZEqAFdCM3O2qa3t1xVo0+mIOT/adBWc1YgDyjOoDOgacaEtbyts0kePD734rEYD6z8SfzTLghsOxeGsrWr5d5QlkO02pHFDF02Hr878ctdeC35+1PqOE2aRV3E5NUoDwaYNxm/uY6bL8/3yeuPx4A2WJTP6jD0nHpz0rta/syHy9ZF8PHm/nyL4T58HC5cD568t+h1/HzdrU9+Tq7H8x8CT+ez29tLHgv3e/32siuHyzh+eV0OcAS4OZ7O7qwfyUsDz94/7IZ8zK/d5/fLp2F37FkP8nWd7h7/XdvmzI+yyStguVnqMQj6lSvVJSS/FjNtIaEZFa5+qsVHSKDS6OhdWjv8TMkdCX3Vw9XaaTqeW7u8sOtOv+Y0zy7tuuf1Wy3nyu72LuyzjcisWOxR7DEaER1LS+5qbL4miBNfAA2BmznLlNIJ4wvEPpKoEtA7dQgYFXDPlDw7YYMx1kAciUk4nzdTL0wiRCQYlSGTv+gv3o0k8B1NdtwdTb4DTFICWrj1XAs12EKqWryjPJOxU81RlUKmpJ1rlfVdpSyWIEkag2ZqJSzMYqims7SojCVWX9dEWBRWInDKuERxcSCso+nt/9tUQvmERDsIndIFqG7CgTvG3uRzPO/6dt4b+G4WEn2+VFklJ3jFZPfX57ToMSlHpUwMC2fDvdzylxAHAKwv+Fn7pSnjhTnZir65zNW1oISks+nvO3Kq79Usz7OipbWaZ3EFbynddKwR4Ezp3PKevQG1SgjrpEulZL0XubTv8svkjI4kkpCo+asUyxNeESMQ+hURqIOzOPWJshNS1U3CQh6y9WL1AtKMv3wkYR9rP2W+VZ854+Fnuw5gbcVReapHhCR0qlf6QlkemQ3MFCxRUsj4NvghgEPBd41lkUsuUk3TJJNw/E9Fa1zbQBizjMqgbxSGbd0teMplCv6n0x8whbSXbz3y3489kxQjgJWGKf8CX1/Zvp5/Ot3S7nXQI/Ld+0q+d9l1/jD/admq0/6Md34D</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMb5gbp7ADNhJSsMlBZK2eTkj5AUUbAks2UB+/ZEMuEBJDj1PHq1Xu9/ufvqkW46i0HZbnEMsCKOFTRRS7mbWhpbE1GWIE+5SFAF3BXZHrV7XtYumiw5btELHb2j/BJVJaQLTmj6t2I7uTCZVvW7VAt2pVqc1VC07ciVdOU+gQ7lAVDQ027TKulnRzfrYrLsl27VrxYpZf9UKLxBzGVu6FE1tD2rDG9pciKVrGOv1urguFVk8M2zTtIyfve4IzyFCWvN2V1GWKG7u/XExAAxhiIuYRcatceJzG3B3RGYUiSSGfa7go1ymYdYN6RNwMvui5Xsh6NApy5YeoowSjELyjlR/eiDmLCi0whmLiZhHHxZhmSqwDhusY8uhXzTjFNqVgU4QxhzpfI6sfawhTCEGiqHwPOw0tC/XTS3bOo4R5VMWR/x0+Xd4gKYQsiUEOj+UtYd2fcALnWreAnY7FIcJJyn0FVmXCAPfTxPw9aEKTzFMyaZLuCTohit0xjG8s+WuGz6ZARf/Z0BHw9kFeUFhAs2f3n3bKW3X77WF1f/ubxde+e3Ve614nV4jA3DsnBny0e6WZ6TMSbTbQUrQW9+Mvi5/OT+m4cvqITAfSC+l6NF+C2Fsv9eff63Dl+n8zVr11++LVdDDoZh5r4unakt4N2vbZs/hoEYHQ5L+8MykzxdvT/UtLr+wu2F3s7oB5+tjt3wzfBivB6+b1PnlV9tR/DZ8pH63xJ/Hmxnr3704gyjpbr1VvT7psujbQ2/wE/W/d9/99mDx7fsT8iRL83KO8J/aDmd+lEzeAIvDUtGg4xfu5ZSQ+FzMlIUE+jRzdZdKfLgAKrSm2qW0w02k3JHAlTPcra2aVbKq9Ur1ruK37Xv/ziyXSnf1unVvtny7ZR1EZofiDKLH6JSoXEpyd7T5HCCOXA40gFhPWSKVjmufRPSRQIUOHcpDwCiHMZPyPA2d+TZN3u2wRiy7FrI4LPF0i22t0GdiQAdxayogPtFkyz7R5CFgsiSghFvxmkticyF7sUJpIkKrmKIihURKe6xU1rWdWtngJFqGoJAaEQuSEIrL+TLrjMF3X1tHmGdWwvGSxQKF2YEwPizv/N+hE9InIMqBq5LaIKcJF+4Y61DPx3WXj+s+hG8lAVHnS7ZVxATvkJz++s0WRZOcKnlhmOe0yLf8ZYgLAYxP8BnnrcnzBSk5yn64zOW1IIWkeZjvClnFVTFJ0yQbqeOUjFiGN6RuWsYIcCJ1bjtmC6BGHsK46lLJUZ9lzu2n+BIxpyOBBESSf4VsecUrYgRcvSI68uBsrn2inKSUfROwEZdsXihfQArxp48k7GLlJ81P8rNmcfB7XBdiHeWRdcpHhCB0plbqQtl+wA3MZFgipZDFx8EvBbiU/NSYNznHIiSbJomAj/8UlMY1NIQxS6jo+FpmONbdDKfYLsH97fRHmEza87ce+e/Hnk4yCmCQL0ROsvjqynYV/+nsSLv3Sc/l23bu2mbZ8hyrVsnk29/Jt9c2K3lTTtA1/zD/aTnq0znHm/8C</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxieR8NmExFjuiMKQUXFDfeXE1gUi7JJsemvP4XdOnafnrlzboQRWElW5pcLWV/9wIbvsR2AMYoTNwyqqvxa+5sXBZ4zuUMDiU2u0eR5tiGKsN3gWpZ1gC2LgzRfq6oYp0gNcGIEyWuNpRmuQYsNhl4yTIcnP/alybL7WnWNYkxME5UXulYtfC/AnZvb11oaB53QwC7uBIaPcCeBHR1o4w7R7Bh3TLW3H+8obw7jNydJog5FwRcTQeR58AWGPvWD+qTzw8Qd3bUDI0lj9OHTxK+1j715nr/k3EsY2xRL0zRFixTRMbFr/1V7q9w3I1MNrPB93TWCMHCh4blXowSlocQJzSrw7DB2E8f/hWmGYujSdAMVsAGZZvBXjfrp4IbuDy19Ahljo4Edg7kbWyALxSiAqLpaqK+1v/6sgu97l7ERYCuMffxl/d8goSBDXhghs4Hvkd3R/bnFb9L19gPBjhpAL8VuhiZlm0QGRLg6i5HlFmMXk+YzcfVW/mqB7x2G4H8pyQ/qGSeBTX2TGdm1EU7+n3o91+rdytrwUvRm1C+51D5ch4dTT3CiNWLX07Hht9kwfL1BeFZ+B/Uo9cf6a6M++upjk7Ucj1f9vTxL47NXrEfaYrLb9/yLinB2tlpcL5ZUIVGOttRuXwTAqENnNd0JfWErOofNQt/Z7pifzi+y4EwrgwMyjxpFR1KvvZjOjhIfSdP2UOjrOqK1ka0Nzx67DbShuldW8/rYkE/N4+qqWetdMh5tiyyV5WxgjmhlO664+inczA6tMbEmZ/xlVl+9/ozpOYYyrhG63IIs/295WpSNxHgsuuWksMjnmaA3TVW7dbnbBahrg1yVgK1K4yuYSPbp7JzcvpjTEpivekAGF20Bctneyev5fKTk5nrt7ddqrydpi2Y+ADu5Ql7ISrGW99shbWz20Y7t0XtdksztIjxww8gcnPKBAyfaUssnS/WiHZVislTozU1mF2R91Y4aM12uuMrmKInaQsnl/OZRVnJnst8sot1KzOFVmWug2QfMSuk62mDprxnILRx4VMYaON3kkqN112utUJZgVpHsyZrEtuz29hH0zejge86T8QExvjT768uh76X7q3LUukq/q5/7unrg5LkyBIvd6rBZn4xNL6vAwQQc7h5d3jW2YW7v27k83w1H4V51MjgBc0WS5oCkiwaa2h+CsC8BrQnc4to9Sq2wa/ZyasjiSl30+q3txT1vsdGnPYNpt5ndeNOanVuyEtT3o/RwdDRn25vWR7qZrcREvO5wVs9ahsvAIrLmW2WQjAprMNcrh5lcbOGgbtpDyruKvVgThiC+XhxPsxfJpjXFl4NrWRtpO216guVp3CKyPCu64PoynJ9iuiUhjqV2l2yUVICtSQD0j6ujNNekdplUU83nO00yQE9JUnA9ssmIXZ+Hg8yDOw6ExWgzPZ4+CmPKuSJR+VwhbaVU2jIwyyIM9JXSO4KVZNuxZCs9aQ5lMN+po3xH8rUaEOWveezd8mgrElC4PWiJgwq3osVkmujNJrgE0iroiY52LjZmy6eFM1LG+iRq5hqeWMF+E540341XcaqvRqPJuDgs0/7pSGaVReujjNtXlOwUAXcyWjonOZSNWbTbJVE9gDFM1MjX1OI63eNj2z349LDOM9KMlqHArvxDvuobyn4U2zozGiyCGSeIFZxal4FfP7bzTX2ptyLB7AaWfLlQ+3hNhyDsiQv+bBYse3JW+biVW0NwOhjspPBE6SIqo/0S5ov5aKP7db7CZ+OxT1+XVHMSTXO9nzeV+bzOmdJysMRR7O7Stl3E08Bkd0bSyvb0uuVG3klk09OyGXFr2yfFmmVmJGizyry5hXvfFiI4pBZUBhTBGqv9y+FqXCN/Ct8H6Nfp8BC+zw/qebJ8Gj130qGTbkUwuS/LA0iVqz1yKhjJ7wlMKXHNhnVT7UQlC8IJCpLaW7mrJC+dlFAc1+yQI+N9rbRogRApgeUYlm0xnEI3aaZHA5oXRUaUpDvLeUfxBWI3DCy39FXyuPdT6vcAod/BKDBR3MjCFDoI135jscxXVQ0W5PgNA4yWIeGJnMAxIujyNM+32rzMdMUW1+UZWhHpNs3LSq06CZNpMI2BlaD4M0dsfuKICwTdyEUlkSxPU0yOU5yQlJyNLE085iUzXgKUEqoZl2yvwzbbPIVdP/JQCZjyQzP10EvkRLcEUfj9yTYMiG/ShbL8W9W7t5P+lyF+fXfPBtEx3VIBl/FIiFQUfUN4m/dgfh208Bz03TxITbc80Elqk9iF70g+v/rZMWWrPNqFRHWH/ND8Kvhklfoa0MORmbnw0fOP6wBhk4RvvN1LcjZezi9plqW3Iggll4qJeYqhaIHSEUwJIboswxMKqIcJ6o+46AP1F88P+Wd8aeIEekK+Z5+0TPW2/IOLiI5weRFRScsXf3rL+eSS5C1BRfKdrOuR+0qJ+LdXGtiBpR4Rz8gjD2PzZ7m+sfXkh8RZDjA3sMtVyTwvv2gKGBKzLhliYfxs/DsD3zn/LHwk+YElId10SBP06zfVcjq91gwIwzRIVLl2EzxPzBvO5BKhzk+lf5m5cb8PMl/gX5L5rTbWyezyjdpD1/3fyg331i4QkV3YvWF5rRXkXkqcB/bThP4A+HVIM4LMKjwHWizfeh7StAAeQ/pzJG//Ev9b8pTTr9/D2z8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20150609_0305181433842518001</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20150609_0305321433842532246</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_052433</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>181324EB05264186E0533D991F0ACB06</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>181317967E6EB2FDE0533E991F0AD2A1</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E607201723132613E0401F0A059919BB</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_UserGet_FUNC_NONCLG_FAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="064d970f-4f5f-4dd8-9757-393c7b147dc8"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="04a10854-73a1-403b-a275-90c005468240"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="baa542f4-e374-47c8-9934-99d2bc893488"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="4b8aa91e-f7f6-468d-a968-6f1d13574abe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="10f4dcde-30b8-4d15-81af-4064c55fbce4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="353626e0-b490-4a3f-8ac7-90d16a891d2a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC192E6CAD48F362E0401F0A05991C36:6BB1652D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0501231403082083427</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E9C1AAD89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E9C1AAD89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E9C1AAD89A6E0401F0A05991C2A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E6B2F9C4C77E0401F0A07993917</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E5A8AAD7266E0401F0A0799390B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E6B2F9C4C77E0401F0A07993917</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E5A8AAD7266E0401F0A0799390B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH7vr4gyj6uQC5eQqCBRLjuZ6RVK29mXlescwENip7EDob9+7NCkQGm3XQkJ+eT4O9+5+LNPOYojx+9xDqkgjGrBoKP/64Se47UadaOJnJbRgNAzHt0QDLcNYbvdcB+Rg3Qt4DyDgHKBqOjojmU3DKtl2O1by/Mt23fsWrve/kfX7iDlElq61Cxdy+OIcr8I29GzlPoMccJ9imLgvsD+pHdx7ktPH5Wc9O7plmURMO0uhEh808S1EDBEEa5hFpun5p7Pacj9CZlTJLIUXmKGvKO/7F2v17V1vcbSuelYlmVanil9Qk7m3/TuSbkZwoDO2HbdR5RRglFEnpEidQFiwUKtF81ZSsQifgfaNm1LQRuQYwPbDfpNN18DFOw+ibRHMuXI4Atkl2BjmEEKFIM2HQcd/dvnOrjde5siymcsjfnB+muUgK4gYgmEBi8zK9l9HvFIubqngP2A4ijjZAWXakwShIFr1ynMSH5OuBy+kGtF+7Wcyx8ppwzwV9pyau5yldTNI9UZkDlw8X96ttuvLcodijLoPqyb2fP0xya3H7JpMv55B/niKrUHDG46BYVd5y2pqt0v68NhrWbrZVPMzOsfPXTvWCQh+G6cz+dX8zEKWqPrn83hdRCI8PuUXd2vvVZ++Wt5UR8Gi+VfmEvQZJG6wymq0+ubZTu3ntOT5fk9fqTB2dllbOfOjR3h5M79OVouh5PNlUfrjft+9Pe53Z7+brp8ln9HAZplLLGcLFgv4YkOCUrzB9TeTIPnk1H0tDT766Vzj26WJp/h5FfnNafdHPaNpSRMssffgEW5VOMRDLSR7BcSH8uLspDQmBWufqI0igugQu+qXUpa/EwKEAl92cztetS3PWfYOnNGXr/Rd92h1bDskdWzXM+re7ZbatCWxQHFPqMzomIpld3Oz8cEcexzoCGkxopleAFc/wBxgATSAjqWh4NRDrdMqjidC2QtXOd3SOYsWrCNa1sZpnVdu2Tiil6lvZmAdE+5bWdPuceA5cCAknc131wOOBeyFE9olYnIrq1QjUImL4BUabDvNNpNk5M4iUARNWMWZhHUkkVSFMbk23/HQJgXVsJxwlKBIrs4fu9md/itLIT0CYly4CqlM5DNhCM3kV3m837ezd28S/heFhJ1ymRVRUrwlsn+p9dhUVNSTUqVGOZ2yb3a8kWIIwDmB/zMw9JU8cIV2Yle3q7ywpBy0i37+4RqT7VstcqKjrpKKlMJb0rFtM0J4Ezq3eaWLYGaFYT5qeumYn0QubLv88vEgk4EEhDL+dOK5SfeGhPg6q0RyHOTf/YhsxdS1k1ALo7Z+pF8kijGH75asI+VnzRfy781S8PXdh3B2okj85QPDEHoXK3UxbJ5ZzYwk7BEKiFLd8GPARwLvm+silxxEXKaHjMB73/RlMR1dIQxy6gIBnph2JXdgqfYJOC/Or2BKaT95a7O+bt39cPF+UQKYIz0ypf8t7NBinHBoKsnQcGlo+fy6SmD0/mOzL8QfKv0Xt/u9QZtr9eqlL7peXbf6VUF3Muk+8b81rJT08Pz0P0D</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH7vr4gyj6uQC5eQqCBRLjuZ6RVK29mXlescwENip7EDob9+7NCkQGm3XQkJ+eT4O9+5+LNPOYojx+9xDqkgjGrBoKP/64Se47UadaOJnJbRgNAzHt0QDLcNYbvdcB+Rg3Qt4DyDgHKBqOjojmU3DKtl2O1by/Mt23fsWrve/kfX7iDlElq61Cxdy+OIcr8I29GzlPoMccJ9imLgvsD+pHdx7ktPH5Wc9O7plmURMO0uhEh808S1EDBEEa5hFpun5p7Pacj9CZlTJLIUXmKGvKO/7F2v17V1vcbSuelYlmVanil9Qk7m3/TuSbkZwoDO2HbdR5RRglFEnpEidQFiwUKtF81ZSsQifgfaNm1LQRuQYwPbDfpNN18DFOw+ibRHMuXI4Atkl2BjmEEKFIM2HQcd/dvnOrjde5siymcsjfnB+muUgK4gYgmEBi8zK9l9HvFIubqngP2A4ijjZAWXakwShIFr1ynMSH5OuBy+kGtF+7Wcyx8ppwzwV9pyau5yldTNI9UZkDlw8X96ttuvLcodijLoPqyb2fP0xya3H7JpMv55B/niKrUHDG46BYVd5y2pqt0v68NhrWbrZVPMzOsfPXTvWCQh+G6cz+dX8zEKWqPrn83hdRCI8PuUXd2vvVZ++Wt5UR8Gi+VfmEvQZJG6wymq0+ubZTu3ntOT5fk9fqTB2dllbOfOjR3h5M79OVouh5PNlUfrjft+9Pe53Z7+brp8ln9HAZplLLGcLFgv4YkOCUrzB9TeTIPnk1H0tDT766Vzj26WJp/h5FfnNafdHPaNpSRMssffgEW5VOMRDLSR7BcSH8uLspDQmBWufqI0igugQu+qXUpa/EwKEAl92cztetS3PWfYOnNGXr/Rd92h1bDskdWzXM+re7ZbatCWxQHFPqMzomIpld3Oz8cEcexzoCGkxopleAFc/wBxgATSAjqWh4NRDrdMqjidC2QtXOd3SOYsWrCNa1sZpnVdu2Tiil6lvZmAdE+5bWdPuceA5cCAknc131wOOBeyFE9olYnIrq1QjUImL4BUabDvNNpNk5M4iUARNWMWZhHUkkVSFMbk23/HQJgXVsJxwlKBIrs4fu9md/itLIT0CYly4CqlM5DNhCM3kV3m837ezd28S/heFhJ1ymRVRUrwlsn+p9dhUVNSTUqVGOZ2yb3a8kWIIwDmB/zMw9JU8cIV2Yle3q7ywpBy0i37+4RqT7VstcqKjrpKKlMJb0rFtM0J4Ezq3eaWLYGaFYT5qeumYn0QubLv88vEgk4EEhDL+dOK5SfeGhPg6q0RyHOTf/YhsxdS1k1ALo7Z+pF8kijGH75asI+VnzRfy781S8PXdh3B2okj85QPDEHoXK3UxbJ5ZzYwk7BEKiFLd8GPARwLvm+silxxEXKaHjMB73/RlMR1dIQxy6gIBnph2JXdgqfYJOC/Or2BKaT95a7O+bt39cPF+UQKYIz0ypf8t7NBinHBoKsnQcGlo+fy6SmD0/mOzL8QfKv0Xt/u9QZtr9eqlL7peXbf6VUF3Muk+8b81rJT08Pz0P0D</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxGlj1XIhWuigpRymbJb2i502pm+rIxzkrgEG2KHy/76tUOTAqVdZiUk5JPj73zn4s++4mieOJ7POaSCMKoNe2397wC5YXUauEYdaq5Rw2FotBrINVphI6ijpm1bdqhrQ84zGFIuEBVt3bHsmmE1DLv1aLmeZXtOrVJttF507QlSLqGlS8XStc08odzLw7b1LKUeQ5xwj6I5cE9gb+KPbj3p6aGCk9652rHMA6adWIiFZ5q4EgCGJMEVzObmlXngcxVwb0IiikSWwlvMgLf1t73r9bqyrlZYGpmOZVmm5ZrSJ+AkutA734rNEAxpyHbrLqKMEowS8g9SpEYgYhZofhKxlIh4/gm0bdqWgjZggw1s1+iFbr4HyNmdiXRAMuXI4DGyC7AxhJACxaD9GA/b+sV5HdztfUwR5SFL5/xo/XuUgK4gYQsIDF5kVrA7H/FEuTpXgL0hxUnGyQru1JgsEAauPaQQks0t4XL4Aq7l7dc2XP5IMWWAf6ctV+Y+V0ndPFGdHomAi//Ts/1+7VCeUJJBZ/aLVSNricZR7Pz0l+jOvYP1X2IMMW/nFPadd6TKdr+tj4e1nK23Tb3t86/en8vVuHW5BkGpgKQ+vXy0b+673/HLpFl1snXS4P3JdbpqzvrPA/fH4PW6//Ox71th42k7GozXjeDBj8zQ/bYW5CbejK5nLXLbj2azy8v1A0U3l893jZu136d88zx1x2Q86jqO7TvV16eILWfTqY23zc0L/jUexjEM0KI7vHn49n304s8XtSkab/zRHw2/+j1qv+e0n8OhsZCESTZ9BSyKpRqPYU8byH4h8bW8KAsJjDB39RZKo7gAKvSO2qWkxcukAJHAk83crQdd23X6db/l+72m02j0rZplDyzfarpu1bWuCw3asTii2GU0JCqWUtnd/HxNEM89DjSA1FixDMfA9S8Qe0ggbUjH8nAwyuGRSRVv4UwkTey8tuo2S7fEsWJX1FtSg++YuKf3qR8KSA+U23YOlHsMmCwIKHlX883lgHMhS7FEKwltV1aoQiGTF0CqNFjua9VNTuaLBBRRc86CLIHKIl7khTH57t8xEOa5lXC8YKlAiZ0fv0+zO/5WFEL6BEQ5cJXSNchmwombyC7y+Tzv+n7eBbyfBUSdMllVkRK8Y3L46X1Y1JSUk1ImhrldcC+3/CbECQDzC37mcWnKeMGK7EUvbld5YUg56RT9XaLKspKtVlne0aaSylTCm1IxbXMCOJN6t31kM6BmCWGedd2UrI8il/ZDfpmI6UQgAXM5f1q+POOtMQGu3hpDeW425z5kDkLKugnYiFO2biKfJIrxl68W7GHlJ80P8m/N0uC9XSew9uLIPOUDQxAaqZW6WLafzAZmEpZIJWTpPvgpgFPBD41lkUsuQk7TNBPw+RdNSVxbRxizjIphT88N+7Kb8xTbBXjvTh9gcml/u6s3/NO7+ufodiIFcI700pf8t7NB8nHBoKsnQc6lrW/k01MGp9GezL8R/Kj0bteWSt9y/Xelr7uu3XX8soAHmXQ+mD9a9mp6fB46/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxieR8NmExFjuiMKQUXFDfeXE1gUi7JJsemvP4XdOnafnrlzboQRWElW5pcLWV/9wIbvsR2AMYoTNwyqqvxa+5sXBZ4zuUMDiU2u0eR5tiGKsN3gWpZ1gC2LgzRfq6oYp0gNcGIEyWuNpRmuQYsNhl4yTIcnP/alybL7WnWNYkxME5UXulYtfC/AnZvb11oaB53QwC7uBIaPcCeBHR1o4w7R7Bh3TLW3H+8obw7jNydJog5FwRcTQeR58AWGPvWD+qTzw8Qd3bUDI0lj9OHTxK+1j715nr/k3EsY2xRL0zRFixTRMbFr/1V7q9w3I1MNrPB93TWCMHCh4blXowSlocQJzSrw7DB2E8f/hWmGYujSdAMVsAGZZvBXjfrp4IbuDy19Ahljo4Edg7kbWyALxSiAqLpaqK+1v/6sgu97l7ERYCuMffxl/d8goSBDXhghs4Hvkd3R/bnFb9L19gPBjhpAL8VuhiZlm0QGRLg6i5HlFmMXk+YzcfVW/mqB7x2G4H8pyQ/qGSeBTX2TGdm1EU7+n3o91+rdytrwUvRm1C+51D5ch4dTT3CiNWLX07Hht9kwfL1BeFZ+B/Uo9cf6a6M++upjk7Ucj1f9vTxL47NXrEfaYrLb9/yLinB2tlpcL5ZUIVGOttRuXwTAqENnNd0JfWErOofNQt/Z7pifzi+y4EwrgwMyjxpFR1KvvZjOjhIfSdP2UOjrOqK1ka0Nzx67DbShuldW8/rYkE/N4+qqWetdMh5tiyyV5WxgjmhlO664+inczA6tMbEmZ/xlVl+9/ozpOYYyrhG63IIs/295WpSNxHgsuuWksMjnmaA3TVW7dbnbBahrg1yVgK1K4yuYSPbp7JzcvpjTEpivekAGF20Bctneyev5fKTk5nrt7ddqrydpi2Y+ADu5Ql7ISrGW99shbWz20Y7t0XtdksztIjxww8gcnPKBAyfaUssnS/WiHZVislTozU1mF2R91Y4aM12uuMrmKInaQsnl/OZRVnJnst8sot1KzOFVmWug2QfMSuk62mDprxnILRx4VMYaON3kkqN112utUJZgVpHsyZrEtuz29hH0zejge86T8QExvjT768uh76X7q3LUukq/q5/7unrg5LkyBIvd6rBZn4xNL6vAwQQc7h5d3jW2YW7v27k83w1H4V51MjgBc0WS5oCkiwaa2h+CsC8BrQnc4to9Sq2wa/ZyasjiSl30+q3txT1vsdGnPYNpt5ndeNOanVuyEtT3o/RwdDRn25vWR7qZrcREvO5wVs9ahsvAIrLmW2WQjAprMNcrh5lcbOGgbtpDyruKvVgThiC+XhxPsxfJpjXFl4NrWRtpO216guVp3CKyPCu64PoynJ9iuiUhjqV2l2yUVICtSQD0j6ujNNekdplUU83nO00yQE9JUnA9ssmIXZ+Hg8yDOw6ExWgzPZ4+CmPKuSJR+VwhbaVU2jIwyyIM9JXSO4KVZNuxZCs9aQ5lMN+po3xH8rUaEOWveezd8mgrElC4PWiJgwq3osVkmujNJrgE0iroiY52LjZmy6eFM1LG+iRq5hqeWMF+E540341XcaqvRqPJuDgs0/7pSGaVReujjNtXlOwUAXcyWjonOZSNWbTbJVE9gDFM1MjX1OI63eNj2z349LDOM9KMlqHArvxDvuobyn4U2zozGiyCGSeIFZxal4FfP7bzTX2ptyLB7AaWfLlQ+3hNhyDsiQv+bBYse3JW+biVW0NwOhjspPBE6SIqo/0S5ov5aKP7db7CZ+OxT1+XVHMSTXO9nzeV+bzOmdJysMRR7O7Stl3E08Bkd0bSyvb0uuVG3klk09OyGXFr2yfFmmVmJGizyry5hXvfFiI4pBZUBhTBGqv9y+FqXCN/Ct8H6Nfp8BC+zw/qebJ8Gj130qGTbkUwuS/LA0iVqz1yKhjJ7wlMKXHNhnVT7UQlC8IJCpLaW7mrJC+dlFAc1+yQI+N9rbRogRApgeUYlm0xnEI3aaZHA5oXRUaUpDvLeUfxBWI3DCy39FXyuPdT6vcAod/BKDBR3MjCFDoI135jscxXVQ0W5PgNA4yWIeGJnMAxIujyNM+32rzMdMUW1+UZWhHpNs3LSq06CZNpMI2BlaD4M0dsfuKICwTdyEUlkSxPU0yOU5yQlJyNLE085iUzXgKUEqoZl2yvwzbbPIVdP/JQCZjyQzP10EvkRLcEUfj9yTYMiG/ShbL8W9W7t5P+lyF+fXfPBtEx3VIBl/FIiFQUfUN4m/dgfh208Bz03TxITbc80Elqk9iF70g+v/rZMWWrPNqFRHWH/ND8Kvhklfoa0MORmbnw0fOP6wBhk4RvvN1LcjZezi9plqW3Iggll4qJeYqhaIHSEUwJIboswxMKqIcJ6o+46AP1F88P+Wd8aeIEekK+Z5+0TPW2/IOLiI5weRFRScsXf3rL+eSS5C1BRfKdrOuR+0qJ+LdXGtiBpR4Rz8gjD2PzZ7m+sfXkh8RZDjA3sMtVyTwvv2gKGBKzLhliYfxs/DsD3zn/LHwk+YElId10SBP06zfVcjq91gwIwzRIVLl2EzxPzBvO5BKhzk+lf5m5cb8PMl/gX5L5rTbWyezyjdpD1/3fyg331i4QkV3YvWF5rRXkXkqcB/bThP4A+HVIM4LMKjwHWizfeh7StAAeQ/pzJG//Ev9b8pTTr9/D2z8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0501231403082083427</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0501231403082083427</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0501211403082081014</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0501231403082083427</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_052433</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E6B2F9D4C77E0401F0A07993917</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E5A8AAE7266E0401F0A0799390B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E607201723132613E0401F0A059919BB</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="d85d3ec6-ce3d-4a59-bab4-e43d315300ef"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fe895677-b8a8-4a33-beb4-4e9e7c29c09a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="511d83c5-256d-4f53-8b6e-e4ee6b7da8d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="ae3300d9-9a22-4abc-afdb-9ca0b9f172ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="e4424344-2fa5-41ab-99dd-f62113bb22ba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth SAU" id="8c4dd693-d626-446e-8c84-2e14bad28220"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth SAU" id="2daa76b7-a0ba-46b6-8c46-17b9505b2ab7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="f4babe74-1397-4891-8a95-aa893da0e256"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"031921DE3447680DE05307991E0ABD19:48B3182A"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0440431410779443022</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319A5A7505261F6E05307991E0AF263</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319A5A7505261F6E05307991E0AF263</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319A5A7505261F6E05307991E0AF263</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>03199B8736E75945E05307991E0A28E8</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319A75CCE1561F4E05307991E0AF7EC</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319224483FD416FE05305991E0A1768</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:03199B8736E75945E05307991E0A28E8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319A75CCE1561F4E05307991E0AF7EC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319224483FD416FE05305991E0A1768</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrc6o6FP0rDv3YQUBAhKnO2NreYx+2Vfs6X+7EsNVYSJAEqv31J0Glah/Xc2eccbLZWXvtR1ZywlEc1YI255AKwmhlEUeUB4W1qWUpDRjihAcUxcADgYNB++Y6qFXNAG22aJVup6n960LDMcduQ3fs0NWdcd3Tfb9R0+shGvm4Btg1PenKeQZdygWioqnVTMvRTV+33KFlBaYvf9WG1/itVR4h5RJbulRNbU1qwZvaVIgkMIy3t7fqm11l6cSomaZlPN9cD/AUYqS1TlYZFYHS1tofV0PAEEW4illsnBg7PichDwZkQpHIUljHCr+LZRqmb0ifkJPJkVbuhbBLx6xYniHKKMEoIu9I1ecGxJSFlXY0YSkR0/jbJCxTAeuwwDq2HHqkGbvUDgTaYZhypPMpstZYfRhDChRD5aHfbWpHh3Wt2DpMEeVjlsZ8d/l3fIDmELEEQp1v0lpTOxzwi0q1TgAHXYqjjJMcempYE4SBr7sJ+HCoyl0KY7K4JlwO6IIrdsY2vb3lqhodMgEu/k+DtpqzAnlEUQYtx58ZTnuUTOxLPxxe1ruX179mdfHyML5vFgS2nQtD2drVcm8oyyFa7fg1Pb27uVrOb6N/+FU6zXvG7eOD7V4m3vn06bl+np8ZlrgwXmcxerf7LyE/TXjyEoZv2fvLhZk8jNpXfGaGln9BosnxIOnl/vL0fTK77Y0nPfv9+NTGt5P50xBLwq+/WScHyxylljV3vch6T4evw2Eyu+9fRX6nzwZLeOxnL8d38/urZ3o582wvP7OF/xQuca/RLNPZ4r9r25z5QTaaARabpRqDbqdyIbuExM9ipiwk1MeFa5Ao8eECqNBaapfSjiCTckfCQPZwtTZty/dPG55dP/dc33HPTdc2Pd+3zs12rXHe2IjMisUexTNGx0TFUpK7GpufCeI44EBDSPWcZVLpuPYDYgcJVOnSvjwEjHIYMinPlsMIrjmjBSUuQBbnszxbus400yo9Jm7pbdoeC0h3NdnZ0eQ+YJIQUMKt5prLweZC1mKO8kxEVjVHVQqZlPZUqWxQcxquwUmcRKCYGjELswiqyTQpKmPw1X9NR5gXVsJxwlKBouJAGN+mt/9tUwnpExLlwFVKpyC7CZ/umEbgbvL5Pm9vO+8NfDsLiTpfsqwiJXjFZPfTx7SoMSlHpUwMc2vDvdzylxBfABg/8DP2S1PGC3OyFX1zmctrQQpJa9PfOarOq1meZ0VHPdO0jVTCG1I3LWMAOJM6txyyV6BGCWEcdKmUrPcil/ZdfpmY0oFAAmI5f5ViecArYgBcvSK68uAsDn2i7ISUdROwEF/ZziL5AlKMf3wk4QArP2m+k39vLA0/2vUF1lYcmad8RAhCJ2qlLpTlN7OBmYQlUgpZug3+FcBXwXeNZZFLLkJO0ygT8P2XitK4poYwZhkV3Y5WGLZ1t+AplgkEH06fYAppL9965L8fezopRgCDfCFyUuCrKztQ808nW9q9Drov32237bmmW6tbF/Vt+b6o1e2yKDvsWp/Mny1bddqf8dYf</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrc6o6FP0rDv3YQUBAhKnO2NreYx+2Vfs6X+7EsNVYSJAEqv31J0Glah/Xc2eccbLZWXvtR1ZywlEc1YI255AKwmhlEUeUB4W1qWUpDRjihAcUxcADgYNB++Y6qFXNAG22aJVup6n960LDMcduQ3fs0NWdcd3Tfb9R0+shGvm4Btg1PenKeQZdygWioqnVTMvRTV+33KFlBaYvf9WG1/itVR4h5RJbulRNbU1qwZvaVIgkMIy3t7fqm11l6cSomaZlPN9cD/AUYqS1TlYZFYHS1tofV0PAEEW4illsnBg7PichDwZkQpHIUljHCr+LZRqmb0ifkJPJkVbuhbBLx6xYniHKKMEoIu9I1ecGxJSFlXY0YSkR0/jbJCxTAeuwwDq2HHqkGbvUDgTaYZhypPMpstZYfRhDChRD5aHfbWpHh3Wt2DpMEeVjlsZ8d/l3fIDmELEEQp1v0lpTOxzwi0q1TgAHXYqjjJMcempYE4SBr7sJ+HCoyl0KY7K4JlwO6IIrdsY2vb3lqhodMgEu/k+DtpqzAnlEUQYtx58ZTnuUTOxLPxxe1ruX179mdfHyML5vFgS2nQtD2drVcm8oyyFa7fg1Pb27uVrOb6N/+FU6zXvG7eOD7V4m3vn06bl+np8ZlrgwXmcxerf7LyE/TXjyEoZv2fvLhZk8jNpXfGaGln9BosnxIOnl/vL0fTK77Y0nPfv9+NTGt5P50xBLwq+/WScHyxylljV3vch6T4evw2Eyu+9fRX6nzwZLeOxnL8d38/urZ3o582wvP7OF/xQuca/RLNPZ4r9r25z5QTaaARabpRqDbqdyIbuExM9ipiwk1MeFa5Ao8eECqNBaapfSjiCTckfCQPZwtTZty/dPG55dP/dc33HPTdc2Pd+3zs12rXHe2IjMisUexTNGx0TFUpK7GpufCeI44EBDSPWcZVLpuPYDYgcJVOnSvjwEjHIYMinPlsMIrjmjBSUuQBbnszxbus400yo9Jm7pbdoeC0h3NdnZ0eQ+YJIQUMKt5prLweZC1mKO8kxEVjVHVQqZlPZUqWxQcxquwUmcRKCYGjELswiqyTQpKmPw1X9NR5gXVsJxwlKBouJAGN+mt/9tUwnpExLlwFVKpyC7CZ/umEbgbvL5Pm9vO+8NfDsLiTpfsqwiJXjFZPfTx7SoMSlHpUwMc2vDvdzylxBfABg/8DP2S1PGC3OyFX1zmctrQQpJa9PfOarOq1meZ0VHPdO0jVTCG1I3LWMAOJM6txyyV6BGCWEcdKmUrPcil/ZdfpmY0oFAAmI5f5ViecArYgBcvSK68uAsDn2i7ISUdROwEF/ZziL5AlKMf3wk4QArP2m+k39vLA0/2vUF1lYcmad8RAhCJ2qlLpTlN7OBmYQlUgpZug3+FcBXwXeNZZFLLkJO0ygT8P2XitK4poYwZhkV3Y5WGLZ1t+AplgkEH06fYAppL9965L8fezopRgCDfCFyUuCrKztQ808nW9q9Drov32237bmmW6tbF/Vt+b6o1e2yKDvsWp/Mny1bddqf8dYf</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o4FP0rjPvYMbKNMeAJzFAIXbb5aEIa0r7sqPLFKLElI8kG+utXMuACIVm6T6Drq3PP/dCRLiROEy/sSwlCUc5qqzRhMiytXSsXLORYUhkynIIMFQkn/eur0Ks7Id5tsWrjYdf6B7c7bbfptu02+L7tA9b/OoFnd4IgcEngdJwZaFcpcxgzqTBTXctzXN92OrbbfHDd0OmEjXY98Fs/rNojCKmxtUvdsbakVrJrzZXKQoSWy2V92ahzESPPcVz0dH01IXNIsdW72GRUBhK9rT+pR0AgSUid8BRdoAOfi0iGExozrHIB21jRW7Ec5HSQ9okkjT9Y1V6IxmzGy+UAM84owQn9hU19rkHNeVTrJzEXVM3TN5NwHQNsw4rYxPXZBwsdUjsT6IChkNiWc+xuse5hBgIYgdq3+3HX+nBe18qtDwIzOeMilYfLP+MDrICEZxDZcpfWltr5gCcq1bsAEo4ZSXJJC7gxw5phAnLbTSDnQ9W+CpjR1RWVekBX0rBD+/SOlptqDGkMUv2fBu01ZwPyiJMceuTTQyPwnPXz+CNbpF4ruF4OHbz6/Cza3ZLAvnNpqFq7WR4NZTVEmx3xKi0UeXpAvlqLx9bfndvWalLEX27iyQy3guV8XCy+fZrc/cSFuJq6o+z740swIQP0ciWmN18Ho3YKt0M2Db67tzN0PRpmM3z3a3ovGutCeavAb/Dp1Z3Ps2n2FI3Sxcd1ETvDz+sXb/kD0Tb6uHB+Le6ffqjVENxHoON0nf/Vhr+/LD2nuJzOFLTuEp7izl3crdLZ439o2535Sf7zGYjaLc0YjIe1ke4SVu+LmbHQyJ6VrmFmxEcqYMrqmV1GO8Jcyx2NQt3DzdppuJ1+qzkYXLrNwB35l06z4bQ6HffS6Y9al4OdyGxYHFEccDajJpaR3M3YvE+QpKEEFoGwC55rpZPWO4hDrHBtzO71IeBMwgPX8uyKNszcthfl/CVyYzcqmuBHzw3+bNVuuLplt6Kvyy4ORdk/EOV7IDSjYJTbDLbUky2VLsYCF7lK3HqB6wxyre3CyGzo+e0mkjTNEjBUUcqjPIF6Ns/K0iC5+fVsTGRppZJkXCiclCcCvZnf8bddKbRPRI2DNCl9At1OOHHJeLt83s67tZ/3Dr6fR9QcMF1XJSjZMDn89HtczJxUs1IlRqS7415t+UOIEwDoHX7ouDRVvKige9F3t7m+F7SS9Hb9XeD6op4XRV52tOU4DSQ0PNLC6aIJkFwL3fqBvwBDFQQ661apWB9FruyH/HI1ZxOFFaR6/mrl8oxnxASkeUaM9clZnftGOQip66ZgpU7ZBol+AhnG776SSEiMnzZ/1T9LLqLf7TqBtRdH56lfEYqy2KzMjbJ+YzYI17BUayEX++CnAE4FPzRWRa64KD1NP3MFb3+pGZHrWpgQnjM1HlqlYV94S55qnUH42+kVTKnt1WOP/vdrz6blCBD9sNT+Jb65s0Mz/yzeE+9t0Ff63dQK7jQ9rd/BgX57QaMqygG73ivza8tenY5nvPcv</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrZsrq5AlQNhA5PbBMiEvGwpcgMKtuRYMpd8/UgGHCAky+yTS+3W6dMXHelc4Ch0PF8ISCTlrLCMQia8zNow0oR5HAsqPIYjEJ4kXt+/ufacou3h7Raj0G03jH+JW62V6w42KwEiZqlcQSa2SdUsV2xwas4LQGArVyFS6DIhMZMNw7FRybTrJioPEPKQ7TmoWHIqz0bhERKhsJVLUe1ak1qKhjGVMvYsa7FYFBdukScTy7FtZD3dXPfJFCJsNM/XGWWBkubGnxQDIBCGpEh4ZJ1bez7ngfD6dMKwTBPYxAq+imVbdt1SPoGgkx9GvheCLhvzbNnCjDNKcEjfsa7PDcgpDwp+OOEJldPoyySQrYFNWBKToBL7YVj71E4E2mOYCGyKKUYbrAcYQwKMQGH40G0YP07rWrZ1kGAmxjyJxP7y7/gAm0PIYwhMsU1rQ+10wCOVap4D8bqMhKmgc7jVwxpjAmLTTSCnQxXuExjT5TUVakCXQrOzdukdLNfVaNMJCPl/GrTTnDXIIw5TaL72/Tdy+3z27PdmNf40HvGz320+DOpk2MgI7Dpnhry16+XBUOZDtN4xqo7ITYU/PrPZHVldkeWgh27nrId7E/8djS56Vpndr4hoVf0Xdi/abYzoWdia9x9nD9fPcvRPLUqczux+uAoouwTffbrhvetfuEXE7/JdcMW6nZ/xbPI+oe4iiYNhuzV9vZi9/urwK/bWm9tuPL4bo27/IhmFL/Ph4PKnfclixkO46CxtUe0v3PrZ6FGi1026B/z3bdsz309fXoHI7VKPQbdd6KguYfm9mGkLDcxx5urFWnyEBCaNpt6ltcNLldzRwFM9XK9tF9Udp1SquZ12CVU6l3bZtcv1Orq0fVSt1LYis2ZxQLHF2ZjqWFpy12PzPUESeQJYAIk556lSOmF8g9jGEhe67EEdAs4EDLiS55Izjko1GlFUWdZcF8X18H0J04lRuOXyjt0l/lhCsi/JpT1JfgBCYwpat/VYCzXXQqpSvOF5KkNUnOMig1Qpe6JF1nNKtbIlaBSHoIlaEQ/SEIrxNM4KY4n11zExEZmVChLzROIwOw/Wl9kd/tsWQvkEVDsIndIFqGbCkSsGbfP5Ou/qbt5beD8NqD5eqqoyoWTNZP/Xx7DoKcknJU+MCLTlnm/5S4gjANY3/KzD0uTxgjndib69y9WtoHSkue3vGy6+FdP5PM06WrVt10oUvKVkE1l9IKmSudWAz4BZOYR10p2Ssz6InNv3+aVyyvoSS4jU/BWy5QmPiD4I/YjoqnOzPPWFshdS1U3CUh6ztUL1ANKMv30jEY9oP2W+V58FT4KPdh3B2omj8lRvCEnZRK/0fbL6YjYIV7BUKSFPdsGPARwLvm/Mi5xzkWqaXlIJX/8paIlrGJgQnjLZbRuZYVd2M55yFYP34fQJJlP2/KlH//utZ9JsBAioB6KgGb6+sT09/2yyI92boIfq7Zf9atkuOxXUqWTqXV2rd8epuHlR9tg1P5k/W3bqdDjjzT8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0440431410779443022</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0440431410779443022</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0439141410779354613</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_044031410779403131</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0440431410779443022</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>03199B8736E85945E05307991E0A28E8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319A75CCE1661F4E05307991E0AF7EC</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319224483FE416FE05305991E0A1768</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="742fdcc5-4c20-479f-bd3f-4cb6f9aec130"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="df71b0f6-508f-4b6a-9af9-28a4db861e25"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cfb93ddf-9ccd-4511-8da2-41934c2728d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="e87dfeb1-eeec-4d41-bad6-9ac9a1c7153f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="8116fb4d-8e35-4724-9b68-50713e7d1710"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth SAU" id="d428b7c6-8415-4538-a072-235d1869d4ee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth SAU" id="3152a576-ba8e-4eb6-930f-5dc9d8149db6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="2b74056e-3f94-4ddc-8dba-4cb0bfc446ad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0319DE259B913549E05307991F0AB94B:68710C00"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0500561410780656839</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319E640C74442D6E05307991F0AC4ED</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319E640C74442D6E05307991F0AC4ED</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319E640C74442D6E05307991F0AC4ED</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319D973BBE72685E05307991F0A001F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319D6B156DA267FE05307991F0A816E</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319D52CE1651E50E05307991F0ABCF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319D973BBE72685E05307991F0A001F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319D6B156DA267FE05307991F0A816E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319D52CE1651E50E05307991F0ABCF6</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrKNubkCVYDJhs11QpKZnZctITdGwZYdSQbD149kwAMMyTL75FK7dfr0RUe6FDiOHK8nBHBJE1bJ44gJr7B2jIwzL8GCCo/hGIQniTfu3d16TtXy8G6LURn5HePfidvCtu24ptOqN0w3cAKz1YSJ6U5cZwK4DUFjolyFyGDEhMRMdgzHsl3Tapt2/dm2Paft1VrVVrP+w6i8AhcKW7lULWNLKhcdYyZl6iG0XC6ry1o14SFyLMtG3+9ux2QGMTa6l5uMikC8u/Un1QAIRBGpkiRGl+jA5zIQ3piGDMuMwzZW8FEsC1ltpHwCQcMvRrkXghGbJsVygFnCKMERXWNdnzuQsySo9KIw4VTO4g+TsC0NbEJOTGK77IuBDqmdCXTAkAtsihm2t1hPMAUOjEDl5WnUMb6c17Vi6zPHTEwTHovD5Z/xAbaAKEkhMMUurS218wFPVKp7CcQbMRJlgi7gXg9rigmIbTeBnA9VeeQwpfktFWpAc6HZoX16R8tNNXwagpD/p0F7zdmAvOIog24N49poeh2NXrLg8b323Q+/4Tqso7/fep2CwL5zYShbu1keDWU5RJsdfJDd2Ii/pWPnxho2LuBidd/nF/X3Sa8xesybT+nX5IH0X+sozNtO0scw8NFdfjNfra3h2wpRAqs5bw/C3lsyBBnMcXDhPyxf/vr2D7v+Oq9Ph62aHEJ0DT/qi3VtPKzLaE7dXj+8ttrr+PVqdvcjSsP7e7y89Ql6njau0c3r9Zi83FDHXqSN1zs/aCzFGludMp09/oe23ZkfZ5M3IHK31GMw8itXqktYfi5m2kIDc1q4eqkWHyGBSaOrd2nt8DIldzTwVA83a6tmt/12s9bvD5tOo1UfWvWa1Wy37SurpwbraicyGxZHFAcJm1IdS0vuZmw+J0hiTwALgJuLJFNKJ4xPEH0scWXEntQhSJiA50TLM6zd9mySz2n41oxzjgPO8laTGJX7RD6wB96bSuCHkuweSPITEJpS0Lqtx1qouRZSleIdLzIZ2dUFrjLIlLJzLbKe47bqSNA4jUATRXESZBFU01laFAaJzdcxMRGFlQqSJlziqDgP6MPsjv/tCqF8AqodhE6pD6qZcOKKcXb5fJx3cz/vHXwvC6g+XqqqklOyYXL469ew6CkpJ6VMjAh7x73c8ocQJwDQJ/zQcWnKeMGC7kXf3eXqVlA60t319x1X36vZYpEVHW1qveQKHinZtNEYSKZkbvWczIGhEgKddaeUrI8il/ZDfpmcsbHEEmI1f5ViecYjYgxCPyJG6tzk575QDkKquknI5SnbIFIPIM340zcS8Yj2U+ZH9VkmPPjVrhNYe3FUnuoNISkL9UrfJ6sPZoMkCpYqJUz4PvgpgFPBD41lkUsuUk3TJJPw8Z+KlriOgQlJMiZHvlEY9mW34ClXKXi/nH6DKZS9fOrR/37rmbQYAQLqgShoga9vbE/PPwv3pHsb9Fi9hw3XGjRd13X8xr56D9yhXxblgF33N/Pvlr06Hc949yc=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrKNubkCVYDJhs11QpKZnZctITdGwZYdSQbD149kwAMMyTL75FK7dfr0RUe6FDiOHK8nBHBJE1bJ44gJr7B2jIwzL8GCCo/hGIQniTfu3d16TtXy8G6LURn5HePfidvCtu24ptOqN0w3cAKz1YSJ6U5cZwK4DUFjolyFyGDEhMRMdgzHsl3Tapt2/dm2Paft1VrVVrP+w6i8AhcKW7lULWNLKhcdYyZl6iG0XC6ry1o14SFyLMtG3+9ux2QGMTa6l5uMikC8u/Un1QAIRBGpkiRGl+jA5zIQ3piGDMuMwzZW8FEsC1ltpHwCQcMvRrkXghGbJsVygFnCKMERXWNdnzuQsySo9KIw4VTO4g+TsC0NbEJOTGK77IuBDqmdCXTAkAtsihm2t1hPMAUOjEDl5WnUMb6c17Vi6zPHTEwTHovD5Z/xAbaAKEkhMMUurS218wFPVKp7CcQbMRJlgi7gXg9rigmIbTeBnA9VeeQwpfktFWpAc6HZoX16R8tNNXwagpD/p0F7zdmAvOIog24N49poeh2NXrLg8b323Q+/4Tqso7/fep2CwL5zYShbu1keDWU5RJsdfJDd2Ii/pWPnxho2LuBidd/nF/X3Sa8xesybT+nX5IH0X+sozNtO0scw8NFdfjNfra3h2wpRAqs5bw/C3lsyBBnMcXDhPyxf/vr2D7v+Oq9Ph62aHEJ0DT/qi3VtPKzLaE7dXj+8ttrr+PVqdvcjSsP7e7y89Ql6njau0c3r9Zi83FDHXqSN1zs/aCzFGludMp09/oe23ZkfZ5M3IHK31GMw8itXqktYfi5m2kIDc1q4eqkWHyGBSaOrd2nt8DIldzTwVA83a6tmt/12s9bvD5tOo1UfWvWa1Wy37SurpwbraicyGxZHFAcJm1IdS0vuZmw+J0hiTwALgJuLJFNKJ4xPEH0scWXEntQhSJiA50TLM6zd9mySz2n41oxzjgPO8laTGJX7RD6wB96bSuCHkuweSPITEJpS0Lqtx1qouRZSleIdLzIZ2dUFrjLIlLJzLbKe47bqSNA4jUATRXESZBFU01laFAaJzdcxMRGFlQqSJlziqDgP6MPsjv/tCqF8AqodhE6pD6qZcOKKcXb5fJx3cz/vHXwvC6g+XqqqklOyYXL469ew6CkpJ6VMjAh7x73c8ocQJwDQJ/zQcWnKeMGC7kXf3eXqVlA60t319x1X36vZYpEVHW1qveQKHinZtNEYSKZkbvWczIGhEgKddaeUrI8il/ZDfpmcsbHEEmI1f5ViecYjYgxCPyJG6tzk575QDkKquknI5SnbIFIPIM340zcS8Yj2U+ZH9VkmPPjVrhNYe3FUnuoNISkL9UrfJ6sPZoMkCpYqJUz4PvgpgFPBD41lkUsuUk3TJJPw8Z+KlriOgQlJMiZHvlEY9mW34ClXKXi/nH6DKZS9fOrR/37rmbQYAQLqgShoga9vbE/PPwv3pHsb9Fi9hw3XGjRd13X8xr56D9yhXxblgF33N/Pvlr06Hc949yc=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn08YywZY8eewAzFoXFLEhoS2vTljJBlUGIkY8ncvr6SARfI5dDz5NH21tprX7SkS4FmqR10hCC5pJzVVrOUiaC0towiZwFHgoqAoRkRgcTBsHPTD+w6CNB+i1GLwpbxrwuAZ9sXY9P3G57puC42EWhemImP3NhJGi70xspViIJETEjEZMuwAXRM4Juw+QBh0AAB8OsQer+M2ojkQmErlzowdqRWomVMpcwCy1oul/Vlo87ziWUDAK2fN/0hnpIZMtqX24zKQHl754/rMcEkTXEd85l1aR35XMYiGNIJQ7LIyS5W/F4sYAHfUj6xoJNPRrWXxBFLeLnsIsYZxSilG6Trc0PklMe1TjrhOZXT2btJQKCBTbLCJoYO+2RYx9TOBDpimAtkiimCO6x7kpCcMExqj/dRy/h0XtfKrQ85YiLh+UwcL/+OD2ELkvKMxKbYp7Wjdj7gG5VqXxIcRAynhaALcquHNUOYiF03CT4fqjbISUJXfSrUgK6EZmcd0jtZbqsR0gkR8v806KA5W5ARSgvSlsLp5vgm8kaDntWnTeH1Nvjp6Xnqf2+VBA6dS0PV2u3yZCirIdru6MxH6U85If2nL6zZu/46zr49UTfZvPyQatl4TDbJXIb9weqJZLK4stBgA7pDulkXjel0Gqb+2PmaWeh5fBP20kXTH/38xr+mq83oQt7y0dK69+78uyh96dMf8Mvg1zwOgXdzIaN+3GzE19fZP9DuwvwWyeu+94PP5ssmpE8gbUZ3V6PB5vsofnnseMvvnz3UaVXpHPA/tu3P/LAYPxMs90s9BlFY66kuIfmxmGkLjc2kdA0yLT5CEiaNtt6ltSMolNzROFA93K5BA/qh+xk23bBju17vCjQbwPN92AOdC+he7UVmy+KEYpezhOpYWnK3Y/MxQTwLBGExyc0FL5TSCeMDxBBJVIvYvToEnAnywJU8Qzh27Jf1gqwBLqCA7hg+J5RAd23Ubrm8Y3d5J5EkPxZl50iU7wmmGSVaufVgCzXZQqpizNGikCmsL1CdkUJpe65lNrCdi6Yl6CxLiaZqzXhcpKSeTbOyNJbYfm0TYVFaqcAZzyVKyxNhvZvf6b99KZRPTLWD0Cl9Jqqd5PSSsf2guc/n/by9w7z38J0ipvqAqbrKnOItk+Nff8ZFz0k1K1ViWMA992rLX0K8AWB9wM86LU0VL17Qg+j721zdC0pJ2vv+zlF9Xi8Wi6LsqAdAw8oVvKWEE1pDggsldOsH/kKYVUFYZ90qFeuTyJX9mF8hp2wokSQzNX+1cnnGM2JIhH5GROrkrM59oxyFVHWTZCXfsnVT9QTSjD98JeEAaz9lHqjPkufxn3a9gXUQR+WpXhGSsole6Rtl/c5sYK5gqdJCnh+CvwXwVvBjY1XkiotU0zQuJHn/T02LXMtAGPOCySg0SsOh8JY85TojwR+nVzCltlePPfrfrz2TliOAiXoiClri6zs70PPPJgfivQt6qt9XrgO6nuM4duge6nfXuQqrohyxa78yv7Yc1Ol0xtu/AQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDvuxg1zEC0x1xqI95dTu1mrt5eVMGpaSFgKSgLa//iSoVK32uM8Tk8XKt751yZecMxSFptNlDFJOYlpZRiFlTmFtK1lKnRgxwhyKImAOx86oezNwzKruoM0WpeL12so/jQa8WpbfUo0WMlTL1n0VtRqvarM2bdUN89VsgS1cGcvAo4wjytuKqRuWqtuqUR8bhlPTHdOu2i37RalMIGUCW7hUdWVNasnaSsB54mjaYrGoLmrVOJ1ppq4b2tPNYIQDiJDSOV9lVARKO2t/XPUBQxjiKo4j7Vzb8Tn3mTMiM4p4lsI6ln8slq7ptiZ8fEZmv5RyL/gencbF0kU0pgSjkHwiWZ8b4EHsV7rhLE4JD6KjSRi6BFZhiVVsWPSXou1SOxFoh2HKkMoCZKyx7mEKKVAMlYd7r638Oq1rxdZxiiibxmnEdpd/xgdoDmGcgK+yTVpraqcDHqhU5xyw41EcZozk8FsOa4IwsHU3AZ8OVblLYUqWA8LEgC6ZZKdt09tbrqrRIzNg/P80aKs5K5AJCjPoQCvO6DPx8ONFEv0VLIf9oJcMvTM3Z+2CwLZzYShbu1ruDWU5RKsdNw8XxuVlwKbdECbv9Si4Mp+CR+3u4/rFzq/d4d0cnuiAvYzw2eTZj+ZX+Bq9vdWSASP2+8gYeKjP7KD1/PLRHT+i0ch9i/52k7FZb8zH9KnX7+Pnh3w66M8G6ZV793RrX0Vnk0lzOHEnySJ6GOKllVufmTfI6rSftwKjP7m7jXV2fzGc3Fo9EqHsVZ95bBFY7TKdLf67ts2ZH2Wvb4D5ZinHwOtVLkWXEP9ZzKSF+Oq0cHUSKT6MA+VKR+6S2uFkQu6I74gertZ6zbB7ddPtG4260a/rfb1e05u2bVzq3Qv3srERmRWLPYpuTKdExpKSuxqbnwniyGFAfUjVPM6E0jHlB8Qe4qji0XtxCGLKYBwLeZ5+BHX6aS+XLJ1PmywU5dVzGy2Uyu+Y39LbtDvlkO5KsrUjyfeASUJA6rYcaybmmnFRijnKMx4a1RxVKWRC2VMpso5pteoaI1ESgiSqRbGfhVBNgqQojMZWX1NFmBVWwnASpxyFxXnQjma3/29TCOHjE+nAZEoXIJoJB64YY5PP8byb23lv4LuZT+TxElXlKcErJru/voZFTkk5KWVimBkb7uWWP4Q4AKD9wE/bL00Zz8/JVvTNXS5uBaEjnU1/56g6r2Z5nhUdbep6TUsFvCZk09BGgDMhcx/j+B2oVkJoJ90pJeu9yKV9l1/GAzriiEMk5q9SLE94RIyAyUeEJ87N8tQXyk5IUTcOS37I5obiASQZ//hGwg6WfsJ8Jz6LOPW/2nUAayuOyFO8ITihM7mS98nHkdnAsYAlQgnjdBv8EMCh4LvGssglFy6m6TXjcPxPRUpcW0EYizuLez2lMGzLbsGTfyTgfDl9gymUvXzqkf9+66mkGAEM4oHISIEvb2xHzj+dbUn3Oui+evcblu42Lcsye41t9Xatfq8syg67zjfzd8tWnfZnvPMv</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0500561410780656839</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0500561410780656839</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_050001410780600385</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0500291410780629665</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0500561410780656839</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319D973BBE82685E05307991F0A001F</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319D6B156DB267FE05307991F0A816E</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319D52CE1661E50E05307991F0ABCF6</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="99a02aae-8915-4c3f-a340-87a3e08584da"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="78319def-f3a6-4d7f-815c-a353de043394"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b600ef95-bc30-45f5-959b-e432192839ba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth SAU" id="019eb865-2d68-4e07-93bd-188eeb891fbe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth SAU" id="c510eb87-e332-404c-99fb-fe5855a3c901"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth BAU" id="f8b57d7e-ca9e-4e0c-ac6e-8b32be4cc075"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth BAU" id="489f8972-7130-48c8-896f-3cf783443848"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH BAU" id="33701b6f-04d3-404b-8d4c-083f0830a9f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"031918A1B5B82B1AE05305991E0A1844:AE73E24"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0443291410779609174</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>03192218ECAF416BE05305991E0A673C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:03192218ECAF416BE05305991E0A673C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:03192218ECAF416BE05305991E0A673C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319224631374171E05305991E0AE534</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>03199D3922205863E05307991E0AB764</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319AEE401DF5F74E05305991E0A731E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319224631374171E05305991E0AE534</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:03199D3922205863E05307991E0AB764</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319AEE401DF5F74E05305991E0A731E</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI4FP0Vyv2YMraM2VyBKpolcTrpLNA9SV6mhHwBTWzZSLJZvn4kAw4QkqHnCXR9de65i450KXAUOl5HCOCSxqy0jEImvNzaMlLOvBgLKjyGIxCeJN6wc3frOWXbw7stRsnvtYy/x7bdhOqkYU5QzTXdRiUwGy6pmVW3Zo9d1BjXCFauQqTgMyExky3DsZFr2k0TVUcIecjxkF2u1tCrUfoNXChs5VK2jS2ppWgZMykTz7IWi0V5USnHfGo5to2s57vbIZlBhI325SajPBBvb/1JOQACYUjKJI6sS+vA5zIQ3pBOGZYph22s4LNYtmU3LeUTCDr9ZhR7IfDZJM6XXcxiRgkO6Rrr+tyBnMVBqRNOY07lLPo0CWRrYBOWxCTIZd8M65DamUAHDLnApphhtMV6gglwYARKv578lvHtvK7lW0ccMzGJeSQOl3/GB1gGYZxAYIpdWltq5wOeqFT7EojnMxKmgmbwUw9rggmIbTeBnA9VeuAwoctbKtSALoVmZ+3TO1puqtGjUxDy/zRorzkbkN84TKHNF/ZwRELG6fAXcbDvxwO4Cf2UicdWTmDfOTcUrd0sj4ayGKLNjqvH/vwue0Sd5xfnR59dVSfONG6Kt9flfDz8/vt6Nb3q9F7Xq2DdcBpP9ZcBz9CK0QsaZD8yFozHdueCj5Jr8tLg3f5rld38tX4ekWEfXdz0xHW2ervvdicPfp+/hWl9fnVz3V/Y1Vl3VluP+Vysu4OHZHXRG/aC59kguL911iR9rFu9QRgQexDVsibqPk/qXf/xpVWks8f/0LY788N0/A8QuVvqMfB7pYHqEpZfi5m20MCc5K5eosVHSGDSaOtdWju8VMkdDTzVw83arqCm47i1CqrUXVRHfbtasavNpvrT6Vcr7k5kNiyOKHZjNqE6lpbczdh8TZBEngAWADezOFVKJ4wvEHtY4pLPntQhiJmAUazkGc3ZGw0wkKQhCVqGa0ilHY2DQMnrz1jes3vemUjgh6LsHojyExCaUNDKrQdbqMkWUhVjjrNUhqic4TKDVGk71zLrOW6jagkaJSFoqlYUB2kI5WSW5KWxxObXMTERuZUKksRc4jA/Edan+R1/25VC+QRUOwid0ndQ7YQTl4y9y+fzvOv7ee/gO2lA9QFTdZWckg2Tw0/v46LnpJiVIjEi0I57seUPIU4AWF/ws45LU8QLMroXfXebq3tBKUl71985Ls/LaZaleUfrtl2xuIK3lHAiawgkVUK3GsVvwKwCwjrrVilYH0Uu7If8UjljQ4klRGr+SvnyjGfEEIR+Rvjq5CzPfaMchFR1k7CUp2zdUD2BNOMvX0nEI9pPmR/UzyLmwXu7TmDtxVF5qleEpGyqV/pGWX0yGyRWsFRpYcz3wU8BnAp+aCyKXHCRaprGqYTPv5S0yLUMTEicMun3jNywL7w5T7lKwHt3+gCTa3vx2KP//dozaT4CBNQTUdAcX9/Znp5/Nt0T723Qj/qNGv1uZ+Ci2vd9/a7VK92iKAfs2h/MHy17dTqe8fa/</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI4FP0Vyv2YMraM2VyBKpolcTrpLNA9SV6mhHwBTWzZSLJZvn4kAw4QkqHnCXR9de65i450KXAUOl5HCOCSxqy0jEImvNzaMlLOvBgLKjyGIxCeJN6wc3frOWXbw7stRsnvtYy/x7bdhOqkYU5QzTXdRiUwGy6pmVW3Zo9d1BjXCFauQqTgMyExky3DsZFr2k0TVUcIecjxkF2u1tCrUfoNXChs5VK2jS2ppWgZMykTz7IWi0V5USnHfGo5to2s57vbIZlBhI325SajPBBvb/1JOQACYUjKJI6sS+vA5zIQ3pBOGZYph22s4LNYtmU3LeUTCDr9ZhR7IfDZJM6XXcxiRgkO6Rrr+tyBnMVBqRNOY07lLPo0CWRrYBOWxCTIZd8M65DamUAHDLnApphhtMV6gglwYARKv578lvHtvK7lW0ccMzGJeSQOl3/GB1gGYZxAYIpdWltq5wOeqFT7EojnMxKmgmbwUw9rggmIbTeBnA9VeuAwoctbKtSALoVmZ+3TO1puqtGjUxDy/zRorzkbkN84TKHNF/ZwRELG6fAXcbDvxwO4Cf2UicdWTmDfOTcUrd0sj4ayGKLNjqvH/vwue0Sd5xfnR59dVSfONG6Kt9flfDz8/vt6Nb3q9F7Xq2DdcBpP9ZcBz9CK0QsaZD8yFozHdueCj5Jr8tLg3f5rld38tX4ekWEfXdz0xHW2ervvdicPfp+/hWl9fnVz3V/Y1Vl3VluP+Vysu4OHZHXRG/aC59kguL911iR9rFu9QRgQexDVsibqPk/qXf/xpVWks8f/0LY788N0/A8QuVvqMfB7pYHqEpZfi5m20MCc5K5eosVHSGDSaOtdWju8VMkdDTzVw83arqCm47i1CqrUXVRHfbtasavNpvrT6Vcr7k5kNiyOKHZjNqE6lpbczdh8TZBEngAWADezOFVKJ4wvEHtY4pLPntQhiJmAUazkGc3ZGw0wkKQhCVqGa0ilHY2DQMnrz1jes3vemUjgh6LsHojyExCaUNDKrQdbqMkWUhVjjrNUhqic4TKDVGk71zLrOW6jagkaJSFoqlYUB2kI5WSW5KWxxObXMTERuZUKksRc4jA/Edan+R1/25VC+QRUOwid0ndQ7YQTl4y9y+fzvOv7ee/gO2lA9QFTdZWckg2Tw0/v46LnpJiVIjEi0I57seUPIU4AWF/ws45LU8QLMroXfXebq3tBKUl71985Ls/LaZaleUfrtl2xuIK3lHAiawgkVUK3GsVvwKwCwjrrVilYH0Uu7If8UjljQ4klRGr+SvnyjGfEEIR+Rvjq5CzPfaMchFR1k7CUp2zdUD2BNOMvX0nEI9pPmR/UzyLmwXu7TmDtxVF5qleEpGyqV/pGWX0yGyRWsFRpYcz3wU8BnAp+aCyKXHCRaprGqYTPv5S0yLUMTEicMun3jNywL7w5T7lKwHt3+gCTa3vx2KP//dozaT4CBNQTUdAcX9/Znp5/Nt0T723Qj/qNGv1uZ+Ci2vd9/a7VK92iKAfs2h/MHy17dTqe8fa/</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZc9o6FP4rjPuYMV7YjCcw40By42xNA7RNX+4I+QBqbMnRwpJfX8mAC5Tk0vsCo+Oj73xn0SedC5SlfhgJAVwSRivLLKUiLKwdS3EaMiSICCnKQIQSh4Po/i70q26ItlusStzvWP+iSeAjFHg2eDXXrgf6ZwwI2wEat9wgmDR9CLSrEApiKiSismP5rle33bbtNYaeF3p+WAuq9Yb3w6p8BS40tnaputaG1FJ0rJmUeeg4i8WiuqhVGZ86vut6zvf7uwGeQYas7vk6oyIQ7278cTUBDGmKq5hlzrmz53OeiHBAphRJxWETK3kvluu4bUf7JIJMP1nlXkhiOmHFsocoowSjlLwhU597kDOWVKJ0yjiRs+zdJDzXANuwxDb26vST5exTOxFojyEXyBYz5G2wnmACHCiGyugp7lifTutasXXIERUTxjOxv/w7PkDnkLIcElts09pQOx3wSKW654DDmOJUCTKHBzOsOcIgNt0EfDpU5ZHDhCzviNADuhSGnbNL72C5rkafTEHI/9OgneasQb6iVEH3IUp/vGSteruhrmP1LHL6TFfs2/jL96hTENh1Lgxla9fLg6Esh2i9I1FDKeXd83KZX9Mfvd63aYyD5tSN+z7DF4sr0rx/WXD04MvLr8FtPEpHCY1GX57H7lkveXx+vOf/vI7md25+jbyXoBc/RM9x5LSf8G09Gz2+3dbp/E3VzrJoiDmO8HxFpovFTWv5dnkjiDtarSLlDjFpceY5E3xzS74sxuTb4Kp5fXXTfGTTm+Ti7EZlZ0606JTp7PDft23P/ECNfwKW26UZg7hfudJdQvJjMTMWktiTwjXMjfgICVRaXbPLaEeotNyRJNQ9XK/dmtdu92tt3/fdRtCsXbqNmttqt71LN7poNetbkVmzOKDYY3RCTCwjueux+ZggzkIBNAFuz5nSSiesDxD7SKJKTJ/0IWBUwJBpeZ6Og0Y65a2fiTfx0p8K5MtSLHM1syoPTH6mn3k0kcD3Nbm+p8lPgElOwAi3mWuhB1tIXYtXNFcy9apzVKWgtLRzo7KhXw8ajiBZnoJh6mQsUSlU81leVMYR63/fRlgUViJwzrhEaXEgnHfTO/y2rYT2SYhxECalC9DdhCN3jL/N5/28W7t5b+EjlRBzvnRZJSd4zWT/0+9pMWNSjkqZGBbelnu55S8hjgA4H/BzDktTxkvmZCf69jLX14IWku62v6+o+lpV87kqOtpy3ZrDNbyjddNzBoCV1rnVkL0AdUoI56RLpWR9ELm07/NTckYHEknI9PxViuUJr4gBCPOKiPXBWZ76RNkLqesmYSmP2XqpfgEZxh8+knCIjZ82P+q/BePJ73YdwdqJo/PUjwhJ6NSszIWyemc2MNOwREsh47vgxwCOBd83lkUuuUg9TWMl4f0vFaNxHQthzBSVcd8qDLu6W/CUqxzC305/wBTSXr71yH8/9mxSjAAG/UIUpMA3V3Zo5p9Od7R7E/RQvn3fCy570VXda14U8t1Yy3ezVeuVRdlj1/3D/Kdlp06HM979BQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrZsc3MFqgiXhAqZzEA2w+ZlS5EbUGJLRpKB8PUrGfAAuSyzTy61W6dPX3SkS4mT2AvbUoJQlLPSOomZDHNr08oECzmWVIYMJyBDRcJx+24YemU3xPstVmnQbVr/VNxoGjVcZOOgGtiBj8DGKPLsaTRtBIj4qA6BdpUygwGTCjPVtDwXBbbbsFHlAaEQ+aEblD2v9mSVHkFIja1dyq61I7WWTWuuVBo6zmq1Kq/8Mhczx3Nd5EzuhmMyhwRbrcttRnkg0dr5k3IEBOKYlAlPnEvnyOcykuGYzhhWmYBdrOizWK7jNhztE0k6+2YVeyEasCnPlx3MOKMEx3SDTX3uQM15VGrHMy6omiefJoFcA2zDmtgEBeyb5RxTOxPoiKGQ2JZzjHZYI5iCAEag9Ndo0LS+nde1fOuDwExOuUjk8fLP+ABbQsxTiGy5T2tH7XzADyrVugQSDhiJM0mX8N0Ma4oJyF03gZwPVfohYErXQyr1gK6lYecc0jtZbqvRpTOQ6v806KA5W5BHHGfQcm6q3hMbViarm8Zoqvq96d11L2WvC8abOYFD59xQtHa7PBnKYoi2O4bJYtRZvDLu8IugS8UvroIHdpXeV+fIGUq4VXiRTha+j1mfjG4cdcuXL/XxqL6Z3Axv4x+4vr56+XkB+HvQf7x/ul//3FRQdDHxxl5/4751A3D7oxSRxvWkclcPkuot9xM2qlMs6H2ynrg/h9fi6QldzKDtdvzbh+z1pv73YOH/gk1U3cDGvX5KBlmvHayaRToH/I9t+zM/zp5fgKj90ozBoFvq6y5h9bWYGQuN7GnuGqZGfKQCpqyW2WW0I8y03NEo1D3crl0fNdq9XuCibr/SrwU9t+K7lUYD9dx2zUe9vchsWZxQ7HA2pSaWkdzt2HxNkCShBBaBsJc800onrS8Qu1jh0oCN9CHgTMID1/JMGrVoDq9iA5H/XEfZyp/HzxGvWqXvXN2ze9GeKhDHkhwcSfIICE0pGN02Yy31XEulS7HAy0zFqLzEZQaZVnZhRDb0gnrFkTRJYzBEnYRHWQzldJ7mhXHk9uvZmMjcSiVJuVA4zs+D82l2p//2hdA+ETUO0qR0BbqZ8O6K8cLKPp/P864d5r2Hb2cRNcdLV1UJSrZMjn/9HhYzJcWkFIkRifbciy1/CPEBgPMFP+e0NEW8aEkPou/vcn0raB1p7fu7wOVFOVsus7yjNdf1HaHhHS2byBkDybTMvT3wV2BOAeGcdacUrE8iF/Zjfpmas7HCChI9f6V8ecYjYgzSPCIG+tysz32hHIXUdVOwVh/ZOrF+ABnGX76RSEiMnzb/0J8VF9Hvdn2AdRBH56nfEIqymVmZ++Ttk9kgXMNSrYRcHIJ/BPBR8GNjUeSCi9LT9Jwp+PxPyUhc08KE8IypQdfKDYeym/NUbymEv53eweTKXjz16H+/9WyajwAB/UCUNMc3N3Zo5p/NDqR7F/RUvT0P1Xuddj9A1atD9a7W/E5RlCN2rXfm95aDOp3OeOtf</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0443291410779609174</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0443291410779609174</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0442301410779550139</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_044331410779583267</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0443291410779609174</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319224631384171E05305991E0AE534</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>03199D3922215863E05307991E0AB764</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319AEE401E05F74E05305991E0A731E</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="070abf66-1a39-4d22-9a46-c4848740ce18"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="18787697-b8ad-4a81-8cf7-d383dd71afcc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0faaa579-56a6-46c9-ab21-8262dc39a2b4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth BAU1" id="d6765f76-adbc-43b3-b32d-ceb461df1595"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth BAU1" id="4a0d39e5-fec0-4226-8a71-cbde57bb33eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth BAU" id="65267e39-27e8-4dc9-96f4-ce5efb17d5f1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth BAU" id="5fc039fa-a106-435e-9f60-847911bb27e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH BAU" id="9dfd880c-3e9d-43ea-9436-e723fa0fdc41"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0319B323DDEF1C6EE05305991F0A7EB2:17510C35"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0445101410779710585</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319B323DDE01C6EE05305991F0A7EB2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319B323DDE01C6EE05305991F0A7EB2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319B323DDE01C6EE05305991F0A7EB2</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>031996C8B92E4E20E05305991F0A2865</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319720150131574E05307991F0AAD3A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">031996C8B9444E20E05305991F0A2865</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:031996C8B92E4E20E05305991F0A2865</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319720150131574E05307991F0AAD3A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:031996C8B9444E20E05305991F0A2865</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4BbKNubkCVeGShExCCCTs1rxsCbltFGwJJBlIvn4kAx5gSJbZJ5fardOnLzrSlcRJ7PrXUoJQlLPCJomZ9DNr00oF8zmWVPoMJyB9Rfzx9eOD75ZsH++3WIV+t2n96xKvOsVuo+gELi56DcctYkwqRbtOPCBVUrGDinaVMoU+kwoz1bRc2/GKtt5SeXEc3yn7Xq1Uq9Z+WIUJCKmxtUvJtnakNrJpzZRa+Ait1+vSulziIkKubTvon8eHMZlBgq3W1TajLJBo7fxJKQACcUxKhCfoCh35XAXSH9OIYZUK2MUKPotlI7uBtE8gafTNyvdC0Gchz5YdzDijBMf0A5v6PIKa8aBwHUdcUDVLPk3CsQ1wETakSByPfbPQMbULgY4YComLcoadHdYIQhDACBReR/2m9e2yrmVbXwRmMuQikcfLP+MDbAUxX0BQlPu0dtQuBzxTqdYVEL/PSJxKuoKBGdYFJiB33QRyOVRhKCCkmwcq9YBupGGHDumdLLfV6NIIpPo/DTpozhZkguMUWtHcvgmeJuPkeTBoLDpB1eX3Y+TxDkTNjMChc2bIW7tdngxlPkTbHdO39eAHvcObIfDe+3wuxqPJa5zejd7wbTJhc+G9tlUvlsu/h/c2wjdPQ4oiJNriZUZrAQ3/gtv5avJUf/wYDW+CezH4uO0tp7XB2/fv4Yszf3xuh88O/Bj2n711OK28eg+b2/ld5Xl525mm5Zv6wFtTl3Zvu+nr810knfuwGnXG4on0ZadxX3ntTsJa2S17IdSbeToH/I9t+zM/TqdvQNR+acag3y3c6C5h9bWYGQsNimHm6i+M+EgFTFkts8toh59quaOBr3u4Xdtlp9Godurthtvzeq7dsytlu9JoODf2tVuvVvYis2VxQrHDWUhNLCO527H5miBJfAksAFFc8VQrnbS+QOxihQt9NtKHgDMJL1zLc3kW8dlHuBTvTt2x3zbv5Y91febOpVUYcPXEnsR1qEAca7J3pMkjIHRBwQi3mWupB1sqXYslXqUqdkorXGKQamkXRmV916tXkKTJIgbDFCU8SGMoLWaLrDJIbr9acIjMrFSSBRcKx9mBQJ+md/pvXwntE1DjIE1KbdDdhDN3THmfz+d51w7z3sNfpwE150uXVQlKtkyOf/2aFjMm+ajkiRHp7LnnW/4Q4gwA+oIfOi1NHi9Y0YPo+8tcXwtaSFr7/i5xaVlKV6s062jNtstIaHikddNBYyCp1rn3Fz4HhnIIdNGlkrM+iZzbj/mlasbGCitI9PwVsuUFr4gxSPOK6OuDs7n0iXIUUtdNwUads3Vi/QIyjL98JBGfGD9tHurPmovgV7vOYB3E0XnqR4SiLDIrc6G8fzIbhGtYqqWQi0PwcwDngh8b8yLnXJSepmmq4PM/BaNxTQsTwlOm+l0rMxzqbsZTvS/A/+X0G0wm7flbj/73Y69IsxEgoF+Ikmb45sr2zfyz6EC7d0FP5butr5hut2c7nWrvUL5rvbabF+WIXes38++WgzqdznjrJw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4BbKNubkCVeGShExCCCTs1rxsCbltFGwJJBlIvn4kAx5gSJbZJ5fardOnLzrSlcRJ7PrXUoJQlLPCJomZ9DNr00oF8zmWVPoMJyB9Rfzx9eOD75ZsH++3WIV+t2n96xKvOsVuo+gELi56DcctYkwqRbtOPCBVUrGDinaVMoU+kwoz1bRc2/GKtt5SeXEc3yn7Xq1Uq9Z+WIUJCKmxtUvJtnakNrJpzZRa+Ait1+vSulziIkKubTvon8eHMZlBgq3W1TajLJBo7fxJKQACcUxKhCfoCh35XAXSH9OIYZUK2MUKPotlI7uBtE8gafTNyvdC0Gchz5YdzDijBMf0A5v6PIKa8aBwHUdcUDVLPk3CsQ1wETakSByPfbPQMbULgY4YComLcoadHdYIQhDACBReR/2m9e2yrmVbXwRmMuQikcfLP+MDbAUxX0BQlPu0dtQuBzxTqdYVEL/PSJxKuoKBGdYFJiB33QRyOVRhKCCkmwcq9YBupGGHDumdLLfV6NIIpPo/DTpozhZkguMUWtHcvgmeJuPkeTBoLDpB1eX3Y+TxDkTNjMChc2bIW7tdngxlPkTbHdO39eAHvcObIfDe+3wuxqPJa5zejd7wbTJhc+G9tlUvlsu/h/c2wjdPQ4oiJNriZUZrAQ3/gtv5avJUf/wYDW+CezH4uO0tp7XB2/fv4Yszf3xuh88O/Bj2n711OK28eg+b2/ld5Xl525mm5Zv6wFtTl3Zvu+nr810knfuwGnXG4on0ZadxX3ntTsJa2S17IdSbeToH/I9t+zM/TqdvQNR+acag3y3c6C5h9bWYGQsNimHm6i+M+EgFTFkts8toh59quaOBr3u4Xdtlp9Godurthtvzeq7dsytlu9JoODf2tVuvVvYis2VxQrHDWUhNLCO527H5miBJfAksAFFc8VQrnbS+QOxihQt9NtKHgDMJL1zLc3kW8dlHuBTvTt2x3zbv5Y91febOpVUYcPXEnsR1qEAca7J3pMkjIHRBwQi3mWupB1sqXYslXqUqdkorXGKQamkXRmV916tXkKTJIgbDFCU8SGMoLWaLrDJIbr9acIjMrFSSBRcKx9mBQJ+md/pvXwntE1DjIE1KbdDdhDN3THmfz+d51w7z3sNfpwE150uXVQlKtkyOf/2aFjMm+ajkiRHp7LnnW/4Q4gwA+oIfOi1NHi9Y0YPo+8tcXwtaSFr7/i5xaVlKV6s062jNtstIaHikddNBYyCp1rn3Fz4HhnIIdNGlkrM+iZzbj/mlasbGCitI9PwVsuUFr4gxSPOK6OuDs7n0iXIUUtdNwUads3Vi/QIyjL98JBGfGD9tHurPmovgV7vOYB3E0XnqR4SiLDIrc6G8fzIbhGtYqqWQi0PwcwDngh8b8yLnXJSepmmq4PM/BaNxTQsTwlOm+l0rMxzqbsZTvS/A/+X0G0wm7flbj/73Y69IsxEgoF+Ikmb45sr2zfyz6EC7d0FP5butr5hut2c7nWrvUL5rvbabF+WIXes38++WgzqdznjrJw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDvuxgwRELUx1xmrbpa19Uet2++VODBGyhQST4Et//U1QWXVtr3s/MTmcPOc5L3mSCwHTxPE7QmAuCaOVZZpQ4RfWlpFz6jMoiPApTLHwJfKHnf6971SBD7dbjErQaxn/OFNoQ+TVTAzqddM9dx3TazrnpgPdSQM0J643xcpViBwHVEhIZctwgO2awDPt+si2fdv17fOq4zbfjMoYc6GwlUsVGBtSS9EyYikz37IWi0V1UasyHlkOALb12r8fohin0GhfrDMqAvH2xh9VQ4xwkqAqYql1Ye35XITCH5KIQplzvIkVfhYLWMCzlE8oSPTNKPfiMKBTViy7kDJKEEzIB9T16WMZs7DSSSLGiYzTT5OwgQY28RKZyHbpN8Pap3Yi0B5DLqApYmhvsAZ4ijmmCFdeBkHL+HZa14qtIw6pmDKeiv3l3/HBdI4TluHQFNu0NtROBzxSqfYFRn5AUZILMscPelgziLDYdBOj06EqTxxPyfKeCDWgS6HZWbv0DpbravRIhIX8Pw3aac4aZAyTHLdR/cnzvgs7770sYPM2hZ1a/PoyuPx+hloFgV3nwlC2dr08GMpyiNY7HleDXvdtGV3n7HX0lI3Hnue9E5HEZIx7j6tb8N7pzO5mjQA+T9DZmdONnvnla7qKXf7y/vwBgofovjsOFu5PgjLIb2bpL/uK9wfX5Ed/OHpzJjd3b43m+OluspqKy5vB7Hvcz6xb0ajdzW/BUlqse33942faHD3fcg4bwVMSRul9OHfp+cRGg9HD9Ef0Am5IzFplOjv8923bMz/MJ78wktulHoOgV7lWXYLyazHTFhKa08LVz7T4CImpNNp6l9YOP1dyR0Jf9XC9BjVbnRRg14Fds+tN9wrUa6DpefY16HR6tc5WZNYsDih2GZ0SHUtL7npsviaIUl9gGmJuzlmulE4YXyD2oISVgA7UIWBU4BFT8jxTv2FMvUXDrtNaWJ9HC+hQ78OoPDD5SB95Zyox35dkd0+SBxiRjGCt23qshZprIVUpZnCey8SuzmGV4lwpO9ci6zvued0SJM0SrIlaKQvzBFezOCsKY4n11zEhEoWVCJQxLmFSnAfr0+wO/20LoXxCoh2ETukSq2biI1cM2Obzed7N3by38J08JPp4qapKTtCayf6v38Oip6SclDIxJOwt93LLX0IcAbC+4GcdlqaMF87JTvTtXa5uBaUj7W1/Z7A6q+bzeV50tAlAzeIK3lKyaVtDjHIlc6sRe8fUKiGsk+6UkvVB5NK+zy+XMR1KKHGq5q9SLE94RAyx0I+IQJ2b5akvlL2Qqm4SL+UxWzdRDyDN+Ms3EvKR9lPmJ/VZMB7+btcRrJ04Kk/1hpCERnql75PVJ7OBmIIlSgkZ3wU/BnAs+L6xLHLJRappmuQSf/6noiWuZUCEWE5l0DMKw67sFjzlKsP+b6c/YAplL5965L/feiYpRgCpZ6XyL/D1je3r+afRjnRvgh6q92XNqfV6V8DuNq4K9a6v1bt5demURdlj1/7D/Kdlp06HM97+Fw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc6o6FP0rDn3sIASxClOd0ULPtdVqa+3Xy50YIuYICSVBrb/+JKhUre313Ccmm5211/7ISi45jCPLbXGOU0EYLS3jiHI3tza0LKUug5xwl8IYc1cgd9jqdV2rbLpwu0UrdbyG9m+l4tTHk9pYH8MLS7frFaiPnTrS607dgjasTWzHka6cZ7hDuYBUNDTLBLZuOjqoPgLgAtutgrJZrb9ppSeccoktXcqmtiG15A1tKkTiGsZisSgvKmWWhoZlmsB46XWHaIpjqDUv1xnlgdLmxh+VA4xwFKEyYrFxaez5XAbcHZKQQpGleBMr+C6WaZiOIX0CTsIzrdiLgw6dsHx5BSmjBMGIrKCqTw+LKQtKrShkKRHT+NskgKmAdbxEOgI2PdOMfWonAu0xTDnU+RSCDdYDnuAUU4RLo4dOQzs7rWv51scUUj5hacz3l3/HB9M5jliCA51v09pQOx3wSKWalxi5HYqijJM5vlPDmkCE+aabGJ0OVRqkeEKWXcLlgC65Ymfs0jtYrqvhkRBz8X8atNOcNcgTjDLcnMLlw29/8X4e9cErBBPP9zv90ePoxTIbOYFd59xQtHa9PBjKYojWO9BscjF7ao3AeNUdXL1+eMt70x+tVgnqZ91bO1t1H86rtB31f9Eqe73OajWPzt8G5Fr0LogNA/uVs96A+q3V7WvLvHOIMzBf7WQVjmx2ew79diL8DPQ6fdTvjcKW9eI9R/8Ez1Nwc85Cszq9f7lZ3HNrNW4j7/rXcyVc1Iww8Z6t6fNH14c3s1Xtxnh8uwOz+0aRzg7/fdv2zA+z8W+MxHapxqDjla5ll6D4WcyUhQT6JHd1EyU+XGAqtKbapbTDzaTckcCVPVyvzQpwnIuretuxbdu3TN+sVsyq44Brs2XVL6pbkVmzOKB4xeiEqFhKctdj8zNBFLsc0wCn+pxlUum49gOiBwUsdeiDPASMcvzIpDwDMa8yGAOyDMcYzGczOImCMI3rVa10x0Sf9tPWROB0X5TtPVF+wIgkBCvlVoPN5WRzIYvxDueZiEB5DssUZ1LbUyWzrmXXqwYncRJhRdWIWZBFuJxMk7w0Bl9/LR0inlsJRwlLBYzyE2F8m9/hv20ppE9AlANXKbWxbCc+csnY23y+z7u2m/cWvpUFRB0wWVeRErRmsv/rc1zUnBSzUiSGONhyL7b8JcQRAOMHfsZhaYp4wZzsRN/e5vJekErS3Pb3HZbfy9l8nuUdrSnFTCW8IYUTGEOMMil0H49shqlRQBgn3SoF64PIhX2fXyamdCigwLGcv1K+POEZMcRcPSM68uQsT32j7IWUdRN4KY7ZriL5BFKMf3wlIRcpP2keyM+CpcFnu45g7cSRecpXhCA0VCt1o3x8MxuISVgitZClu+DHAI4F3zcWRS64CDlN40zg7/+UlMg1NIgQy6joeFpu2BXenKf4SLD76fQFJtf24rFH/vu1p5N8BBCWT0ROcnx1Z7tq/mm4I96boIf63a5YFc/zTXB14e/qd81vW0VR9tg1v5i/WnbqdDjjzT8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0445101410779710585</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0445101410779710585</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_044471410779647610</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0444411410779681734</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0445101410779710585</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>031996C8B92F4E20E05305991F0A2865</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319720150141574E05307991F0AAD3A</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>031996C8B9454E20E05305991F0A2865</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00037_UserGet_FUNC_CHILD_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="28867471-d117-405d-b1e5-3b1e9da466cc"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8736eed2-94bf-43c7-9c0f-04d55881b1f8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7b68683f-a3c5-42fe-8797-b3a854951eea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="e788d7fc-914a-4c7d-b655-efbab3136f48"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="4f5c84ad-6cf9-4043-aa14-c75a59c245e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="b6bb3210-525c-41d6-a538-a39404239841"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="96e65206-578e-4c96-962e-4411328940d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH" id="403e75c1-989a-4312-ae12-43d83e280694"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E57CA73970EE0401F0A05991C28</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC192E73C06AC05FE0401F0A0799391D:C4828610"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_050201403082120017</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E69CE574A8CE0401F0A05991C2E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E69CE574A8CE0401F0A05991C2E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E69CE574A8CE0401F0A05991C2E</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E57CA73970EE0401F0A05991C28</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E6CADB4F362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E6CADCEF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E57CA73970EE0401F0A05991C28</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E6CADB4F362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E6CADCEF362E0401F0A05991C36</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1PaFBDaEWYQ1MNRkA/1nnNe7oQ0hWibQJLS6q8/SbEVEL16Z5hhsruz9tofWcmZgHHk+h0hMJeEUaPfa5n/1uunoTcLgYUA9qwadpDluQ1oOY0mQM3Q82aBaxp9IRLcp0JCKlum64Ca5ZxaoHnneL4D/PpppVGt/jGNB8yFglYuFcc0sjiiws/DtsyEU59BQYRPYYyFL5E/7QxufOXpw4KT2T7bsMwD8vZCyqVv26gSYISjCFUQi+0ze8fnLBD+lMwplAnHrzED0TJf96ZpWkmrFcbntus4ju14tvIJBJkfm+2jYjMO+jRkm3UXUkYJghF5gZrUAMsFC4xONGecyEX8ATSwgaOhLZwhVc0aPTbttwA5uy8i7ZDkAlpiAUEBNsEh5pgibNxP+i3z+Gsd3Oy945CKkPFY7K2/RwnTNY7YEgeWKDIr2H0d8UC52mcY+X2KokSQNR7qMVlChIUx4jgk2Q0RavgCYeTtNzKhfqSYMoy+05Yze5urom4fqE6PzLGQ/6dn2/3aoDzAKMHty9+3nRGn56NB1a2umuPzp8eVnTyyjuu0cgrbzhtSZbtf1/vDWs7W66a1OocrL7677E6zyag6yk7YJMyuUgbADzadXl3E7sng183LnD8sxvDxx7Q7CSVnSKRNp7l4IDJN/jRG0ez2aTE+gg8n55MgHA8eGvhCdsaz5+zHbTiU1y+1+vjkhQbRymHn7uB3vUvuT9L7wfX9OL6+S0EPpvJntZelSzC8Zw4V1/TIC4IuvPX+eRperezhHPz07ltvOW3nsGssJGGazB4xksVSj0e/Z1yqfkH5ubxoCwmsMHf1l1qjhMRUmm29S0uLnygBIoGvmrlZX3aB517UG91Oo+o1nIsLp+aAS6fj1D0PdN1moUEbFnsUu4yGRMfSKruZn88JotgXmAaYW2uWoAUW5ieIPSih0acTdTgYFfiOKRUHixpIcTTjnnQTEMMZeJZw1XSem6YxZPKW3vJOKDHf0W7g7mj3BCOyJFgLvJ5woUZcSFWMFVwnMgKVNaxQnKgrgGsV9t1as24LEi8jrKnaMQuSCFeWi2VeGlts/l0LIpFbiUBLxiWMQH4AP8xv/1tRCuUTEO0gdErnWLUTH7iLakU+H+dd3867gO8kAdHnTNVVcoI2THY/vY2LnpNyVsrEkAAF93LLNyEOANif8LP3S1PGC9ZkK3pxv6orQwlKu+jvClZWlWS9TvKONrRYcgVvK80E9hSjRCne8x17wtQuIewvXTgl673IpX2XXyIXdCqhxLGaPyNffuG1McVCvzb66uRkX33K7IRUdZM4k4ds3Ug9SjTjT98tyEfaT5lH6i9lPHhr1wGsrTgqT/XEkITO9UpfLc8fzAZiCpYoLWR8G/wQwKHgu8ayyCUXqaZplkj88RdDi1zLhAixhMp+z8wN28Kb85TPS+y/Ob2DycX99bbOxIe39a/BzVRJYAzN0pf8t7NF8nFB2NSPgpxLy8zU41MFp/MtoX8l+F7rT72u0vtap9nd0/qLsoA7mbTfmd9btmq6fx7afwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1PaFBDaEWYQ1MNRkA/1nnNe7oQ0hWibQJLS6q8/SbEVEL16Z5hhsruz9tofWcmZgHHk+h0hMJeEUaPfa5n/1uunoTcLgYUA9qwadpDluQ1oOY0mQM3Q82aBaxp9IRLcp0JCKlum64Ca5ZxaoHnneL4D/PpppVGt/jGNB8yFglYuFcc0sjiiws/DtsyEU59BQYRPYYyFL5E/7QxufOXpw4KT2T7bsMwD8vZCyqVv26gSYISjCFUQi+0ze8fnLBD+lMwplAnHrzED0TJf96ZpWkmrFcbntus4ju14tvIJBJkfm+2jYjMO+jRkm3UXUkYJghF5gZrUAMsFC4xONGecyEX8ATSwgaOhLZwhVc0aPTbttwA5uy8i7ZDkAlpiAUEBNsEh5pgibNxP+i3z+Gsd3Oy945CKkPFY7K2/RwnTNY7YEgeWKDIr2H0d8UC52mcY+X2KokSQNR7qMVlChIUx4jgk2Q0RavgCYeTtNzKhfqSYMoy+05Yze5urom4fqE6PzLGQ/6dn2/3aoDzAKMHty9+3nRGn56NB1a2umuPzp8eVnTyyjuu0cgrbzhtSZbtf1/vDWs7W66a1OocrL7677E6zyag6yk7YJMyuUgbADzadXl3E7sng183LnD8sxvDxx7Q7CSVnSKRNp7l4IDJN/jRG0ez2aTE+gg8n55MgHA8eGvhCdsaz5+zHbTiU1y+1+vjkhQbRymHn7uB3vUvuT9L7wfX9OL6+S0EPpvJntZelSzC8Zw4V1/TIC4IuvPX+eRperezhHPz07ltvOW3nsGssJGGazB4xksVSj0e/Z1yqfkH5ubxoCwmsMHf1l1qjhMRUmm29S0uLnygBIoGvmrlZX3aB517UG91Oo+o1nIsLp+aAS6fj1D0PdN1moUEbFnsUu4yGRMfSKruZn88JotgXmAaYW2uWoAUW5ieIPSih0acTdTgYFfiOKRUHixpIcTTjnnQTEMMZeJZw1XSem6YxZPKW3vJOKDHf0W7g7mj3BCOyJFgLvJ5woUZcSFWMFVwnMgKVNaxQnKgrgGsV9t1as24LEi8jrKnaMQuSCFeWi2VeGlts/l0LIpFbiUBLxiWMQH4AP8xv/1tRCuUTEO0gdErnWLUTH7iLakU+H+dd3867gO8kAdHnTNVVcoI2THY/vY2LnpNyVsrEkAAF93LLNyEOANif8LP3S1PGC9ZkK3pxv6orQwlKu+jvClZWlWS9TvKONrRYcgVvK80E9hSjRCne8x17wtQuIewvXTgl673IpX2XXyIXdCqhxLGaPyNffuG1McVCvzb66uRkX33K7IRUdZM4k4ds3Ug9SjTjT98tyEfaT5lH6i9lPHhr1wGsrTgqT/XEkITO9UpfLc8fzAZiCpYoLWR8G/wQwKHgu8ayyCUXqaZplkj88RdDi1zLhAixhMp+z8wN28Kb85TPS+y/Ob2DycX99bbOxIe39a/BzVRJYAzN0pf8t7NF8nFB2NSPgpxLy8zU41MFp/MtoX8l+F7rT72u0vtap9nd0/qLsoA7mbTfmd9btmq6fx7afwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQCwGaqCBxPUNnWjqF0jIvR66zIW6DE2wHQr9+7NCkwNCe9khIyDvba6998bLPOVpGjt/mHJggMdWGvab+b30ezJ2qUzcsgJrhuo5noFp9brh2w6l5gQ2ua+nakPMUhpQLREVTdyzbNay6YZ9NLM+3bL92VvHqtd+6NgXGJbR0qchd2TKi3M/DNvWUUT9GnHCfoiVwX2B/3L786UtPHxWc9Nb5jmUekLVCIRLfNHElAAxRhCs4Xprn5oHPecD9MVlQJFIGLzED3tRf9m42m8qmWonZwnQsyzItz5Q+ASeLr3rrS7EZgiGdx7t1F9GYEowi8owUqUsQYRxo7WgRMyLC5RvQtmlbCtqADBvYdulX3XwNkLP7INIBScaRwUNkF2A3MAcGFIN2ezNs6l8/1sHd3glDlM9jtuRH689RArqGKE4gMHiRWcHu44gnytU6B+wPKY5STtZwpcYkQRi4ds1gTrKfhMvhC7iWt1/LuPyRYsoAf6Yt5+Y+V0ndPFGdHlkAF/+nZ/v92qFMUZRC69e2462qs8vp483tdobEZcet2z+eRqnYNHMK+847UmW7X9bHw1rO1sum1Ly9yob3d/Qi60bjgTN7MBvzWRIN0unVpLcc0bv6Ov3xbeNWqyxg2eB6thoinnRuaPvCrY1RwwyfHrvBWfo8e/zSq7LRYNZ9wu56Mv0F3xvT7T/9qbcKg+33VTXpZDPc4FmYRc9mf3XxjT7fz2Z0kN5dPP4IvWvqBnBfH1FvUv89uP3CruzRsxhvotDadKjVaFv95mtO+zkcGgtJGKcPj4BFsVTjMexpA9kvJN6XF2UhgTHPXf1EaRQXQIXeUruUtPipFCAS+LKZu/Wga3tOv95t9zruoFp3+pZr2QOrbdU8z+5W64UG7VgcUezGdE5ULKWyu/l5nyBe+hxoAMxYxykOgevvIPaQQNqQ3sjDEVMOk1iqeOjEQfqwqcE2S9mZ1ajzTUq3z0LXrmIxoiPWngtgB8ptOwfKfQOYJASUvKv55nLAuZClWKF1KiK7skYVCqm8AJjSYN9xz2omJ8skAkXUXMr4EVSSMMkLY/Ldv2MgzHMr4TiJmUCRnR+/N7M7/lYUQvoERDlwlVIHZDPhxE3kFvm8nXdtP+8Cvp0GRJ0yWVXBCN4xOfz0OixqSspJKRPD3C64l1s+CXECwHyHn3lcmjJesCZ70YvbVV4YUk5aRX9XqLKqpOt1mne0oaSSSXhTKqZtjgGnUu+2k/gJqFlCmB+6bkrWR5FL+yG/VIR0LJCApZw/LV9+4K0xBq7eGkN5brKPPmQOQsq6CcjEKVs3kk8SxfjdVwv2sfKT5mv5t4lZ8NquE1h7cWSe8oEhCF2olbpYtm/MBo4lLJFKGLN98FMAp4IfGssil1yEnKaHVMDbXzQlcU0dYRynVAx7em7Yl92cp9gm4L86/QWTS/vLXZ3xN+/q+8ufYymAS6SXvuS/nQ2SjwsGXT0Jci5NPZNPTxmcLvZk/oXgCaX3uv1aw22fdQ+V3umXBTzIpPWX+W/LXk2Pz0PrDw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxFlHkchSwlLVJAolJlMtylLl3m5cpwDuE3sNHZS4NdfOzQpUNrbXgkJ+eT4O99Z/NnHHMWR4/U4h1QQRjV/0NH/qTdtF9o4MFqu4xr1I9w0glbYMGYhbkHQaoVQd3XN5zwDn3KBqOjojmXXDath2K2J1fYsx7PsWtN1/+raDaRcQkuXmqVryzii3CvCdvQspR5DnHCPohi4J7A37l2ce9LTQyUnvXu8YVkETLsLIRLPNHEtBAxRhGuYxeaxueNzHHJvTOYUiSyFl5gh7+gve5+fn2vPRzWWzk3HsizTapvSJ+Rk/l3vfis3Q+jTGdus+4gySjCKyBopUhcgFizUetGcpUQs4negbdO2FLQBS2xgu06/6+ZrgILdJ5F2SKYcGXyB7BJsBDNIgWLQpiO/o3//XAc3eycponzG0pjvrb9GCWgOEUsgNHiZWcnu84gHytU9Buz5FEcZJzlcqjFJEAau/UlhRpbnhMvhC7lWtF9bcvkj5ZQB/kpbjs1trpK6eaA6AzIHLv5Pz7b7tUG5QVEG3WneiNxf9Z/giLvHnn137jqLxm8+vb2+7hQUtp03pKp2v6z3h7WarZdN+d36yp/+OhusWBhdDYOT3+GPLBzOzdO7+8WJ0zPR8ME/P1lN6OLxumGPVrPm6oe1dhvJ1U++GkfBw5yhDA/N66Hz7WpKaHAfD9cDv/7Y+DW5tf7EeJDbTnbWji6DNkVPDxfJ4z05Gw4CFiyHLJuc3P8cXazx+eg6uuyJ6d/Z09K5DSa333KyXt/c+1P0YxK5y9vZyf115zWn7Rx2jaUkjLPgAbAol2o8/IE2lP1C4mN5URYSGrPC1UuURnEBVOhdtUtJi5dJASKhJ5u5WQ/7dts5bfR7g/7p8KjhnFp1yx5aPcttt+3+UaPUoA2LPYp9RmdExVIqu5mfjwni2ONAQ0iNnGV4AVz/AHGABNJ8OpKHg1EOEyZV3A6Omm4jzKJFjmzeaierVYLnol3XtUsmruhV2psJSHek23Z2pHsEmCQElL6rAedywrmQtXhCeSYiu5ajGoVM3gCpEmHPqbdck5M4iUAxNWMmo0MtWSRFZUy++XcMhHlhJRwnLBUosovz9256+9/KSkifkCgHrlI6AdlNeHMV2Z5b5vMmb/fglVXC97KQqGMmyypSgjdMdj+9Tosak2pUqsQwt0vu1ZYvQhwAMD/gZ+6XpooX5mQrenm9yhtD6km37O8Tqj3VsjzPio42lVamEt6UkmmbY8CZFLzVhD0CNSsI81P3TcV6L3Jl3+WXiQUdCyQglvOnFctPPDbGwNVjw5cHZ/nZl8xOSFk3AUtxyNaP5JtEMf7w2YI9rPyk+Y/8e2Zp+NquA1hbcWSe8oUhCJ2rlbpZVu/MBmYSlkgpZOk2+CGAQ8F3jVWRKy5CTlOQCXj/i6Y0rqMjjFlGhT/QC8O27hY8xSoB79XpDUyh7S+X9ZK/e1nfXZyPpQLGSK98yX87G6QYFwy6ehMUXDr6Ur49ZXA639L5F4IHpL7dP3Wb9V6rvyv1zmlVwJ1Mum/Mby1bNd0/D91/AQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_050201403082120017</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_050201403082120017</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0501551403082115920</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0501581403082118142</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_050201403082120017</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E57CA74970EE0401F0A05991C28</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E6CADB5F362E0401F0A05991C36</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E6CADCFF362E0401F0A05991C36</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_UserGet_FUNC_CHILD_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="5d03e113-a613-4dcc-9961-a4b38d72b08b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d184baaf-f298-4e6a-b12b-07a9fa618ffa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3e6861fb-096a-4aa4-8f5a-37373d50a7c9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="f8a19474-7c24-4708-9a3b-2d71171d5e90"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="5ea67816-aaee-482e-a3dc-d59e2cc35079"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="fa5cb21a-26ae-45be-8fe0-2f9fb997828e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="ce98a93a-b019-4fff-8c80-1e42e75cc62b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH" id="477988d4-7f84-4986-9e65-f1738dbad002"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E8348407A59E0401F0A07993925</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC192E539F98608CE0401F0A079938F9:C5D5571D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_050271403082127480</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E6CADEEF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E6CADEEF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E6CADEEF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E8348407A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E77638F99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E5927CDCDDEE0401F0A07993905</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E8348407A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E77638F99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E5927CDCDDEE0401F0A07993905</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxHlPI5CLiRAooJEA7QU2tNCb3NeRsbZAZ8mDrUdSPn6cUKTAqWddiQk5J3ttde+eNknHMWR5XU5ByZIQpVhr63+Y5gNY9bAgTYDF2s2uKHWmhmGhkMHZrZph9iyVGXIeQpDygWioq1ahmlrRkMzW7eG6xmWZ9Rrbsv8rSr3wLiEli41Q1WyOKLcK8K21ZRRL0GccI+iGLgnsDftXo496emhkpPaOdmyLAKyzkKIpafruBYAhijCNZzE+om+53MScG9K5hSJlMFrzIC31de96/W6tq7XEjbXLcMwdMPVpU/Ayfyn2vlRboZgSMNku/YRTSjBKCIblJO6BLFIAqUbzRNGxCL+ANrUTSOH1iDDGjZt+lPV3wIU7L6ItEeScaTxBTJLsAmEwIBiUO4mw7b682sd3O69ZYjyMGExP1h/jxLQFUTJEgKNl5mV7L6OeKRcnRPA3pDiKOVkBVf5mCwRBq5cMwhJNiZcDl/AlaL9Ssblj5RTBvg7bTnRd7lK6vqR6vTIHLj4Pz3b7dcW5R5FKXQa5+zs3Hh+IGejgTM59e1b9vfTi12P8bBdUNh13pKq2v26PhzWarZeN8X3c/tylvXDu3XdThN+rzdu7NPm2cvpo2X1r++GF3eXg1bgT557VzfjGVs589F69mf81+RBP99QdjXwA/DD36M/o8GP4Ckbxber03M7FU09a4XW2Gmsk6d758YZ1ZsC+cPeWA/Zw835Yx/3LoTL6td+nQ6e4mwMF4+z00FodPEv4UD8YwxuMNP9eHN3c3ZhMb07emq/5bSbw76xlIRpOvsDWJTLfDyGPWUg+4XE5/KSW0ighYWrt8w1igugQu3ku3Jp8VIpQCTwZDO364Fvula/VbdbttHsOm7fsA1zYHSNpuvWXcspNWjL4oCin9CQ5LFyld3Oz+cEcexxoAEwbZWkeAFc/QSxhwRShnQiD0dCOdwmUsVNsdxsbFnlRbKOTLZubngzCzZrZKvKVSJ+0V+sGwpge9ptWnvaPQFMlgRygc8nnMsR50IW4xmtUhGZtRWqUUjlFcByFfYsu+XonMTLCHKqepwEaQS15WJZlEbn239LQ5gXVsLxMmECRWZxAD/M7/BbWQrpE5DcgecpnYJsJ7y7i0zPKfP5OG9nN+8SvpsGJD9nsq6CEbxlsv/pbVzyOalmpUoMc7PkXm35JsQRAP0Tfvphaap4wYrsRC/vV3llSEHplP19RrXnWrpapUVHm7lYMgmvS8009SngVCrey23yBFSvIPQvXTgV64PIlX2fXyoWdCqQgFjOn1Isv/DamALPXxtDeXKyrz5l9kLKugnIxDGbH8lHSc7403cL9nDuJ83X8m+dsOCtXUewduLIPOUTQxA6z1f51fLywWzgRMISqYUJ2wU/BnAs+L6xKnLFRchpmqUCPv6i5CLXVhHGSUrFsKcWhl3hLXiKlyV4b07vYApxf72tM/7hbf14OZ5KCYyRWvmS/3bWSDEuGNT8UVBwaauZfHzK4HS+I/SvBN9rfcPv9vr9Qb1hVVrvuK7p1xtVAfcy6bwzv7fs1PTwPHT+BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxHlPI5CLiRAooJEA7QU2tNCb3NeRsbZAZ8mDrUdSPn6cUKTAqWddiQk5J3ttde+eNknHMWR5XU5ByZIQpVhr63+Y5gNY9bAgTYDF2s2uKHWmhmGhkMHZrZph9iyVGXIeQpDygWioq1ahmlrRkMzW7eG6xmWZ9Rrbsv8rSr3wLiEli41Q1WyOKLcK8K21ZRRL0GccI+iGLgnsDftXo496emhkpPaOdmyLAKyzkKIpafruBYAhijCNZzE+om+53MScG9K5hSJlMFrzIC31de96/W6tq7XEjbXLcMwdMPVpU/Ayfyn2vlRboZgSMNku/YRTSjBKCIblJO6BLFIAqUbzRNGxCL+ANrUTSOH1iDDGjZt+lPV3wIU7L6ItEeScaTxBTJLsAmEwIBiUO4mw7b682sd3O69ZYjyMGExP1h/jxLQFUTJEgKNl5mV7L6OeKRcnRPA3pDiKOVkBVf5mCwRBq5cMwhJNiZcDl/AlaL9Ssblj5RTBvg7bTnRd7lK6vqR6vTIHLj4Pz3b7dcW5R5FKXQa5+zs3Hh+IGejgTM59e1b9vfTi12P8bBdUNh13pKq2v26PhzWarZeN8X3c/tylvXDu3XdThN+rzdu7NPm2cvpo2X1r++GF3eXg1bgT557VzfjGVs589F69mf81+RBP99QdjXwA/DD36M/o8GP4Ckbxber03M7FU09a4XW2Gmsk6d758YZ1ZsC+cPeWA/Zw835Yx/3LoTL6td+nQ6e4mwMF4+z00FodPEv4UD8YwxuMNP9eHN3c3ZhMb07emq/5bSbw76xlIRpOvsDWJTLfDyGPWUg+4XE5/KSW0ighYWrt8w1igugQu3ku3Jp8VIpQCTwZDO364Fvula/VbdbttHsOm7fsA1zYHSNpuvWXcspNWjL4oCin9CQ5LFyld3Oz+cEcexxoAEwbZWkeAFc/QSxhwRShnQiD0dCOdwmUsVNsdxsbFnlRbKOTLZubngzCzZrZKvKVSJ+0V+sGwpge9ptWnvaPQFMlgRygc8nnMsR50IW4xmtUhGZtRWqUUjlFcByFfYsu+XonMTLCHKqepwEaQS15WJZlEbn239LQ5gXVsLxMmECRWZxAD/M7/BbWQrpE5DcgecpnYJsJ7y7i0zPKfP5OG9nN+8SvpsGJD9nsq6CEbxlsv/pbVzyOalmpUoMc7PkXm35JsQRAP0Tfvphaap4wYrsRC/vV3llSEHplP19RrXnWrpapUVHm7lYMgmvS8009SngVCrey23yBFSvIPQvXTgV64PIlX2fXyoWdCqQgFjOn1Isv/DamALPXxtDeXKyrz5l9kLKugnIxDGbH8lHSc7403cL9nDuJ83X8m+dsOCtXUewduLIPOUTQxA6z1f51fLywWzgRMISqYUJ2wU/BnAs+L6xKnLFRchpmqUCPv6i5CLXVhHGSUrFsKcWhl3hLXiKlyV4b07vYApxf72tM/7hbf14OZ5KCYyRWvmS/3bWSDEuGNT8UVBwaauZfHzK4HS+I/SvBN9rfcPv9vr9Qb1hVVrvuK7p1xtVAfcy6bwzv7fs1PTwPHT+BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGljygkDjSQqCDRAFv0ultoS/fLkXEGcEkciB0u/fpjhyYFSnvaIyEhT8Zr1ly87DOOo9D2WpxDImjMtF67of9jEdeuoWrFqINrG1WCLcMNqiOjRtzAOa1a2K1ZutbjPIUe4wIz0dBtC1UNyzFQfWC5nmV7llO2Heuvrj1CwiW0dCnLXesoZNzLwjb0NGFejDnlHsMRcE8Qr9+6vvKkp4dzTnrzbMsyC5g0p0LMPdMk5QAIhCEpkzgyz8w9n7OAe306YVikCbzFDHhDf9u7Wq3Kq0o5TiambVmWabmm9Ak4nZzozV/5Zgh6bBxv1z5mMaMEh/QVK1LXIKZxoLXCSZxQMY0+gUYmshS0AWtiEFRlJ7r5HiBj902kPZIJxwafYpSD3cMYEmAEtIf7XkM/+V4Ht3sHCWZ8HCcRP1j/jBKwJYTxHAKD55nl7L6PeKRczTMgXo+RMOV0CTdqTOaYANf+JDCm6yvK5fAFXMvar625/NF8yoD8pC1n5i5XSd08Up02nQAX/6dnu/3aojziMIWmKF2UHlr0qeT4E5fVcYvfdTfgPz+Fk0ZGYdd5S6po99v6cFiL2XrbNE4fhsvBKLiMpkBuEV79vnRmd2GttGrhzRDCzpRPhrXxDNZ46ApnNrNH5354d5muFqheD2CwktiDke/+9h9/jf3nm4GfBqyyWMzadwOonHP0XA381pT3Fv7VsDT/m45rr3ADaB0NHqJSC7l96+kCDYYdm8PFC+sMNm51MzbtX/VlqfQ8HHWXK8zZU3pjU9J4z2k3h31jLgn9dPQCRORLNR69ttaV/cLia3lRFhoY48zVmyuN4gKY0Jtql5IWL5UCRANPNnO77vrItTu1mlOpd133/LRjVS3UtVpWzXUrLjrPNWjL4oCiH7MxVbGUym7n52uCJPI4sAASYxmnZApc/wKxjQXWeuxeHo6YcRjEUsXRmr68iDB53RAHHJvgikM2DM3qunYTi1t2m7TGApI96Ub2nnTfA6FzCkrf1YBzOeFcyFos8DIVISovcZlBKm+ARImwZ1frpyan0TwExdSM4iANoTyfzrPKmHz7bxuY8MxKOZnHicAhys7fp+kdfssrIX0Cqhy4SukcZDfhw1WEvNM8n8/zPt3NO4dvpQFVx0yWVSSUbJnsf3qfFjUmxagUiRGOcu7Flh9CHAEwv+BnHpamiBcs6U70/HqVN4bUk2be3wUuL8rpcplmHa0prUwkvCklE5l9IKkUvM0gngEzCwjzW/dNwfogcmHf55eKKesLLCCS86dly288NvrA1WOjJw/O+rsvmb2Qsm4C1uKYzQ/lm0Qx/vLZQjyi/KT5j/xbxUnw3q4jWDtxZJ7yhSEom6iVulk2n8wGiSUslVIYJ7vgxwCOBd83FkUuuAg5TaNUwOdfNKVxDR0TEqdM9Np6ZtjV3Yyn2MzBe3f6AJNp+9tlveafXtbD66u+VMAI64Uv/W9ng2bjQkBXb4KMS0Nfy7enDM4mOzr/RvCj1Dt+q93pdCuOXUj9qesiv+IUBdzLpPnB/NGyU9PD89D8Fw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0Tp4yg4CddEBYkS6InaUgbodDovR67jgGcSJ9gOpHz92KFJgdKe9khIyDvba6998bIvOIwj2+1zjpkgCdV8r6v/a7frFgpxYFgt0zEaYePJgJbdMdrtju2EEDWwGeqaz3mGfcoFpKKr26bVMMyWYXXmpuOatms6Nen/S9d+YMYltHSpmbqWxxHlbhG2q2eMugnkhLsUxpi7Armz/u2NKz1dWHLSexc7lkVA1lsKkboAoFqAEY4iVENJDC7Agc9FwN0ZWVAoMoZfYga8q7/s3Ww2tU29lrAFsE3TBKYDpE/AyeJc752Vm3Hg0zDZrQeQJpQgGJEtVKRusVgmgdaPFgkjYhm/A20By1TQBs6RgawGPdfBa4CC3SeRDkgyDg2+hFYJNsUhZpgirN1P/a5+/rkO7vbOGaQ8TFjMj9Zfo4TpGkdJKkPyMrOS3ecRT5Srd4GR61MUZZys8ViNSQoR5tqE4ZDkN4TL4Qu4VrRfy7n8kXLKMPpKWy7APldJHZyojkcWmIv/07P9fu1QfsAowz3zT9B2zLjZmf+ypwso+nPqj6bL6/5i0y0o7DvvSFXtflkfD2s1Wy+b8tXtDQ4nqXe/aN9eRRM4brCnR3D3CLJx/4Z54XgzHEXX9/4k3wQDtF0tHy4f2IJfb7YP2+v7rZ1P5nYnjLLpb3w2TEHYehiYDedqeJmFo/7gW7betr9549/Ltv80vBqEcfAdrJ6bngeizjpeXK/HcJpHq/nNeGpNg3/mV8v88XndWV2dTUErv5ywn9+bY2ub5u0Hett9zWk/h0NjKQmz7Ok3RqJcqvHwPW0k+wXFx/KiLCQwwsLVTZVGcYGp0Htql5IWN5MCRAJXNnO3Hg0sxx42Hbs98AaeNxyaDdMamX2z7Th1x2yWGrRjcURxkNCQqFhKZXfz8zFBFLsc0wAzY51kaIm5/gGiBwXUfDqVhyOhHM8TqeIWrkMSIUndWjHLaj0103omlpsm1bVxIu7oHeuHArMD7bbsA+2eYkRSgpXAqwnncsS5kIgruM5EZNXWsEZxJq8AplTYtRudJuAkTiOsqII4CbII19JlWpQG8N2/bUDECyvhKE2YgJFVHMB38zv+VpZC+gREOXCV0iWW7cRv7iLLbZb5vMm7efLOKuH7WUDUOZN1FYygHZPDT6/jouakmpUqMcStknu15YsQJwDAB/zAcWmqeMGa7EUv71d5ZUhB6ZX9XcHaqpat11nR0bYSSybhgdRMC8wwyqTiPc+TP5iCCgJ86sKpWB9FruyH/OSs0pmAAsdy/rRi+YnXxgxz9drw5cnJP/uUOQgp6yZwLk7ZBpF8lCjGH75bkIuUnzRP5N8mYcFru05g7cWReconhiB0oVbqanl+ZzZQImGJ1MKE7YOfAjgV/NBYFbniIuQ0PWUCv/9FUyLX1SFCSUaF7+mFYV94C57iOcXuq9MbmELcX27rnL97W/+8vZlJCYyhXvmS/3Y2SDEuCOvqUVBw6eq5fHzK4HSxJ/QvBN9qfWvQlzI/qrfsSuubjmMN6q2qgAeZ9N6Y31r2anp8Hnp/AQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_050271403082127480</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_050271403082127480</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_050231403082123230</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_050251403082125436</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_050271403082127480</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E8348417A59E0401F0A07993925</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E77639099B5E0401F0A0799391B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E5927CECDDEE0401F0A07993905</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00039_UserGet_FUNC_CHILD_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="24f12140-dd52-4079-ad3a-3f2e56ebfc14"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e966d6f9-23a4-44d5-8268-eb9db8f9c6c8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d3510363-fc8d-458a-a654-1a013170c756"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="36123c59-7dc2-4c2d-8f81-b0bf7dd1c27c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="b5920c9f-5994-4ece-9ab6-6c13eba11b82"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="0521325f-304a-4c84-9229-ea6174ff12a4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="dcee94e4-44b3-4959-b653-c2ae914e73f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="8ff125e7-2c86-4627-80f4-c694e9178c5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BB89723A19E0401F0A0599264C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B3E05B9FC1E0401F0A07991D59:AB631ACD"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0514181403082858416</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B23DCCFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B23DCCFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B23DCCFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BB89723A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B22473DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B09A3E610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BB89723A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B22473DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B09A3E610AE0401F0A05992642</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUtohAO8IML4rdFdcL6rh+uRPSA8Rtk5qkL/rrNym2Aote984ww+T05DnPecmTnAoUR01/IARwSRg1gnHP/PcYeeC0XGy1F27HaoHTtrwQLazQQ013GZ44CGHTCIRIIaBCIip7ZtNxW5ZydLs3jue7Ld89bnS63QfTuAMuFLRyaTimUcQRFX4ZtmemnPoMCSJ8imIQvsT+fDC99JWnjypOZv90w7IMyPtrKRPftnEjBAxRhBuYxfapveNzGgp/TlYUyZTDa8xQ9MzXvXmeN/LjBuMru+k4ju14tvIJBVl9Nftfqs0QBnTJNusRoowSjCLygjSpKcg1C41BtGKcyHX8DrRru46GtqDAFnZb9KtpvwUo2X0SaYckF8gSa+RWYDNYAgeKwbidBT3z6+c6uNl7wxEVS8Zjsbf+O0pAM4hYAqElqswqdp9HPFCu/ilgP6A4SgXJ4EqPSYIwCOOaw5IUl0So4QuFUbbfKIT6kWrKAP9NW07tba6Kun2gOmOyAiH/T8+2+7VBuUNRCv3i0XOCu5eszfPF5Gpyn7Slx5JZx2a4V1LYdt6Qqtv9ut4f1nq2Xjehk9viOonJOIudn2jMf16/zI4W2b04O4+K8YRE3/DPxzP3Qswmo0n0Mn0cPMvRAt+PJoTePt605i7QYfItT5347kvSvHaPcrYc3n8PRzHO84fv0ZV0bhl9KfBzN7q6OIu6BW7eTBBvB786/7TpdIrmd/kJPHTT8XIQdb3oZejBvF18yenFqhMGd0fdVX6ECvKEce8tp+0cdo2VJMzTxSNgWS31eARj41z1C8mP5UVbSGgtS1c/0RolJFBp9vUuLS1+qgSIhL5q5mZ9PnI9zxsOu16neTxwvTOn5bjnzsA58bxmuzWqNGjDYo/iiNEl0bG0ym7m52OCOPYF0BC4lbEUr0GYHyCOkURGQGfqcDAq4IYpFW/xDLN1iih0s0iulmtATgTLzDSumPxBf/DBUgLfUW63uaPcM8AkIaDlXc+3UAMupCrFE8pSGbmNDDUopOoC4FqD/Ware2ILEicRaKJ2zMI0gkayTsrC2GLz37QQFqWVCJwwLlHklsfv3ez2v1WFUD4h0Q5CpzQE1Uw4cBM5VT7v532ynXcFP0hDok+ZqqrkBG+Y7H56GxY9JfWk1Ilh4Vbc6y1/CXEAwP6An71fmjpemJGt6NXtqi4MJSf9qr9PqPHUSLMsLTva0VLJFbytFNO154BTpXfPN+wXULuGsD913dSs9yLX9l1+qVzTuUQSYjV/Rrn8xFtjDkK/NQJ1borPPmR2Qqq6SSjkIdsoUk8SzfjDVwv2sfZT5mv1lzMevrXrANZWHJWnemBIQld6pS+W53dmAzMFS5QSMr4NfgjgUPBdY13kmotU07RIJbz/xdAS1zMRxiylMhibpWFbdkue8jkB/83pD5hS2l/v6kK8e1ffTy/nSgBjZNa+5L+dLVKOCwZTPwlKLj2zUE9PFZyutmT+leABpW8ej0ej82FnVCt9x/PccfvtSO5k0v/D/Kdlq6b756H/Gw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUtohAO8IML4rdFdcL6rh+uRPSA8Rtk5qkL/rrNym2Aote984ww+T05DnPecmTnAoUR01/IARwSRg1gnHP/PcYeeC0XGy1F27HaoHTtrwQLazQQ013GZ44CGHTCIRIIaBCIip7ZtNxW5ZydLs3jue7Ld89bnS63QfTuAMuFLRyaTimUcQRFX4ZtmemnPoMCSJ8imIQvsT+fDC99JWnjypOZv90w7IMyPtrKRPftnEjBAxRhBuYxfapveNzGgp/TlYUyZTDa8xQ9MzXvXmeN/LjBuMru+k4ju14tvIJBVl9Nftfqs0QBnTJNusRoowSjCLygjSpKcg1C41BtGKcyHX8DrRru46GtqDAFnZb9KtpvwUo2X0SaYckF8gSa+RWYDNYAgeKwbidBT3z6+c6uNl7wxEVS8Zjsbf+O0pAM4hYAqElqswqdp9HPFCu/ilgP6A4SgXJ4EqPSYIwCOOaw5IUl0So4QuFUbbfKIT6kWrKAP9NW07tba6Kun2gOmOyAiH/T8+2+7VBuUNRCv3i0XOCu5eszfPF5Gpyn7Slx5JZx2a4V1LYdt6Qqtv9ut4f1nq2Xjehk9viOonJOIudn2jMf16/zI4W2b04O4+K8YRE3/DPxzP3Qswmo0n0Mn0cPMvRAt+PJoTePt605i7QYfItT5347kvSvHaPcrYc3n8PRzHO84fv0ZV0bhl9KfBzN7q6OIu6BW7eTBBvB786/7TpdIrmd/kJPHTT8XIQdb3oZejBvF18yenFqhMGd0fdVX6ECvKEce8tp+0cdo2VJMzTxSNgWS31eARj41z1C8mP5UVbSGgtS1c/0RolJFBp9vUuLS1+qgSIhL5q5mZ9PnI9zxsOu16neTxwvTOn5bjnzsA58bxmuzWqNGjDYo/iiNEl0bG0ym7m52OCOPYF0BC4lbEUr0GYHyCOkURGQGfqcDAq4IYpFW/xDLN1iih0s0iulmtATgTLzDSumPxBf/DBUgLfUW63uaPcM8AkIaDlXc+3UAMupCrFE8pSGbmNDDUopOoC4FqD/Ware2ILEicRaKJ2zMI0gkayTsrC2GLz37QQFqWVCJwwLlHklsfv3ez2v1WFUD4h0Q5CpzQE1Uw4cBM5VT7v532ynXcFP0hDok+ZqqrkBG+Y7H56GxY9JfWk1Ilh4Vbc6y1/CXEAwP6An71fmjpemJGt6NXtqi4MJSf9qr9PqPHUSLMsLTva0VLJFbytFNO154BTpXfPN+wXULuGsD913dSs9yLX9l1+qVzTuUQSYjV/Rrn8xFtjDkK/NQJ1borPPmR2Qqq6SSjkIdsoUk8SzfjDVwv2sfZT5mv1lzMevrXrANZWHJWnemBIQld6pS+W53dmAzMFS5QSMr4NfgjgUPBdY13kmotU07RIJbz/xdAS1zMRxiylMhibpWFbdkue8jkB/83pD5hS2l/v6kK8e1ffTy/nSgBjZNa+5L+dLVKOCwZTPwlKLj2zUE9PFZyutmT+leABpW8ej0ej82FnVCt9x/PccfvtSO5k0v/D/Kdlq6b756H/Gw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj6OQC4GQqCDRpLTplF6AnvbwMjKOE9wGO40doP36sQNJgUM7PSMhIe9sr732xcs+ZWCRWl6fMZRzTIkSBl31H9cELojbHa1lx6Zmt62WNps5jgag7TjQaEWW0VKVkLEChYRxQHhXtQzT1oy2ZnYmhuuZtmc6DavTnKrKT5QzAS1cGoaqrBcpYV4ZtqsWOfEoYJh5BCwQ8zj0xv3htSc8PVBxUnunG5ZlwLw35zzzdB02IgRRmsIGpAv9VN/zOY2YN8YJAbzI0TZmxLrqdu9qtWqsmg2aJ7plGIZuuLrwiRhOTtTej2ozikIS083aB4QSDEGK34EkNUR8TiOlnyY0x3y++ATa1E1DQmtoDTVo2uRE1T8ClOy+ibRHMmdAY3NgVmAjFKMcEYiUh1HYVU++18HN3kkOCItpvmAH6z+jhMgSpTRDkcaqzCp230c8Uq7eKYJeSGBaMLxEN3JMMgARU+5yFOP1NWZi+CKmlO1X1kz8cDVlCP5JW071Xa6Cun6kOgFOEOP/p2e7/dqg/ARpgXpOmzv2z1GaRhc06PhoyqbT4HZARsmqW1LYdd6Qqtu9XR8Oaz1b203v9yQbT5K/7hkhF8bs7tfNU5Bf+2cMQzsNW/3k5f15Mp5NYGCS2dC/eIz99UX49Jrw6eTx/Zw78Na/adJfT5ejxx/JVZDba9+/oMP79iTtnIXm1UPBWsVy9tTM4pdzJ2pf3CD/cnT+8DgcFe5lO/A7s9yEVtTvDMdjR3/uw+X0ORpc/Qim7csYdtKhOR0k5O9+Jg7pR067OewbK0kYF7NnBHm1lOMRBspA9Avwr+VFWnCkxaWrl0mNYhwRrvbkLiktXiEECEeeaOZmPfBN13XPLMt2msFZs3lu2IY5MPpGy3Wttt2uNGjD4oCiT0mMZSypspv5+ZogXHgMkQjl2pIWcI6Y+gViADhQQjISh4MShiZUqDiJl8UCRGjlUm7Gyax4c17d1QtzVOWG8ltym/djjvI96TatPekeIYgzjKS+ywFnYsIZF7V4BcuCp2ZjCRoEFeIGyKUIe5bdaekML7IUSab6gkZFihrZPCsro7PNvyVkiJVWzGBGcw5Sszx/n6Z3+K2qhPCJsHRgMqUzJLqJjlxFRpXP53m3dvOu4PtFhOUxE2XlOYYbJvufPqZFjkk9KnVikJkV93rLH0IcAdC/4KcflqaOFy3xTvTqehU3htCTXtXfV9B4bRTLZVF21JFamQt4XUimqY8RLITgvU3oCyJ6DaF/676pWR9Eru37/Ao+J2MOOFqI+VPK5TceG2PE5GMjFAdn/d2XzF5IUTeO1vyYzU/Fm0Qy/vLZAj0o/YT5TvytaB59tOsI1k4ckad4YXBMErmSN8vbJ7MBqYDFQgppvgt+DOBY8H1jXeSaCxfTNCs4+vyLIjWuqwIIaUF4GKilYVd3S578LUPeh9NvMKW2by/rNfv0sn4aXo+FAi6AWvvi/3bWcDkuEKnyTVBy6apr8fYUwUmyo/Nbgsekvhn4/uDM8Wupd1zXDNofR3Ivk95v5t8tOzU9PA+9fwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6LT/eiUXiiXdoQZBNm7R0WPoFt9ORPSBQTbpDQpIL/+JMVWQPTomWGGyerKt751yZecchRHjt/hHFJBGNWCXkv/BwA5odusGrWa5RluWK8ZY9vFxmQcenZjYrkwtnUt4DyDgHKBqGjpjmW7hlU37ObI8nzb9R2r0qg3n3TtHlIuoaVLxdK1dRxR7udhW3qWUp8hTrhPUQzcF9gfdq4ufenpo4KT3j7dsswDpu2ZEIlvmrgSAoYowhXMYvPU3PM5Dbk/JFOKRJbCa8yQt/TXvavVqrKqVlg6NR3LskzLM6VPyMn0p97+UWyGMKATtl13EWWUYBSRDVKkrkDMWKh1oilLiZjFH0Dbpm0paAPW2MC2S3/q5luAnN0XkfZIphwZfIbsAuwWJpACxaDd3QYt/efXOrjdO0oR5ROWxvxg/T1KQJcQsQRCgxeZFey+jnikXO1TwH5AcZRxsoSBGpMEYeDaTQoTsr4kXA5fyLW8/dqayx8ppgzwd9pyau5yldTNI9XpkSlw8X96ttuvLco9ijJo//IehuFJf9kb/XqpweqxZ8UP7CLp05PzVk5h13lLqmz36/pwWMvZet30fN+pb5yUP/1+9ubgweZktgoe/7Dq9ObSe46mpmuv4kf2p4q7yfLiMozNx253HIzu+ndk4b7UV/0HATfjWsTvbn/0n26c9GTjeDyBQXa9tuasl3i3ok6uYvzLCs7+bv7xZtXehTgfPCReY3KezR9NcjEYbO6d7l/9Tn1wvuiYF6N5dfbjxdp4d/PUxcnvRY1OI3N413rLaTeHfWMhCcNsPAcsiqUaj6Cn9WW/kPhcXpSFhMYkd/UTpVFcABV6W+1S0uJnUoBI6Mtmbtf9ru153pnldarnddvqnFuuZfetjlXzPKfuOoUGbVkcUOwyOiEqllLZ7fx8ThDHPgcaQmosWYZnwPVPEHtIIC2gt/JwMMphxKSKO5umPY/ri2Vzla2t5/psvmqQZm2lawMmrul12pkISPeU23b2lPsWMEkIKHlX883lgHMhS7FAy0xEdmWJKhQyeQGkSoN9x23WTE7iJAJF1IxZmEVQSWZJXhiTb/8dA2GeWwnHCUsFiuz8+H2Y3eG3ohDSJyTKgauUzkA2E47cRHaRz7u8a0dvrAK+k4VEnTJZVZESvGWy/+ltWNSUlJNSJoa5XXAvt3wT4giA+Qk/87A0ZbxwSXaiF7ervDCknLSL/i5QZVHJlsss72hDSWUq4U2pmLY5BJxJvXsZsWegZglhfum6KVkfRC7t+/wyMaNDgQTEcv60fPmFt8YQuHprBPLcrL/6kNkLKesmYC2O2bqRfJIoxp++WrCPlZ8038i/FUvDt3YdwdqJI/OUDwxB6FSt1MXy8sFsYCZhiVRClu6CHwM4FnzfWBa55CLkNI0zAR9/0ZTEtXSEMcuoCHp6btiV3ZyneEnAf3N6B5NL++tdveYf3tUPV5dDKYAx0ktf8t/OBsnHBYOungQ5l5a+lk9PGZxOd2T+leARpXeqvW63f9bolkrf8Dy7V3+b5b1M2u/M7y07NT08D+1/AQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0514181403082858416</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0514181403082858416</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0514121403082852857</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0514161403082856404</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0514181403082858416</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BB89733A19E0401F0A0599264C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B22474DB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B09A3F610AE0401F0A05992642</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00040_UserGet_FUNC_CHILD_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="fa72bc78-9033-461b-939e-644774b8f435"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="705ad206-19ba-4d09-b67e-e75e2f4afc5b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="367b1160-7e14-4bcc-8e4a-8d53c8020e9d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="3b2a7b75-0c44-404e-bf1c-b91cf8179706"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="b32fe503-139d-46ce-9b0c-99738183d1df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="73cbbec1-e4f6-4a4a-83eb-827f311455cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="bc5e72b2-6d5e-475b-bf7d-a697495210af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="46456b1c-9665-4242-95c7-cbff12dce8d0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFAD845309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999BB89993A19E0401F0A0599264C:149138F8"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0514271403082867325</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B287427D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B287427D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B287427D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFAD845309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B1CD938AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B0FC99BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFAD845309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B1CD938AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FC99BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj1XIhQAhKkgU2gPTGy2UM/RlZJwNuE2cEDsB+vVjhyYFCh06EhLyzvbaa1+87AuGAt9yW4xBzElIlV6nof5TqdatCXZMrWY5hmZjVNMm4FlaBXvYqVnYc+yqqvQYS6BHGUeUN1TLMG3NqGqmMzTqrmm7VrlkG7UXVRlBzAS0cCkZqrIKfMrcLGxDTWLqhogR5lIUAHM5dgetu1tXeLoo56Q2LzYss4Bxc8555Oo6LnmAwfdxCYeBfqHv+Fx4zB2QGUU8ieEjpsca6sfe5XJZWpZLYTzTLcMwdKOuCx+PkdmZ2vyVbwavR6fhZt1GNKQEI5+8I0nqDvg89JSWPwtjwufBEWhTNw0JrcEKa9i06ZmqfwbI2J2ItEMyZkhjc2TmYE8whRgoBuX5qddQz07r4GbvMEaUTcM4YHvrn1ECmoIfRuBpLM8sZ3c64oFyNS8Auz2K/YSRFO7lmEQIA1P6MUzJ6pYwMXweU7L2KysmfiSfMsA/acuFvs1VUNcPVKdDZsD4/+nZdr82KCPkJ9A0UBRUFpSW+8l7/bn70vJv1u9jDGYZNzIK284bUkW7P9b7w1rM1sem7srGcRp1FncP7ceR8/ZWGS0W086l3Y2rJvDb8Xxu+ObrbX3cn/D2qN83B930ctUZ9x6fx9TxHkZP73Z34VeuosUvZ3B+HrA/65fWy/00/cse9djj8/A3maGOc7NYeN0buNFbTrV2M+jX0kn0PA+sPzMwBu11hCevbQg6z2jChlfD+/6vh/S3ec7aSZLg8RWL4AWMxmdO2znsGnNJGCSTV8A8X8rx6HWUa9EvxL+XF2khnjbNXN1IahTjQLnalLuktLiJECDiuaKZm/V126zX663rVsexK2WjfmXYhnlttIxKvW5Vy+1cgzYs9ii2QzolMpZU2c38fE8QBy4D6kGspWGC58DUbxA7iCOlR5/E4Qgpg2EoVNwMJ0tUWZnwRuGdL8i7X0kteyJOx33IH+hD3JpyiHeU27R2lPsJMIkISHmX883EgDMuSrFAacJ9s5SiEoVEXACx1GDXsp2KzkgQ+SCJ6kHoJT6UonmUFUZnm39LQ5hlVsJwFMYc+WZ2/I5mt/8tL4Tw8Yh0YDKlSxDNhAM3kZnnczzvynbeOXwr8Yg8ZaKqPCZ4w2T30+ewyCkpJqVIDDMz515s+SHEAQD9G376fmmKeF5KtqLnt6u4MIScNPP+LlBpUUrSNMk6WpNSGQt4XSimqQ8AJ0Lv1sPwDaheQOgnXTcF673IhX2XX8LndMARh0DMn5ItT3hrDIDJt0ZPnJvVqQ+ZnZCibhxW/JCt7YsniWT87asFu1j6CXNf/C3D2Pts1wGsrTgiT/HA4ITO5EpeLOsjs4FDAUuEEobxNvghgEPBd41FkQsuXEzTJOFw/IsiJa6hIozDhPJeR80M27Kb8eTrCNxPpy8wmbR/3NUrdvSu/vvudiAEMEBq4Uv+21kj2bhgUOWTIOPSUFfi6SmC09mWzH8Q/Kr0l5ZTs61ax6jsKX2rKOBOJs0v5q+WrZrun4fmvw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj1XIhQAhKkgU2gPTGy2UM/RlZJwNuE2cEDsB+vVjhyYFCh06EhLyzvbaa1+87AuGAt9yW4xBzElIlV6nof5TqdatCXZMrWY5hmZjVNMm4FlaBXvYqVnYc+yqqvQYS6BHGUeUN1TLMG3NqGqmMzTqrmm7VrlkG7UXVRlBzAS0cCkZqrIKfMrcLGxDTWLqhogR5lIUAHM5dgetu1tXeLoo56Q2LzYss4Bxc8555Oo6LnmAwfdxCYeBfqHv+Fx4zB2QGUU8ieEjpsca6sfe5XJZWpZLYTzTLcMwdKOuCx+PkdmZ2vyVbwavR6fhZt1GNKQEI5+8I0nqDvg89JSWPwtjwufBEWhTNw0JrcEKa9i06ZmqfwbI2J2ItEMyZkhjc2TmYE8whRgoBuX5qddQz07r4GbvMEaUTcM4YHvrn1ECmoIfRuBpLM8sZ3c64oFyNS8Auz2K/YSRFO7lmEQIA1P6MUzJ6pYwMXweU7L2KysmfiSfMsA/acuFvs1VUNcPVKdDZsD4/+nZdr82KCPkJ9A0UBRUFpSW+8l7/bn70vJv1u9jDGYZNzIK284bUkW7P9b7w1rM1sem7srGcRp1FncP7ceR8/ZWGS0W086l3Y2rJvDb8Xxu+ObrbX3cn/D2qN83B930ctUZ9x6fx9TxHkZP73Z34VeuosUvZ3B+HrA/65fWy/00/cse9djj8/A3maGOc7NYeN0buNFbTrV2M+jX0kn0PA+sPzMwBu11hCevbQg6z2jChlfD+/6vh/S3ec7aSZLg8RWL4AWMxmdO2znsGnNJGCSTV8A8X8rx6HWUa9EvxL+XF2khnjbNXN1IahTjQLnalLuktLiJECDiuaKZm/V126zX663rVsexK2WjfmXYhnlttIxKvW5Vy+1cgzYs9ii2QzolMpZU2c38fE8QBy4D6kGspWGC58DUbxA7iCOlR5/E4Qgpg2EoVNwMJ0tUWZnwRuGdL8i7X0kteyJOx33IH+hD3JpyiHeU27R2lPsJMIkISHmX883EgDMuSrFAacJ9s5SiEoVEXACx1GDXsp2KzkgQ+SCJ6kHoJT6UonmUFUZnm39LQ5hlVsJwFMYc+WZ2/I5mt/8tL4Tw8Yh0YDKlSxDNhAM3kZnnczzvynbeOXwr8Yg8ZaKqPCZ4w2T30+ewyCkpJqVIDDMz515s+SHEAQD9G376fmmKeF5KtqLnt6u4MIScNPP+LlBpUUrSNMk6WpNSGQt4XSimqQ8AJ0Lv1sPwDaheQOgnXTcF673IhX2XX8LndMARh0DMn5ItT3hrDIDJt0ZPnJvVqQ+ZnZCibhxW/JCt7YsniWT87asFu1j6CXNf/C3D2Pts1wGsrTgiT/HA4ITO5EpeLOsjs4FDAUuEEobxNvghgEPBd41FkQsuXEzTJOFw/IsiJa6hIozDhPJeR80M27Kb8eTrCNxPpy8wmbR/3NUrdvSu/vvudiAEMEBq4Uv+21kj2bhgUOWTIOPSUFfi6SmC09mWzH8Q/Kr0l5ZTs61ax6jsKX2rKOBOJs0v5q+WrZrun4fmvw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3TqowNtSktpR5jhQ71VVI6g93he7oQ0QKRNsEkp8utvUmwFRC/eGWaY7O6svfZHVnLOYRxZfptznAjCqBb0mvo/ddesmZOxVXEQDis2AHal0fDsCg6B6zhhAzieqWsB5ykOKBeQiqZumdLLrFdAY2R6PrB9y6m6tcYfXXvCCZfQ0qUqd63iiHI/D9vU04T6DHLCfQpjzH2B/GH7tu9LTx8WnPTW+YZlHjBpzYRY+IaBqiFGOIpQFbHYODd2fM5D7g/JlEKRJvg9Zsib+vveLMuqWa3KkqlhmaZpmJ4hfUJOpqd666TYjMOATthm3YWUUYJgRNZQkbrFYsZCrR1NWULELP4CGhjAVNAVvEIVBGx6qhsfAXJ2RyLtkEw4rPAZBAXYA57gBFOEtceHoKmfHtfBzd5RAimfsCTme+ufUcJ0iSO2kNF4kVnB7njEA+VqnWPkBxRFKSdLfKfGZAER5togwROy6hMuhy/kWt5+bcXljxRThtFP2nJubHOV1I0D1emRKebi//Rsu18blCcYpbj1mMUdYA+uOvZZMjAa6ycjqP0ares4NZs5hW3nDamy3e/r/WEtZ+t907D+DIkz71xMG7BGDTCcm57TOZs2ltmjuP5rll3d9SfpwB50L+f0OhiZsHbjifh+ngXRLWPes/3UF8uLJH4Y4JMsW9m9tF+3+fg1rNl/4vHz3W0Aa+2bm/HN+unqJbsbe46zJpftSUiuplez+i/XHr0s0Vk3eHGz3vV83f6bnAnxe3YibrLuEsw9dLboJnRBniyz+ZHTdg67xkIShun4BSNRLNV4BD3tUvYLiu/lRVlIWJnkrv5CaRQXmAq9pXYpafFTKUAk9GUzN+vLLvA8rwO6Pa/WaF9aF6ZtgkuzbbqeB3p1t9CgDYs9il1GJ0TFUiq7mZ/vCaLY55iGOKksWYpmmOvfIPaggFpAH+ThYJTjEZMqDmbIbaSRazpgykA6njFv/OpO1/abrt0xcU/vk/ZE4GRHu4G1o90PGJEFwUrg1YRzOeJcyGK8wmUqIlBdwirFqbwCEqXCvmU3HIOTeBFhRdWIWZhGuLqYLfLSGHzzb1Ug4rmVcLRgiYARyA/gl/ntfytKIX1Cohy4SqmDZTvxgbsIFPl8nbeznXcB305Dos6ZrKtICNow2f30MS5qTspZKRNDHBTcyy0/hDgAYHzDz9gvTRkvXJKt6MX9Kq8MKSitor+vsPpaTZfLNO+oq8QykfCG1ExgDDFKpeK9jdgcU6OEMI66cErWe5FL+y6/VMzoUECBYzl/Wr484rUxxFy9NgJ5clbHPmV2Qsq6CbwSh2zdSD5KFONv3y3IR8pPmgfyL2NJ+NGuA1hbcWSe8okhCJ2qlbpa3r6YDcQkLJFayJJt8EMAh4LvGssil1yEnKZxKvDXXzQlck0dIsRSKoKenhu2hTfnKd4W2P9w+gSTi/v7bb3iX97Wv2/7QymBMdRLX/LfzhWSjwvCunoU5Fya+ko+PmVwOt0S+neCB7Teari25fZMp9R6x/Oseq1dFnAnk9Yn82fLVk33z0PrXw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/bhT+kKhLyPMsKBrdwEdUFf3y52YBIjbJpikWPj1Nym2AqJX74wjk9OT5zznJU9yIkCWenFPCMwlYdRIBh3zH9/3AtAE0HJA27f8oI2s0Pc8q92695x7N/RaQdM0EiFynFAhAZUd03Nc33LalhteOVHs+rEXNSKv9cc0bjAXClq5NBzTKLKUirgM2zFzTmMGBBExBRkWsYTxtDcaxsozBhUns3uyZVkG5N2FlMvYtmEDYYjTFDYgy+wTe8/nBIl4SuYUyJzj55hIdMznvU9PT42nZoPxue05jmM7ka18kCDzr2b3S7UZo4TO2HbdB5RRAkFKNkCTGmG5YMjopXPGiVxkb0C7tutoaAsX0IKuT7+a9kuAkt0HkfZIcgEssQBuBTbBM8wxhdi4niQd8+vHOrjde8UBFTPGM3Gw/hwlTFc4ZUuMLFFlVrH7OOKRcnVPMIwTCtNckBUe6zFZAoiFccnxjBRDItTwIWGU7TcKof5INWUYfqYtJ/YuV0XdPlKdAZljIf9Pz3b7tUW5AWmOu3LcLmiYrUOXn39jl7dXZHj69477q81pp6Sw67wlVbf7eX04rPVsPW/KFzfo+pynp9PNtY1/0WYyuBuPr2+ug2E4QgN/gDng0g/h5Ky48sSvcTiSw59Tdw3aaCMH53TTn3s8aqKHi+zL5lvgPYD2rf+DJ5Pm6C75FUZT//wPcx/x43iKkmjiRw77nWfn0fo+WNzA34WznsiH4in67j546Da4hW1Cf1yugy/+LRld9xcX6+kQrv4ufhIAOy857eawb6wkYZrfP2Aoq6Uej2RgnKl+Afm+vGgLQdasdI2XWqOExFSaXb1LS0ucKwEiKFbN3K7P+m4URd+ds77632sHp47vuGdOzwmiyB20BpUGbVkcUOwzOiM6llbZ7fy8TxBmscAUYW6tWA4XWJjvIA6ABEZCJ+pwMCrwFVMq7m6CEC9YyCCN3KbrF+gxR3LlzUxjzOQFveC9mcR8T7pdb0+6JxiSJcFa3/WACzXhQqpaPIJVLlO3sQINinN1A3AtwrHnhy1bkGyZYs3UzhjKU9xYLpZlZWyx/fUsAEVpJQIuGZcgdcvz92Z6h9+qSigfRLSD0Cl9x6qb+MhV5Fb5vMq7dfTKquB7OSL6mKmySk7glsn+p5dp0WNSj0qdGBRuxb3e8kmIIwD2O/zsw9LU8dCK7ESvrld1Yyg96Vb9fQSNx0a+WuVlRwOtlVzB20oyXXuKYa4Eb33F/mJq1xD2h+6bmvVB5Nq+zy+XCzqVQOJMzZ9RLj/w2JhioR8biTo4xUdfMnshVd0kLuQxWz9VbxLN+N1nC4yh9lPmS/XzxDh6adcRrJ04Kk/1wpCEzvVK3yzrN2YDMgVLlBQyvgt+DOBY8H1jXeSai1TTdJ9L/PYXQ2tcxwQQspzKZGCWhl3dLXnK9RLHL06vYEptf76sC/HmZX07Gk6VAmbArH3JfztbpBwXiE39Jii5dMxCvT1VcDrf0flngkek3gsDNUADp1VLfSuKvHazVxdwL5PuK/Nry05ND89D918=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0514271403082867325</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0514271403082867325</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0514221403082862441</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0514241403082864893</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0514271403082867325</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFAD855309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B1CD948AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B0FC9ABA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_UserGet_FUNC_CHILD_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="ae2010e8-724b-42d9-87c6-794b93d5cfd6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cdf07cdf-2476-491f-80fd-47d28c75ec8c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="75412dfc-fd90-4c08-b762-e1fdd02b2065"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="88f3bb28-0e54-4e67-8e36-42e20f898d54"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT FAU" id="4ab47ac6-cf81-4028-a679-98d4428fa685"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="ca2c97ba-0179-499c-ab77-f8da01eae1b8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="be51120c-2153-4fd6-834f-1049c6c5faf4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="ed6248be-2aa0-4358-b453-72a06808031b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B0FCB6BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B3E07F9FC1E0401F0A07991D59:D2EC7164"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0514361403082876559</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B1CDBD8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1CDBD8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1CDBD8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B0FCB6BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BB89AD3A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B36EE42D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FCB6BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BB89AD3A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B36EE42D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o4FH7vr/C4jxnwhas9gRnAYUtKmhRINu3LjpAPoGBLRpLB6a9fycQOUJJNdyYzRMdH3/nORZ90KVAcuX5PCOCSMGqMgo75j92u1VG93aqECKFKvan+87y5U7GbzUW7BW3bDhemMRIihREVElHZMV3bqSuHitOe2Z7v1P2aW63Xaj9N4wG4UNDKpWqbRhZHVPh52I6ZcuozJIjwKYpB+BL7097N2FeePio4md3LPcs8IO+upEx8y8LVEDBEEa5iFluX1pHPZSj8KVlSJFMOLzFD0TFf9u52u+quVmV8abm2bVu2ZymfUJDlZ7P7qdgM4Ygu2H49QJRRglFEfiFN6gbkioVGL1oyTuQqfgPasRxbQ1cgwxXs1Oln03oNkLP7INIRSS5QRayQU4BNYAEcKAbjfjLqmJ8/1sH93hlHVCwYj8XJ+s8oAd1CxBIIK6LIrGD3ccQz5epeAvZHFEepIFv4psckQRiEccdhQbIxEWr4QmHk7Tcyof5IMWWA/6Qtl9YhV0XdOlOdgCxByP/Ts8N+7VEeUJRC93rCWxd/TZqPPTe5vbvuP4a7K6/VeB4M252cwqHznlTZ7pf16bCWs/WyKRzeM3tn3wGLt8thyuPQ62ffH4K4tRuLhmtvGtmm/qNPSPtp9vRjbl3NaHZ90xsSdjv42Z8GwWZQk/XJtsW99NOIRHI+uRj/3ZjxJ3xBx16r2R7czBPnR+3h9vqvOfTvms3r9XjWbu6CGgqHF41sfPV97cbpRe9eZmuyDofx6sv9vPnpq7C+xO7F18eo/+VaNge/BrjzmtNhDsfGQhKm6fwJsCyWejxGgTFU/ULyfXnRFhJWFrmrn2iNEhKoNLt6l5YWP1UCREJfNXO/Hg4cz/P69nDQb/Z7zdaVXbedod2zW57nBI2g0KA9ixOKA0YXRMfSKrufn/cJ4tgXQEPglS1L8QqE+Q5igCQyRnSiDgejAmZMqfgm3kCy5ilfp0tnFT6zDVk9Ld0lNo1vTN7SW95bSOBH0u24R9I9AUwSAlrf9YALNeFCqlps0DaVkVPdoiqFVN0AXIuw79bbDUuQOIlAM7ViFqYRVJNVklfGEvtft4KwyK1E4IRxiSInP39vpnf6raiE8gmJdhA6pT6obsKZq8gt8nk778Zh3gV8Lw2JPmaqrJITvGdy/Ol1WvSYlKNSJoaFU3Avt/whxBkA6x1+1mlpynjhlhxEL65XdWMoPekW/d2g6qaabrdp3tGW1kqu4C0lmY41BZwqwXuesTVQq4SwPnTflKxPIpf2Y36pXNGpRBJiNX9GvvzAY2MKQj82RurgZB99yRyFVHWTkMlztkGk3iSa8bvPFuxj7afMd+pnx3j42q4zWAdxVJ7qhSEJXeqVvlme35gNzBQsUVLI+CH4OYBzwY+NZZFLLlJN0zyV8PYXQ2tcx0QYs5TKUWDmhkPdzXnK5wT8V6ffYHJtf7msM/HmZf14M54qBYyRWfqS/3aukHxcMJj6TZBz6ZiZenuq4HR5oPMvBM9IvTMI+kG7N3SPpb7ZKgt4lEn3N/PvloOanp6H7r8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o4FH7vr/C4jxnwhas9gRnAYUtKmhRINu3LjpAPoGBLRpLB6a9fycQOUJJNdyYzRMdH3/nORZ90KVAcuX5PCOCSMGqMgo75j92u1VG93aqECKFKvan+87y5U7GbzUW7BW3bDhemMRIihREVElHZMV3bqSuHitOe2Z7v1P2aW63Xaj9N4wG4UNDKpWqbRhZHVPh52I6ZcuozJIjwKYpB+BL7097N2FeePio4md3LPcs8IO+upEx8y8LVEDBEEa5iFluX1pHPZSj8KVlSJFMOLzFD0TFf9u52u+quVmV8abm2bVu2ZymfUJDlZ7P7qdgM4Ygu2H49QJRRglFEfiFN6gbkioVGL1oyTuQqfgPasRxbQ1cgwxXs1Oln03oNkLP7INIRSS5QRayQU4BNYAEcKAbjfjLqmJ8/1sH93hlHVCwYj8XJ+s8oAd1CxBIIK6LIrGD3ccQz5epeAvZHFEepIFv4psckQRiEccdhQbIxEWr4QmHk7Tcyof5IMWWA/6Qtl9YhV0XdOlOdgCxByP/Ts8N+7VEeUJRC93rCWxd/TZqPPTe5vbvuP4a7K6/VeB4M252cwqHznlTZ7pf16bCWs/WyKRzeM3tn3wGLt8thyuPQ62ffH4K4tRuLhmtvGtmm/qNPSPtp9vRjbl3NaHZ90xsSdjv42Z8GwWZQk/XJtsW99NOIRHI+uRj/3ZjxJ3xBx16r2R7czBPnR+3h9vqvOfTvms3r9XjWbu6CGgqHF41sfPV97cbpRe9eZmuyDofx6sv9vPnpq7C+xO7F18eo/+VaNge/BrjzmtNhDsfGQhKm6fwJsCyWejxGgTFU/ULyfXnRFhJWFrmrn2iNEhKoNLt6l5YWP1UCREJfNXO/Hg4cz/P69nDQb/Z7zdaVXbedod2zW57nBI2g0KA9ixOKA0YXRMfSKrufn/cJ4tgXQEPglS1L8QqE+Q5igCQyRnSiDgejAmZMqfgm3kCy5ilfp0tnFT6zDVk9Ld0lNo1vTN7SW95bSOBH0u24R9I9AUwSAlrf9YALNeFCqlps0DaVkVPdoiqFVN0AXIuw79bbDUuQOIlAM7ViFqYRVJNVklfGEvtft4KwyK1E4IRxiSInP39vpnf6raiE8gmJdhA6pT6obsKZq8gt8nk778Zh3gV8Lw2JPmaqrJITvGdy/Ol1WvSYlKNSJoaFU3Avt/whxBkA6x1+1mlpynjhlhxEL65XdWMoPekW/d2g6qaabrdp3tGW1kqu4C0lmY41BZwqwXuesTVQq4SwPnTflKxPIpf2Y36pXNGpRBJiNX9GvvzAY2MKQj82RurgZB99yRyFVHWTkMlztkGk3iSa8bvPFuxj7afMd+pnx3j42q4zWAdxVJ7qhSEJXeqVvlme35gNzBQsUVLI+CH4OYBzwY+NZZFLLlJN0zyV8PYXQ2tcx0QYs5TKUWDmhkPdzXnK5wT8V6ffYHJtf7msM/HmZf14M54qBYyRWfqS/3aukHxcMJj6TZBz6ZiZenuq4HR5oPMvBM9IvTMI+kG7N3SPpb7ZKgt4lEn3N/PvloOanp6H7r8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1N6oVzaEWaAbpWjKFvQkfNyJqSBRtukJCnU/etPUmwFRI+eGWaYrK5861uXfMk5B0ns+D3OEROYEm0YdPR/mu3FIpwvXMNzGi3DtWDD8Ly2Y8zrlhtaqN2og7auDTnP0JBwAYjo6I5lu4bVNOz21PJ82/Xrbs2z6n/r2iNiXEJLl5qla3kSE+4XYTt6xohPAcfcJyBB3BfQn/RGN7709EHJSe+eb1kWAVk3EiL1TRPWQgRRHMMapIl5bu75nIfcn+AlASJj6C1myDv6297NZlPb1GuULU3HsizT8kzpE3K8PNW7J+VmFA7Jgm7XA0AowRDE+A9QpEZIRDTUevGSMiyi5BNo27QtBW2gHBrQdsmpbr4HKNh9E2mPJOPA4BGwS7B7tEAMEYi0h/thRz/9Xge3e6cMEL6gLOEH659RQmSNYpqi0OBlZiW77yMeKVf3HEF/SGCccbxGt2pMUgAR18YMLXB+g7kcvpBrRfu1nMsfLqcMwZ+05dzc5Sqpm0eqE+Al4uL/9Gy3X1uURxBnqJubj61ZYE6SRjhai9nGvaTtVT0H1/aoU1DYdd6Sqtr9tj4c1mq23jZdL5f34Dq96aeThKM8Clrj0GYo9fqu9ZQ+eE4rYP3rudWfTZvLF0YfluaoRReNs4to3bxu1eP50yJqgfvkbIBPXgC0ZuzsgbJnZzYGl4/jXmM1u51c0eZ0fNd8ueWRFz+L1fjXFUsiEc6dq9Ho+TdFl6vo7DWfX85upj0cPObxb37yJ0/CqHXhOk149xeGCG+GnfecdnPYN5aSMMnmzwiKcqnGYxhoF7JfQHwtL8qCQ2NRuPqp0iguEBF6V+1S0uJnUoBw6MtmbtcXA9vzvH6/7fWCes/2flmuZV9YPavheU7THZQatGVxQHFAyQKrWEplt/PzNUGY+ByREDFjTTMYIa5/gRgAAbQhuZeHgxKOplSquN1seGEL0lVznjTsTfv1OYcrGFmerWu3VNyRO9ZbCMT2tNt29rT7HkGcYqQEXk04lyPOhSzGCqwzEdu1NagRlMkrgCkV9h233TA5TtIYKapmQsMsRrU0SovSmHz77xgA8sKKOUwpEyC2iwP4aX6H38pSSJ8QKweuUuoj2U505C5yynw+z7uxm3cJ38tCrM6ZrKtgGG6Z7H96Hxc1J9WsVIlBbpfcqy0/hDgCYH7BzzwsTRUvXOOd6OX9Kq8MKSjdsr8rUFvVsvU6KzraUmLJJLwpNdM2JwhmUvFep/QFEbOCML914VSsDyJX9n1+mYjIRACBEjl/WrH8xmtjgrh6bQzlycm/+5TZCynrJlAujtkGsXyUKMZfvlugD5WfNI/l34ay8L1dR7B24sg85RNDYLJUK3W1vH4yG5BKWCy1kLJd8GMAx4LvG6siV1yEnKZ5JtDnXzQlch0dQEgzIoaBXhh2hbfgKV5T5L87fYApxP3tts75p7f10+hmIiUwAXrli//b2cDFuECkq0dBwaWj5/LxKYOT5Y7QvxE8ovX2IOgH7d6FU2l9y/PsoNmqCriXSfeD+aNlp6aH56H7Lw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx1FIDOEWFSQg7ZQObYfLTJm+HBlnA54mNsROoP36Y4cmBUp7OkdCQt7ZXnvti5d9LnAUlr2OEBBLypnR91vmP6hcJVW3XLEaDeRaLiGuhVHVtZwZIDSbuU6lUTWNvhAJ9JmQmMmWWXaUq1OzUGPiND3kepVmya1WHkzjF8RCQSuXkmMa2yhkwsvCtswkZh7HggqP4QiEJ4k37twMPOXp4ZyT2T7fscwCxu2llCvPtkkpAAJhSEqER/a5feBzHghvTBcMyySGl5iBaJkvezebTWlTKfF4YZcdx7Gdpq18AkEXZ2b7S74Zgj6b8926hxlnlOCQPmNN6gbkkgdGJ1zwmMpl9A40spGjoS3YEosgl52Z9muAjN0nkQ5IxgJbYolRDjaCOcTACBg/R/2Wefa5Du72TmLMxJzHkTha/x0lYCmEfAWBJfLMcnafRzxRrvY5EK/PSJgImsKtHpMVJiCMHzHM6XZAhRq+QBhZ+42tUD+aTxmQv2nLub3PVVG3T1THpwsQ8v/0bL9fO5RfOEygPZ+tp7f8t991U7zskjVz6WbqLte91GllFPadd6SKdr+sj4e1mK2XTdEIxu7X6R+J5M/7cGHfkU2nNhjOE1If1i7SZnh18w3AGc6GyfXVPHryN9dX03AYpr00cb/d8hFqoknt8dc0mTlfHod+8Fxb/67JYVq7/1pJJv37/jDgzcrkYQDpQyR5Oa4/R5P18/D+6mYUfH8Yjaa8O4phcX37bfzYmTGOGl9vwrr7pRNW1lWbQ++6txwNwllUcVuvOe3ncGjMJWGczP4AkflSj0ffNy5Vv7D8WF60hQbWPHP1VlqjhAQmzbbepaXFS5QA0cBTzdytL3uo2Wx2K7WLC7fsu90Lx3XQpdNx6s0m8mt+rkE7FkcUe5zNqY6lVXY3Px8TJJEngAUQWylPyBKE+QGijyU2+mykDgdnAiZcqfhT6G5n6RPebIIZQpV6o/IIa5C1wDRuubxjd3FnLiE+kG5UPpDuERC6oqD1XQ+4UBMupKrFGqeJDFEpxSUGiboBYi3CXtltVG1Bo1UImqkd8SAJobRarrLK2GL3X7YwEZmVCrLiscQhys7fu+kdf8sroXwCqh2ETqkLqptw4ioq5/m8ybt68srK4TtJQPUxU2WVMSU7JoefXqdFj0kxKkViRKCce7HlLyFOANgf8LOPS1PEC1K6Fz2/XtWNofSknfd3jUvrUpKmSdbRutbKWMHbSjKRPQaSKMF7mvBHYHYBYX/qvilYH0Uu7If8ErlkY4klRGr+jGz5icfGGIR+bPTVwdl+9iVzEFLVTcJWnrL1QvUm0Yw/fLYQj2g/Zf6h/jY8Dl7bdQJrL47KU70wJGULvdI3y9M7s0G4gqVKCnm8D34K4FTwQ2NR5IKLVNM0SyS8/8XQGtcyMSE8YbLvm5lhX3cznvJpBd6r0xuYTNtfLuutePeynt4MxkoBI2wWvvS/nS2ajQsBU78JMi4tc6venio4W+zp/AvBE1KPen7Xb3Quy0dSXy8KeJBJ+435rWWvpsfnof0v</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0514361403082876559</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0514361403082876559</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0514311403082871574</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0514331403082873916</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0514361403082876559</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B0FCB7BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BB89AE3A19E0401F0A0599264C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B36EE52D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_UserGet_FUNC_CHILD_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="d2e27260-f3e9-43cc-a4c2-1ed6cc9c0d9d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2f1a34d2-b1cc-4a0b-ab97-71f96f0dd1ca"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="af301dca-2a80-4818-8da2-c7aab62ce7df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="d65b1971-dd35-4ac1-a73d-d25f1218caaa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="409e8318-f129-4516-8be8-2a33576d8cd1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="da842bb7-9c8f-4f8f-957a-28677311b03a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="7350c334-3aa2-4205-8954-83c104b8b7a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="875582a9-ffc5-41c4-94a0-b3041498af01"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2B32F496AE0401F0A05992648</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B1CDDC8AF2E0401F0A07991D67:9C584078"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0514451403082885959</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2257CDB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2257CDB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2257CDB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2B32F496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2D55BA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999AFADC35309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B32F496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D55BA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999AFADC35309E0401F0A0599263C</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1XIjVuigkShDGkLbYFWZ+blyLU34DZxQuxQ4OvHDk0KDO3pHAkJeWd77bUvXvY5R1Ho+B3OIRU0ZlrQa+n/uk2v5nlPxKh5DWJUZ/WG4RH3yag33BnMalbTcbCuBZxnEDAuEBMt3bHsqmHVDbs5tTzfrvpVp2LVnV+69ggpl9DSpWLp2joKGffzsC09S5kfI065z1AE3BfYn3SGN7709FHBSW+f71jmAdP2QojEN01cIYAhDHEFx5F5bh74nBPuT+icIZGl8BaT8Jb+tvf19bXy6lbidG46lmWZlmdKH8Lp/Lve/lZsBhKwWbxbdxGLGcUopFukSA1BLGKidcJ5nFKxiD6Atk3bUtAGrLGB7Sr7rpvvAXJ2X0Q6IJlyZPAFsguwMcwgBYZBexgHLf371zq42ztNEeOzOI340frvKAFbQRgnQAxeZFaw+zriiXK1zwH7AcNhxukKRmpMEoSBa3cpzOj6hnI5fIRrefu1NZc/WkwZ4L9py7m5z1VSN09Up0fnwMX/6dl+v3YojyjMoH02SGrx7dTi07tB7WyBe9XGGZb9Y17QyinsO+9Ile1+Wx8Pazlbb5t6q9qQ8J/TR+Th5n23e321XS/Hza0z2l45N1mV3G8IuXSDy9ov/jMMrsfUGi0f173lz4Yr+j88+/k5uxm6Tg/f/fp2GV2Tl+tHcX8r3J4Fd/fj0VV9MjYfZz/6V2QAgwUdv9xksRVsHy7OlsSebOOMoeUo2gzn/YdBMn6IUhdG7OV58u3pfti5zS4W20E2jVaTcDAZtt5z2s/h0FhIwiR7egYsiqUaj6Cn9WW/kPhcXpSFEmOWu/qJ0igugAm9rXYpafEzKUCU+LKZu3W/a3ued+FcuE6/6tU7l1bVsvtWx5JHzalXm4UG7VgcUezGbEZVLKWyu/n5nCCOfA6MQGqs4gwvgOufIPaQQFrAxvJwxIzDNJYqbjc2y2ZMN7K37DlpLhH1eJa8egtdG8Xilt2mnZmA9EC6bedAuseAaUJB6bsacC4nnAtZiyVaZSK0KytUYZDJGyBVIuw71WbN5DRKQlBMzSgmWQiVZJHklTH57t8xEOa5lXKcxKlAoZ2fvw/TO/5WVEL6EKocuErpAmQ34cRV5Bb5fJx3bT/vAr6TEaqOmSyrSCneMTn89D4takzKUSkTw9wuuJdb/hLiBID5CT/zuDRlPLKie9GL61XeGFJP2kV/l6iyrGSrVZZ3tKG0MpXwppRM25wAzqTgbabxCzCzhDC/dN+UrI8il/ZDfplYsIlAAiI5f1q+/MJjYwJcPTYCeXDWX33JHISUdROwFqds3VC+SRTjT58t2MfKT5rv5N9rnJL3dp3A2osj85QvDEHZXK3UzbL5YDZwLGGplMI43Qc/BXAq+KGxLHLJRchpesoEfPxFUxrX0hHGUttF0NNzw77u5jzFJgH/3ekPmFzb3y7rNf/wsv5neDORChghvfSl/+1s0HxcMOjqTZBzaelr+faUwdl8T+ffCJ6SeqfW6PYuXPdI6utlAQ8yaf9h/tOyV9Pj89D+DQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1XIjVuigkShDGkLbYFWZ+blyLU34DZxQuxQ4OvHDk0KDO3pHAkJeWd77bUvXvY5R1Ho+B3OIRU0ZlrQa+n/uk2v5nlPxKh5DWJUZ/WG4RH3yag33BnMalbTcbCuBZxnEDAuEBMt3bHsqmHVDbs5tTzfrvpVp2LVnV+69ggpl9DSpWLp2joKGffzsC09S5kfI065z1AE3BfYn3SGN7709FHBSW+f71jmAdP2QojEN01cIYAhDHEFx5F5bh74nBPuT+icIZGl8BaT8Jb+tvf19bXy6lbidG46lmWZlmdKH8Lp/Lve/lZsBhKwWbxbdxGLGcUopFukSA1BLGKidcJ5nFKxiD6Atk3bUtAGrLGB7Sr7rpvvAXJ2X0Q6IJlyZPAFsguwMcwgBYZBexgHLf371zq42ztNEeOzOI340frvKAFbQRgnQAxeZFaw+zriiXK1zwH7AcNhxukKRmpMEoSBa3cpzOj6hnI5fIRrefu1NZc/WkwZ4L9py7m5z1VSN09Up0fnwMX/6dl+v3YojyjMoH02SGrx7dTi07tB7WyBe9XGGZb9Y17QyinsO+9Ile1+Wx8Pazlbb5t6q9qQ8J/TR+Th5n23e321XS/Hza0z2l45N1mV3G8IuXSDy9ov/jMMrsfUGi0f173lz4Yr+j88+/k5uxm6Tg/f/fp2GV2Tl+tHcX8r3J4Fd/fj0VV9MjYfZz/6V2QAgwUdv9xksRVsHy7OlsSebOOMoeUo2gzn/YdBMn6IUhdG7OV58u3pfti5zS4W20E2jVaTcDAZtt5z2s/h0FhIwiR7egYsiqUaj6Cn9WW/kPhcXpSFEmOWu/qJ0igugAm9rXYpafEzKUCU+LKZu3W/a3ued+FcuE6/6tU7l1bVsvtWx5JHzalXm4UG7VgcUezGbEZVLKWyu/n5nCCOfA6MQGqs4gwvgOufIPaQQFrAxvJwxIzDNJYqbjc2y2ZMN7K37DlpLhH1eJa8egtdG8Xilt2mnZmA9EC6bedAuseAaUJB6bsacC4nnAtZiyVaZSK0KytUYZDJGyBVIuw71WbN5DRKQlBMzSgmWQiVZJHklTH57t8xEOa5lXKcxKlAoZ2fvw/TO/5WVEL6EKocuErpAmQ34cRV5Bb5fJx3bT/vAr6TEaqOmSyrSCneMTn89D4takzKUSkTw9wuuJdb/hLiBID5CT/zuDRlPLKie9GL61XeGFJP2kV/l6iyrGSrVZZ3tKG0MpXwppRM25wAzqTgbabxCzCzhDC/dN+UrI8il/ZDfplYsIlAAiI5f1q+/MJjYwJcPTYCeXDWX33JHISUdROwFqds3VC+SRTjT58t2MfKT5rv5N9rnJL3dp3A2osj85QvDEHZXK3UzbL5YDZwLGGplMI43Qc/BXAq+KGxLHLJRchpesoEfPxFUxrX0hHGUttF0NNzw77u5jzFJgH/3ekPmFzb3y7rNf/wsv5neDORChghvfSl/+1s0HxcMOjqTZBzaelr+faUwdl8T+ffCJ6SeqfW6PYuXPdI6utlAQ8yaf9h/tOyV9Pj89D+DQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlchFxJCooJEoWyZ3gvTmfZl5XFOiGli09gJtL9+7dCkwNBuZyUk5JPj73zn4s8+4ihLnXDAOeSCMKpNRj39nyjoWnGMwLD9jmu4bicykI8tI446HsS/OlG76+vahPMCJpQLREVPdyzbNayOYXdnVhDabui6raBjP+jaHeRcQkuXlqVr6yylPKzC9vQipyFDnPCQogx4KHA4HVych9IzRDUnvX+0YVkFzPuJEMvQNHErAgxpiluYZeaRueNzFPFwSuYUiSKH15gR7+mve1erVWvVbrF8bjqWZZlWYEqfiJP5V73/pd4M0YTGbLMeIsoowSglL0iRugCRsEgbpHOWE5Fk70Dbpm0paAPW2MC2S7/q5luAit0nkXZI5hwZPEF2DXYLMeRAMWjfbyc9/evnOrjZO8sR5THLM763/jNKQEtI2RIig9eZ1ew+j3igXP0jwOGE4rTgpIRLNSZLhIFr1znEZH1OuBy+iGtV+7U1lz9STxngP2nLkbnNVVI3D1RnRObAxf/p2Xa/Nih3KC2gn8yvuX/qf7s5gW8/LOGdd/376VkSXJw89ioK284bUk27X9f7w9rM1uumh/F6mLyQhRPExB94id+du+4ziQv8Y1zOFstk/sL58OwRTjvs4f6l0706J3SVebNZ+ye6PUNPp5b4G4vJGVu4X/zOeHx1mV6w23YXLaZAZsXd8Omy9ESxvB9e+fbzamqRfPT98e5hTVIyvosnz/fJjXl94w/Sv2bjy3PufHv569S/Cb60L1fZ4G56IxzrZwRlF69x7y2n7Rx2jbUkTItfC8CiXqrxmIy0sewXEh/Li7KQyIgr13CpNIoLoELvq11KWsJCChCJQtnMzXo8tIMgOHZGnnc8CE4GJ5Zr2WNrYHlB4HTabq1BGxZ7FIeMxkTFUiq7mZ+PCeIs5EAjyI2SFTgBrn+AOEICaRN6Kw8HoxxmTKr4y6KTllh4pR+sPTtni0cnF4xHunbJxBW9ygexgHxHuW1nR7lvAZMlASXvar65HHAuZCmeUFmI1G6VqEWhkBdArjQ4dNyuZ3KSLVNQRM2MRUUKrWWyrApj8s2/YyDMKyvheMlygVK7On7vZrf/rS6E9ImIcuAqpWOQzYQDN1G7zuf9vL3tvGv4QRERdcpkVUVO8IbJ7qe3YVFT0kxKkxjmds292fKHEAcAzA/4mfulaeJFJdmKXt+u8sKQctKv+/uEWk+toiyLqqO+kspcwptSMW1zCriQevc8Y49AzQbC/NR107Dei9zYd/kVIqFTgQRkcv60avmJt8YUuHprTOS5WX/2IbMTUtZNwFocsg1T+SRRjD98teAQKz9pvpZ/K5ZHb+06gLUVR+YpHxiC0LlaqYvl+Z3ZwEzCEqmELN8GPwRwKPiusSlyw0XIafpVCHj/i6YkrqcjjFlBxWSkV4Zt2a14iuclhG9Ov8FU0v56V6/5u3f1z4vzqRTADOmNL/lvZ4NU44JBV0+CiktPX8unpwxO51sy/0rwkNI7nj8cHbfbu0rvdpoC7mTS/838u2Wrpvvnof8v</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/C4jx1jG+wAnsAMmCRLC2kKCU37siPL16CsLRlLdgi/fiUTO0BINt0ZZhhdX5177oeOdM5REje9AeeQCcKoNh719L8tGzp2K7CMroOx4bQ7yAjakWM4GCHXjSK7c4Z0bcx5DmPKBaKipzct2zGsM8Pu3Fpdz3Y8p93odtzfuraAjEto6dKwdG2TxJR7ZdienmfUY4gT7lGUAPcE9uaD6cSTnh6qOOn98x3LMmDWXwmReqaJGyFgiGPcwCwxz80Dn/OQe3OypEjkGTzHDHlPf977+PjYeGw1WLY0m5ZlmVbXlD4hJ8vPev9TtRnCMY3Ybu0jyijBKCZbpEhNQaxYqA3iJcuIWCVvQNumbSloAzbYwLZDP+vmS4CS3QeRDkhmHBl8hewKbAYRZEAxaHezcU///LEO7vbeZojyiGUJP1r/GSWgBcQshdDgVWYVu48jnihX/xywN6Y4zjkp4FqNSYowcO0mg4hsJoTL4Qu5VrZf23D5I9WUAf6Ttpyb+1wldfNEdUZkCVz8n57t92uHskBxDn3Kh+vAbw+STfty3r52WzcX8SR6CtajX72Swr7zjlTd7uf18bDWs/W86WHr/iiWN198h3R+Z0/zqSiG3+jXIXb89AoGBV27N3AfXOTtIX6aBDdxd1bEi+l06QqxvXiYJ+Zf2+Tnl/Axaf36NMlnth+xC3F1PypsF91fff96h0i6fECrgNLLu+ngLrjGi3gx2S78L9v4Cv/KV/n6x8/gftFd2A8LZ7a1JrfhLP75KfZn8+DsLzEEbmZbdP/1G+u95LSfw6GxkoR5HjwAFtVSjcd4pF3KfiHxvrwoCwmNqHT1UqVRXAAVel/tUtLi5VKASOjJZu7Wl77d7XYHl4OR33JbVvfCciz70hpYbrfbPGv5lQbtWBxR9BmNiIqlVHY3P+8TxInHgYaQGQXL8Qq4/g7iCAmkjelMHg5GOdwyqeJ2GDg2pTazUhc1Ww+8WFERLROua9dMfKffs0EkIDuQbrt5IN0zwCQloPRdDTiXE86FrMUaFbmI7UaBGhRyeQNkSoS9ptNxTU6SNAbF1ExYmMfQSFdpWRmT7/6bBsK8tBKOU5YJFNvl+XszveNvVSWkT0iUA1cpDUF2E05cRa0qn1d5uyevrAp+kIdEHTNZVpERvGNy+OllWtSY1KNSJ4a5XXGvt/whxAkA8x1+5nFp6nhhQfaiV9ervDGknvSr/q5RY93IiyIvO9pWWplJeFNKpm3OAedS8J5u2T9AzRrC/NB9U7M+ilzbD/nlYkXnAglI5Pxp5fIDj405cPXYGMuDs/noS+YgpKybgI04ZfNj+SZRjN99tmAPKz9pvpF/jywLX9p1AmsvjsxTvjAEoUu1UjfL0xuzgZmEJVIKWbYPfgrgVPBDY13kmouQ0xTkAt7+oimN6+kIY5ZTMR7ppWFfd0ue4ikF78XpFUyp7c+X9Ya/eVnfTydzqYAJ0mtf8t/OBinHBYOu3gQll56+kW9PGZwu93T+meBrqR82m27bHw1brUOpd87qAh5k0n9lfm3Zq+nxeej/Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0514451403082885959</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0514451403082885959</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0514411403082881183</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0514441403082884233</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0514451403082885959</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2B330496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2D55CA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999AFADC45309E0401F0A0599263C</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00043_UserGet_FUNC_CHILD_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="7e71a5cf-bb29-47e9-81b6-d222214c8418"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="58e432f6-ac61-46ba-8602-acaef834db0c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cabbd970-ced0-4a6b-a389-e56973d2ec08"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="b2c630ae-8c82-486f-b86e-553340f5648b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="18770982-f392-4c1c-a9ee-cd13ff980e8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="b97dc9fa-2736-4ae3-93fd-10dcfa129b8c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="e20433cf-35f0-404a-90bd-97fa38cdebfe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="404056b5-8ec2-4842-a93b-41defa754918"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B22597DB33E0401F0A05992646</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999AFADFD5309E0401F0A0599263C:7FA62CD2"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0514541403082894225</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2B351496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B351496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B351496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B22597DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AFADE55309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B23F18FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B22597DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AFADE55309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B23F18FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTn0svlEs7wgyIHHGLF1C3+nImpAuItklJUsD963dSbAVEj/vMMMNkdeVb37rkS44FSmIv7AgBXBJGjUGvZf7rQy1yMTgWmjSx5XtVsJq+61hVrxbhhjdp4CgyjYEQGQyokIjKluk5rm85dctt3jpB6PphzalU3caTadwDFwpauVQc01gnMRVhHrZlZpyGDAkiQooSEKHE4bgzvAiVZ4gKTmb7eMMyD8jbcynT0LZxJQIMcYwrmCX2sb3jcxyJcExmFMmMw1vMSLTMt72r1aqyqlYYn9me4zi2E9jKJxJkdmS2fxSbIRrQKdusTxBllGAUk99IkxqCnLPI6MQzxomcJ59Au7braGgL1tjCrk+PTPs9QM7um0g7JLlAlpgjtwAbwRQ4UAzG3WjQMo++18HN3luOqJgynoi99d9RArqEmKUQWaLIrGD3fcQD5WofAw4HFMeZIEu41GOSIgzCuOYwJesLItTwRcLI22+shfqRYsoA/01bju1troq6faA6PTIDIf9Pz7b7tUG5R3EGbeqOkqiLg7uzf7p2kMHjJDu5B7QS6Usrp7DtvCFVtvttvT+s5Wy9bZoHst+8fr4ePrrLeMnic3DPxosnv1qPs/PAlXcX3VOv+xo9ojFZ/ZTnLKjNJ/WV590kQbPqPLLTTmfWGQaj6Ln6Y9IfCQgW0V1M+KlXO69fOy/Z7G54w8er7tNl7xf/1ZuNVvYZXt92Tx9TGkcUn90sxtW7xxNZvxx2fs0bt/PkZ/Ml+HHz0A8WjZfpc/DUX3uzh4erm9Z7Tts57BoLSRhnk2fAsljq8Rj0jL7qF5Jfy4u2kMia5q5hqjVKSKDSbOtdWlrCTAkQiULVzM26f+IGQdD1vFrQ6HWr1VPHd9y+03FqQeDV/XqhQRsWexRPGJ0SHUur7GZ+viaIk1AAjYBbS5bhOQjzC8QeksgY0JE6HIwKuGVKxckcTbMZd5YeWno8dclvvvJdUTeNSyav6BXvTCXwHeV2vR3lHgEmKQEt73q+hRpwIVUpFmiZyditLFGFQqYuAK41OPT8Zs0WJElj0ETthEVZDJV0nuaFscXm37MQFrmVCJwyLlHs5sfv0+z2vxWFUD4R0Q5Cp9QF1Uw4cBP5RT6f513bzruA72QR0adMVVVygjdMdj+9D4ueknJSysSwcAvu5Za/hDgAYH/Bz94vTRkvWpKt6MXtqi4MJSftor8LVFlUsuUyyzva0FLJFbytFNO1x4AzpXevt+wFqF1C2N+6bkrWe5FL+y6/TM7pWCIJiZo/I19+460xBqHfGgN1btbffcjshFR1k7CWh2wnsXqSaMZfvlpwiLWfMl+rvxXj74kfwtqKo/JUDwxJ6Eyv9MXy+slsYKZgiVJCxrfBDwEcCr5rLItccpFqmiaZhM+/GFriWibCmGVUDnpmbtiW3ZynfE0hfHf6AJNL+9tdvRaf3tUPw4uxEsAEmaUv+W9ni+TjgsHUT4KcS8tcq6enCk5nWzL/RvCQ0nerNdcP6p09pW+WBdzJpP3B/NGyVdP989D+Aw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTn0svlEs7wgyIHHGLF1C3+nImpAuItklJUsD963dSbAVEj/vMMMNkdeVb37rkS44FSmIv7AgBXBJGjUGvZf7rQy1yMTgWmjSx5XtVsJq+61hVrxbhhjdp4CgyjYEQGQyokIjKluk5rm85dctt3jpB6PphzalU3caTadwDFwpauVQc01gnMRVhHrZlZpyGDAkiQooSEKHE4bgzvAiVZ4gKTmb7eMMyD8jbcynT0LZxJQIMcYwrmCX2sb3jcxyJcExmFMmMw1vMSLTMt72r1aqyqlYYn9me4zi2E9jKJxJkdmS2fxSbIRrQKdusTxBllGAUk99IkxqCnLPI6MQzxomcJ59Au7braGgL1tjCrk+PTPs9QM7um0g7JLlAlpgjtwAbwRQ4UAzG3WjQMo++18HN3luOqJgynoi99d9RArqEmKUQWaLIrGD3fcQD5WofAw4HFMeZIEu41GOSIgzCuOYwJesLItTwRcLI22+shfqRYsoA/01bju1troq6faA6PTIDIf9Pz7b7tUG5R3EGbeqOkqiLg7uzf7p2kMHjJDu5B7QS6Usrp7DtvCFVtvttvT+s5Wy9bZoHst+8fr4ePrrLeMnic3DPxosnv1qPs/PAlXcX3VOv+xo9ojFZ/ZTnLKjNJ/WV590kQbPqPLLTTmfWGQaj6Ln6Y9IfCQgW0V1M+KlXO69fOy/Z7G54w8er7tNl7xf/1ZuNVvYZXt92Tx9TGkcUn90sxtW7xxNZvxx2fs0bt/PkZ/Ml+HHz0A8WjZfpc/DUX3uzh4erm9Z7Tts57BoLSRhnk2fAsljq8Rj0jL7qF5Jfy4u2kMia5q5hqjVKSKDSbOtdWlrCTAkQiULVzM26f+IGQdD1vFrQ6HWr1VPHd9y+03FqQeDV/XqhQRsWexRPGJ0SHUur7GZ+viaIk1AAjYBbS5bhOQjzC8QeksgY0JE6HIwKuGVKxckcTbMZd5YeWno8dclvvvJdUTeNSyav6BXvTCXwHeV2vR3lHgEmKQEt73q+hRpwIVUpFmiZyditLFGFQqYuAK41OPT8Zs0WJElj0ETthEVZDJV0nuaFscXm37MQFrmVCJwyLlHs5sfv0+z2vxWFUD4R0Q5Cp9QF1Uw4cBP5RT6f513bzruA72QR0adMVVVygjdMdj+9D4ueknJSysSwcAvu5Za/hDgAYH/Bz94vTRkvWpKt6MXtqi4MJSftor8LVFlUsuUyyzva0FLJFbytFNO1x4AzpXevt+wFqF1C2N+6bkrWe5FL+y6/TM7pWCIJiZo/I19+460xBqHfGgN1btbffcjshFR1k7CWh2wnsXqSaMZfvlpwiLWfMl+rvxXj74kfwtqKo/JUDwxJ6Eyv9MXy+slsYKZgiVJCxrfBDwEcCr5rLItccpFqmiaZhM+/GFriWibCmGVUDnpmbtiW3ZynfE0hfHf6AJNL+9tdvRaf3tUPw4uxEsAEmaUv+W9ni+TjgsHUT4KcS8tcq6enCk5nWzL/RvCQ0nerNdcP6p09pW+WBdzJpP3B/NGyVdP989D+Aw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3S6H/eUXmiBdoSZymXLUdEjqFtfzsR0AdE2gSYt6K8/SbEVED3uM8MMk9WVb33rki855iiJnSDkHFJBGNWGvbb+j+c9uthuNY2G4/iG2/KR8fgInmE1m3WQv1bDaejakPMMhpQLREVbdyzbNayGYbcmlh/YbuA5tUa99aBrt5ByCS1dapaurZOY8qAI29azlAYMccIDihLggcDBOLw4D6RngEpOeud4w7IImHbmQiwC08S1CDDEMa5hlpjH5o7PccSDMZlRJLIU3mJGvK2/7V2tVrVVvcbSmelYlmVavil9Ik5mP/TOUbkZoiGdss26iyijBKOYvCJF6gLEnEVaGM9YSsQ8+QTaNm1LQRuwxga2XfpDN98DFOy+ibRDMuXI4HNkl2DXMIUUKAbt5nrY1n98r4ObvZMUUT5lacL31n9GCWgOMVtAZPAys5Ld9xEPlKtzDDgYUhxnnOQwUmOyQBi4dpXClKzPCZfDF3GtaL+25vJHyikD/CdtOTa3uUrq5oHq9MgMuPg/Pdvu1wblFsUZdJpn6+hn15fte7yf3szrz62MW82ry0b+3C4obDtvSFXtflvvD2s1W2+b7r2r/u3Amvje6xnxnIuX08kdrK9vf56PZn0e1utL/sv+5WfRnQXh6ZPfP+k9M+fvJ9ftdh+S+XB8J7qDs8HgAXf7Rwty6xOrf/GAX0fdG3tl980rB92hrjiZrs6t2YLgkPmr3+HISZt/jVLyOj+N1vTlcjym5D6/aQyXXpJPlnOyJEeDJ/thMstJEr3aNB4179l9+z2n7Rx2jaUkjLPHJ8CiXKrxGPa0gewXEl/Li7KQyJgWrsFCaRQXQIXeUbuUtASZFCASBbKZm/Wga/u+Hw7CXt/z6pbft1zLHlih5fm+06h3Sw3asNij2GV0SlQspbKb+fmaIE4CDjSC1MhZhufA9S8Qe0ggbUiv5eFglMOESRW3V9Frzl+mFm7lU76yyJqtXELqma6NmLikl2k4FZDuSLft7Ej3NWCyIKD0XQ04lxPOhazFEuWZiO1ajmoUMnkDpEqEA8dteSYnySIGxdRMWJTFUFvMF0VlTL75dwyEeWElHC9YKlBsF+fv0/T2v5WVkD4RUQ5cpXQCsptw4Cpyy3w+z9vbzruED7OIqGMmyypSgjdMdj+9T4sak2pUqsQwt0vu1ZY/hDgAYH7Bz9wvTRUvyslW9PJ6lTeG1JNO2d8lqi1rWZ5nRUebSitTCW9KybTNMeBMCt7LhD0DNSsI81v3TcV6L3Jl3+WXiTkdCyQgkfOnFctvPDbGwNVjYygPzvq7L5mdkLJuAtbikK0byzeJYvzlswUHWPlJ85X8W7E0em/XAaytODJP+cIQhM7USt0sL5/MBmYSlkgpZOk2+CGAQ8F3jVWRKy5CTtNjJuDzL5rSuLaOMGYZFcOeXhi2dbfgKV4WELw7fYAptP3tsl7zTy/r3xfnY6mACdIrX/LfzgYpxgWDrt4EBZe2vpZvTxmczrZ0/o3gR6k/cU7qnu36jXBX6t1WVcCdTDofzB8tWzXdPw+dfwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQa1MSFSQKpU2n9EYH2nk5Mo4DbhMbbIfb1x87NClQ2tMeCQl5Z3vttS9e9gkHWeqELc4RE5gSLeo09H+OXQ+4ARoZAaq7hucmsTHyYs+AMXCtILAC23d0LeI8RxHhAhDR0B3L9gzLN+z6gxWEthce+TXPcv7q2gAxLqGlS83StWWWEh4WYRt6zkhIAcc8JCBDPBQw7Ld6V6H0DEHJSW+ebFgWAVlzIsQ0NE1YixFEaQprkGbmibnjcxLzsI/HBIicodeYMW/or3sXi0Vt4dYoG5uOZVmmFZjSJ+Z4/FNv/ig3ozgiCd2s24BQgiFI8RooUj0kJjTWWumYMiwm2QfQtmlbCtpAS2hA2yM/dfMtQMHui0g7JBkHBp8AuwS7RwliiECk/bmPGvrPr3Vws/eBAcITyjK+t/4eJUTmKKVTFBu8zKxk93XEA+VqniAYRgSmOcdzdK3GZAog4totQwleXmEuhy/mWtF+bcnlD5dThuB32nJibnOV1M0D1engMeLi//Rsu18blAFIc9QcTqJf7brg7uDs+OXiZvg7/bsY8sFdkj41CgrbzhtSVbtf1/vDWs3W66Zuf+avhvOl31rEfx57jD4PorVbp06v0/ecq2sxjLi9wv7KGt38yRIvvRx2ORbrcQ8+X67GTzftdnDxwoPn1vnFD5rerOdu1Jo9T5Z3D/Fd8gtMbs9Hp+uL27nbvUwGjODp5NnNrdOLq/l5b5wNBmIJ0ar1dHU5szJnnKUuXTvDNfz742kyPB+fpfnjlCRnnag9OueNt5y2c9g1lpLQz0fPCIpyqcYj6mhd2S8gPpcXZcGxkRSu4VRpFBeICL2pdilpCXMpQDgOZTM3627bDoLg1HG7dr17etw+szzL7lot6zgI7I5vlxq0YbFHsU1JglUspbKb+fmcIMxCjkiMmDGnOZwgrn+C2AECaBG5l4eDEo4eqFRx6B8xuFyRwPeYDT3fr7/YbjzyPV27puKG3LBWIhDbkW7b2ZHuewTxFCOl72rAuZxwLmQtZmCei9SuzUGNoFzeAEyJcOh49SOT42yaIsXUzGicp6g2nUyLyph88+8YAPLCijmcUiZAahfn78P09r+VlZA+MVYOXKV0imQ30YGryCvzeZf30cErq4Rv5TFWx0yWVTAMN0x2P71NixqTalSqxCCvxqLa8k2IAwDmJ/zM/dJU8eI53opeXq/yxpB60iz7OwO1WS2fz/Oio8dKK5mEN6Vk2mYfwVwK3uqBviBiVhDml+6bivVe5Mq+yy8XE9IXQKBMzp9WLL/w2Ogjrh4bkTw4y6++ZHZCyroJtBSHbO1UvkkU40+fLTCEyk+ab+XfgrL4rV0HsLbiyDzlC0NgMlYrdbOsPpgNSCUsllJI2Tb4IYBDwXeNVZErLkJO0ygX6OMvmtK4hg4gpDkRUUcvDNu6W/AUqykK35zewRTa/npZL/mHl/Vj76ovFTADeuWL/9vZwMW4QKSrN0HBpaEv5dtTBifjLZ1/JXhI6k/dI9sL/FYl9UdB4PhevSrgTibNd+b3lq2a7p+H5r8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0514541403082894225</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0514541403082894225</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0514491403082889480</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0514511403082891831</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0514541403082894225</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B22598DB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AFADE65309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B23F19FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00044_UserGet_FUNC_CHILD_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="bf62e2e3-dc13-4d88-8c77-fd101a7dd5d4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c4f534d2-18dc-404f-a341-69e49ef395c7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="223c5595-5796-4760-ab03-a5d66a038a33"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="610553f9-0e0e-41e5-bee1-78b7c7f09253"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT FAU" id="fe041ed4-f1bf-4333-91a5-4d17ff2af2b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="76e0f529-18bd-4654-a7f3-384293e7fe54"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="8d860944-ec50-406e-9547-09b915876590"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="0076b1a7-6ce8-4bb6-a5f0-6ce8b5cf908b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFAE085309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B3E0BF9FC1E0401F0A07991D59:EDDC1A06"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051531403082903956</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B23F36FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B23F36FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B23F36FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFAE085309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B288847D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B2889D7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFAE085309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B288847D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B2889D7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU/I4FP3ur+jUj8+UpuW1HWEGQRQXRAFZ9ctOSNMSLUltUqj++k2KrYDo4s4ww+T25txzX3KSMw6Xoe22OcexIIxq/W5T/wfYjmcBCIx6zbGMilfxjYY/94wqrjtV5NnAatR1rc95gvuUC0hFU5fGigFqhtWYAse1Km7VKQEAnnRthmMuoaVLCehaugwpd7OwTT2JqcsgJ9ylcIm5K5A7aQ8HrvR0Yc5Jb51tWGYB49ZCiMg1TVTyMMJhiEqILc0zc8fnzOPuhAQUiiTGHzE93tQ/9q7X69K6XGJxYNqSpAkcU/p4nASneusk34y9PvXZZt2BlFGCYEjeoSI1xGLBPK0dBiwmYrH8BtoyLaCgDZwiA1kVeqqbnwEydkci7ZCMOTT4Alo52Bj7OMYUYe1+3G/qp8d1cLN3GkPKfRYv+d76d5QwXeGQRdgzeJ5Zzu54xAPlap1h5PYpChNOVvhGjUkEEebabYx9kg4Il8PncS1rv5Zy+SP5lGH0m7acmdtcJXXzQHW6JMBc/J+ebfdrgzKDYYJbAXhcvaDak8PS14T+MW1o/7VO7+4Wi3Uzo7DtvCFVtPtjvT+sxWx9bPIer/x28EiD9KUxerLez69u4HTwd++5Mh8uJp1eMHmLBJnFw4pY3/PyoHbpj8cWSK4D2AhmYF3vztb9KB32r8XVCaTzUVyzqzc39xfmOBmsVumdOV7D0Xx6fvvcrS/9eu1idH3NHh6idvWy3LPnL2AGB5ej6m1tvqrMZo3X9sPl8JU8/TnxRmOL03rj1uadd5/fsXvQ/MxpO4ddYy4Jk2T+jJHIl2o8+l2tJ/sFxc/yoizEM/zM1Y2URnGBqdBbapeSFjeRAkQ8VzZzs+51LMdx2r32BWhUy8C5ABVg9UAbVB3HrpU7uQZtWOxR7DDqExVLqexmfn4miJYux9TDsbFiCVpgrv+A2IUCan06loeDUY6nTKq4hRoORFEi0oSAGLB5ihflZ7Gu6toNEyM6itu+wPGOdFv2jnSPMSIRwUrf1YBzOeFcyFq8wlUiQqu0giWKE3kDxEqEXbvSqJqcLKMQK6bmknlJiEvRIsoqY/LNv21AxDMr4ShisYChlZ2/b9Pb/5ZXQvp4RDlwldI5lt3EB66iSp7P93lXt/PO4duJR9Qxk2UVMUEbJrufPqdFjUkxKkViiFs592LLLyEOAJg/8DP3S1PE81ZkK3p+vcobQ+pJK+/vKyy9lpLVKsk6WldaGUt4U0qmZU4wSqTgvU3ZC6ZmAWEedd8UrPciF/ZdfolY0ImAAi/l/GnZ8ojHxgRz9djoy4OTHvuS2Qkp6yZwKg7ZOqF8kyjGPz5bkIuUnzTfyr81i73Pdh3A2ooj85QvDEFooFbqZnn7ZjYQk7BESiGLt8EPARwKvmssilxwEXKa5onA33/RlMY1dYgQS6jod/XMsK27GU/xFmH30+kLTKbtH5d1yr+9rB+Gg4lUwCXUC1/y384GycYFYV29CTIuTT2Vb08ZnAZbOv9B8KvUn9vlXrnWO693CqmvO47VrX0eyZ1MWl/MXy1bNd0/D61/AQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU/I4FP3ur+jUj8+UpuW1HWEGQRQXRAFZ9ctOSNMSLUltUqj++k2KrYDo4s4ww+T25txzX3KSMw6Xoe22OcexIIxq/W5T/wfYjmcBCIx6zbGMilfxjYY/94wqrjtV5NnAatR1rc95gvuUC0hFU5fGigFqhtWYAse1Km7VKQEAnnRthmMuoaVLCehaugwpd7OwTT2JqcsgJ9ylcIm5K5A7aQ8HrvR0Yc5Jb51tWGYB49ZCiMg1TVTyMMJhiEqILc0zc8fnzOPuhAQUiiTGHzE93tQ/9q7X69K6XGJxYNqSpAkcU/p4nASneusk34y9PvXZZt2BlFGCYEjeoSI1xGLBPK0dBiwmYrH8BtoyLaCgDZwiA1kVeqqbnwEydkci7ZCMOTT4Alo52Bj7OMYUYe1+3G/qp8d1cLN3GkPKfRYv+d76d5QwXeGQRdgzeJ5Zzu54xAPlap1h5PYpChNOVvhGjUkEEebabYx9kg4Il8PncS1rv5Zy+SP5lGH0m7acmdtcJXXzQHW6JMBc/J+ebfdrgzKDYYJbAXhcvaDak8PS14T+MW1o/7VO7+4Wi3Uzo7DtvCFVtPtjvT+sxWx9bPIer/x28EiD9KUxerLez69u4HTwd++5Mh8uJp1eMHmLBJnFw4pY3/PyoHbpj8cWSK4D2AhmYF3vztb9KB32r8XVCaTzUVyzqzc39xfmOBmsVumdOV7D0Xx6fvvcrS/9eu1idH3NHh6idvWy3LPnL2AGB5ej6m1tvqrMZo3X9sPl8JU8/TnxRmOL03rj1uadd5/fsXvQ/MxpO4ddYy4Jk2T+jJHIl2o8+l2tJ/sFxc/yoizEM/zM1Y2URnGBqdBbapeSFjeRAkQ8VzZzs+51LMdx2r32BWhUy8C5ABVg9UAbVB3HrpU7uQZtWOxR7DDqExVLqexmfn4miJYux9TDsbFiCVpgrv+A2IUCan06loeDUY6nTKq4hRoORFEi0oSAGLB5ihflZ7Gu6toNEyM6itu+wPGOdFv2jnSPMSIRwUrf1YBzOeFcyFq8wlUiQqu0giWKE3kDxEqEXbvSqJqcLKMQK6bmknlJiEvRIsoqY/LNv21AxDMr4ShisYChlZ2/b9Pb/5ZXQvp4RDlwldI5lt3EB66iSp7P93lXt/PO4duJR9Qxk2UVMUEbJrufPqdFjUkxKkViiFs592LLLyEOAJg/8DP3S1PE81ZkK3p+vcobQ+pJK+/vKyy9lpLVKsk6WldaGUt4U0qmZU4wSqTgvU3ZC6ZmAWEedd8UrPciF/ZdfolY0ImAAi/l/GnZ8ojHxgRz9djoy4OTHvuS2Qkp6yZwKg7ZOqF8kyjGPz5bkIuUnzTfyr81i73Pdh3A2ooj85QvDEFooFbqZnn7ZjYQk7BESiGLt8EPARwKvmssilxwEXKa5onA33/RlMY1dYgQS6jod/XMsK27GU/xFmH30+kLTKbtH5d1yr+9rB+Gg4lUwCXUC1/y384GycYFYV29CTIuTT2Vb08ZnAZbOv9B8KvUn9vlXrnWO693CqmvO47VrX0eyZ1MWl/MXy1bNd0/D61/AQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/XinpCmgtCPMoIjggrqAXpcvd2J6Ctlt09KkgPz6mxRbAdGrd0aHyenJc57zkic5EyQKHa8tBKSSxdzod5rmP1XHJyfUbVg2UGrVnhzbUv/U8n3qAvZPSR37ptEXIoM+F5Jw2TQdG9cs+8TCjYnterju2U7FPjmdmsYDpEJBK5eKbRrrKOTCy8M2zSzlXkwEEx4nEQhPUm/cHg485emRgpPZOtuyzAOmrbmUiYcQrfhAIQxphcYROkN7Pme+8MZsxonMUniJ6Yum+bJ3tVpVVtVKnM6QY9s2sl2kfHzBZt/N1rdiM/h9HsTb9QXhMWeUhGxDNKkhyHnsG+1wFqdMzqN3oDHCtoa2YE0timv8u4leA+TsPom0RzIVxBJzgguwEQSQAqdg3I/6TfP75zq43TtJCRdBnEbiYP01SsCXEMYJ+JYoMivYfR7xSLlaZ0C9PqdhJtgSbvSYJISCMO5SCNh6wIQaPl8YefuNtVB/rJgyoF9pyxna5aqooyPV6bAZCPl/erbbry3KAwkzaN0Gq1/rVRSkdz8C1NsMntObzWDcSKebfjOnsOu8JVW2+2V9OKzlbL1s6oogGWGR+I/uT/anHT0ulrepfX19P924rL/4OQqf2EUn8ht3HQiGq9rV7Px+aaPhBF9XZ/Or3u3jo3MX/kBdJCbfRHj/8ICqf/CvTe/qth5kq9n1X6RNpiM87f0ezGe13vS3CPHVTbeNr1h9+OxwdhkMlk8B7j7/7fdqlw+jyYLNrljybdBoT9FY9IZy40zdn7WHxbD5mtNuDvvGQhLG2dNvoLJY6vHod4yu6heRH8uLtjDfCnJXL9EaJSRwabb0Li0tXqYEiPmeauZ23b3AruueO41Go3baseuXds3GXbtt113XOam2Cw3asjigeBHzgOlYWmW38/MxQRp5ArgPqbWMMzoHYX6A2CGSGH0+Uocj5gImsVJx3CA4cmVNOT+tMVQbczGHRJLING5iectv03YgId2TbuzsSfcIKEsYaH3XAy7UhAuparEgy0yGuLIkFQ6ZugFSLcKeU2vUkWBREoJmiqLYz0KoJPMkrwwS21/HIlTkViZoEqeShDg/f++md/itqITy8Zl2EDqlc1DdhDdXUc2rF/m8n3d9N+8Cvp35TB8zVVaZMrplsv/pdVr0mJSjUiZGBS64l1u+CHEEAH3ADx2WpoznL9lO9OJ6VTeG0pNW0d8FqSwq2XKZ5R091VqZKnikJBOjMdBMCd7zJP4DHJUQ6FP3Tcn6IHJp3+eXyTkfSyIhUvNn5MtPPDbGIPRjo68OzvqzL5m9kKpuEtbymO0iVG8SzfjDZwv1qPZT5jv1s4rT18SPYe3EUXmqF4ZkfKZX+mZ5fmc2aKxgmZLCON0FPwZwLPi+sSxyyUWqaXrKJLz/xdAa1zQJpXHGZb9j5oZd3c15yucEvFenNzC5tr9c1mvx7mX9OByMlQJGxCx92X87WywfFwqmfhPkXJrmWr09VXA+29H5F4LHpL7arZ50z08vSqk/dV3cOXk9knuZtN6Y31p2anp4Hlr/Ag==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tqo1PScm9HmEEQ7SjewMvny5mYbiB+bVqSlIu//iTFVkD06JlhhsnuztprX7KSY4GjsOx1hAAuacwMv9cy/ym70MQ1p25VG2NiVZukYrmAXateJ5VGtdysVjGYhi9ECj4TEjPZMsu2U7XsuuU0R7brOTXPrpds23k2jQfgQkErl5JtGssoZMLLwrbMlDMvxoIKj+EIhCeJN+wMLj3l6eGck9k+XrPMAvL2VMrEQ4iUAiAQhqRE4ggdoy2f40B4QzphWKYc3mMGomW+710sFqVFpRTzCSrbto1sFymfQNDJodk+yDdD4LNxvF53MYsZJTikb1iTGoCcxoHRCScxp3IafQHtIMfW0BYsiUWcKjs00UeAjN0PkbZIcoEtMcVODnYHY+DACBj3d37LPPxZB9d7RxwzMY55JHbWv6MEbA5hnEBgiTyznN3PEfeUq30MxPMZCVNB53ClxyTBBIRxw2FMl5dUqOELhJG131gK9aP5lAH5TVuO0SZXRR3tqU6PTkDI/9OzzX6tUR5wmEIbjs6Dp/vkBl8ny5P0pZ+kjYr/PL29oZ1WRmHTeU2qaPf7endYi9l63/SKHk/fAn59dH7loHuns7p/CjsU+2fnf+2bs4dm9bTmph03eA1Y5SW8khccnT/0R7WzaHHRgyn6s7rtPqrPD08JPlAWp1ubRZ1geUXP6pX76/LzYH45uH0eDbrzqeN2x1cpq6wajnuGjl77J4+96PZy/HJ/wuQft8qxPWkEpy80mZ3Sg3qXN/yLZZpeL8jEHzB7NGh95LSZw7Yxl4Rh+vIKROZLPR5+z+irfmH5vbxoCw2scebqJVqjhAQmzbbepaXFS5UA0cBTzVyv+13Hdd2TcrPp9ho9u3ZqV22nb3fsmuuW65VOrkFrFjsUuzEbUx1Lq+x6fr4nSCJPAAuAW/M4JVMQ5jeIPSyx4bM7dThiJmAUKxWfhVO7snLr8zAInSQhtoyDNzGTwjSuYnnNrnlnLIFvSbdT3pLuOyA0oaD1XQ+4UBMupKrFDM9TGTqlOS4xSNUNwLUIe+Vqs4YEjZIQNFMUxUEaQimZJlllkFj/ly1MRGalgiQxlzh0svP3ZXq73/JKKJ+AagehUzoB1U34dBVVvVqez6e8a3uvrBy+kwZUHzNVVskpWTPZ/vQxLXpMilEpEiPCybkXW34JsQcAfcMP7ZamiBfM6Ub0/HpVN4bSk3be3xkuzUrpfJ5mHW1oreQKHinJdNAQSKoEbzWK/wJDBQT60X1TsN6JXNi3+aVyyoYSS4jU/BnZ8gePjSEI/djw1cFZ/vQlsxVS1U3CUu6zdUP1JtGMv322EI9oP2W+UX+LmAcf7dqDtRFH5aleGJKyiV7pm2X1xWyQWMFSJYUx3wTfB7Av+LaxKHLBRappekklfP3F0BrXMjEhccqk3zMzw6buZjzlKgHvw+kTTKbt75f1Unx5WT8NLodKASNsFr70v50tmo0LUU9V5Z9xaZlL9fZUwdlkQ+ffCe6T+kq/Uu+fNLqF1Ddc1+nVP47kVibtT+bPlo2a7p6H9r8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051531403082903956</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051531403082903956</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0514571403082897965</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051511403082901015</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_051531403082903956</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFAE095309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B288857D05E0401F0A0599263A</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B2889E7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="bb1da092-6cd7-48f9-8cc6-3922b9b1562f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a7834af3-ac79-4093-a3fe-dff087220f54"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b0d7f547-d4ca-4567-a0ce-c90d218cf86a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="6f47a79e-6a29-4a0d-99ec-f42f3dc3461e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="b71960ea-b1d7-4c7a-8e1b-c9d0de57a924"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="0056d123-b324-41b1-b1a3-7e601553fede"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="badab25a-09f5-428d-a432-949a959d31ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="b640c33b-9694-4dec-ab58-b80de10092ec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"031971874E591550E05307991F0ADE69:E7CEF131"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0446561410779816773</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319707ED1C76414E05305991F0AC4D3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319707ED1C76414E05305991F0AC4D3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319707ED1C76414E05305991F0AC4D3</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319B0A4E1B511A5E05305991F0A5E6E</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319AFCB1F643C2DE05307991F0A5F60</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319B9BA60282EFDE05305991F0A5BEC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319B0A4E1B511A5E05305991F0A5E6E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319AFCB1F643C2DE05307991F0A5F60</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319B9BA60282EFDE05305991F0A5BEC</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvdxysgCs7kCVQSSGyaQBRKyvEwJuQ0KtmwsGZN8/UgGHCAkw50nl9qt06cXHelMkMAvOW0hIJYs5IVV4HPhZNamkcTcCYlgwuEkAOFI6ozag75TKloO2W4xCr1u0/in7FXrZQJVs+GRuml7AObELmGz0sCkQSr1qkcrylWIBHpcSMJl0yhZ2DathokrDxg7uOKUS8WaVXs1CmOIhcJWLkXL2JBaiaYxkzJyEErTtJiWi2E8RSXLwuh50B/RGQTEaJ2tM8oCxa2NPy26QMH3aZGGATpDez5nrnBGbMqJTGLYxHK/i2Uhq4GUjyvY9JeR7wW3x70wW3YIDzmjxGcfRNdnAHIWuoW2Pw1jJmfBt0lgSwObsKImxTb/ZaB9aicC7TGMBTHFjOAN1hA8iIFTKDwOe03j12ldy7Y+xIQLL4wDsb/8Mz7Al+CHEbim2Ka1oXY64JFKtc6AOj1O/USwJdzoYY0IBbHpJtDToQp3MXhs1WdCDehKaHZol97Bcl2NLpuCkP+nQTvNWYOMiZ9AK4GXwEX4+aVTag/D1B1dls/f7JvbjwvRzAjsOmeGvLXr5cFQ5kO03tFn1Vs6qU66kay6f90Mnzru3Qi9uR3L9pPX/mQMvy8Wt7OHJ/gg08Yj7Qo5OQ+u3LfxA+nUrq/dl9s56q9q99640r6reePBY5BWZ2Je54PJsrZ4ngz7g8as1+bVTo+w+3lfHXi/k9y/xFcJFX9fTa+frzvx02BK4KMXDQfkros/8BiTdPWOJuN5v/YbvU7GXEybeTo7/Pdt2zM/SiZvQOV2qceg1y1cqi4R+bOYaQtzTS9zdSItPkICl0ZL79La4SRK7pjrqB6u11YZN86ttn2BzysYtysXVqVsVRoNfGmpRfViKzJrFgcUOyH3mI6lJXc9Nj8TpIEjgLsQm8swUUonjB8Qu0SSQo8P1SEIuYCHUMkzTheWwHPfnqTRAtftj3SewpSlJWkUbkJ5y2/jtich3hdle0+Uh0BZxEArtx5soSZbSFWMBVkm0sfFJSlySJS2x1pmnZJdryDBgsgHTRUFoZv4UIxmUVYaJNbfkkmoyKxM0CiMJfGzE4G+ze/w37YUysdl2kHolM5BtROOXDKlbT7f513bzXsL305cpg+YqquMGV0z2f/1OS56TvJZyROjAm+551v+EOIIAPqBHzosTR7PXbKd6NvbXN0LSkla2/4uSHFRTJbLJOtozbLKKFbwSAknRiOgiRK694dwDhzlEOikWyVnfRA5t+/zS+SMjySREKj5K2TLE54RIxD6GdFTJ2d16htlL6Sqm4SVPGbr+OoJpBn/+EqiDtV+ynynPmkYu5/tOoK1E0flqV4RkvGpXukb5f2b2aChgmVKC8N4F/wYwLHg+8a8yDkXqaZpkkj4/k9Bi1zTIJSGCZe9rpEZdoU34ynfI3A+nb7AZNqeP/bYf7/2TJaNAAX1RBQsw9d3tqPnn093xHsT9FC/1ZBcdHGnVrWxvavfHbtbzouyx671xfzVslOnwxlv/Qs=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvdxysgCs7kCVQSSGyaQBRKyvEwJuQ0KtmwsGZN8/UgGHCAkw50nl9qt06cXHelMkMAvOW0hIJYs5IVV4HPhZNamkcTcCYlgwuEkAOFI6ozag75TKloO2W4xCr1u0/in7FXrZQJVs+GRuml7AObELmGz0sCkQSr1qkcrylWIBHpcSMJl0yhZ2DathokrDxg7uOKUS8WaVXs1CmOIhcJWLkXL2JBaiaYxkzJyEErTtJiWi2E8RSXLwuh50B/RGQTEaJ2tM8oCxa2NPy26QMH3aZGGATpDez5nrnBGbMqJTGLYxHK/i2Uhq4GUjyvY9JeR7wW3x70wW3YIDzmjxGcfRNdnAHIWuoW2Pw1jJmfBt0lgSwObsKImxTb/ZaB9aicC7TGMBTHFjOAN1hA8iIFTKDwOe03j12ldy7Y+xIQLL4wDsb/8Mz7Al+CHEbim2Ka1oXY64JFKtc6AOj1O/USwJdzoYY0IBbHpJtDToQp3MXhs1WdCDehKaHZol97Bcl2NLpuCkP+nQTvNWYOMiZ9AK4GXwEX4+aVTag/D1B1dls/f7JvbjwvRzAjsOmeGvLXr5cFQ5kO03tFn1Vs6qU66kay6f90Mnzru3Qi9uR3L9pPX/mQMvy8Wt7OHJ/gg08Yj7Qo5OQ+u3LfxA+nUrq/dl9s56q9q99640r6reePBY5BWZ2Je54PJsrZ4ngz7g8as1+bVTo+w+3lfHXi/k9y/xFcJFX9fTa+frzvx02BK4KMXDQfkros/8BiTdPWOJuN5v/YbvU7GXEybeTo7/Pdt2zM/SiZvQOV2qceg1y1cqi4R+bOYaQtzTS9zdSItPkICl0ZL79La4SRK7pjrqB6u11YZN86ttn2BzysYtysXVqVsVRoNfGmpRfViKzJrFgcUOyH3mI6lJXc9Nj8TpIEjgLsQm8swUUonjB8Qu0SSQo8P1SEIuYCHUMkzTheWwHPfnqTRAtftj3SewpSlJWkUbkJ5y2/jtich3hdle0+Uh0BZxEArtx5soSZbSFWMBVkm0sfFJSlySJS2x1pmnZJdryDBgsgHTRUFoZv4UIxmUVYaJNbfkkmoyKxM0CiMJfGzE4G+ze/w37YUysdl2kHolM5BtROOXDKlbT7f513bzXsL305cpg+YqquMGV0z2f/1OS56TvJZyROjAm+551v+EOIIAPqBHzosTR7PXbKd6NvbXN0LSkla2/4uSHFRTJbLJOtozbLKKFbwSAknRiOgiRK694dwDhzlEOikWyVnfRA5t+/zS+SMjySREKj5K2TLE54RIxD6GdFTJ2d16htlL6Sqm4SVPGbr+OoJpBn/+EqiDtV+ynynPmkYu5/tOoK1E0flqV4RkvGpXukb5f2b2aChgmVKC8N4F/wYwLHg+8a8yDkXqaZpkkj4/k9Bi1zTIJSGCZe9rpEZdoU34ynfI3A+nb7AZNqeP/bYf7/2TJaNAAX1RBQsw9d3tqPnn093xHsT9FC/1ZBcdHGnVrWxvavfHbtbzouyx671xfzVslOnwxlv/Qs=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMvINDK5AFWDIQAXIBpLM5GVLkRsQa0vEkoHM169kwAPkssw+udRunT590ZGuBU5iJ2gJAamknJW2ScxEkFsbRpaygGNBRcBwAiKQJJi0hreBU7YCfNhilPphw/i7XqkDmTmeWXNwZHqzF8d8iVzXdMCqWbZbJ/VaTbkKkUGfCYmZbBiOZXumVTftytS2A7saWG7Z9WvPRukRUqGwlUvZMvaktqJhLKRcBQhtNpvyxi3zdI4cy7LRj+HthCwgwUbzepdRHiht7v1JOQICcUzKhCfoGp34XEcimNA5wzJLYR8r+iyWhaw6Uj6RoPNvRrEXoj6b8XzZwYwzSnBMf2FdnyHIBY9KrXjOUyoXyadJ2JYGNmFLTGJ77JuBTqldCHTCMBXYFAts77HuYQYpMAKlh/t+w/h2WdfyrdMUMzHjaSJOl3/GB9gaYr6CyBSHtPbULgf8oFLNayBBn5E4E3QNIz2sK0xA7LsJ5HKo0l0KM7q9pUIN6FZoduiY3tlyV42QzkHI/9Ogo+bsQB5xnEFT3qarmD2EeIRZWG/3N9WnN4aXy7bbb+QEjp1zQ9Ha3fJsKIsh2u0YWV2WPCFvlS57c857iyQe4HCARlN/9HQzd63XZzFMb36OUdtPhmJM0HcH+cn0ajQdsOXdXdxdb9J/5GZbgR+3fjtEw9dx+jC64d+nnv08efzxOIyerq78Vrx5xvVq+/Xt6vmm2x0OWv7jYFu57/ZRdzz6zn450wk8QLgZLLv3y1/O4OeVHE9kpwNoXEOVn573V6NI54j/qe1w5ifZyxKIPCz1GPTDUk91CcuvxUxbaGTOctdgpcVHSGDSaOpdWjuCTMkdjQLVw93acu16q9dp272q53acsGtVXMuv1+2e1ar0qtZBZHYszih2OJtRHUtL7m5sviZIkkAAiyA11zxTSieMLxBDLHGpz+7VIeBMwJQrebal7y1rMymq68p87dZm2wW8cWLNjNKIyzEbp62ZhPRUk70TTb4HQlcUtHDruRZqsIVUtXjF60zGdnmNywwyJe2pVtnA8WoVJGiyikEzRQmPshjKq8UqrwwSu69jYiJyKxVkxVOJ4/xAoE/TO/93qITyiah2EDqlNqhuwrs7phJUDvl8nrd/nPcBvpVFVJ8vVVaZUrJjcvrr97ToMSlGpUiMCPvAvdjyhxAfAKAv+KHz0hTxojU9in64zNW1oISkeejvKy6/lrP1Oss76luWi1IFj5Ru2mgCJFM69zbl/wBDBQS66FIpWJ9FLuyn/DK5YBOJJSRq/kr58oJXxASEfkX01cHZXvpEOQmp6iZhKz+ydWL1AtKMv3wkkYBoP2W+U58NT6Pf7foA6yiOylM9IiRlc73SF8rbJ7NBuIKlSgp5egz+EcBHwU+NRZELLlJN00sm4fM/Ja1xDQMTwjMm+6GRG451N+cp31YQ/HZ6B5NLe/HWo//92DNpPgIE1AtR0BxfX9mBnn82P9LufdBz+fYtvxvaHb/q2V4u35WdfHe80C2KcsKu+c783nJUp/MZb/4L</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn3sGPnCzZ7ADLe0tORycMI0fTmjyBsQMZIryUD4+koGHKAkh54nj7a31l77oiVdSbxIvLAtJQhFOSutFwmTYW5tWplgIceSypDhBchQkTBq3wxDr+yEeL/FKg16TevfCWlUa161bgeu79kV8uzYQQVPbBe8uFpxax4hvnaVMoMBkwoz1bQ8x63YTmC71QfXDd1a6FfKTqP+0yqNQUiNrV3KjrUjtZZNa6ZUGiK0Wq3KK7/MxRR5juOiHzfDiMxgga3W1TajPJBo7fxJOQYCSULKhC/QFTryuYplGNEpwyoTsIsVvxfLQU6AtE8s6fSTVeyFeMAmPF92MeOMEpzQDTb1uQE143GpnUy5oGq2eDcJ1zHANqyJTdwK+2ShY2oXAh0xFBLbcobdHdYIJiCAESg9jgZN69NlXcu3PgjM5ISLhTxe/h0fYEtIeAqxLfdp7ahdDnimUq0rIOGAkSSTdAm3ZlhTTEDuugnkcqjSvYAJXQ+p1AO6loYdOqR3stxWo0enINX/adBBc7YgY5xk0ErnS49nXdYnwQPr9qMX95sngvrSz/rNnMChc24oWrtdngxlMUTbHZ3ORvU/3/3sf31iN2IWPWKcbSpiMfxSZY2XZW8w6bqx30iqM/Sixh0ZPNfpnXMfPP4zHvcnc+5A9MWpoRUZd4n/+a5z+zL1Z69f2WjxrT+bzDuP6PvNE+pwH7C36vg+3/xYBkRl9e+bofSGT/zbYBT5674YjRu9aP70PPx+n17/vHtEmTP/wUed6oY/3WZ+NG00i3QO+B/b9mc+yp7nQNR+acZg0Ctd6y5h9bGYGQuN7UnuGqZGfKQCpqyW2WW0I8y03NE41D3crh3fDTpBp11zvIbXv+71narvVIPAvXba1U6/uxeZLYsTil3OJtTEMpK7HZuPCZJFKIHFIOwlz7TSSesDxB5WuDRgI30IOJPwwLU8u+pVTtczEbw0aqukruabtLoGvl5bpVuu7tidaE8UiGNNrhxp8ggITSkY4TZzLfVgS6Vr8QsvM5W45SUuM8i0tAujsqFXaVSRpIs0AcMULXicJVBOZ2leGSS3X8/GROZWKknKhcJJfiDQu+md/ttXQvvE1DhIk1IHdDfhzB3j7fN5P+/6Yd57+HYWU3O+dFmVoGTL5PjX27SYMSlGpUiMSHfPvdjylxBnANAH/NBpaYp48ZIeRN9f5vpa0ELS2vf3Fy7/KmfLZZZ3tO44PhIaHmnddFEEJNM69/rAX4ChAgJddKkUrE8iF/ZjfpmasUhhBQs9f6V8ecErIgJpXhEDfXDWlz5RjkLquilYq3O2bqJfQIbxh48kEhLjp833+rPiIn5r1xmsgzg6T/2IUJRNzcpcKK/vzAbhGpZqKeTiEPwcwLngx8aiyAUXpafpOVPw/p+S0bimhQnhGVODnpUbDnU356leUwjfnP6AyaW9eOvR/37s2TQfAQL6hShpjm+u7NDMP5seaPcu6Kl81516v+d267WKWzmU726l9zafR+xaf5j/tBzU6XTGW78B</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0446561410779816773</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0446561410779816773</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0445551410779755333</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0446241410779784105</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0446561410779816773</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319B0A4E1B611A5E05305991F0A5E6E</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319AFCB1F653C2DE05307991F0A5F60</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319B9BA60292EFDE05305991F0A5BEC</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="9c4070fc-000a-4e4d-8f9b-c72bff3fdb41"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4b8922c2-e2eb-442d-9dab-89d1e5c48d53"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2b367075-5d70-4418-be00-858c7fcb3324"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="c2708cd4-4ffa-4da3-8c71-304b2c5e0529"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="8961abe1-b160-4e7e-be00-cd6bc44929be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="c49c5ad1-627d-446e-b4ea-4ad314049780"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="587858df-6e95-4261-87f4-8383db8783af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="0450ee10-a765-4085-b7d8-ff494608f614"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"03192243301C4173E05305991E0AE39E:6DAF9E6B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0448401410779920517</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319C5A642917BD1E05307991E0AEC8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319C5A642917BD1E05307991E0AEC8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319C5A642917BD1E05307991E0AEC8C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>03192243E0C84175E05305991E0AB2E4</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>031922F945A544A3E05305991E0AF8E0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">03192244121E4161E05305991E0A87D5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:03192243E0C84175E05305991E0AB2E4</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:031922F945A544A3E05305991E0AF8E0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:03192244121E4161E05305991E0A87D5</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o4FP0rjPu4Yywbg2NPYIavULZJSyA03bzsCPkalNiyI8mG7K9fyYALlGTpPnl0fXXuuR860rXASewEXSGAS5qy2iaJmQhKa9vIOQtSLKgIGE5ABJIEs+7dbeDUUYD3W4zaeNA2/sYYNSOPtEwf7IXp+sgz8QK75qIVedjFnkPspnIVIocxExIz2TYcZLsm8k27+WDbge0FdquOmu6TUfsOXChs5VJHxo7URrSNlZRZYFnr9bq+btRTvrQchGzrx93tjKwgwUbneptRGYh3dv6kHgKBOCZ1kibWtXXkcx2KYEaXDMucwy5W+F4sZCHfUj6hoMtPRrUXwjGL0nLZxyxllOCY/oN1fe5ArtKw1o2XKadylbybhI00sAkbYhLbZZ8M65jahUBHDLnAplhhe4c1hQg4MAK1+XTcNj5d1rVy6wPHTEQpT8Tx8vf4ACsgTjMITbFPa0ftcsAzlepcAwnGjMS5oAV81cOaYQJi100gl0PVJhwiurmlQg3oRmh21iG9k+W2GgO6BCH/T4MOmrMF+Y7jHDo38/nVG+bpiI4bm4f5d39phy+bP/66ze7bJYFD59JQtXa7PBnKaoi2O7KcjLNRdrt2Frd5i+d+z4+mk8lk3Qt/vG5as5fIui+GN2SBRv1wMXmiBZYjx3X5c9aiTgSf53fCHiA+ZZPG8EX69/ePvceu5+J10yU3jdH0yaP2ZPgliWfPhUzn4ETDH89/jpjdcPNR8mc3eu2J1vTt3h/MyWM/W1ifkTXm4gl/8dk0kY+0y91wdTdJuu0qnQP+x7b9mZ/li2cgcr/UYzAe1G5Ul7D8WMy0hYZmVLoGmRYfIYFJo6N3ae0IciV3NAxUD7dr1LB9x3EbQ9S/cm2vOUTNBmr6vj1E3Z4zdPcis2VxQrGfsojqWFpyt2PzMUGSBAJYCNws0lwpnTA+QBxgiWtjNlWHIGUCHlIlz3aWoGWxROsFbMSyFWLHKyL0TIza11R+Y994N5LAjyXZPZLkKRCaUdC6rcdaqLkWUpXiFRe5jO16gesMcqXsXIts4LhXTUvQJItBE7WSNMxjqGerrCyMJbZfx8RElFYqSJZyiePyPFjvZnf6b18I5RNS7SB0Sj1QzYQzVwza5/N+3t5h3nv4bh5SfbxUVSWnZMvk+NfPYdFTUk1KlRgR9p57teU3Ic4AWB/ws05LU8ULC3oQfX+Xq1tB6Uhn399XXH+t50WRlx31EGpYXMFbSjZtawYkVzL39pC+ALMqCOuiO6VifRK5sh/zy+WKzSSWkKj5q5XLCx4RMxD6ETFW52Zz6QvlKKSqm4SNPGfrx+oBpBl/+EYiAdF+yjxRn3XKw5/tOoN1EEflqd4QkrKlXun75O2d2SCpgqVKCVN+CH4O4FzwY2NV5IqLVNO0yCW8/6emJa5tYELSnMnxwCgNh7Jb8pRvGQQ/nX6BKZW9eurR/37rmbQcAQLqgShoia9v7EDPP1seSPcu6Kl695vdluv4ttcb2KV6e1v1Hvav+lVRjth1fjH/ajmo0+mMd/4F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o4FP0rjPu4Yywbg2NPYIavULZJSyA03bzsCPkalNiyI8mG7K9fyYALlGTpPnl0fXXuuR860rXASewEXSGAS5qy2iaJmQhKa9vIOQtSLKgIGE5ABJIEs+7dbeDUUYD3W4zaeNA2/sYYNSOPtEwf7IXp+sgz8QK75qIVedjFnkPspnIVIocxExIz2TYcZLsm8k27+WDbge0FdquOmu6TUfsOXChs5VJHxo7URrSNlZRZYFnr9bq+btRTvrQchGzrx93tjKwgwUbneptRGYh3dv6kHgKBOCZ1kibWtXXkcx2KYEaXDMucwy5W+F4sZCHfUj6hoMtPRrUXwjGL0nLZxyxllOCY/oN1fe5ArtKw1o2XKadylbybhI00sAkbYhLbZZ8M65jahUBHDLnAplhhe4c1hQg4MAK1+XTcNj5d1rVy6wPHTEQpT8Tx8vf4ACsgTjMITbFPa0ftcsAzlepcAwnGjMS5oAV81cOaYQJi100gl0PVJhwiurmlQg3oRmh21iG9k+W2GgO6BCH/T4MOmrMF+Y7jHDo38/nVG+bpiI4bm4f5d39phy+bP/66ze7bJYFD59JQtXa7PBnKaoi2O7KcjLNRdrt2Frd5i+d+z4+mk8lk3Qt/vG5as5fIui+GN2SBRv1wMXmiBZYjx3X5c9aiTgSf53fCHiA+ZZPG8EX69/ePvceu5+J10yU3jdH0yaP2ZPgliWfPhUzn4ETDH89/jpjdcPNR8mc3eu2J1vTt3h/MyWM/W1ifkTXm4gl/8dk0kY+0y91wdTdJuu0qnQP+x7b9mZ/li2cgcr/UYzAe1G5Ul7D8WMy0hYZmVLoGmRYfIYFJo6N3ae0IciV3NAxUD7dr1LB9x3EbQ9S/cm2vOUTNBmr6vj1E3Z4zdPcis2VxQrGfsojqWFpyt2PzMUGSBAJYCNws0lwpnTA+QBxgiWtjNlWHIGUCHlIlz3aWoGWxROsFbMSyFWLHKyL0TIza11R+Y994N5LAjyXZPZLkKRCaUdC6rcdaqLkWUpXiFRe5jO16gesMcqXsXIts4LhXTUvQJItBE7WSNMxjqGerrCyMJbZfx8RElFYqSJZyiePyPFjvZnf6b18I5RNS7SB0Sj1QzYQzVwza5/N+3t5h3nv4bh5SfbxUVSWnZMvk+NfPYdFTUk1KlRgR9p57teU3Ic4AWB/ws05LU8ULC3oQfX+Xq1tB6Uhn399XXH+t50WRlx31EGpYXMFbSjZtawYkVzL39pC+ALMqCOuiO6VifRK5sh/zy+WKzSSWkKj5q5XLCx4RMxD6ETFW52Zz6QvlKKSqm4SNPGfrx+oBpBl/+EYiAdF+yjxRn3XKw5/tOoN1EEflqd4QkrKlXun75O2d2SCpgqVKCVN+CH4O4FzwY2NV5IqLVNO0yCW8/6emJa5tYELSnMnxwCgNh7Jb8pRvGQQ/nX6BKZW9eurR/37rmbQcAQLqgShoia9v7EDPP1seSPcu6Kl695vdluv4ttcb2KV6e1v1Hvav+lVRjth1fjH/ajmo0+mMd/4F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI4FP0VynnsMpY3vFSgigDpphOyAKGSvEwJWTZK27KxZCD5+pEMOEAgQ8+TS9dX55676EiXDCax4bcZwzknKa2tkpgyv7Q2lSKnfgoZYT6FCWY+R/6oPbj1jTrw4XaLUut3m8o/JvJsD1quCqHpqdY00NWpCU3VDS1g2kHDBdNQuDJW4D5lHFLeVAygWyrwVN0e67qvO77l1p0GeFVqE5wzgS1c6kDZkFqxpjLjPPM1bblc1pdmPc0jzQBA154HtyM0wwlUWpfrjMpAeWvjj+oBRjiOUR2liXap7flcBswfkYhCXuR4Eys4FQtowNOET8BIdKFUe3HQp2FaLjuQppQgGJMPKOszwHyWBrV2HKU54bPkZBI6kMAqXiEV6Ra9ULR9amcC7THMGVTZDOobrCEOcY4pwrWnYb+pXJzXtXLrOIeUhWmesP3l3/HBdIHjNMOByrZpbaidD3ikUq1LjPw+RXHByALfyWHNIMJs002MzoeqPeQ4JKtbwsSArphkp+3SO1iuq9ElEWb8/zRopzlrkAmMC9yaJYPxx8+u19D69y+RYzwTZ1x8RIsfMWiWBHadS0PV2vXyYCirIVrvIO8P5OPlp7uaPtn897gxRHD4ev18P+N3hhM9Pj5229eWnXYcqg+SD+fq7c995jz3BuPJzY1n9349ZnqfdWP2wHsIvpgGuBlaoNEZz6+NcLHsPc7D3jS60RrBezGYRNC18HyOIjZ5Hf0wOqAXeE9XLrPB7bLrPo0fXm5/9czBlUed39nN1UQfW33jYQgsGo5D1KzS2eG/b9ue+VExfcOIb5dyDPrd2rXoEuTfi5m0kEANS1c/k+LDOKZcacldUjv8QsgdCXzRw/UamLpnGNeeZbdty2qbPWCbwPY8vQfa124PbEVmzeKAYielIZGxpOSux+Z7gijxGaYBztVFWgilY8o3iF3IYa1Ph+IQpJThcSrkWU8zPYqIbTvvgavr00b2xhuMGW5Dqd2l/J7e5+2Q43xflK09UR5iRDKCpXLLwWZishkXxZjDRcFjvb6AdYoLoe25lFnfsFxbYyTJYiypakkaFDGuZ7OsLI3G1l9DhYiVVsJQluYcxuWJ0E7md/hvWwrhExDpwGRKV1i0Ex+5ZMxtPqfzdnbz3sK3i4DIAybqynOC1kz2f32Oi5yTalaqxBDTt9yrLX8JcQRA+4afdliaKl6wIDvRt7e5uBeEkrS2/Z3D+rxeLBZF2VEHAFPLBbwmhFPXRhgVQujex+kfTLUKQjvrVqlYH0Su7Pv8Cj6jIw45TsT81crlGc+IEWbyGdEXJ2d17htlL6SoG8crfszWicUTSDL+9pWEfCT9hPlBfJZpHny26wjWThyRp3hFcEIjuZI3yvuJ2UCpgCVCC9N8F/wYwLHg+8aqyBUXLqZpWnB8+k9NilxTgQilBeX9rlIadoW35MnfM+x/On2BKbW9euyR/37tqaQcAYTFE5GREl/e2b6cfxrtiPcm6KF+d+x2wzI83bnq6qV+O2v97nXcTlWUPXatL+avlp06Hc54618=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGVkGc3EFqhjIzJgASQFJSF62FFlgBVsylgxkvn4lAw4QyDL7BGq3Tp++6Eg3AkWh7baEIImknBXWUciEm1kbRpowlyNBhctQRIQrsTtq9XuuXbRctNtiFLxOw/jHnmLkQKdilmwbmeUaRGbNsssmwXVIHFKtvGFHuQqREo8JiZhsGLYFy6ZVN6EzhtCFNRdWik61+moUnkgiFLZyKVrGltRaNIxAytgFYLVaFVelIk9mwLYsCCb93ggHJEJG82aTURYoaW79cdEnmIQhLmIegRtw4HPjC3dEZwzJNCHbWP65WBaw6kD5+ILOrox8L/E9NuXZso0YZxSjkP5Buj59IgPuF1rhjCdUBtHZJKClgU2yxiaGZXZlgENqFwIdMEwEMkWA4BZrSKYkIQyTwuPQaxhXl3Ut2zpOEBNTnkTicPl3fAhbkpDHxDfFLq0ttcsBT1SqeUOw6zEcpoIuyUAPa4wwEdtuEnw5VOEhIVO67lGhBnQtNDuwT+9oualGh86IkP+nQXvN2YA8oTAlTbgcJByN5q3h8tUbBtV4dN+N+rVk0H1pZAT2nTND3trN8mgo8yHa7IgGo+DRuvZeWqOl8OLXQfCymszZBxTjHrhn5Xf2FLQW3S79NSpR5AGYOh8ivI171u/xfBIGpd7zbbsTIc9Z3PXuar9fJLKrb/znM49+VcEDaKmqTrz+fHo9v+7NZ4vJ3ey6dz18rnw4/ag2iFuPAtb963ASReLP45CVh2EwptSvJd24i569t0590bXhur6aNfJ09vgf2nZnfpS+vRMsd0s9Bl6n8FN1CcnvxUxbqG9OM1c31uIjJGHSaOpdWjvcVMkd9V3Vw83aKsG6bZfL0Ia3ZViBt5ZTspx6Xf1p1aodZycyGxZHFNucTamOpSV3MzbfE8SRKwjzSWIueaqUThjfIHaQRAWPDdUh4EyQMVfyDFE9KtXiAL9XHAmrfIWmMZ6XUiiNwoDLe3aftKaSJIeiXD4Q5SHBNKZEK7cebKEmW0hVjAVapjKExSUqMpIqbU+0zLp2ueYAQaM4JJoqiLifhqQYB3FWGiA2v7aJsMisVOCYJxKF2YkAZ/M7/rYrhfLxqXYQOqUfRLWTnLhkrF0+5/Ou7ue9g2+lPtUHTNVVJhRvmBx++hwXPSf5rOSJYQF33PMtfwlxAgB8ww8clyaP5y/pXvTdba7uBaUkzV1/F6i4KKbLZZp1tGpZJZAoeKCEE4IRwakSuo8xnxMGcghw0a2Ssz6KnNsP+aUyYCOJJInU/BWy5QXPiBER+hnhqZOzvvSNchBS1U2StTxla4fqCaQZf/tKwi7Wfsr8oH5WPPE/23UCay+OylO9IiRlM73SN8rHmdnAXMFSpYU82Qc/BXAq+KExL3LORappekslOf+loEWuYSCMecqk1zEyw77wZjzlR0zcT6cvMJm25489+t+vPZNmI4CJeiIKmuHrO9vV889me+K9DXqs322nVSnbdVj90dnod3Wj37ftWjsvygG75hfzV8tenY5nvPkv</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0448401410779920517</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0448401410779920517</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0447321410779852891</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_044871410779887008</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0448401410779920517</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>03192243E0C94175E05305991E0AB2E4</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>031922F945A644A3E05305991E0AF8E0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>03192244121F4161E05305991E0A87D5</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="1e134f84-6ab2-4660-a2e6-8ba8cab33d69"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="62cb7df5-fb31-43ff-b5cc-cadf0b212795"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c3cef838-aa0d-4af9-94ae-f264b002a9f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="12870bfc-7735-466d-838b-ab78e9a75f1f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="85383e10-373a-4b3e-a0d5-ee13b399cb9a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="e055a972-8fac-44b2-ba74-4a5aa4124797"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="0873b03d-9fdd-411c-9dcf-3b97663b7805"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="53545c04-457a-4f58-be6a-7aa2f5b41376"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0319CEC2CED324A5E05305991E0AA4DB:A7F9F958"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_045071410780007684</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319CB98DC7F2273E05305991E0A6F65</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319CB98DC7F2273E05305991E0A6F65</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319CB98DC7F2273E05305991E0A6F65</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319CBE25E7D249EE05305991E0AA154</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>03192218ECFB416BE05305991E0A673C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">031921033A5E6815E05307991E0A56D5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319CBE25E7D249EE05305991E0AA154</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:03192218ECFB416BE05305991E0A673C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:031921033A5E6815E05307991E0A56D5</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPfjntILrdCOMMPNY7d4RVH3y5mYrkK0TaBJEP31OylQAdHDPk+drK5861uXfMkxR1nqhm3OIReE0coiSykPC2vTkDkNGeKEhxRlwEOBw2H7fBC6VTtE6y1GJeo1jX+fkHvkJ43EtJF9ZHrJEZgNFzwToaABNT+x4wApV84lRJQLREXTcG3HM+3AdPxbxwmdRuh7Vb9R/21URpBzha1cqraxIrXgTWMixDS0rNfX1+prrcryseXatmM9nA+GeAIZMlrHy4yKQHlr5Y+rMWBIU1zFLLOOrS2f45iHQzKmSMgcVrHir2LZlh1YyifmZPzDKPdCHNGEFcsuoowSjFLyjnR9zkFMWFxpp2OWEzHJvkzCsTWwCQtsYsejPwxrm9qBQFsMc45MPkHOCusGEsiBYqjc3URN48dhXSu23uaI8oTlGd9e/h0foHNI2RRik6/TWlE7HHBPpVrHgMOI4lRyMocLPaxThIGvugn4cKjKVQ4JWQwIVwO64JqdtUlvZ7msRo+MgYv/06CN5ixBRiiV0LrAfa/ukovx48vZA3vKXPwL7js/67l93SwIbDoXhrK1y+XOUJZDtIL/xw2uGsP704F8vjyLROe020jitsj4ff9u5LnXLI9GixR7Dz8Dnz/XH/rddoKfar3+8/u7ffIiqTtJuJjcpyzzgrTRiZjXOMqluL48dc/S0XRw51B6/dAbxs6jnI3Pem5Ulz6qdeTLk9t9nP9q5MBunc7YWsxHg9mkk/bf3i8fL0bwm/jj4ekzvfDknfcyazfLdDb4b9vWZ34on54Bi/VSj0HUq5yoLiHxvZhpC4nNpHANp1p8uAAqjJbepbUjlEruSByqHi7Xds0Jup2+6/frPdcL+n3br9l+EDh9u912fG8tMksWOxS7jCZEx9KSuxyb7wniLORAY8jNOZNK6bjxDWIPCVSJ6I06BIxyuGVKnuuEBG8efsPedOYsxnPf5hlJ5GRuVC6YuKSXeTsRkG9rsrelyTeAyZSAFm4911wNNheqFjM0lyJ1qnNUpSCVtOdaZUPXa/gWJ9k0Bc3UylgsU6hOJ9OiMhZffl0TYV5YCcdTlguUFgfC+jK93X/rSiifmGgHrlPqgOom7LljvHU+X+dd38x7Dd+WMdHnS5VV5AQvmWz/+pgWPSblqJSJYe6suZdb/hJiD4D1DT9rtzRlvHhONqKvL3N1LSghaa37O0PVWVXO57LoaN22a1au4C2lm441BCyVzr3dshegVglhHXSplKx3Ipf2bX5STOhQIAGZmr9KsTzgFTEErl8RkTo4i0OfKFshVd0ELMQ+WzdVLyDN+NtHEg6x9lPmK/V5ZXn80a49WBtxVJ7qESEIHeuVvlDevpgNzBQsUVLI8k3wfQD7gm8byyKXXISapicp4Os/Fa1xTQNhzCQVUc8oDJu6W/AUb1MIP5w+wRTSXr71yH8/9kxSjAAG9ULkpMDXV3ao55+ON7R7FfSzfAeNXrd+4rr12qZ8H50c+WVRtti1Ppk/WzbqtDvjrT8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPfjntILrdCOMMPNY7d4RVH3y5mYrkK0TaBJEP31OylQAdHDPk+drK5861uXfMkxR1nqhm3OIReE0coiSykPC2vTkDkNGeKEhxRlwEOBw2H7fBC6VTtE6y1GJeo1jX+fkHvkJ43EtJF9ZHrJEZgNFzwToaABNT+x4wApV84lRJQLREXTcG3HM+3AdPxbxwmdRuh7Vb9R/21URpBzha1cqraxIrXgTWMixDS0rNfX1+prrcryseXatmM9nA+GeAIZMlrHy4yKQHlr5Y+rMWBIU1zFLLOOrS2f45iHQzKmSMgcVrHir2LZlh1YyifmZPzDKPdCHNGEFcsuoowSjFLyjnR9zkFMWFxpp2OWEzHJvkzCsTWwCQtsYsejPwxrm9qBQFsMc45MPkHOCusGEsiBYqjc3URN48dhXSu23uaI8oTlGd9e/h0foHNI2RRik6/TWlE7HHBPpVrHgMOI4lRyMocLPaxThIGvugn4cKjKVQ4JWQwIVwO64JqdtUlvZ7msRo+MgYv/06CN5ixBRiiV0LrAfa/ukovx48vZA3vKXPwL7js/67l93SwIbDoXhrK1y+XOUJZDtIL/xw2uGsP704F8vjyLROe020jitsj4ff9u5LnXLI9GixR7Dz8Dnz/XH/rddoKfar3+8/u7ffIiqTtJuJjcpyzzgrTRiZjXOMqluL48dc/S0XRw51B6/dAbxs6jnI3Pem5Ulz6qdeTLk9t9nP9q5MBunc7YWsxHg9mkk/bf3i8fL0bwm/jj4ekzvfDknfcyazfLdDb4b9vWZ34on54Bi/VSj0HUq5yoLiHxvZhpC4nNpHANp1p8uAAqjJbepbUjlEruSByqHi7Xds0Jup2+6/frPdcL+n3br9l+EDh9u912fG8tMksWOxS7jCZEx9KSuxyb7wniLORAY8jNOZNK6bjxDWIPCVSJ6I06BIxyuGVKnuuEBG8efsPedOYsxnPf5hlJ5GRuVC6YuKSXeTsRkG9rsrelyTeAyZSAFm4911wNNheqFjM0lyJ1qnNUpSCVtOdaZUPXa/gWJ9k0Bc3UylgsU6hOJ9OiMhZffl0TYV5YCcdTlguUFgfC+jK93X/rSiifmGgHrlPqgOom7LljvHU+X+dd38x7Dd+WMdHnS5VV5AQvmWz/+pgWPSblqJSJYe6suZdb/hJiD4D1DT9rtzRlvHhONqKvL3N1LSghaa37O0PVWVXO57LoaN22a1au4C2lm441BCyVzr3dshegVglhHXSplKx3Ipf2bX5STOhQIAGZmr9KsTzgFTEErl8RkTo4i0OfKFshVd0ELMQ+WzdVLyDN+NtHEg6x9lPmK/V5ZXn80a49WBtxVJ7qESEIHeuVvlDevpgNzBQsUVLI8k3wfQD7gm8byyKXXISapicp4Os/Fa1xTQNhzCQVUc8oDJu6W/AUb1MIP5w+wRTSXr71yH8/9kxSjAAG9ULkpMDXV3ao55+ON7R7FfSzfAeNXrd+4rr12qZ8H50c+WVRtti1Ppk/WzbqtDvjrT8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynlMGS9gwK5AlQNhhmxkIMskL7eE3IAmtmQsme3rr2TAwYTkMvcJ1G6dPr3oSBccRaHt+ZxDIgijpWUUUu5l1qaWJtRjiBPuURQB9wT2hv7drWeXTQ/ttmilXqep/YPsaqPWGI30ig0jvYobro6QK/8h267XKw23AXXpynkKPcoFoqKp2aZV1U1Xt5xHy/Is17NqZbteedNKz5BwiS1dyqa2JbXkTW0qROwZxmKxKC8qZZZMDNs0LeP33e0QTyFCWutik1EWKGlt/XE5AAxhiMuYRcaFUfC5CLg3JBOKRJrANlbwVSzTMF1D+gScTM60fC8EPTpm2bKNKKMEo5CskarPHYgpC0p+OGEJEdPoyyQsUwHrsMQ6tqr0TDOK1E4EKjBMONL5FFlbrAGMIQGKofQ06DW1s9O6lm19TBDlY5ZEvLj8Oz5A5xCyGAKd79LaUjsd8EilWheAvR7FYcrJHO7VsMYIA992E/DpUKWHBMZkeUu4HNAlV+yMfXoHy001OmQCXPyfBu01ZwPyjMIUWlfOGPwXt3v7/GvYr7rxizDvFz/Rnf/y3swI7Dtnhry1m+XBUOZDtNnxc+n2n9aN2tXotRtVHse9S/umavqc9NjwYdb5MZhQbFk37Sc+uF4sl73BzfWkPxZTq7OMn/HI579f52+Lte0/CzRhdHztPFX7T2Z/dPOKO7a/XnUdMWPT+1Wbjp/PhfO2su3JOzuPHu8rPxw/6lJ0s15G9fjanr7GuGb/MZKrkdOlgVWfrKaL7s/3tnn+Wmn/Ys08nT3+RdvuzA/T0R/AYrdUY9DrlLqyS0h8L2bKQgJ9nLl6sRIfLoAKraV2Ke3wUil3JPBkDzdrs2K5tm01rtrdy6pVu7wynYrpuK51Zfq1eqW9E5kNiwOKbVkzomIpyd2MzfcEceRxoAEk+pylUum49g1iBwlU6tGBPASMcnhkUp4t530eBOv3AM8IsxbcmTmpnEV7ammleyb6tJ/4YwFJUZSrBVEeACYxAaXcarC5nGwuZDFmaJ6K0CrPUZlCKrU9UTLrSWlxDE6iOARF1YhYkIZQjqdxVhqDb35tHWGeWQnHMUsECrMTYXyZ3+G3XSmkT0CUA1cpXYJsJxy5ZMxdPl/nXd/PewfvpwFRB0zWVSQEb5gUP32Mi5qTfFbyxDC3dtzzLX8JcQTA+IafcViaPF4wJ3vRd7e5vBekkrR2/Z2h8qyczudp1tG6aVaMRMIbUjgtYwg4lUK3emTvQI0cwjjpVslZH0TO7UV+qZjSoUACIjl/pWx5wjNiCFw9I3ry5CxPfaMUQsq6CViKY7Z2KJ9AivG3ryTsYeUnzQ/yZ8GS4KNdR7D24sg85StCEDpRK3WjrL6YDcwkLJFayJJ98GMAx4IXjXmRcy5CTtMoFfD1l5ISuaaGMGYpFb2Olhn2hTfjKVYxeB9On2Aybc8fe+S/X3s6yUYAg3wicpLhqzvbU/NPJ3vivQ16qN/tS7fRade7svuVgn53a05elAK71ifzZ8tenQ5nvPUv</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzDgF2BKhKSDDu5FZBkkpctIbeNElsikgwmXz+SAQ8QkmX2yaV26/Tpi450IlCWumFPCOCSMForspSKsLR2jJzTkCFBREhRBiKUOBz1rq9Ct26HaLPFqA36HeNfz236k5Y9MbHrI7PRxrbZbkWu6TW8ZqsVxeAGTeUqRA4DKiSismO4ttMw7cB0/LHjhE4QNvx64AbPRu0BuFDYyqVuG2tShegYUylnoWUtFov6wqsznliubTvWr+urEZ5ChozuySqjMhDvrv1xPQIMaYrrmGXWibXjcxKJcEQSimTOYR0r+iyWbdmBpXwiQZJvRrUXogGNWbk8Q5RRglFK3pGuzzXIKYtqvTRhnMhp9mkSjq2BTSiwiZ0G/WZYu9SOBNphyAUyxRQ5a6whxMCBYqjdDwcd49txXSu3jjmiImY8E7vLv+MDdA4pm0Fkik1aa2rHAx6oVPcEcDigOM0FmcONHtYZwiDW3QR8PFTtjkNMiisi1IAWQrOztuntLVfV6JMEhPw/DdpqzgrkAaU5dOnrfY89wWP+/vhPRFkRJ9eLEV/QLMedksC2c2moWrta7g1lNUSrHVPSbg+J//z0aifP894ZuiwaYvhwM+2//YgvvOU5ym9PpfvUv+bpLX2lT7E3GbsTPHi6uQ9Ekvit4gEF/YS/3E7JfZs2fzxnv9zv0ntforaXjC7n9rInbh6TS2FdzwSAwE47f3/hT/R02DqNkIyLX1fjePzyY76En87AeVhc9PrDxa0fTcTdpf3wPe99DxbpT9ap0tniv2vbnPlRPnkBLDdLPQaDfu1CdQnJr8VMW0hkxqVrONPiIyRQaXT1Lq0dYa7kjkSh6uFqbXtO4Dq25/X882bb8c9t37NbQeCc2z2/2fc3IrNisUfxjNGY6Fhacldj8zVBnIUCaATcnLNcKZ0wvkDsI4lqAzpUh4BRAWOm5NkpYma3F4Vse17sIJv4CfMmL603o3bD5C295b1YAt/V5MaOJg8BkxkBLdx6roUabCFVLd7QPJepU5+jOoVcSTvXKhu6jbZvCZLNUtBMrYxFeQr12XRWVsYSq69rIixKKxF4xrhEaXkgrE/T2/+3qYTyiYh2EDqlU1DdhAN3jLfJ5/O8W9t5b+B7eUT0+VJllZzgFZPdX3+mRY9JNSpVYlg4G+7Vlr+EOABgfcHP2i9NFS+ak63om8tcXQtKSLqb/r6h+ls9n8/zsqMt2/YsruAtpZuONQKcK51bjtkrUKuCsI66VCrWe5Er+y6/XE7pSCIJmZq/Wrk84hUxAqFfEQN1cIpjnyg7IVXdJBTykO0sVS8gzfjLRxIOsfZT5jv1WTAe/WnXAaytOCpP9YiQhCZ6pS+U5SezgZmCJUoKGd8GPwRwKPiusSpyxUWqaZrkEj7/U9Ma1zEQxiynctA3SsO27pY85XIG4R+nDzCltFdvPfLfjz2TlCOAQb0QBSnx9ZUd6vmnyZZ2r4Puy/fZadDun7UuXLfllfLtr+S7edGs5HuXXfeD+aNlq077M979DQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_045071410780007684</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_045071410780007684</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0449121410779952965</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0449431410779983112</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_045071410780007684</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319CBE25E7E249EE05305991E0AA154</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>03192218ECFC416BE05305991E0A673C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>031921033A5F6815E05307991E0A56D5</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="78112be6-587e-49c7-a51e-ce2fc7a0bef0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="425ac2e9-8f09-46ef-a6a7-2dd575e1b0c3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4e0494c2-fa6a-49e9-a411-cd71ff6f2591"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="59388071-d42e-46f6-a911-0a34b8f26f4d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="67db818b-307a-4193-ba75-46ef92299b6a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="c9a3e362-9084-41b3-8610-43edf93430b0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="e6dce213-0046-4ca1-825d-a3eaae26e375"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="f83eb860-8933-4a39-b9a1-5ffd8288db94"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0319D564762E7335E05305991F0A0444:AC1E4853"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0451561410780116736</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319B32544081C72E05305991F0AD04E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319B32544081C72E05305991F0AD04E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319B32544081C72E05305991F0AD04E</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319C18D3E843D61E05305991F0A51D8</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>03198D04778E678BE05307991F0AF3C1</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319D077FFEB11F8E05307991F0A22FC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319C18D3E843D61E05305991F0A51D8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:03198D04778E678BE05307991F0AF3C1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319D077FFEB11F8E05307991F0A22FC</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMr5gg+0KVDFAakhCkoUkm+RlS8gNaGJLRpK55OtHMuABhmSZfXKp3Tp9+qIjXQqUJm7UFgK4JIxWVmlCRVRYm0bOacSQICKiKAURSRyN2oPbyK3aEdptMSr9btP4F4JJzQvqyPRCv256uOaZgR2MzQl2vFrQQAiNQbkKkUOfComobBqu7XimHZqO/+g4kWtHrl/1Xe/NqDwDFwpbuVRtY0tqJZrGTMossqzlclld1qqMTy3Xth3rZXA7wjNIkdG63GRUBOKtrT+uxoAhSXAVs9S6tA58LmMRjciUIplz2MaKP4tlW3ZoKZ9YkOmFUe6FuE8nrFh2EGWUYJSQD6TrMwA5Y3GlnUwZJ3KWfpqEY2tgE1bYVDWjF4Z1SO1MoAOGXCBTzJCzxRrCBDhQDJWnYb9pXJzXtWLrI0dUTBhPxeHyz/gAXUDCMohNsUtrS+18wBOVal0CjvoUJ7kgC7jTw5ohDGLbTcDnQ1UeOEzI6pYINaArodlZ+/SOlptqdMkUhPw/DdprzgbkGSU5tB6fvEnD/bhbjnq+/xz0Avf99sO/eRtK1iwI7DsXhrK1m+XRUJZDtNnRHfjr5Lp/6w+Te+uF/l0bZPd8SPz4avrAGutVuzF6GkzxMF79GNYfMujk7x8Bp86kwQG813R23wnTcLyey/B1ml3jl7fXq/639/p4zPzlXI5HPPj+dEOCZGrN+cu6fXf9kqInPIJeAIvOX7Veh/4T36WhNblZBtY4z/nHTTp1v8/eXhcBpuGV/eyukuDGve83y3T2+B/admd+lI9/AJa7pR6DfrdypbqE5Ndipi0kNieFa5Rp8RESqDRaepfWjihXckfiSPVws7ZrTthxgm6tF3i1bt3p2X7N9sPQubLbvtMNdiKzYXFEscPohOhYWnI3Y/M1QZxGAmgM3FywXCmdML5A7CKJKn06VIeAUQGPTMmzg50GD+peOA9/EOYsAydz6rN6fWZU7pi8p/e8PZHADzXZO9DkIWCSEdDCredaqMEWUtVijha5TJzqAlUp5ErauVbZyPUC3xIkzRLQTK2UxXkC1WyWFZWxxObrmgiLwkoEzhiXKCkOhPVpesf/dpVQPjHRDkKn9A1UN+HEHePs8vk878Z+3jv4dh4Tfb5UWSUneMPk8NevadFjUo5KmRgWzo57ueUPIU4AWF/ws45LU8aLF2Qv+u4yV9eCEpLWrr9zVJ1X88UiLzrasO2axRW8pXTTsUaAc6Vz60f2DtQqIayzLpWS9VHk0n7IL5czOpJIQqrmr1Isz3hFjEDoV0RfHZzVuU+Ug5CqbhJW8pStk6gXkGb85SMJR1j7KfOD+iwZj3+16wTWXhyVp3pESEKneqUvlPUns4GZgiVKChnfBz8FcCr4obEscslFqmka5xI+/1PRGtc0EMYsp7LfNQrDvu4WPOU6g+iX028whbSXbz3y3489kxQjgNW7UvkX+PrKjvT80+medm+DHsv3t5rre54dOJ2Guy/fXdvrlUU5YNf6zfy7Za9OxzPe+gk=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMr5gg+0KVDFAakhCkoUkm+RlS8gNaGJLRpK55OtHMuABhmSZfXKp3Tp9+qIjXQqUJm7UFgK4JIxWVmlCRVRYm0bOacSQICKiKAURSRyN2oPbyK3aEdptMSr9btP4F4JJzQvqyPRCv256uOaZgR2MzQl2vFrQQAiNQbkKkUOfComobBqu7XimHZqO/+g4kWtHrl/1Xe/NqDwDFwpbuVRtY0tqJZrGTMossqzlclld1qqMTy3Xth3rZXA7wjNIkdG63GRUBOKtrT+uxoAhSXAVs9S6tA58LmMRjciUIplz2MaKP4tlW3ZoKZ9YkOmFUe6FuE8nrFh2EGWUYJSQD6TrMwA5Y3GlnUwZJ3KWfpqEY2tgE1bYVDWjF4Z1SO1MoAOGXCBTzJCzxRrCBDhQDJWnYb9pXJzXtWLrI0dUTBhPxeHyz/gAXUDCMohNsUtrS+18wBOVal0CjvoUJ7kgC7jTw5ohDGLbTcDnQ1UeOEzI6pYINaArodlZ+/SOlptqdMkUhPw/DdprzgbkGSU5tB6fvEnD/bhbjnq+/xz0Avf99sO/eRtK1iwI7DsXhrK1m+XRUJZDtNnRHfjr5Lp/6w+Te+uF/l0bZPd8SPz4avrAGutVuzF6GkzxMF79GNYfMujk7x8Bp86kwQG813R23wnTcLyey/B1ml3jl7fXq/639/p4zPzlXI5HPPj+dEOCZGrN+cu6fXf9kqInPIJeAIvOX7Veh/4T36WhNblZBtY4z/nHTTp1v8/eXhcBpuGV/eyukuDGve83y3T2+B/admd+lI9/AJa7pR6DfrdypbqE5Ndipi0kNieFa5Rp8RESqDRaepfWjihXckfiSPVws7ZrTthxgm6tF3i1bt3p2X7N9sPQubLbvtMNdiKzYXFEscPohOhYWnI3Y/M1QZxGAmgM3FywXCmdML5A7CKJKn06VIeAUQGPTMmzg50GD+peOA9/EOYsAydz6rN6fWZU7pi8p/e8PZHADzXZO9DkIWCSEdDCredaqMEWUtVijha5TJzqAlUp5ErauVbZyPUC3xIkzRLQTK2UxXkC1WyWFZWxxObrmgiLwkoEzhiXKCkOhPVpesf/dpVQPjHRDkKn9A1UN+HEHePs8vk878Z+3jv4dh4Tfb5UWSUneMPk8NevadFjUo5KmRgWzo57ueUPIU4AWF/ws45LU8aLF2Qv+u4yV9eCEpLWrr9zVJ1X88UiLzrasO2axRW8pXTTsUaAc6Vz60f2DtQqIayzLpWS9VHk0n7IL5czOpJIQqrmr1Isz3hFjEDoV0RfHZzVuU+Ug5CqbhJW8pStk6gXkGb85SMJR1j7KfOD+iwZj3+16wTWXhyVp3pESEKneqUvlPUns4GZgiVKChnfBz8FcCr4obEscslFqmka5xI+/1PRGtc0EMYsp7LfNQrDvu4WPOU6g+iX028whbSXbz3y3489kxQjgNW7UvkX+PrKjvT80+medm+DHsv3t5rre54dOJ2Guy/fXdvrlUU5YNf6zfy7Za9OxzPe+gk=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpYvxNgVqCIQsmQIJJCZZPKyJeTGiNgSsWQg8/UrGfAAuSy7Ty61W6dPX3SkC4HTxAlbQkAmKWeVdZowERbWhpFnLORYUBEynIIIJQnHrdt+6FRRiHdbjEqv0zD+npDp+fkkckz/fGqbHoBvTogN5qSO3foEUM0ngXIVIoceExIz2TAcZHsmCky79mDboWOHCFVrrv9sVH5CJhS2cqkiY0tqLRrGTMpFaFmr1aq6cqs8iy0HIdt6uu2PyQxSbDQvNhkVgbLm1p9UIyCQJKRKeGpdWAc+F5EIxzRmWOYZbGNFn8VCFgos5RMJGn8zyr0Q9diUF8s2ZpxRghP6G+v63IKc8ajSSmKeUTlLP03CRhrYhDUxie2xb4Z1SO1EoAOGmcCmmGF7izWCKWTACFR+jHoN49tpXSu2PmSYiSnPUnG4/G98gC0h4QuITLFLa0vtdMAPKtW8ABL2GElyQZcw0MO6wATEtptAToeq3GUwpes+FWpA10Kzs/bpHS031ejQGIT8Pw3aa84G5CdOcmiOLi30OOhCP/ECu1WvWXbXvbrzhs+k1ygI7DsXhrK1m+XRUJZDtNkx8IMxH8zq7VVwT16dX9bb06p7/ch+357ReebceN/vHud0ivjLi322HgVd+uKuoDt76r90ArK+6dtkuPj5SPssix7RcO4j+/p5MHrhY37+2r0f3tnfnZuz65q8TW/+Wse/vPbYTevX05v7u1b8GI/ilTeaBfHbuD7s98XTbe/ZfZ1/t/37AbJ7PyZub/J09uuBP1sjr1Gms8f/0LY78+N8Mgcid0s9Br1Opau6hOXXYqYtNDKnhWu40OIjJDBpNPUurR1hruSORqHq4WaNXDuod5Dn+/Wrc79+eYVqLvKDwO6iVtdt2zuR2bA4otjmbEp1LC25m7H5miBJQwEsgsxc8lwpnTC+QOxgiSs9NlKHgDMBD1zJsxuoDtbpKlnN5/OaF0cEuZlLpkZlwOWQDbPWVEJ2KMnegSSPgNAFBa3beqyFmmshVSle8TKXiV1d4iqDXCl7pkU2dDw1tYKmiwQ0USvlUZ5AdTFbFIWxxObrmJiIwkoFWfBM4qQ4D9an2R3/2xVC+URUOwid0iWoZsK7KwaFtV0+n+ft7+e9g2/lEdXHS1VVZpRsmBz++jMsekrKSSkTI6KcinLLf4T4AMD6gp91XJoyXrSke9F3d7m6FZSONHf9fcXV12q+XOZFR32EXCtT8JaSTdsaA8mVzL098BdgVglhnXSnlKyPIpf2Q365nLGxxBJSNX+VYnnCI2IMQj8ieurcrE99oRyEVHWTsJYf2dqJegBpxl++kUhItJ8y36nPimfRn3Z9gLUXR+Wp3hCSsliv9H3y9slsEK5gqVJCnu2DfwTwUfBDY1nkkotU0zTJJXz+p6IlrmFgQnjOZK9jFIZ92S14yrcFhH+c3sEUyl4+9ei/v/VMWowAAfVAFLTA1zd2qOefxXvSvQ16rN6XrlPzPFS3275TqHdto95K1K/Kohywa74zv7fs1el4xpv/AA==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr4HcAWqCISMd0KSiXN/2ZLlNigxkmPJDszXj2TAA4RkmX1yqd06ffqiI51wNEttv8855IIw2pjPUsr9ytrVipz6DHHCfYpmwH2B/bA/vvDtpumj9RatEQy72r/HOIq9KE70TmTFutt2LT3yWo6OHDOJsJskkeVJV84LCCgXiIquZpuWq5sd3fJuLcu3Ld+xmp7tPGuNe8i5xJYuTVNbkZrzrjYVIvMN4/39vfnuNFk+MWzTtIzH8UWIpzBDWu9kmVEVKO+t/HEzBgxpipuYzYwTY8vnJOZ+SCYUiSKHVaz4s1imYXYM6RNzMvmm1XshDmjCquUAUUYJRin5hVR9xiCmLG700wnLiZjOPk3CMhWwDnOsY8ul3zRjm9qBQFsMc450PkXWCusGEsiBYmjc3QRd7dthXau23uaI8oTlM769/Ds+QEtIWQaxztdpragdDrinUr0TwH5AcVpwUsKlGtYMYeCrbgI+HKpxnUNC5heEywGdc8XO2KS3s1xWY0gmwMX/adBGc5Yg9ygtoEefQ3E8n7qXXv4s7unk5uKhPzb/CRz+2q0IbDpXhrq1y+XOUNZDtNyRt3B/8YsewcPcOR9dlM/XyXhKH9vWj9PjJDMfzODHpUdPo+My/P54lPffnInXWUTHo5dpO4JFGr5iO0nPg9ij50/cfGofpSHcFS8MZewsRBBfP7517lvknZnD/tP4bnz2HbPzlpMVaTa4OH1KJ24UnC2Ofr6ELrnzOo9PGR6/vM3PB9fRw1Py66r4eY8fr6aD5363TmeD/7ZtfebDInoBLNZLNQbBsDGSXULiazFTFhLrSeXqZ0p8uAAqtJ7apbTDL6TckdiXPVyuTcfqDM1WazQ6O7WsUfvM9Byz1elYI7Nv26PBWmSWLHYoDhhNiIqlJHc5Nl8TxDOfA40h10tWSKXj2heIQyRQI6A38hAwyuGWSXm2cOm4HR656fQltUrPjIrSPAZit7TGJRNX9CrvJwLybVF2t0T5BjDJCCjlVoPN5WRzIYvxhspCpFazRE0KhdT2XMmsb7ttz+BklqWgqBozFhcpNLNpVpXG4MuvrSPMKyvhOGO5QGl1IoxP89v9ty6F9ImJcuAqpVOQ7YQ9l4y9zufzvFubea/h+0VM1AGTdRU5wUsm27/+jIuak3pW6sQwt9bc6y1/CbEHwPiCn7FbmjpeXJKN6OvbXN4LUkl66/6+oeZbsyjLoupoyzQdI5fwhhROywgBF1LoFrfsFahRQxgH3So1653ItX2bXyGmNBRIwEzOX6NaHvCMCIGrZ0QgT8780DfKVkhZNwFzsc82SOUTSDH+8pWEfaz8pPlaft5ZHv9p1x6sjTgyT/mKEIRO1ErdKItPZgMzCUukFrJ8E3wfwL7g28a6yDUXIacpKgR8/qehRK6rIYxZQUUw1CrDpvBWPMUiA/+P0weYStvrxx7579eeTqoRwCCfiJxU+OrO9tX808mGeK+C7ur3qWN7rmu2rUHLrvTbW+r30HTP6qJsset9MH+0bNRpd8Z7vwE=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0451561410780116736</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0451561410780116736</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0450431410780043866</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0451211410780081008</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0451561410780116736</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319C18D3E853D61E05305991F0A51D8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>03198D04778F678BE05307991F0AF3C1</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319D077FFEC11F8E05307991F0A22FC</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="c247bcbd-c102-4114-82a4-84dc37720ef2"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="925c7616-8bdc-4401-82f5-8832adf84b71"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c990f449-4568-4be7-803b-aad6416f7da0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="e7db5929-1052-44f4-a2b2-78219edef026"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="d6ced9dc-e3b5-46f2-b8ee-ea6cd1bb3269"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="f5ff011a-1bd6-4043-a3a6-5cc2666c59a2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="bd74d1d6-af3a-4dc5-8397-eb95d5414eec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="5f00d1bd-4c8d-4a93-be84-ffb52fb472f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0319224631D64171E05305991E0AE534:3CE9CCD2"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0453301410780210350</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>031918A1E1FC2B1CE05305991E0A353F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:031918A1E1FC2B1CE05305991E0A353F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:031918A1E1FC2B1CE05305991E0A353F</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319224412734161E05305991E0A87D5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>03192388F8BB6A02E05307991E0A4D14</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319224412AC4161E05305991E0A87D5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319224412734161E05305991E0A87D5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:03192388F8BB6A02E05307991E0A4D14</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319224412AC4161E05305991E0A87D5</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXwP4ApUEUgybExggDAzedkScttosGXHksHJ169kwAGGZJl9ArVbp09fdKRrhuLIdLuMQcZJQmtFHFHmlta2kmfUTRAjzKUoBuZy7E67Q88167qL9luU2qDfVv5pYh3DohGoqGmaqq07oDabuqOCGThNy/DtFmoIV8ZyGFDGEeVtxdQNW9VbquHMDMM1Tdcw65ZlPiu1OWRMYAuXuq7sSBWsrSw5T11N22w29Y1VT7JQM3Xd0H4MvSleQoyUzvU2ozJQ1tn547oPGKII13ESa9fakc+1z9wpCSnieQa7WP5HsXRNb2nCx2ck/KJUe8Ef0CAplz1EE0owisgbkvUZAl8mfq0bhUlG+DL+MAlDl8AqFFjFhk2/KNoxtQuBjhhmDKlsiYwd1gQCyIBiqD1NBm3ly2VdK7fOMkRZkGQxO17+GR+ga4iSFHyV7dPaUbsc8EylOteA3QHFUc7IGh7lsKYIA9t1E/DlULVxBgEpPMLEgBZMstMO6Z0st9XokxAY/z8NOmjOFmSOohw6992pPp9lgWfGN8O1Z/xFPTYeB1+j74N2SeDQuTRUrd0uT4ayGqLtDpw3Fk4/6Bfjn2GcP3d7S38ab24fes/fVr27kZ/Pp/P7fPX4c6K37AcPkV9je85u2Mp/JGFj1f+OPc8BDy8fev34Lh+ZCM96L7fd4eCrvfw2jcPn+Tx7+xH8sIZp734VXxnesGikwcPo73730bm/ukkKzS+KaTrqXo0mK2+yeL0bW1dx39nMlrH1GHrNp6ewa72G7SqdA/7Htv2Zn+aLX4D5finHYNCv3YkuIf65mEkL8dWgdHVTKT6MA+VKR+6S2uHmQu6I74oebte6ZbRM07YNs2HZxpVxqzuW7rRa4k+32eg7e5HZsjih2EtoQGQsKbnbsfmcII5dBtSHTF0nuVA6pnyC2Ecc1QZ0Ig5BQhnMEiHPxiLI/E1ht16s8I00rdels3DyjaXUHhM+oqOsG3DIjiXZPpLkCWCSEpC6LceaiblmXJTiBa1zHhn1NapTyIWyZ1JkXdNuOhojcRqBJKrFiZ9HUE+XaVkYjW1/TRVhVloJw2mScRSV50H7MLvTb/tCCB+fSAcmU7oB0Uw4c8Xo+3w+zrtxmPcevpv7RB4vUVWeEbxlcvzpfVjklFSTUiWGmbHnXm35Q4gzANon/LTT0lTx/DU5iL6/y8WtIHSks+/vC6q/1PP1Oi872tB1S8sEvCZk09CmgHMhc6+zZAVUqyC0i+6UivVJ5Mp+zC/nSzrliEMs5q9WLi94REyByUfEQJyb4tIXylFIUTcOBT9n60XiASQZf/pGwi6WfsI8Fj+bJPPf23UG6yCOyFO8ITihoVzJ++T1g9nAiYAlQgmT7BD8HMC54MfGqsgVFy6maZFz+PhLTUpcW0EYJznlg75SGg5lt+TJX1Nw351+gymVvXrqkf9+66mkHAEM4oHISIkvb2xXzj8ND6R7F/RUvY1m17g17nrmjdE7VG/Lse6qohyx6/xm/t1yUKfTGe/8Cw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXwP4ApUEUgybExggDAzedkScttosGXHksHJ169kwAGGZJl9ArVbp09fdKRrhuLIdLuMQcZJQmtFHFHmlta2kmfUTRAjzKUoBuZy7E67Q88167qL9luU2qDfVv5pYh3DohGoqGmaqq07oDabuqOCGThNy/DtFmoIV8ZyGFDGEeVtxdQNW9VbquHMDMM1Tdcw65ZlPiu1OWRMYAuXuq7sSBWsrSw5T11N22w29Y1VT7JQM3Xd0H4MvSleQoyUzvU2ozJQ1tn547oPGKII13ESa9fakc+1z9wpCSnieQa7WP5HsXRNb2nCx2ck/KJUe8Ef0CAplz1EE0owisgbkvUZAl8mfq0bhUlG+DL+MAlDl8AqFFjFhk2/KNoxtQuBjhhmDKlsiYwd1gQCyIBiqD1NBm3ly2VdK7fOMkRZkGQxO17+GR+ga4iSFHyV7dPaUbsc8EylOteA3QHFUc7IGh7lsKYIA9t1E/DlULVxBgEpPMLEgBZMstMO6Z0st9XokxAY/z8NOmjOFmSOohw6992pPp9lgWfGN8O1Z/xFPTYeB1+j74N2SeDQuTRUrd0uT4ayGqLtDpw3Fk4/6Bfjn2GcP3d7S38ab24fes/fVr27kZ/Pp/P7fPX4c6K37AcPkV9je85u2Mp/JGFj1f+OPc8BDy8fev34Lh+ZCM96L7fd4eCrvfw2jcPn+Tx7+xH8sIZp734VXxnesGikwcPo73730bm/ukkKzS+KaTrqXo0mK2+yeL0bW1dx39nMlrH1GHrNp6ewa72G7SqdA/7Htv2Zn+aLX4D5finHYNCv3YkuIf65mEkL8dWgdHVTKT6MA+VKR+6S2uHmQu6I74oebte6ZbRM07YNs2HZxpVxqzuW7rRa4k+32eg7e5HZsjih2EtoQGQsKbnbsfmcII5dBtSHTF0nuVA6pnyC2Ecc1QZ0Ig5BQhnMEiHPxiLI/E1ht16s8I00rdels3DyjaXUHhM+oqOsG3DIjiXZPpLkCWCSEpC6LceaiblmXJTiBa1zHhn1NapTyIWyZ1JkXdNuOhojcRqBJKrFiZ9HUE+XaVkYjW1/TRVhVloJw2mScRSV50H7MLvTb/tCCB+fSAcmU7oB0Uw4c8Xo+3w+zrtxmPcevpv7RB4vUVWeEbxlcvzpfVjklFSTUiWGmbHnXm35Q4gzANon/LTT0lTx/DU5iL6/y8WtIHSks+/vC6q/1PP1Oi872tB1S8sEvCZk09CmgHMhc6+zZAVUqyC0i+6UivVJ5Mp+zC/nSzrliEMs5q9WLi94REyByUfEQJyb4tIXylFIUTcOBT9n60XiASQZf/pGwi6WfsI8Fj+bJPPf23UG6yCOyFO8ITihoVzJ++T1g9nAiYAlQgmT7BD8HMC54MfGqsgVFy6maZFz+PhLTUpcW0EYJznlg75SGg5lt+TJX1Nw351+gymVvXrqkf9+66mkHAEM4oHISIkvb2xXzj8ND6R7F/RUvY1m17g17nrmjdE7VG/Lse6qohyx6/xm/t1yUKfTGe/8Cw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbkto4EP0VynmcAl8ZjGugimvWycyQAZLs5mVLyG1QsCUjyVzy9ZEMOECYWbJPoHbr9OmLjvQgUJo4QUcI4JIwWtmmCRVBYW0ZOacBQ4KIgKIURCBxMOk8PQZOzQrQcYtRCfst49/YauJ6HHvVpgNR1fPVvxk4fhW5tuWhmeM27Ui5CpFDSIVEVLYMx7K9qtWs2vWpbQeOE7jNWsP1vxmVL8CFwlYuNcs4kNqKlrGQMgtMc7PZ1DZujfG56ViWbf799DjBC0iR0X7YZ1QE4u2DP65FgCFJcA2z1Hwwz3weIhFMyJwimXM4xIpei2WZVtNUPpEg83dGuReikMasWPYQZZRglJAfSNfnCeSCRZVOMmecyEX6ahK2pYGrsMVVbHv0nWGeU7sR6IwhF6gqFsg+YI0hBg4UQ+XzOGwZ727rWrF1yhEVMeOpOF/+GR+ga0hYpmKJY1oHarcDXqlU+wFwEFKc5IKs4VkPa4YwiEM3Ad8OVfnEISbbRyLUgG6FZmee0rtY7qvRJ3MQ8v806KQ5e5AvKMmhnVmpnMbb9WIxkxvB7n2fNQYfRdIf4FZB4NS5MJSt3S8vhrIcov2OcDoIvWz8dbOmaEJTt9mse3Nz6ePlj9VL1IWpC50k6/U+TEA+z0OzOxrPpSPvXu4anyMUehN+H0+Xz8n3xw12Rf6y44+bF/nBfb7rssenxmjYhPcr82PkWo3RJ9mZ+zDudv4ZQPiV/TVa/NiFcjvY9IZDi+P3u9G8H67vyG7xLYaNSflwOOu//zK7v8vTJX9qlemc8D+3Hc/8JJ99ByyPSz0GYb8yVF1C8m0x0xYSVePCNci0+AgJVBptvUtrR5AruSNRoHq4X1uu3XRc3x/63e59x3IGVl1l22zaA6vj9W3vKDJ7FhcUe4zGRMfSkrsfm7cJ4jQQQCPg1TXLldIJ4w3EPpKoEtKxOgSMCpgyJc/Mj+wkmS2W3kraEEmHruTSJ3Wlyc9MjuiId2IJ/FyTvTNNHgMmGQEt3HquhRpsIVUtVmidy8SurVGNQq6knWuVDRzPr5uCpFkCmqmZsihPoJYtsqIyptj/OlWERWElAmeMS5QUB8J8Nb3Lb8dKKJ+IaAehU+qC6iZcuWOcYz6v5904zfsI38kjos+XKqvkBO+ZnH/6NS16TMpRKRPDwj5yL7f8IcQVAPMNfuZlacp40ZqcRD9e5upaUELSPvZ3hWqrWr5e50VHG5blmlzBm0o3bXMCOFc6t5uyJVCzhDBvulRK1heRS/s5v1wu6EQiCamav0qxvOEVMQGhXxGhOjjbW58oZyFV3SRs5TVbL1EvIM34zUcSDrD2U+ZP6mfD+K/Er2GdxFF5qkeEJHSuV/pC2b0yG5gpWKKkkPFT8GsA14KfG8sil1ykmqZZLuH1LxWtcS0DYcxyKsO+URhOdbfgKXcZBL+cfoMppL1865H/fuxVSTECGNQLUZACX1/ZgZ5/Oj/R7kPQS/m2/Y49sIc9p2v3Cvmu7+XbrbvDsihn7Nq/mX+3nNTpcsbbPwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn3sIAShKlOdQW276dibdvdyXs7EsMC0ECgJavvrd4JK1dYe93nSLFa+9a1LvuSU4yS2XI9zyAVNWW2RxIy7pbWjFTlzU8wpdxlOgLuCuGPvauhaddPF6y1azR90tH9Nu9UiYFq6bWFHt3Fo6S1r4uiTpo1CC51AiEC6cl6Az7jATHQ0y0S2brZ15Nwj5FoN12zU27b9j1Z7gJxLbOlSN7UVqQXvaFMhMtcw5vN5fd6op3lkWKaJjKer4ZhMIcFa93SZURko7678ST0AAnFM6iRNjFNjy+c04O6YRgyLIodVrGBfLNMw24b0CTiNjrRqLwQ+C9Ny2ccsZZTgmH5gVZ8rENM0qHlxlOZUTJO9SSBTAeuwIDpBNjvSjG1qBwJtMcw51vkUoxXWCELIgRGo/R75He3osK6VW+9zzHiY5gnfXv4dH2AziNMMAp2v01pROxzwm0p1T4G4PiNxwekMrtWwZpgAX3UTyOFQtdscQroYUi4HdMEVO2OT3s5yWY0BjYCL/9OgjeYsQR5wXED3pelY1iIb9h4u594T+IP42hkkvYfH8V2nJLDpXBqq1i6XO0NZDdFyx7XRdF5T5Fi/n73pMAxGzdaj92AfPwYX0Vlwlx/bxy/x3WPm47Zz7IXZAF6MHrtIA2iY89Gw1xxM++3n6C2JvHe4+kX6vxo3J/NpUmStu+ewGb7y1/MLbg2eZ/7I+bhE+YR8zMLbfnvyduuZl4/tk7lZ4Ln3aqMIPSW3Bblt8vv58WXeoGj09NELZuMoC6+8c79TpbPBf9u2PvPjYvICRKyXagz8Qe1cdgmLn8VMWWigh6Wrmynx4QKY0Lpql9IOt5ByRwNX9nC5NhuobVm2jSyvb6MTdGY6DdNpt+Ufr9UcOGuRWbLYodhPWUhVLCW5y7H5mSBJXA4sgFyfpYVUOq79gDjAAtd8NpKHIGUc7lMpz4hkc3YCiw9hc/rSDMOAOlEYJJlWu07FDbvJvVBAvq3J9pYmj4DQjIISbjXXXA42F7IWb3hWiBjVZ7jOoJDSniuVdS275RicJlkMiqmRpEERQz2bZmVlDL78tXRMeGmlnGRpLnBcHghjb3q739aVkD4BVQ5cpdQD2U34csdYrrPOZ3/ezc281/BeEVB1vmRZRU7Jksn2p89pUWNSjUqVGOFozb3a8pcQ3wAYP/AzdktTxQtmdCP6+jKX14IUku66v2+4/lYvZrOi7GjTNBtGLuENqZvIGAMppM6936evwIwKwjjoUqlY70Su7Nv8CjFlY4EFJHL+auXygFfEGLh6Rfjy4CwOfaJshZR1E7AQ39n6sXwBKcY/PpKIS5SfNN/Kn3maB5/t+gZrI47MUz4iBGWRWqkL5X3PbJBUwlIphWm+Cf4dwHfBt41VkSsuQk7TpBCw/0tNaVxHw4SkBRP+QCsNm7pb8hTvGbifTl9gSmmv3nr0vx97Oi1HgMh3pfQv8dWV7ar5Z9GGdq+C7so3annoDJ33rR7qb8p3w2mcV0XZYtf9Yv5q2ajT7ox3/wA=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0453301410780210350</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0453301410780210350</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0452311410780151270</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_045361410780186655</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0453301410780210350</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319224412744161E05305991E0A87D5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>03192388F8BC6A02E05307991E0A4D14</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319224412AD4161E05305991E0A87D5</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="5086181c-e502-4e7b-ba84-007566e9f8b1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a7736d65-5b76-4870-a6e0-454ff533a9d8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="458fa8a8-8bb6-4132-a9a7-b5bdc69981e6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="d3510dad-0441-450b-b352-3887cc846a69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT FAU" id="4365d7e4-7e27-43f6-ad14-fd4b67c6b7fe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="be8829dd-8171-445f-8bf9-48f76bde8176"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="2c8f8eaf-adcb-4c26-9e75-27af9ba94c92"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="2bb1a1b6-ccec-451d-966a-84c5f947a674"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType","Other");
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"1427F5E5BB4613F4E05305991F0AAE94:8FD9FCA1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20150420_0558381429532918936</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>1427F610F1B61C00E05307991F0A2BE1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:1427F610F1B61C00E05307991F0A2BE1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:1427F610F1B61C00E05307991F0A2BE1</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>1427EB3A01616CBCE05305991F0A705B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>1427F610F2521C00E05307991F0A2BE1</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1427EB3A02FD6CBCE05305991F0A705B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:1427EB3A01616CBCE05305991F0A705B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:1427F610F2521C00E05307991F0A2BE1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:1427EB3A02FD6CBCE05305991F0A705B</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbxgG+MKVLHWkMkKhCT3ZUrIjRGxZbBkQ/L1IxlwgECGO08utVunTy860jVDUWh6TcYg4SSmpXUUUubl1rqSJtSLESPMoygC5nHsDZt3t55Z1j2026KU+p268o9rGUbFrehqDSZItQDbKpo6U3VSqVbAwTXb1m3hylgKfco4oryumLphq7qlmvrIMD3T9my77FTs30ppDAkT2MKlrCtbUmtWV2acLzxNW61W5VWlHCeBZuq6ob3e3Q7xDCKkNK43GeWBksbWH5d9wBCGuIzjSLvWDnyufeYNSUARTxPYxvLPxdI1vaYJH5+R4JdS7AW/T6dxvmwjGlOCUUg+kazPHfBZ7JeaYRAnhM+is0kYugRWYY1VbFj0l6IdUrsQ6IBhwpDKZsjYYg1gCglQDKXnQb+u/Lqsa/nWUYIom8ZJxA6Xf8YHaAZhvABfZbu0ttQuBzxRqcY1YK9PcZgyksG9HNYFwsC23QR8OVTpMYEpWd8SJgZ0zSQ7bZ/e0XJTjQ4JgPH/06C95mxAxihMoTEzV4E2WTiQBq3aZ/fVsf055m96Z2DVcwL7zrmhaO1meTSUxRBtdryOe5Xm49Pd6GoY36Z3HwO3g8ZNs3M3iMjT29ip9AfO6zuZtNc37WDyZvnZxJgCnc3Nt6CqYRp2ETGyNZ2EYy22g+zJnGeZ4y/NF/Ly/vzc/e3cVg13NX15sKcvt8vYGb+5j67ZfX+4t0YvwdNn0/qrij5Dt2eNb9C8O3SpO7mBZe/mWQNn1v47RenqKmRXUbdepLPH/9C2O/PDdDIHzHdLOQb9TqknuoT4z2ImLcRXp7mrt5DiwzhQrjTkLqkdXirkjvie6OFmbVhmtduqNHXDMZx2q93V7Ypu12pGT29Wdbu1E5kNiyOK7ZhOiYwlJXczNj8TxJHHgPqQqFmcCqVjyg+IHcRRqU8H4hDElMEoFvJsrSrLYBnN3chd1sKqofNsbiwnM6V0H/MH+pA0pxySQ0m2DyR5AJgsCEjdlmPNxFwzLkqxRFnKQ6OcoTKFVCh7IkXWMy3X1hiJFiFIoloU+2kI5cVskRdGY5uvqSLMcitheBEnHIX5edDOZnf8b1cI4eMT6cBkSi0QzYQTV4y1y+d83u5+3jv4ZuoTebxEVXlC8IbJ4a+vYZFTUkxKkRhmxo57seUPIU4AaD/w045LU8TzM7IXfXeXi1tB6Ehj198lMsrLcpplad5Sy6poiYDXhGwa2hBwKmTuYxS/A9UKCO2iO6VgfRS5sB/yS/mMDjniEIn5K+XLCx4RQ2DyEdEX52Z96QvlIKSoG4c1P2Vrh+IBJBn/+EbCHpZ+wvwoPqs48b/adQJrL47IU7whOKGBXMn75OPMbOBYwBKhhHGyD34K4FTwQ2NR5IILF9M0STmc/1OSEldXEMZxSnm/o+SGfdnNefKPBXhfTt9gcmUvnnrkv996KslHAIN4IDKS48sb25PzT4M96d4GPVbvnmPoPaPlGG1dz9W7ulFvs9X9OmYH7BrfzN8te3U6nvHGvw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbxgG+MKVLHWkMkKhCT3ZUrIjRGxZbBkQ/L1IxlwgECGO08utVunTy860jVDUWh6TcYg4SSmpXUUUubl1rqSJtSLESPMoygC5nHsDZt3t55Z1j2026KU+p268o9rGUbFrehqDSZItQDbKpo6U3VSqVbAwTXb1m3hylgKfco4oryumLphq7qlmvrIMD3T9my77FTs30ppDAkT2MKlrCtbUmtWV2acLzxNW61W5VWlHCeBZuq6ob3e3Q7xDCKkNK43GeWBksbWH5d9wBCGuIzjSLvWDnyufeYNSUARTxPYxvLPxdI1vaYJH5+R4JdS7AW/T6dxvmwjGlOCUUg+kazPHfBZ7JeaYRAnhM+is0kYugRWYY1VbFj0l6IdUrsQ6IBhwpDKZsjYYg1gCglQDKXnQb+u/Lqsa/nWUYIom8ZJxA6Xf8YHaAZhvABfZbu0ttQuBzxRqcY1YK9PcZgyksG9HNYFwsC23QR8OVTpMYEpWd8SJgZ0zSQ7bZ/e0XJTjQ4JgPH/06C95mxAxihMoTEzV4E2WTiQBq3aZ/fVsf055m96Z2DVcwL7zrmhaO1meTSUxRBtdryOe5Xm49Pd6GoY36Z3HwO3g8ZNs3M3iMjT29ip9AfO6zuZtNc37WDyZvnZxJgCnc3Nt6CqYRp2ETGyNZ2EYy22g+zJnGeZ4y/NF/Ly/vzc/e3cVg13NX15sKcvt8vYGb+5j67ZfX+4t0YvwdNn0/qrij5Dt2eNb9C8O3SpO7mBZe/mWQNn1v47RenqKmRXUbdepLPH/9C2O/PDdDIHzHdLOQb9TqknuoT4z2ImLcRXp7mrt5DiwzhQrjTkLqkdXirkjvie6OFmbVhmtduqNHXDMZx2q93V7Ypu12pGT29Wdbu1E5kNiyOK7ZhOiYwlJXczNj8TxJHHgPqQqFmcCqVjyg+IHcRRqU8H4hDElMEoFvJsrSrLYBnN3chd1sKqofNsbiwnM6V0H/MH+pA0pxySQ0m2DyR5AJgsCEjdlmPNxFwzLkqxRFnKQ6OcoTKFVCh7IkXWMy3X1hiJFiFIoloU+2kI5cVskRdGY5uvqSLMcitheBEnHIX5edDOZnf8b1cI4eMT6cBkSi0QzYQTV4y1y+d83u5+3jv4ZuoTebxEVXlC8IbJ4a+vYZFTUkxKkRhmxo57seUPIU4AaD/w045LU8TzM7IXfXeXi1tB6Ehj198lMsrLcpplad5Sy6poiYDXhGwa2hBwKmTuYxS/A9UKCO2iO6VgfRS5sB/yS/mMDjniEIn5K+XLCx4RQ2DyEdEX52Z96QvlIKSoG4c1P2Vrh+IBJBn/+EbCHpZ+wvwoPqs48b/adQJrL47IU7whOKGBXMn75OPMbOBYwBKhhHGyD34K4FTwQ2NR5IILF9M0STmc/1OSEldXEMZxSnm/o+SGfdnNefKPBXhfTt9gcmUvnnrkv996KslHAIN4IDKS48sb25PzT4M96d4GPVbvnmPoPaPlGG1dz9W7ulFvs9X9OmYH7BrfzN8te3U6nvHGvw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gE3AFqkgYZsiGSwLJZuZlS8htUGJLjiRz+/qVDDhASJbZJ5fardOnLzrSlUBJ7AYtIYBLwmhpmcRUBLm1YWScBgwJIgKKEhCBxMGo1bsL3LIdoN0Wo9RtN4x/sO9d+o7rmoDsyPQuvcicXEaOWYncEDtu6NbBVa5CZNClQiIqG4ZrO75pe6Zrjx03cKuBfVmuVO3fRukJuFDYyqVsG1tSS9EwZlKmgWUtFovyolJmfGq5tu1Yz727EZ5Bgozm1SajPBBvbv1xOQQMcYzLmCXWlXXgcxWKYESmFMmMwzZW+Fks27LrlvIJBZl+M4q9EHZpxPLlDaKMEoxiska6Pj2QMxaWWvGUcSJnyadJOLYGNmGJTex49JthHVI7E+iAIRfIFDPkbLEeIAIOFEPp8aHbML6d17V865gjKiLGE3G4/DM+QOcQsxRCU+zS2lI7H/BEpZpXgIMuxXEmyBz6elhThEFsuwn4fKjSkENElndEqAFdCs3O2qd3tNxUo02mIOT/adBeczYgTyjOoPmMX3vp6vvrrbe657F7m1W7PX/VHl4Tr5ET2HfODUVrN8ujoSyGaLNjqnDaS9vL+vPR4LXz8yW2u4PFiNYHrcq1/2vMK/0LgTu317NeFleqq9rEcdp/zdjkddC7+Lu6qP1stX75dHTRQ3Jci8azt19Q+1EfTO5rD8Np5tUY+1FJfduifZslkA7kK8tm8BwN+xc1H/Gf7cfbR2dYq9Q68BTD+qn+e/B8N3xZXPRvfk8vJtPq7Tq7r937nt0o0tnjf2jbnflRNnkBLHdLPQbddqmjuoTk12KmLSQ0o9w1SLX4CAlUGk29S2tHkCm5I2GgerhZO5572ak6dsf1XefGtr/bfsW+rNedjt1yr787O5HZsDiieMNoRHQsLbmbsfmaIE4CATQEbs5ZppROGF8gtpFEpS59UIeAUQFjpuRZco/PXxaOt16vnUpYDUOSuavEF0apz+SADngrksAPNdk/0OQHwCQloIVbz7VQgy2kqsUbmmcydspzVKaQKWnnWmUD16v5liBJGoNmaiUszGIop7M0r4wlNl/XRFjkViJwyrhEcX4grE/TO/63q4TyCYl2EDqla1DdhA93jB/4u3w+z7u2n/cOvpWFRJ8vVVbJCd4wOfz1Pi16TIpRKRLDohiLYssfQpwAsL7gZx2XpogXzsle9N1lrq4FJSTNXX/fkFN+K2fzeZa31PMqFlfwltJNxxoBzpTOrcbsFahVQFhnXSoF66PIhf2QXyZndCSRhETNXylfnvGKGIHQr4iuOjjLc58oByFV3SQs5SnbTaxeQJrxl48kHGDtp8xD9VkwHr636wTWXhyVp3pESEKneqUvlNUns4GZgiVKChnfBz8FcCr4obEocsFFqmmaZBI+/1PSGtcwEMYso7LbNnLDvu7mPOUqheDd6QNMLu3FW4/892PPJPkIYFAvREFyfH1lB3r+6XRPu7dBT8q3c139Sr4P2TU/mD9a9up0POPNfwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc9o8EP0rjPuYMb5g4+AJzHDN0ELSBJJJ89IR8hrU2LJjSQby6ysZcICQfPR78mi9Onv2oiNdMRRHtt9mDDJOElpZxRFlfmFtaiKjfoIYYT5FMTCfY3/SHo98u2r6aLdFqwx7Te23FwKe1ZCjh6aLdMeyXb0RBIFeq9Xcy7oVWjMrkK6MCRhSxhHlTc02LVc3Hd02p5bt23Xf8qqe6z1rlUfImMSWLlVT25Jasaa24Dz1DWO5XFaXtWqSzQ3bNC3jaTya4AXESGtdbTIqAmWtrT+uBoAhinAVJ7FxZRz4XAXMn5A5RVxksI0VfBbLNMyGIX0CRubftHIvBEMaJsWyi2hCCUYReUOqPmPgiySotKN5khG+iD9NwjIVsA4rrGPLod8045DamUAHDDOGdLZA1hbrHkLIgGKoPNwPm9q387pWbJ1miLIwyWJ2uPw3PkBziJIUAp3t0tpSOx/wRKVaV4D9IcWRYCSHGzWsKcLAtt0EfD5U5WcGIVmNCJMDumKKnbFP72i5qUaPzIHx/9OgveZsQB5RJKD1UhPt7NGLvl/8Gj957suvWYOCdydq06RZENh3LgxlazfLo6Esh2izo+3QP/MpMmerG2PUXjQWjR93wVzkM+8tTsUTfeuM+vFrvL5bT4fkddSdUcskIML+9TWyf7SFfTE3wuA2prPV7PFt2HvOZ+ICk74V8M60L4AIdzyPBs40HD3maWd6u0bmA7q7ZderFU1GY95d1mvuS4zNfPIwrC/RLWqv7cHCMZ2HG++7iDqPyfPY63vZuFmms8f/0LY78xMx+wOY75ZqDIa9ykB2CfGvxUxZSKCHhaufKvFhHCjXWmqX0g5fSLkjgS97uFlbju31O7W2aQ969W6n2zfdmuk2GtbAbHum29mJzIbFEcVuQkOiYinJ3YzN1wRx7DOgAWR6ngipdEz7ArGHOKoM6b08BAllIEdG++3wFDznJbuEt2DtzKLEo+vaS65VbhJ+S2+zdsghO1Rk90CR7wGTlICSbTXVTI4147ISrygXPLKqOapSEFLYM6Wxvu1cugYjcRqB4mnESSAiqKaLtKiLwTZfW0eYFVbCcJpkHEXFcTA+Te74364O0icgyoGplDogewknbhhzl8/neV/u572Db4uAqNMli8ozgjdMDn+9z4oaknJQysQws3bcyy3/CHECwPiCn3FcmjJekJO96LurXF4KUkZau/6+Iqv6WhV5LoqWOk7NyCS8IVXTMiaAhVS59TR5AWqUEMZZV0rJ+ihyaT/kJ/iCTjjiEMv5qxTLM94QE2DqDTGUx2Z17gPlIKSsG4cVP2XrRvL9oxh/+UTCPlZ+0vxTfpZJ9p74Kay9ODJP+YTghM7VSl0n609mAycSlkghTLJ98FMAp4IfGssil1y4nKaZ4PD5n4pSuKaGME4E5cOeVhj2Vbfgydcp+O9OH2AKYS9feuS/n3o6KUYAg3wfMlLgqwvbV/NP53vKvQ16LN6DumUOrE7d6ppmId7eRrztTv/9mB2wa30wf7Ts1el4xlt/AQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20150420_0558381429532918936</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20150420_0558381429532918936</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20150420_0558141429532894002</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20150420_0558271429532907642</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20150420_0558381429532918936</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>1427EB3A01626CBCE05305991F0A705B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>1427F610F2531C00E05307991F0A2BE1</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>1427EB3A02FE6CBCE05305991F0A705B</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.User_Get_Geopolicy_Portal_US</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>CS</con:value></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdRTLCS</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="02.User_Get_CS_GeoProfile" id="9f205374-3186-406e-93db-90f156eca796" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_UserGet_CS_FUNC_CHILD_BAU_Get_Self_P2" searchProperties="true" id="ca60c885-8e2c-4090-9b0c-044bb9724c52"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="c4e42040-73c3-48f7-9066-a1442eb29cc0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2f91b8b1-f109-4f44-9322-8e44fad3798a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="da195c82-eef1-4bae-bd01-09a941e1bf6d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="c0d2c329-ac65-4695-a2b9-f6b0e85932b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="fe1b0271-f16d-44a5-8847-14115dd0f2ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="40b79f8c-1332-4e5f-99c8-efc58af57a52"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AE613C1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B0FE06BA67E0401F0A07991D5D:4DA021CE"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0515101403082910624</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BA11F18CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BA11F18CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BA11F18CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AE613C1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2B39B496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AE613C1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B39B496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6o4FP7eX8FwP95BiG8IU51BrV13q+2qpbf9spOGiOmFgEmw2F+/CRaq1nbbnXHGyeHkOc95yZOccxhHddfjHDNBEqqNh139H/S4BK0OqBsBDAKj2QS24aD2o9G27WbQws0OcixdG3Oe4THlAlLR1esWaBpW2wCdheW4oOVaTq1hWw+65mPGJbR0qcldeRxR7hZhu3rGqJtATrhLYYy5K5A79yZXrvR0YclJ753vWBYBWW8lROqaJqoFGOEoQjWUxOa5eeBzHnB3TkIKRcbwa8yAd/XXvc/Pz7XnRi1hoVm3LMu0HFP6BJyEP/TeWbkZB2O6THbrAaQJJQhG5AUqUhMsVkmgeVGYMCJW8QfQwASWgjZwjgwEmvSHbr4FKNh9EemAJOPQ4CsISrAZXmKGKcLa7Wzc1X98rYO7vQsGKV8mLOZH6+9RwnSDoyTFgcHLzEp2X0c8Ua7eOUbumKIo42SDp2pMUogw124YXpL8inA5fAHXivZrOZc/Uk4ZRt9py7m5z1VSN09UZ0hCzMX/6dl+v3YoPowy3HtB6YN90YAt/zKf34cPzv3I+7mNrJFvdQsK+847UlW7X9fHw1rN1uum5RZN+tcg+xX586fBpd0chA/jh/yWgPTFS9BKrJzpMuU+8+r33t/DSf/PLRj/7k/9zigfrP3bi8yLyHR+B8Tv/lnDC6/jNWtQAhb97aRze8/+ePEvndDssMEawumFP9su1uRn+/Hplt3Fg/wXbFF71vBv7v4Snr+eeeH0IYeXyd31mX01XFFrGfrO3d2Cz8lVMOm+5bSfw6GxlIR59viEkSiXajzGQ20k+wXF5/KiLCQwloWrmyqN4gJToffULiUtbiYFiASubOZuPRoAx3G8izZoDMCg3bmwmhYYWZ5lOw4YtlqlBu1YHFEcJHRJVCylsrv5+Zwgil2OaYCZsUkytMJc/wRxCAXUxnQmD0dCOV4kUsVBXTSaYeeJt3nYALaDnNY6ekrA0ta1aSKu6TXzlgKzA+0G9QPtnmFEUoKVwKsJ53LEuZDFWMNNJiJQ28AaxZm8AphSYbfe7LRMTuI0woqqGSdBFuFaukqL0ph89183IOKFlXCUJkzACBQH8MP8jr+VpZA+AVEOXKXUx7Kd+N1d1HRbZT4f593az7uE97KAqHMm6yoYQTsmh5/exkXNSTUrVWKIg5J7teWbECcAzE/4mcelqeIFG7IXvbxf5ZUhBaVX9ncNa+tattlkRUdtJZZMwptSM4E5xyiTirddJL8xNSsI80sXTsX6KHJlP+SXiRWdCyhwLOdPK5ZfeG3MMVevjbE8OflXnzIHIWXdBM7FKdsgko8SxfjTdwtykfKT5hv595yw4K1dJ7D24sg85RNDEBqqlbpath/MBkokLJFamLB98FMAp4IfGqsiV1yEnKbHTOCPv2hK5Lo6RCjJqBgP9cKwL7wFT7FNsfvm9A6mEPfX2zrnH97WvyZXcymBMdQrX/LfzgYpxgVhXT0KCi5dPZePTxmchntC/0rwvdb3PQBGoDO4sA+1vt2vCniQSe+d+b1lr6bH56H3Lw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o4FP7eX8FwP95BiG8IU51BrV13q+2qpbf9spOGiOmFgEmw2F+/CRaq1nbbnXHGyeHkOc95yZOccxhHddfjHDNBEqqNh139H/S4BK0OqBsBDAKj2QS24aD2o9G27WbQws0OcixdG3Oe4THlAlLR1esWaBpW2wCdheW4oOVaTq1hWw+65mPGJbR0qcldeRxR7hZhu3rGqJtATrhLYYy5K5A79yZXrvR0YclJ753vWBYBWW8lROqaJqoFGOEoQjWUxOa5eeBzHnB3TkIKRcbwa8yAd/XXvc/Pz7XnRi1hoVm3LMu0HFP6BJyEP/TeWbkZB2O6THbrAaQJJQhG5AUqUhMsVkmgeVGYMCJW8QfQwASWgjZwjgwEmvSHbr4FKNh9EemAJOPQ4CsISrAZXmKGKcLa7Wzc1X98rYO7vQsGKV8mLOZH6+9RwnSDoyTFgcHLzEp2X0c8Ua7eOUbumKIo42SDp2pMUogw124YXpL8inA5fAHXivZrOZc/Uk4ZRt9py7m5z1VSN09UZ0hCzMX/6dl+v3YoPowy3HtB6YN90YAt/zKf34cPzv3I+7mNrJFvdQsK+847UlW7X9fHw1rN1uum5RZN+tcg+xX586fBpd0chA/jh/yWgPTFS9BKrJzpMuU+8+r33t/DSf/PLRj/7k/9zigfrP3bi8yLyHR+B8Tv/lnDC6/jNWtQAhb97aRze8/+ePEvndDssMEawumFP9su1uRn+/Hplt3Fg/wXbFF71vBv7v4Snr+eeeH0IYeXyd31mX01XFFrGfrO3d2Cz8lVMOm+5bSfw6GxlIR59viEkSiXajzGQ20k+wXF5/KiLCQwloWrmyqN4gJToffULiUtbiYFiASubOZuPRoAx3G8izZoDMCg3bmwmhYYWZ5lOw4YtlqlBu1YHFEcJHRJVCylsrv5+Zwgil2OaYCZsUkytMJc/wRxCAXUxnQmD0dCOV4kUsVBXTSaYeeJt3nYALaDnNY6ekrA0ta1aSKu6TXzlgKzA+0G9QPtnmFEUoKVwKsJ53LEuZDFWMNNJiJQ28AaxZm8AphSYbfe7LRMTuI0woqqGSdBFuFaukqL0ph89183IOKFlXCUJkzACBQH8MP8jr+VpZA+AVEOXKXUx7Kd+N1d1HRbZT4f593az7uE97KAqHMm6yoYQTsmh5/exkXNSTUrVWKIg5J7teWbECcAzE/4mcelqeIFG7IXvbxf5ZUhBaVX9ncNa+tattlkRUdtJZZMwptSM4E5xyiTirddJL8xNSsI80sXTsX6KHJlP+SXiRWdCyhwLOdPK5ZfeG3MMVevjbE8OflXnzIHIWXdBM7FKdsgko8SxfjTdwtykfKT5hv595yw4K1dJ7D24sg85RNDEBqqlbpath/MBkokLJFamLB98FMAp4IfGqsiV1yEnKbHTOCPv2hK5Lo6RCjJqBgP9cKwL7wFT7FNsfvm9A6mEPfX2zrnH97WvyZXcymBMdQrX/LfzgYpxgVhXT0KCi5dPZePTxmchntC/0rwvdb3PQBGoDO4sA+1vt2vCniQSe+d+b1lr6bH56H3Lw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU6s6FH7fv4LBR4dyKcXC2M70ukVrq9bL3r6ciSGlUUiQBIr++pNQwbZWj56ZznSyWPnWty75kmMG4sjyeoyhlGNKFH/YUf8JWsByHLupHTnOQrMfFobmQgg14FoGhKgd2C1XVXzGMuQTxgHhHdUyTFszHM1sXxuuZ7Y802ocWca9qtyilAlo4dIwVKWII8K8MmxHzVLiUcAw8wiIEfM49Oa984knPD1QcVK7x2uWZcC0u+Q88XQdNgIEURTBBqSxfqxv+RwHzJvjkACepegtZsA66tve1WrVWDUbNA11yzAM3XB14RMwHB6o3V/VZhT4ZEHX6wEglGAIIvwKJKlzxJc0UHpRSFPMl/En0KZuGhJaQwXUoGmTA1V/D1Cy+ybSFsmUAY0tgVmBXaEFShGBSLm58jvqwfc6uN57nQLCFjSN2c76Z5QQyVFEExRorMqsYvd9xD3l6h4j6PkERhnDOZrKMUkAREy5SNECFxPMxPAFTCnbrxRM/HA1ZQj+pC3H+iZXQV3fU50hDhHj/6dnm/1ao9yCKENdu52MktVoytpPk9U1ZH1g3liH87uQjTolhU3nNam63W/r3WGtZ+tt0+Sx6V++vJ7zaZaGIR1ZD/bprbWA/u/2JPX7RnhWLKbWaTy5OZw1J/T3X79InCSZXuaHPRbd+b9n5GSWGGwwG81/PSaXvXmTuA/jMXd6/tg5PHu+4tPpzeIiOcpf+8ld3hwPMxc8WyfW8/3Ny5/52Wt8eZrHyXXiFyetMB3d44tbJx/Yv4ox/Nu7OenrD5Yxe22GRWh03nPazGHbWEnCPHt4RJBXSzke/lAZi34B/rW8SAsOtEXp6iVSoxhHhKtduUtKi5cJAcKBJ5q5Xo8Hpuu6favfdPu26/RGhm2YY6NntFzXcux2pUFrFjsUB5QssIwlVXY9P18ThLHHEAlQquU0g0vE1C8Qh4ADxSdX4nBQwtA1FSpOYxQhI3JI+AQIzu1H1ymcJ6AqU8pnZJb2FhylW8JtWlvCfYUgTjCS6i7Hm4n5ZlxU4hnkGY/MRg4aBGVC/1MpwZ5lt1s6w3ESIclTj2mQRaiRLJOyLjpb/1sagKy0YgYTmnIQmeXp+zS53W9VHYRPgKUDkyn1kegl2nMRGVU+H/Ju7b2wKvheFmB5yERReYrhmsn2p/dZkUNSD0qdGGRmxb3e8kOIPQD6F/z03dLU8YIcb0SvLldxXwg16Vb9fQaN50aW51nZ0SOplKmA14VgmvocwUzI3cs1fUJEryH0b902NeudyLV9m1/Gl2TOAUexmD+lXH7jqTFHTD41fHFsiu++Y7ZCirpxVPB9tkEkXiSS8ZePFuhB6SfMF+JvRdPgvV17sDbiiDzF+4JjEsqVvFdePpkNSAUsFkJI003wfQD7gm8b6yLXXLiYpoeMo8+/KFLhOiqAkGaE+0O1NGyqbsmTvyTIe3f6AFMq+9tVXbBPr+o/55O50L8YqLUv/m9nDZfjApEqXwQll45aiJenCE7CDZV/I7hH6HumOTbbg9FRLfRHrmsOnX5dwK1Muh/MHy0bNd09D91/AQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0515101403082910624</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0515101403082910624</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051581403082908375</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0515101403082910624</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AE613D1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2B39C496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fe1b0271-f16d-44a5-8847-14115dd0f2ac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_UserGet_CS_FUNC_CHILD_SAU_Get_Self_P2" searchProperties="true" id="7c869761-57d8-409b-b402-6dc5f0c48a9b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="40793027-4134-4ede-8c48-1e4f7a80a3b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7dd0be6e-ae94-4370-b1ff-a5fe5f9d0efa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="5229ce86-08c0-419e-a5cc-74c702456f66"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="628e25e2-b1ec-4346-b727-075eca98795b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="43ec0f4c-b301-4507-90a3-521fff1fca1f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD SAU" id="d4ed10ba-a8a3-42f3-a7a6-535d73d1ad82"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B36F922D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B225FADB33E0401F0A05992646:573BBC37"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0515171403082917345</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B288CC7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B288CC7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B288CC7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B36F922D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B0FE17BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B36F922D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FE17BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZx6OQC9dEBYmSVqUD7Uyh7XRejoy9AdPECbET0n792KFJgdKezpGQkHe211774mWfchQGjtfnHBJBI6YN/a7+b9tqtdtuhxhkBshoYHAMl2DHsOsAbbfebnUI1rUh5ykMGReIia7uWHbDsFqG3Zlarmc3PbtVs+z6b127h4RLaOlSs3QtDwPGvSJsV08T5kWIU+4xFAL3BPYm/fHIk54eKjnpvdMtyyJg0lsKEXumiWsEMAQBruEoNE/NPZ9Twr0JXTAk0gReYxLe1V/3bjab2qZei5KF6ViWZVquKX0Ip4tveu+k3AxkyObRdj1ALGIUo4C+IEVqDGIZEa0fLKKEimX4AbRt2paCNiDHBrYb7JtuvgUo2H0RaY9kwpHBl8guwW5hDgkwDNrd7bCrf/taB7d7pwlifB4lIT9Y/x0lYBkEUQzE4GVmJbuvIx4pV+8UsDdkOEg5zeBajUmMMHDtRwJzmo8ol8NHuFa0X8u5/NFyygD/TVtOzV2ukrp5pDo+XQAX/6dnu/3aotyjIIXe4Gq0GaORDU46yv+5Cn7X8zEe360GCHcLCrvOW1JVu1/Xh8NazdbrpstNc30zCygdBBeXzenKfrhr9Ud+846fX47vVyu49vuPc3L9AvQJxw8r9zr+2QRzeh4n9ZfgUSRkuMLfs8bl9HF0sr63OoOXq+fvlysynpzPHscxvNRt3jbbaceJL5ML/Jz5o5+L8VOUR2n6ZKa/vs9aL/3r1uLsjPYfwnNnOe0Qcp6tT/JWNh1sFv69NcvqN7+mdmh133LazWHfWErCJJ2tAItyqcZj6GsXsl9IfC4vykKJMS9cvVhpFBfAhN5Tu5S0eKkUIEo82czt+mJgu657Vm9duI7jN87OrYZlX1h9q+26tt/ySw3asjigOIjYnKpYSmW38/M5QRx6HBiBxMiiFC+B658g+kggbchu5eGIGIdpJFU8a+ZPrQXqtJc2CjozQRsNQbO2q2vXkbhhN0l/LiDZU27b2VPuW8A0pqDkXc03lwPOhSzFGmWpCOxahmoMUnkBJEqDPafRaZqchnEAiqgZRiQNoBYv46IwJt/+OwbCvLBSjuMoESiwi+P3YXaH38pCSB9ClQNXKZ2BbCYcuYmsMp+P827u5l3C91NC1SmTVRUJxVsm+5/ehkVNSTUpVWKY2yX3astfQhwBMD/hZx6WpopHMroTvbxd5YUh5aRX9neNautammVp0dG2kspEwptSMW1zAjiVevc8jZ6AmRWE+aXrpmJ9ELmy7/NLxZJNBBIQyvnTiuUX3hoT4OqtMZTnJv/qQ2YvpKybgFwcsw0C+SRRjD99tWAPKz9p/iH/NlFC3tp1BGsnjsxTPjAEZQu1UhfL8wezgSMJS6USRsku+DGAY8H3jVWRKy5CTtMsFfDxF01JXFdHGEcpE0NfLwy7slvwFM8xeG9O72AKaX+9q3P+4V39azyaSAEMkV750v92NmgxLhh09SQouHT1XD49ZXC22JH5V4JHlN7pdAaDtm81K6Vvuq7TqverAu5l0ntnfm/Zqenheej9AQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZx6OQC9dEBYmSVqUD7Uyh7XRejoy9AdPECbET0n792KFJgdKezpGQkHe211774mWfchQGjtfnHBJBI6YN/a7+b9tqtdtuhxhkBshoYHAMl2DHsOsAbbfebnUI1rUh5ykMGReIia7uWHbDsFqG3Zlarmc3PbtVs+z6b127h4RLaOlSs3QtDwPGvSJsV08T5kWIU+4xFAL3BPYm/fHIk54eKjnpvdMtyyJg0lsKEXumiWsEMAQBruEoNE/NPZ9Twr0JXTAk0gReYxLe1V/3bjab2qZei5KF6ViWZVquKX0Ip4tveu+k3AxkyObRdj1ALGIUo4C+IEVqDGIZEa0fLKKEimX4AbRt2paCNiDHBrYb7JtuvgUo2H0RaY9kwpHBl8guwW5hDgkwDNrd7bCrf/taB7d7pwlifB4lIT9Y/x0lYBkEUQzE4GVmJbuvIx4pV+8UsDdkOEg5zeBajUmMMHDtRwJzmo8ol8NHuFa0X8u5/NFyygD/TVtOzV2ukrp5pDo+XQAX/6dnu/3aotyjIIXe4Gq0GaORDU46yv+5Cn7X8zEe360GCHcLCrvOW1JVu1/Xh8NazdbrpstNc30zCygdBBeXzenKfrhr9Ud+846fX47vVyu49vuPc3L9AvQJxw8r9zr+2QRzeh4n9ZfgUSRkuMLfs8bl9HF0sr63OoOXq+fvlysynpzPHscxvNRt3jbbaceJL5ML/Jz5o5+L8VOUR2n6ZKa/vs9aL/3r1uLsjPYfwnNnOe0Qcp6tT/JWNh1sFv69NcvqN7+mdmh133LazWHfWErCJJ2tAItyqcZj6GsXsl9IfC4vykKJMS9cvVhpFBfAhN5Tu5S0eKkUIEo82czt+mJgu657Vm9duI7jN87OrYZlX1h9q+26tt/ySw3asjigOIjYnKpYSmW38/M5QRx6HBiBxMiiFC+B658g+kggbchu5eGIGIdpJFU8a+ZPrQXqtJc2CjozQRsNQbO2q2vXkbhhN0l/LiDZU27b2VPuW8A0pqDkXc03lwPOhSzFGmWpCOxahmoMUnkBJEqDPafRaZqchnEAiqgZRiQNoBYv46IwJt/+OwbCvLBSjuMoESiwi+P3YXaH38pCSB9ClQNXKZ2BbCYcuYmsMp+P827u5l3C91NC1SmTVRUJxVsm+5/ehkVNSTUpVWKY2yX3astfQhwBMD/hZx6WpopHMroTvbxd5YUh5aRX9neNautammVp0dG2kspEwptSMW1zAjiVevc8jZ6AmRWE+aXrpmJ9ELmy7/NLxZJNBBIQyvnTiuUX3hoT4OqtMZTnJv/qQ2YvpKybgFwcsw0C+SRRjD99tWAPKz9p/iH/NlFC3tp1BGsnjsxTPjAEZQu1UhfL8wezgSMJS6USRsku+DGAY8H3jVWRKy5CTtMsFfDxF01JXFdHGEcpE0NfLwy7slvwFM8xeG9O72AKaX+9q3P+4V39azyaSAEMkV750v92NmgxLhh09SQouHT1XD49ZXC22JH5V4JHlN7pdAaDtm81K6Vvuq7TqverAu5l0ntnfm/Zqenheej9AQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZbuo6FH3vV0Tp41FIQgkZVJAYyimnc4FOL1fG2YBL4oTYCXC+/tqhSYHS3vZKSMg722uvPXjZpwyFQdVrMQYJJxFV+t2G+o/r2pZfn4Dmj+u2VptYjubYvqnVjRNctbFVdy1HVfqMpdCnjCPKG2rVMGuaUddMZ2i4nml5VaNiOvUXVXmAhAlo4VIxVGUVBpR5ediGmibUixAjzKMoBOZx7A1aV5ee8PRQwUltnm5Y5gGT5ozz2NN1XPEBQxDgCo5C/VTf8Tn1mTcgU4p4msBbTJ811Le9y+WysjypRMlUrxqGoRuuLnx8RqbHavOo2Ax+n06izbqDaEQJRgH5iySpK+CzyFdawTRKCJ+Fn0CbumlIaA1WWMNmjR6r+nuAnN03kXZIJgxpbIbMAuweJpAAxaCM7vsN9fh7HdzsHSaIskmUhGxv/TNKQDMIohh8jRWZFey+j3igXM1TwF6f4iBlJINrOSYxwsCU2wQmZHVJmBg+nyl5+5UVEz9STBngn7TlVN/mKqjrB6rTJVNg/P/0bLtfG5QHFKTQPMOp05qz+Pyx02FPWXgxfHx6aI96uDdq5BS2nTekyna/rfeHtZytt01RFt5Z49HrOA5m03U2uYC1bT4v5/br3c3zULd/X1xdWRezdU1vd9tzfnJ+5zxn7VZ9PF+n1tKtretntUfaGg577q8jPH427ctpWr3EvYUzHD89te9m6Fc6XKStRXCtz69GL+lspY/PbxL8x/7DpkH/MVifLFz3xjhrtX/bhgto7rRN//bodTXuJWcv9svD3TP/+zzq10aN95y2c9g1FpIwSMevgHmxlOPR7yo90S/Ev5YXaSG+NsldvVhqFONAudqUu6S0eKkQIOJ7opmbda9juq7bNnpnpi2qY58ZNcPsGS3Ddl2za3ULDdqw2KPYieiEyFhSZTfz8zVBHHoMqA+JlkUpngFTv0DsIo6UPr0XhyOiDIaRUPE4CNAiXDgns2zpLCaLiVkNVsZ8qSrXEb+hN0lrwiHZUW6zuqPc94BJTEDKu5xvJgaccVGKBcpSHpiVDFUopOICSKQGe9WaY+mMhHEAkqgeRn4aQCWexXlhdLb5r2oIs9xKGI6jhKPAzI/fp9ntfysKIXx8Ih2YTKkNoplw4CYyi3w+5G0dvLEK+FbqE3nKRFV5QvCGye6n92GRU1JOSpkYZmbBvdzyQ4gDAPoX/PT90pTx/IxsRS9uV3FhCDlpFv1doMqikmZZmnfUllKZCHhdKKapDwCnQu/Ww2gOVC8h9G9dNyXrvcilfZdfymd0wBGHUMyfki+/8dYYAJNvjb44N6vvPmR2Qoq6cVjxQ7ZOIJ4kkvGXrxbsYeknzLfibxkl/nu7DmBtxRF5igcGJ3QqV/JiWX8yGzgSsEQoYZRsgx8COBR811gWueTCxTSNUw6ff1GkxDVUhHGUUt7vqrlhW3Zznnwdg/fu9AEml/a3u3rFPr2rn64uB0IAQ6SWvuS/nTWSjwsGVT4Jci4NdSWeniI4nW7J/BvBA0pfdZxOx+4aVqn0lutW6yetsoA7mTQ/mD9atmq6fx6a/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0515171403082917345</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0515171403082917345</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0515151403082915163</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0515171403082917345</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B36F932D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B0FE18BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43ec0f4c-b301-4507-90a3-521fff1fca1f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_UserGet_CS_FUNC_CLG_Get_CHILD_P2" searchProperties="true" id="44e9d761-69ee-4512-b489-7619d13c7e46"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cf67dd83-140b-450e-83e3-a7bf5a592fc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="815505fc-c4b1-459d-a7ce-492b4fb6ef2e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="b4cb8379-43f3-4aa0-ae38-a4d07a9dc618"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="0010ebd1-87e9-4f98-85b1-8c952dad4361"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="f61f1377-9b57-4e12-9112-c4306b2aa6db"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD SAU" id="48ffcada-a88f-43a3-a4d0-b39036793164"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2D5C6A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B289C77D05E0401F0A0599263A:48DC25B1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0515241403082924524</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999AE61781C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE61781C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE61781C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2D5C6A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B09B12610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D5C6A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B09B12610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6I6FP7eX8GwHzsIQa3CVGeoL3fd7at2u9t+uZOGA6YLiZKAuL9+Axaq1va2d8YZJ4eT5zznJU9yKnAc2a4nBCSScqZNhj3938Ahdvex6RitR9wxWqTjG92W3zYeHbvpdKygbbWQrk2ESGHChMRM9nTbQi3DOjFQ99ZyXNR2bbvhnHQedO0OEqGglUvD0rU8jphwy7A9PU2Yy7GgwmU4BuFK4s68i3NXebq44qT3Tzcsy4BJfy7lwjVN0vCBQBSRBuGxeWru+Jz6wp3RkGGZJvAc0xc9/XnvarVqrJoNnoSmbVmWaTmm8vEFDb/o/aNqM/gTFvDNeoAZZ5TgiP7BBakLkHPua14U8oTKefwGNDKRVUAbkBODoBb7opsvAUp2H0TaIZkIbIg5RhXYFAJIgBHQfkwnPf3Lxzq42XubYCYCnsRib/05SsAyiPgCfENUmVXsPo54oFz9UyDuhJEoFTSDy2JMFpiA0K4TCGh+ToUaPl9oZfu1XKgfraYMyGfacmpuc1XUzQPVGdIQhPw/Pdvu1wblDkcp9DsouP+Vt28oukLHV8eEmTP0cH8pEbV6JYVt5w2put3P6/1hrWfredP6yeGX8vw7AfNstLSc3Br88DPH+mbNby6Ca6s97oahd8H85erp2vs2/8lXIQpzSH9ms/FNd7W8kN+bxzR3UL4+GvvMWeeRP01gMTp+aq2H7Pphiu8ic3w8/B6Te+6xbjwKqBk/ZujrLJ8wbx56I9G8ul2dBe0/4Qi+mR5Mvy750Qr+uWXpZBWHTzftFjzcifveS07bOewaK0mYpY9PQGS1LMZjMtTGql9Yvi8vhYX6RlC6uotCo4QEJvV+sauQFjdVAkR9VzVzsx4PkOM4Z/awPTjxnJE3sloWGlue1XYc+6TZqjRow2KP4oCzgBaxCpXdzM/7BEnsCmA+JEbGUzIHob+DOMQSaxM2VYeDMwG3XKk4ivxO6Hfs3xnp2MgmAe/+Ec0nO+vo2iWXV+wq8QIJyY52I3tHu6dA6IJCIfDFhAs14kKqYixxlsoINTLcYJCqKyApVNi1W922KWi8iKCgasbcTyNoLOaLsjSm2PzbBiaitFJBFjyROELlAXwzv/1vVSmUj08LB1GkdAaqnXDgLkJVPm/n3d7Ou4L3Up8W50zVVSaUbJjsfnoZl2JO6lmpEyMCVdzrLZ+EOABgvsPP3C9NHc/P6Fb06n5VV4YSlH7V3yVuLBtplqVlRzuFWCYK3lSaicwZkFQp3vqW/wZm1hDmhy6cmvVe5Nq+yy+VczaTWEKs5k8rlx94bcxAFK+NiTo5+UefMjshVd0k5PKQbRCpR0nB+N13C3FJ4afM1+pvxRP/pV0HsLbiqDzVE0NSFhar4mpZvzEbhCtYqrSQJ9vghwAOBd811kWuuUg1TY+phLe/aIXI9XRMCE+ZnAz10rAtvCVPuV6A++L0CqYU9+fbOhdv3ta/Ls5nSgJjrNe+9L+dDVqOCwG9eBSUXHp6rh6fKjgLt4T+meBrrfdGJ6jTRYOTbq31HcdBw3a7LuBOJv1X5teWrZrun4f+Xw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6I6FP7eX8GwHzsIQa3CVGeoL3fd7at2u9t+uZOGA6YLiZKAuL9+Axaq1va2d8YZJ4eT5zznJU9yKnAc2a4nBCSScqZNhj3938Ahdvex6RitR9wxWqTjG92W3zYeHbvpdKygbbWQrk2ESGHChMRM9nTbQi3DOjFQ99ZyXNR2bbvhnHQedO0OEqGglUvD0rU8jphwy7A9PU2Yy7GgwmU4BuFK4s68i3NXebq44qT3Tzcsy4BJfy7lwjVN0vCBQBSRBuGxeWru+Jz6wp3RkGGZJvAc0xc9/XnvarVqrJoNnoSmbVmWaTmm8vEFDb/o/aNqM/gTFvDNeoAZZ5TgiP7BBakLkHPua14U8oTKefwGNDKRVUAbkBODoBb7opsvAUp2H0TaIZkIbIg5RhXYFAJIgBHQfkwnPf3Lxzq42XubYCYCnsRib/05SsAyiPgCfENUmVXsPo54oFz9UyDuhJEoFTSDy2JMFpiA0K4TCGh+ToUaPl9oZfu1XKgfraYMyGfacmpuc1XUzQPVGdIQhPw/Pdvu1wblDkcp9DsouP+Vt28oukLHV8eEmTP0cH8pEbV6JYVt5w2put3P6/1hrWfredP6yeGX8vw7AfNstLSc3Br88DPH+mbNby6Ca6s97oahd8H85erp2vs2/8lXIQpzSH9ms/FNd7W8kN+bxzR3UL4+GvvMWeeRP01gMTp+aq2H7Pphiu8ic3w8/B6Te+6xbjwKqBk/ZujrLJ8wbx56I9G8ul2dBe0/4Qi+mR5Mvy750Qr+uWXpZBWHTzftFjzcifveS07bOewaK0mYpY9PQGS1LMZjMtTGql9Yvi8vhYX6RlC6uotCo4QEJvV+sauQFjdVAkR9VzVzsx4PkOM4Z/awPTjxnJE3sloWGlue1XYc+6TZqjRow2KP4oCzgBaxCpXdzM/7BEnsCmA+JEbGUzIHob+DOMQSaxM2VYeDMwG3XKk4ivxO6Hfs3xnp2MgmAe/+Ec0nO+vo2iWXV+wq8QIJyY52I3tHu6dA6IJCIfDFhAs14kKqYixxlsoINTLcYJCqKyApVNi1W922KWi8iKCgasbcTyNoLOaLsjSm2PzbBiaitFJBFjyROELlAXwzv/1vVSmUj08LB1GkdAaqnXDgLkJVPm/n3d7Ou4L3Up8W50zVVSaUbJjsfnoZl2JO6lmpEyMCVdzrLZ+EOABgvsPP3C9NHc/P6Fb06n5VV4YSlH7V3yVuLBtplqVlRzuFWCYK3lSaicwZkFQp3vqW/wZm1hDmhy6cmvVe5Nq+yy+VczaTWEKs5k8rlx94bcxAFK+NiTo5+UefMjshVd0k5PKQbRCpR0nB+N13C3FJ4afM1+pvxRP/pV0HsLbiqDzVE0NSFhar4mpZvzEbhCtYqrSQJ9vghwAOBd811kWuuUg1TY+phLe/aIXI9XRMCE+ZnAz10rAtvCVPuV6A++L0CqYU9+fbOhdv3ta/Ls5nSgJjrNe+9L+dDVqOCwG9eBSUXHp6rh6fKjgLt4T+meBrrfdGJ6jTRYOTbq31HcdBw3a7LuBOJv1X5teWrZrun4f+Xw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTn0svlEs7wkwFPXaLqKDuPb6cCekCoiWpSQror99JsRUQPe4zwwyT1ZVvfeuSLzkWaJF6YSQEcEkYNeJ+x/y34U68ADfqVj1oIssHz7eCBDfVEoIkALcJfss0YiFyiKmQiMqO6TmubzlNy23fOkHoNkKvWWs79QfTuAcuFLRyqTmmsV6kVIRF2I6ZcxoyJIgIKVqACCUOx9HlIFSeISo5md3jDcsiIO/OpcxC28a1BDCkKa5htrCP7R2f40SEYzKjSOYc3mImomO+7V2tVrVVvcb4zPYcx7GdwFY+iSCzI7P7o9wMSUynbLPuIcoowSglr0iTugQ5Z4kRpTPGiZwvPoF2bdfR0BassYVdnx6Z9nuAgt03kXZIcoEsMUduCTaCKXCgGIy7Udwxj77Xwc3eW46omDK+EHvrv6MEdAkpyyCxRJlZye77iAfK1T0GHMYUp7kgSxjqMckQBmFcc5iS9YAINXyJMIr2G2uhfqScMsB/05Zje5urom4fqE6fzEDI/9Oz7X5tUO5RmkOXvfAnj93d3ws6OosmNy20XN71/PXjQHQKCtvOG1JVu9/W+8Nazdbbpsf686nEFw/5+dMv/Dhv0ZtfzfP8J5B6/Xn02jr/Z9J8+b3wvHw4HEYnJOr1VuPJ9DVBTVb3SFJ/vh02Gtlt7P68ev1xdh9cv47uvNOL6/ac9fzzVtaa49VDdJk8kvbv6ZU9f7gg6UVwPW5cYx/fjy7ilcCTX4OhA5ObOz5Y1uEGD+K54/4Y1yFri9Po52ri9zl6dOJ25z2n7Rx2jaUkjPPJI2BZLvV4xH3jTPULya/lRVtIYk0L1zDTGiUkUGl29S4tLWGuBIgkoWrmZn3Wc4MgOHGCE9druk506viOe+ZETiMIvKbvlRq0YbFHscfolOhYWmU38/M1QbwIBdAEuLVkOZ6DML9A7COJjJiO1OFgVMAtUyq+WuWYSseBp+map0oNglYj8FPXNIZMXtErHk0l8B3ldr0d5R4BJhkBLe96voUacCFVKZ7RMpepW1uiGoVcXQBca3Do+e2GLcgiS0ETtRcsyVOoZfOsKIwtNv+ehbAorETgjHGJUrc4fp9mt/+tLITySYh2EDqlE1DNhAM3kVvm8yHvxsEbq4SP8oToU6aqKjnBGya7n96HRU9JNSlVYli4Jfdqy19CHACwv+Bn75emipcsyVb08nZVF4aSk27Z32dUe67ly2VedLSlpZIreFsppmuPAedK715u2RNQu4Kwv3XdVKz3Ilf2XX65nNOxRBIWav6MYvmNt8YYhH5rxOrcrL/7kNkJqeomYS0P2XqpepJoxl++WnCItZ8yX6u/FePJe7sOYG3FUXmqB4YkdKZX+mJ5+WQ2MFOwRCkh49vghwAOBd81VkWuuEg1TZNcwudfDC1xHRNhzHIq475ZGLZlt+ApXzII350+wBTS/nZXr8Wnd/Xvy8FYCeACmZUv+W9nixTjgsHUT4KCS8dcq6enCk5nWzL/RvCj0kenTbfVdnvNdqX0rSBw+41GVcCdTLofzB8tWzXdPw/dPw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0515241403082924524</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0515241403082924524</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0515221403082922139</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0515241403082924524</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2D5C7A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B09B13610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f61f1377-9b57-4e12-9112-c4306b2aa6db</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_UserGet_CS_FUNC_NONCLG_FAU_Get_CHILD_P2" searchProperties="true" id="4ac5920b-6215-407f-95af-dfe3bc85b8d9"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1ad30288-ac91-4b2f-b5e1-64e5736a26dd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="784176bb-58e7-48d7-b003-63715d77d5af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG" id="3d360364-408e-4c29-bc16-0f0a135949d3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG" id="a25e1e10-139d-489f-8f32-15e4a31e83a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="e8f7ea2f-f3ef-40a0-b154-a22294d767e6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="24f04339-c72f-4f0e-9111-716cd55b243f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="f1a12c5a-be0f-44c4-a0d4-e4c793d4681e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="34032896-3c25-4c64-b688-45463a0f6d24"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFAF475309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B23F8CFB7CE0401F0A07991D61:C87101D3"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0515341403082934279</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999AE61941C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE61941C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE61941C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFAF475309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BB8B2C3A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999AFAF635309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFAF475309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BB8B2C3A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999AFAF635309E0401F0A0599263C</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj1VIHBIgUUHiQGmZXlUobedlZBwDPk3s1HYI9OvHDk0KlHbakZCQd7bXXvviZZ8ImMRu2BUCc0kYNYb9tvlP5DmN+mw6tTzPQ5YX+J4F67PI8ptB5AXeDLda0DSGQmR4SIWEVLZN1wGe5TQs0Bo7QQj8sO7UgNv62zQmmAsFrVxqjmmskpiKsAjbNjNOQwYFESGFCRahROGoe3UZKs8QlpzMzsmGZRGQdxZSpqFto1qEEY5jVEMssU/sHZ+TSIQjMqdQZhy/xYxE23zbm+d5La/XGJ/bruM4thPYyicSZH5kdn6Vm3E0pDO2WfcgZZQgGJNXqEldYblgkdGN54wTuUg+gQY2cDS0hVfIQsCjR6b9HqBg902kHZJcQEssICjB7vAMc0wRNu7vhm3z6Hsd3Owdc0jFjPFE7K1/RgnTJY5ZiiNLlJmV7L6PeKBcnROMwiFFcSbIEl/rMUkhwsK45XhGVpdEqOGLhFG031gJ9SPllGH0k7ac2NtcFXX7QHX6ZI6F/D892+7XBmUC4wx3Ame8PB+s88nxhd9tNVPW8NOzxXpxNc3bBYVt5w2pqt1v6/1hrWbrbdOydePJQXx+kYuXs8YDeOiD2/qD4OOzvrdyeq/r/jG/X3bdbMTj6WN8nK9tcB/cJKJ5KVugPl/PPdu+7h6/1n/3fuH0wX0K+vn1o11/6N7Js4jw1gxM3IBzn85b65vJ+uzqPGV89FdwPn1ORwP36eKy5yVpfsm8s7uJ5OktHQWrAft1mzfp6+1Tj4k/Y3ZxmvUn8/Z7Tts57BpLSRhl0z8YyXKpx2PYNwaqX1B+LS/aQiJrVriGqdYoITGVZkfv0tISZkqASBSqZm7Wgx4IgqA76A68pl93glPHc8DA6Tp+ELiNeq/UoA2LPYo9RmdEx9Iqu5mfrwmiJBSYRphbS5ahBRbmF4h9KKExpHfqcDAq8JgpFQepWDWnq5T5AMo0l83kOYvwLIhN45rJG3rDuzOJ+Y50A3dHuu8wIinBWt/1gAs14UKqWrzAZSZjUFvCGsWZugG4FuHQ9Vq+LUiSxlgztRMWZTGupYu0qIwtNv+uBZEorEQgNScSxqA4f5+mt/+trITyiYh2EDql31h1Ex+4itwyn8/z9rfzLuG7WUT0MVNllZygDZPdT+/TosekGpUqMSRAyb3a8kOIAwD2F/zs/dJU8aIl2YpeXq/qxlB60in7+wJrL7VsucyKjja1VnIFbyvJBPYIo0wJ3nrMnjG1Kwj7W/dNxXovcmXf5ZfJBR1JKHGi5s8olt94bIyw0I+NoTo4q+++ZHZCqrpJvJKHbL1YvUk04y+fLShE2k+Zb9Vfznj03q4DWFtxVJ7qhSEJneuVvlnWn8wGYgqWKClkfBv8EMCh4LvGqsgVF6mmaZpJ/PkXQ2tc24QIsYzKYd8sDNu6W/CU6xSH704fYAptf7usV+LTy/rx6nKkFDCBZuVL/tvZIsW4IGzqN0HBpW2u1NtTBafzLZ1/I3hA6k8bIPBAr9GqpL4ZBKDv+1UBdzLpfDB/tGzVdP88dP4F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj1VIHBIgUUHiQGmZXlUobedlZBwDPk3s1HYI9OvHDk0KlHbakZCQd7bXXvviZZ8ImMRu2BUCc0kYNYb9tvlP5DmN+mw6tTzPQ5YX+J4F67PI8ptB5AXeDLda0DSGQmR4SIWEVLZN1wGe5TQs0Bo7QQj8sO7UgNv62zQmmAsFrVxqjmmskpiKsAjbNjNOQwYFESGFCRahROGoe3UZKs8QlpzMzsmGZRGQdxZSpqFto1qEEY5jVEMssU/sHZ+TSIQjMqdQZhy/xYxE23zbm+d5La/XGJ/bruM4thPYyicSZH5kdn6Vm3E0pDO2WfcgZZQgGJNXqEldYblgkdGN54wTuUg+gQY2cDS0hVfIQsCjR6b9HqBg902kHZJcQEssICjB7vAMc0wRNu7vhm3z6Hsd3Owdc0jFjPFE7K1/RgnTJY5ZiiNLlJmV7L6PeKBcnROMwiFFcSbIEl/rMUkhwsK45XhGVpdEqOGLhFG031gJ9SPllGH0k7ac2NtcFXX7QHX6ZI6F/D892+7XBmUC4wx3Ame8PB+s88nxhd9tNVPW8NOzxXpxNc3bBYVt5w2pqt1v6/1hrWbrbdOydePJQXx+kYuXs8YDeOiD2/qD4OOzvrdyeq/r/jG/X3bdbMTj6WN8nK9tcB/cJKJ5KVugPl/PPdu+7h6/1n/3fuH0wX0K+vn1o11/6N7Js4jw1gxM3IBzn85b65vJ+uzqPGV89FdwPn1ORwP36eKy5yVpfsm8s7uJ5OktHQWrAft1mzfp6+1Tj4k/Y3ZxmvUn8/Z7Tts57BpLSRhl0z8YyXKpx2PYNwaqX1B+LS/aQiJrVriGqdYoITGVZkfv0tISZkqASBSqZm7Wgx4IgqA76A68pl93glPHc8DA6Tp+ELiNeq/UoA2LPYo9RmdEx9Iqu5mfrwmiJBSYRphbS5ahBRbmF4h9KKExpHfqcDAq8JgpFQepWDWnq5T5AMo0l83kOYvwLIhN45rJG3rDuzOJ+Y50A3dHuu8wIinBWt/1gAs14UKqWrzAZSZjUFvCGsWZugG4FuHQ9Vq+LUiSxlgztRMWZTGupYu0qIwtNv+uBZEorEQgNScSxqA4f5+mt/+trITyiYh2EDql31h1Ex+4itwyn8/z9rfzLuG7WUT0MVNllZygDZPdT+/TosekGpUqMSRAyb3a8kOIAwD2F/zs/dJU8aIl2YpeXq/qxlB60in7+wJrL7VsucyKjja1VnIFbyvJBPYIo0wJ3nrMnjG1Kwj7W/dNxXovcmXf5ZfJBR1JKHGi5s8olt94bIyw0I+NoTo4q+++ZHZCqrpJvJKHbL1YvUk04y+fLShE2k+Zb9Vfznj03q4DWFtxVJ7qhSEJneuVvlnWn8wGYgqWKClkfBv8EMCh4LvGqsgVF6mmaZpJ/PkXQ2tc24QIsYzKYd8sDNu6W/CU6xSH704fYAptf7usV+LTy/rx6nKkFDCBZuVL/tvZIsW4IGzqN0HBpW2u1NtTBafzLZ1/I3hA6k8bIPBAr9GqpL4ZBKDv+1UBdzLpfDB/tGzVdP88dP4F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0Tp4yg4DgRIVJC4tBpaCj1Ab/NyZBwH3CY2jR0u/fqxQ5MCpT3tkZCQd7bXXvviZZ8JFEeO3xKCJJJyZvS6DfPfaT0kHgpqVrUGHauCQ2KhaTi16m7olrFXQbVa3TR6QqSkx4RETDZMx4YVy65asD6xPR+6ftkpVdzqH9O4I4lQ0MqlZJvGOo6Y8LOwDTNNmM+RoMJnKCbCl9gft677vvL0Uc7JbJ5tWWYBk+ZcyoUPAC4FBJMowiXMY3AG9nzOAuGP6YwhmSbkLWYgGubb3tVqVVqVSzyZAce2bWB7QPkEgs5OzeZJvpkEPRby7bqDGGcUo4i+Ik3qmsg5D4xWNOMJlfP4E2gIoK2hLbLGFoYVdmqC9wAZu28i7ZFMBLLEHMEcbERCkhCGiXE76jXM0+91cLt3kiAmQp7E4mD9M0qELUnEFySwRJ5Zzu77iEfK1Twj2O8xHKWCLslAj8kCYSKMm4SEdN2nQg1fIIys/cZaqB/Np4zgn7TlDOxyVdTBkep06YwI+X96ttuvLcodilLSnKySFYgH9d8OcAeTsW2Ha68a30TDi1kjo7DrvCVVtPttfTisxWy9bbpvy/BcPPVean0JBkN6v57XwQhPZiTsDi+ZhN3Xh8hLh+HLPbjsiEm3f3UOnFv6Omxf/bnb9K+Xg/uLCAp7AOYnUfjYHz9D/suz2aX8TcuLezDqnG8k3LB/+vOI4yv6+ICH5Wd6P7wdXIUP6PG60qo81q+faqT/yNu/xLD2BJevo95JdDOdtmcXKVu3azHkVfex1XjPaTeHfWMuCeN0+kSwzJd6PHpd40L1C8mv5UVbaGCFmau/0BolJGHSbOpdWlr8VAkQDXzVzO36ogM9z2u3622nU25B79yu2PDCbtmu5znVSifXoC2LA4odzkKqY2mV3c7P1wRx7AvCApJYS57iORHmF4hdJJHRYyN1ODgTZMKVikNKcc0rP29YfYpgOJ+70q5vXp8WrmkMuByyYdIKJUn2tBs6e9o9IpguKNECrydcqBEXUhXjBS1TGcHSEpUYSdUVkGgV9p1K3QWCxouIaKog5kEakdJivshKA8T237EQFpmVCrzgiUQRzA7gp/kdfstLoXwCqh2ETqlNVDvJkbvIyfP5PG93N+8cvpUGVJ8zVVeZULxlsv/pfVz0nBSzUiSGBcy5F1t+CHEEAHzBDxyWpogXLOlO9Px+VVeGEpRm3t8XVHoppctlmnW0psUyUfBAaSYEY4JTpXibCX8mDBQQ4FsXTsH6IHJh3+eXyjkbSyRJrObPyJbfeG2MidCvjZ46OevvPmX2Qqq6SbKWx2ydSD1KNOMv3y3Yx9pPmW/U34onwXu7jmDtxFF5qieGpGymV/pq2XwyG5grWKq0kCe74McAjgXfNxZFLrhINU3TVJLPvxha5BomwpinTPa6ZmbYFd6Mp9wsiP/u9AEmE/e323otPr2tH677YyWBMTILX/rfzhbNxgUTUz8KMi4Nc60enyo4m+0I/RvBj1rfOq9CrwI71Xqh9TXPg13XLQq4l0nzg/mjZaemh+eh+Rc=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtb9o6FP6+XxFlH6eQOISXRAWJQdllK20H7UT35co4J+A2sdPY4aW/fnZoUqC0t7sSEvLJ8XOe8+LHPhM4id2gJwRkknJmjAYd818fuT6Ctme5czeyPDcKrblDmtZ8Du1GC3lt5GHTGAmRw4gJiZnsmK6DPMtpWqh94/gBagT1Zq3RdH+bxi/IhIJWLjXHNDZJzERQhO2YecYCjgUVAcMJiECSYNobXwTKM8AlJ7N7tmNZBMy6SynTwLZJLQQCcUxqhCf2mX3gcxaKYEoXDMs8g+eYoeiYz3vX63VtXa/xbGG7juPYjm8rn1DQxWez+6ncDOGIRXy37mPGGSU4pk9YkxqDXPLQ6MULnlG5TN6ARjZyNLQFG2IR5LHPpv0SoGD3QaQDkpnAllhiVIJNIIIMGAHjdjLqmJ8/1sHd3psMMxHxLBFH67+jBGwFMU8htESZWcnu44gnytU9AxKMGIlzQVdwqcckxQSEcZ1BRDcXVKjhC4VRtN/YCPWj5ZQB+Zu2nNn7XBV1+0R1BnQBQv6fnu33a4fyC8c5dN3Zl2S8cWfeJbmpDwUl5N77Tn40kMs7BYV95x2pqt3P6+NhrWbredMsPSdXoxm7jOVyNsEwbKX2P/3bq/b17XwbruxF/DUdCuSmdsbmVPDWdr696jfj1ezhB368H7emN/QpapFkiu4/jb9l0+8zV/y+S7/I+fXtdPO0Xt/9fPjuT4YRh/HXh9/fBj/nT+gi8t2eV7eFfb5ej5q32Z3ToE/cIWF81cOT5cM4/XTNeJI+/Vxsp3fnv1bo7px5nZec9nM4NJaSMM3n90BkudTjMRoYQ9UvLN+XF22hoRUVrkGqNUpIYNLs6l1aWoJcCRANA9XM3XrYR77v94a9YbPeqDv+ueM5aOj0nIbvu816v9SgHYsjin3OIqpjaZXdzc/7BEkSCGAhZNaK52QJwnwHcYAlNkZsog4HZwJuuFLxRxrl9ei+5Qm8QmEIqWqwqGdJahqXXF6xq6wXScgOpBu5B9I9AUJTClrf9YALNeFCqlo84lUuY1Rb4RqDXN0AmRbhwPXaDVvQJI1BM7UTHuYx1NJlWlTGFrt/18JEFFYqSMoziWNUnL830zv+VlZC+YRUOwid0ldQ3YQTV5Fb5vMq78bJK6uE7+Uh1cdMlVVmlOyYHH56mRY9JtWoVIkRgUru1Za/hDgBYL/Dzz4uTRUvXNG96OX1qm4MpSfdsr+PuPZYy1ervOhoS2tlpuBtJZnIngLJleBtb/gDMLuCsD9031SsjyJX9kN+uVyyqcQSEjV/RrH8wGNjCkI/Nkbq4Gw++pI5CKnqJmEjT9n6sXqTaMbvPltIQLSfMl+rvzXPwpd2ncDai6PyVC8MSdlCr/TNsn1jNghXsFRJIc/2wU8BnAp+aKyKXHGRaprmuYS3vxha4zomJoTnTI4GZmHY192Cp9ymELw4vYIptP35st6INy/r2fhiqhQwwWblS//b2aLFuBAw9Zug4NIxN+rtqYKzxZ7OPxM8IfXnTeR7qN9sV1Lf8n00aDSqAh5k0n1lfm3Zq+nxeej+AQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0515341403082934279</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0515341403082934279</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0515291403082929081</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0515311403082931563</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0515341403082934279</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFAF485309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BB8B2D3A19E0401F0A0599264C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999AFAF645309E0401F0A0599263C</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1a12c5a-be0f-44c4-a0d4-e4c793d4681e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_UserGet_CS_FUNC_ADULT_BAU_Get_CHILD_P2" searchProperties="true" id="943b4b09-cff0-420e-b0f0-ad4aa7da8eab"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8a53f21a-8fca-4d86-9b93-6628393a5353"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="60c35889-1085-42d6-8bef-6c1cfc4cd682"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultBAU" id="eafd116e-46fd-4628-815f-f3e58494a76e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultBAU" id="10d7b984-f8ec-468a-9e7a-7e940e205bf9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="07229b84-60fa-4603-aa4e-834814b42abc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="26a61e18-4ae8-4f02-b11c-0ff248cdffb1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="3d9f91a0-cf40-4715-aeaa-9e1b3a3a0f69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="5172c2f9-2cab-4969-9030-bcaf42bfb196"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2B4BB496AE0401F0A05992648</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B3B33B494BE0401F0A05992630:D8F3A51D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0515431403082943555</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999AE62971C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE62971C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999AE62971C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2B4BB496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AE62A51C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BC6AE7DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B4BB496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AE62A51C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BC6AE7DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o4FP7ur+jUj07pCwXajjADoisugivoXv2yE9K05N42KU0C9f76TYqtgOjqzjDD5PTkOc95yZOcM5AmTtBnDOUcU6KNhl39n3bowsiLgLHwO03DtRdNA4TewmgvLM/2oO91IkfXRowJNCKMA8K7umPZrmG1DdubW35gt4Km3/A7rWdde0Q5k9DSpWHpWpEmhAVl2K4uchJQwDALCEgRCzgMZv3bcSA9A1Bx0nvnW5ZlwLy35DwLTBM2QgRRksAGpKl5bu75nIcsmOGYAC5y9BozZF39de9ms2lsmg2ax6ZjWZZp+ab0CRmOT/XeSbUZhSMS0e36AhBKMAQJ/g0UqVvElzTU+klMc8yX6QfQtmlbCtpABTSg7ZJT3XwLULL7ItIeyZwBgy2BXYHdowjliECkPdyPuvrp1zq43TvPAWERzVN2sP4eJUTWKKEZCg1WZVax+zrikXL1zhEMRgQmguE1mqgxyQBETLvLUYSLMWZy+EKmle3XCiZ/uJoyBL/TlnNzl6ukbh6pzhDHiPH/07Pdfm1RHkEiUG8srvrJtVg+Xbfy7I/hMr+B3rR9vYl/XHZLCrvOW1J1u1/Xh8Naz9brpqdHaxE28c94nj1vpsV0nonhXy8Pv27DiTmI7+y5oHdn98S++pPfPRd/n62Sdr+IOjy+ncQzj2dNaww3wzP3ZoXTE1K4/qy9sZ9WLR8hc0KW4/H8ZTJIp2CxLtaQzybZZfIrcsNFJJaL6WriUpE6lz+v6HSZpOAGDpzrx6xJWiY5edrk9EHc3swuVjej6d3zugO7bznt5rBvrCRhJhY/EeTVUo3HaKhdyX4B/rm8KAsOjah0DTKlUYwjwvWe2qWkJRBSgHAYyGZu11cXtu/7A2fgDgau3+5fWq5lX1l9q+X7Ttv1Kg3asjigeEFJhFUspbLb+fmcIEwDhkiIcmNNBVwipn+COAQcaCNyLw8HJQzNqVRx26f+qtV0PG9lxTbmBUeLJncj77euTSifkmnejzjK97Tbdva0+x5BnGGkBF5NOJMjzrgsxgqsBU/sxho0CBLyCsiVCgeO67VMhtMsQYqqmdJQJKiRLbOyNCbb/jsGgKy0YgYzmnOQ2OUB/DC/w29VKaRPiJUDUykNkGwnOnIXOVU+H+fd2s27gu+LEKtzJuvKcwy3TPY/vY2LmpN6VurEILMr7vWWb0IcATA/4WcelqaOF67xTvTqfpVXhhSUXtXfFWisGmK9FmVHO0oscwlvSs20zRmCQirey5z+QsSsIcwvXTg164PItX2fn+BLMuOAo1TOn1Yuv/DamCGmXhsjeXKKrz5l9kLKunFU8GO2i0Q+ShTjT98tMIDKT5rv5N+G5uFbu45g7cSReconBsckVit1tbx8MBuQSlgstZDmu+DHAI4F3zfWRa65cDlNC8HRx180JXJdHUBIBeGjoV4adoW35MlfMhS8Ob2DKcX99bYu2Ie39Y/b8UxKYAr02hf/t7OBy3GBSFePgpJLVy/k41MGJ/GO0L8SfK/1/cu243fsi7ZXa33H9+1hq1UXcC+T3jvze8tOTQ/PQ+9f</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o4FP7ur+jUj07pCwXajjADoisugivoXv2yE9K05N42KU0C9f76TYqtgOjqzjDD5PTkOc95yZOcM5AmTtBnDOUcU6KNhl39n3bowsiLgLHwO03DtRdNA4TewmgvLM/2oO91IkfXRowJNCKMA8K7umPZrmG1DdubW35gt4Km3/A7rWdde0Q5k9DSpWHpWpEmhAVl2K4uchJQwDALCEgRCzgMZv3bcSA9A1Bx0nvnW5ZlwLy35DwLTBM2QgRRksAGpKl5bu75nIcsmOGYAC5y9BozZF39de9ms2lsmg2ax6ZjWZZp+ab0CRmOT/XeSbUZhSMS0e36AhBKMAQJ/g0UqVvElzTU+klMc8yX6QfQtmlbCtpABTSg7ZJT3XwLULL7ItIeyZwBgy2BXYHdowjliECkPdyPuvrp1zq43TvPAWERzVN2sP4eJUTWKKEZCg1WZVax+zrikXL1zhEMRgQmguE1mqgxyQBETLvLUYSLMWZy+EKmle3XCiZ/uJoyBL/TlnNzl6ukbh6pzhDHiPH/07Pdfm1RHkEiUG8srvrJtVg+Xbfy7I/hMr+B3rR9vYl/XHZLCrvOW1J1u1/Xh8Naz9brpqdHaxE28c94nj1vpsV0nonhXy8Pv27DiTmI7+y5oHdn98S++pPfPRd/n62Sdr+IOjy+ncQzj2dNaww3wzP3ZoXTE1K4/qy9sZ9WLR8hc0KW4/H8ZTJIp2CxLtaQzybZZfIrcsNFJJaL6WriUpE6lz+v6HSZpOAGDpzrx6xJWiY5edrk9EHc3swuVjej6d3zugO7bznt5rBvrCRhJhY/EeTVUo3HaKhdyX4B/rm8KAsOjah0DTKlUYwjwvWe2qWkJRBSgHAYyGZu11cXtu/7A2fgDgau3+5fWq5lX1l9q+X7Ttv1Kg3asjigeEFJhFUspbLb+fmcIEwDhkiIcmNNBVwipn+COAQcaCNyLw8HJQzNqVRx26f+qtV0PG9lxTbmBUeLJncj77euTSifkmnejzjK97Tbdva0+x5BnGGkBF5NOJMjzrgsxgqsBU/sxho0CBLyCsiVCgeO67VMhtMsQYqqmdJQJKiRLbOyNCbb/jsGgKy0YgYzmnOQ2OUB/DC/w29VKaRPiJUDUykNkGwnOnIXOVU+H+fd2s27gu+LEKtzJuvKcwy3TPY/vY2LmpN6VurEILMr7vWWb0IcATA/4WcelqaOF67xTvTqfpVXhhSUXtXfFWisGmK9FmVHO0oscwlvSs20zRmCQirey5z+QsSsIcwvXTg164PItX2fn+BLMuOAo1TOn1Yuv/DamCGmXhsjeXKKrz5l9kLKunFU8GO2i0Q+ShTjT98tMIDKT5rv5N+G5uFbu45g7cSReconBsckVit1tbx8MBuQSlgstZDmu+DHAI4F3zfWRa65cDlNC8HRx180JXJdHUBIBeGjoV4adoW35MlfMhS8Ob2DKcX99bYu2Ie39Y/b8UxKYAr02hf/t7OBy3GBSFePgpJLVy/k41MGJ/GO0L8SfK/1/cu243fsi7ZXa33H9+1hq1UXcC+T3jvze8tOTQ/PQ+9f</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb/I6EH3/fkWUPlYhC1AgKkgUutCN3gbo8nJl7AHcJg61HQj8+s8ODQVKe9srISFPxmfOLD72sUBR6PlNIYBLGjOj066b/w4JLuOqQ6wyVLBV8squVS2WjizPwR6uVTEh2DGNjhAJdJiQiMm66TluyXKOLLfac2q+W/ZLXsF1S8+mMQAuFLRyKahdaRQy4Wdh62bCmR8jQYXPUATCl9gPmjfXvvL0Uc7JbByvWGYBeWMi5dS3bVwggCEMcQHHkX1sb/kcE+EHdMyQTDi8xySibr7vnc/nhXmxEPOx7TmOYzs1W/kQQccHZuNPvhlIh43i1bqFWMwoRiFdIk3qBuQkJkYzHMecykn0BbRru46GtiDFFnZL7MC0PwJk7H6ItEWSC2SJCXJzsHsYAQeGwejfd+rmwc86uNrb44iJUcwjsbP+HSVgMwjjKRBL5Jnl7H6OuKdcjWPAfofhMBF0Brd6TKYIgzDuOIxoek2FGj4ijKz9RirUj+ZTBvg3bTm2N7kq6vae6rTpGIT8Pz3b7NcKZYDCBBrhbbo8FL3g5NYdzE9uzxMYtC7Lncc32a9nFDadV6TW7X5f7w7rerbeN43bF6fjFD+07uxltXnzdCb73jC8KfFx7WV55rZmg5N5r9i9GN5dU7o8LOFSMHyaCyiGD1XvOn2EUfu+OenOLovN4A/chU8X5CqcdmGRPLTOb7qp2+/zfxadCnNPelejB3sBL/fj7uHkPHhrv1w2i8Fh5ZmcDaKW3ffuyq3J4NF7PkrHLvkzGL5Ur66W5HEiHg55IPv8qf6R02YO28ZcEoJk+AJY5ks9Hp22cab6heT38qItlFijzNWfao0SEpg0G3qXlhY/UQJEia+auVqftdxardY8PfKaZbd1VD11So575jSdSq3mtsvlXINWLHYotmI2ojqWVtnV/HxPEEe+AEaAW7M4wRMQ5jeIbSSR0WH36nDETEAvVir+6lAnmr+RqvReK9ipVslsdjQdVkzjNpZd1uXNkQS+pdyut6Xc94DplIKWdz3fQg24kKoUb2iWyNAtzFCBQaIuAK412PdK1bItaDQNQRO1o5gkIRSmk2lWGFus/j0LYZFZqcDTmEsUutnx+zK73W95IZQPodpB6JROQDUT9txExTyfr/Mub+adwzcTQvUpU1WVnOIVk+1PH8Oip2Q9KevEsHBz7ustv4TYA2B/w8/eLc06HpnRjej57aouDCUnjby/b6jwVkhmsyTraEVLJVfwtlJM1w4AJ0rvFr34FZi9hrB/dN2sWe9EXtu3+SVywgKJJERq/oxs+YO3RgBCvzU66tykP33IbIVUdZOQyn22VqieJJrxt68W7GPtp8x36m8ec/LRrj1YG3FUnuqBISkb65W+WBZfzAaOFSxVShjzTfB9APuCbxvXRV5zkWqahomEr78YWuLqJsI4TpjstM3MsCm7GU+5mIL/4fQJJpP297s6FV/e1Y8314ESwAiZa1/6384WzcYFg6mfBBmXupmqp6cKzsYbMv9OcL/S1yrfKf12Jo1P5s+WjZrunofGXw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc6o6FH7fv4Khjx0EFEWY6gwVnWO1uxcvdfflTBqipkJCSVDqr98JFqrW9rRnpjM2i5VvfeuSL7lgIAqrrscYSjimROn7LfVf26lZtl2vagasNzWrZtW0JngS/82rVs2eP9lNx1SVPmMp6hPGAeEttWqYlmY0NLM5NhzXrLtWvWJb9qOqTFHCBLRwqRiqkkUhYW4etqWmCXEpYJi5BESIuRy6I+966ApPFxSc1PbFjmUeMGkvOY9dXYeVAEEUhrACaaRf6Ac+FwFzR3hBAE8T9BYzYC31be9ms6lsahWaLPSqYRi64ejCJ2B4caa2fxWbUdAnc7pbdwChBEMQ4i2QpK4RX9JA8cIFTTBfRp9Am7ppSGgNZVCDpkXOVP09QM7um0gHJBMGNLYEZgF2j+YoQQQiZXLfb6ln3+vgbu84AYTNaRKxo/XPKCGyRiGNUaCxIrOC3fcRT5SrfYGg2ycwTBleo99yTGIAEVNuEzTH2RAzMXwBU/L2KxkTf7iYMgR/0pYLfZ+roK6fqI6PF4jx/9Oz/X7tUKYgTFG7OSEdD0f65QwvzIduvLmkg8UwMFjQb+UU9p13pMp2v62Ph7WcrbdNYWN2Nz6/7tDaatRfPD4ORoPFZjJ/nlVD8iridn0rAJ53O4wu/cmf6aTbXI5i2vCbw+yJjKzl4GEQTNjWpqMX59fU9tPuXXx/3rzsDsSn+GpLrobPU4vS2Bw6s+4q2xJk3I1ZEvU6aX0GQXfjx9jzZquhOf5n1ku354M/q/rV4PzX9iEa30znYJBdGcR6fF4taOs9p/0cDo2FJIzSp2cEebGU49H3lZ7oF+Bfy4u04ECb565uLDWKcUS42pa7pLS4qRAgHLiimbt1r2M6jnPZaXhd2/drva5hGWbP8Iy641QbdaPQoB2LI4odSuZYxpIqu5ufrwnCyGWIBCjR1jSFS8TULxB9wIHSJ/ficFDC0JgKFedxNn/Oqo2mAemabBvmchkCUBMa/JvyG3KTeHOOkgPlNqsHyn2PII4xkvIu55uJAWdclOIFrFMempU1qBCUigsgkRrsVq1mXWc4ikMkieoRDdIQVeJlnBdGZ7vfqgYgy62YwZgmHIRmfvw+ze74W1EI4RNg6cBkSpdINBOduIlqRT4f8q6fvLEKeC8NsDxloqo8wXDH5PDT+7DIKSknpUwMMrPgXm75IcQJAP0Lfvpxacp4wRrvRS9uV3FhCDlpF/19AZWXSrpep3lHbSmViYDXhWKa+gjBVOjd65iuENFLCP1b103J+ihyaT/kl/IlGXHAUSTmT8mX33hrjBCTb42+ODfZdx8yByFF3TjK+ClbJxRPEsn4y1cLdKH0E+Zb8bOhSfDerhNYe3FEnuKBwTFZyJW8WF4/mQ1IBSwWSkiTffBTAKeCHxrLIpdcuJimp5Sjz78oUuJaKoCQpoT3fTU37MtuzpO/xsh9d/oAk0v7212dsU/v6tn1cCQEMAJq6Yv/21nD+bhApMonQc6lpWbi6SmCk8WezL8R/Kj0XrdRdWyz02iWSm87junX62UBDzJpfzB/tOzV9Pg8tP8C</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0515431403082943555</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0515431403082943555</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0515381403082938872</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0515411403082941217</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0515431403082943555</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2B4BC496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AE62A61C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BC6AE8DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d9f91a0-cf40-4715-aeaa-9e1b3a3a0f69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_UserGet_CS_FUNC_ADULT_SAU_Get_CHILD_P2" searchProperties="true" id="0c602d59-a23e-4f22-b8d6-e354e0979ead"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="69c9d15b-cc79-4f27-b341-60afd58bc35c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fd0b367b-24cc-4936-ac22-1bd0711bf0aa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultSAU" id="3790761d-7698-4a28-a8e7-be41c890a875"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultSAU" id="bcce9bb0-01d0-4103-b229-ab9febb46c1f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="7be7903b-25f4-4828-b74c-44925051fab8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="f6cd3248-dfa9-4c5a-b896-3538f820f71d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="5e79a886-e9be-43d3-b770-ef35038f0465"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="eb394c8b-c6fc-4f11-bed0-b1c28f2e447c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B3B343494BE0401F0A05992630</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999BB8B7F3A19E0401F0A0599264C:49FC63DD"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0515511403082951905</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B09B6F610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09B6F610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09B6F610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B3B343494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B1CE7A8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B09B81610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B3B343494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B1CE7A8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B09B81610AE0401F0A05992642</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6Pg3KAkKkhcipoOdDqFXujLkXF2wG3iQOwE2q8/TmhSoLSnPRIS8s722mtfvOxTjqPQdDucQyJozBSv31L/CZpB4PjE0U5mjqPZdVvXZmYDNHtWn9V10zfqpqUqHucpeIwLzERLNXXD1vSGZjQnuuMadddu1uonzQdVuYWES2jpUtNVZROFjLtF2JaaJsyNMafcZTgC7grijjujoSs9XVxyUtunW5ZFwKS9EGLpIkRqPhAIQ1IjcYRO0Z7Pqc/dMZ0zLNIEXmP6vKW+7l2v17W1VYuTOTJ1XUe6g6SPz+n8p9r+UW4G32NBvF33MIsZJTikLzgnNQKxiH2lE87jhIpF9AG0gQw9h9ZgQzRi2Oynit4CFOy+iLRHMuFY4wtslGDXEEACjIByc+211J9f6+B27yTBjAdxEvGD9fcoAcsgjJfga7zMrGT3dcQj5WqfAnE9RsKU0wwu8zFZYgJcuUogoJsh5XL4fK4U7Vc2XP5oOWVAvtOWU7TLVVJHR6rTp3Pg4v/0bLdfW5RbHKbQtlb3w86Zr59HUzS7Q8O79WQwFWw8n5y1Cgq7zltSVbtf14fDWs3W6yaKryZR1m0QE/FV/6LZ6c/122lndNd4wbc2fXqw0mEaLF5uJi+X1j3U6Qm9OoN+thGr36P6eGIw3rjyxd3jrDf8Mcrsm+6sb7+glfXnPJhu7GYzOkH9xlU67SZe//6X/li/6zz6ftKAwbgbbR7QxWz0vP4lZuvnwVIMmlPv4vxSn1q/f/TIeSZWva6XZUPhPXb//p233nLazWHfWErCOJ09AhHlMh8Pr68MZL+w+Fxecgv1taBwdZe5RnEBTKjtfFcuLW4qBYj6rmzmdj3oGY7jdK2uZVu2Y3fPdFs3BnpHrzuO2bD0UoO2LA4o9mIW0DxWrrLb+fmcIIlcDsyHRMvilCyAq58g9rHAiseu5eGIGYdJLFXcSHgAJk1C9hT5a2e1smK+Ias5qMplLP6wP0knEJDsSbdh7kn3NRC6pJDrez7gXE44F7IWK5ylIjRqGa4xSOUNkOQi7Jp2s444jZYh5ExRFPtpCLXlYllUBvHtv6lhwgsr5WQZJwKHRnH+Pkzv8FtZCenj09yB5yl1QXYTjlxFVpnPx3nXd/Mu4TupT/NjJssqEkq2TPY/vU1LPibVqFSJEW6U3Kst34Q4AoA+4YcOS1PF8zO6E728XuWNIfWkXfZ3hWurWppladHRk1wrEwmPpGQaaAwklYL3PImfgKEKAn3pvqlYH0Su7Pv8UrFgY4EFRHL+lGL5hcfGGHj+2PDkwdl89SWzF1LWTcBGHLP1QvkmyRl/+mwhLsn9pPlK/q3jxH9r1xGsnTgyT/nCEJTN81V+szx/MBsklrBUSmGc7IIfAzgWfN9YFbniIuQ0zVIBH39Rco1rqZiQOGXC66uFYVd3C57ieQnum9M7mELbXy/rDf/wsr4fDcdSASOsVr70v501WowLkXon/QsuLXUj354yOJvv6PwrwSNSrzvdxqBh6J19qbfNqoB7mbTfmd9bdmp6eB7a/wI=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6Pg3KAkKkhcipoOdDqFXujLkXF2wG3iQOwE2q8/TmhSoLSnPRIS8s722mtfvOxTjqPQdDucQyJozBSv31L/CZpB4PjE0U5mjqPZdVvXZmYDNHtWn9V10zfqpqUqHucpeIwLzERLNXXD1vSGZjQnuuMadddu1uonzQdVuYWES2jpUtNVZROFjLtF2JaaJsyNMafcZTgC7grijjujoSs9XVxyUtunW5ZFwKS9EGLpIkRqPhAIQ1IjcYRO0Z7Pqc/dMZ0zLNIEXmP6vKW+7l2v17W1VYuTOTJ1XUe6g6SPz+n8p9r+UW4G32NBvF33MIsZJTikLzgnNQKxiH2lE87jhIpF9AG0gQw9h9ZgQzRi2Oynit4CFOy+iLRHMuFY4wtslGDXEEACjIByc+211J9f6+B27yTBjAdxEvGD9fcoAcsgjJfga7zMrGT3dcQj5WqfAnE9RsKU0wwu8zFZYgJcuUogoJsh5XL4fK4U7Vc2XP5oOWVAvtOWU7TLVVJHR6rTp3Pg4v/0bLdfW5RbHKbQtlb3w86Zr59HUzS7Q8O79WQwFWw8n5y1Cgq7zltSVbtf14fDWs3W6yaKryZR1m0QE/FV/6LZ6c/122lndNd4wbc2fXqw0mEaLF5uJi+X1j3U6Qm9OoN+thGr36P6eGIw3rjyxd3jrDf8Mcrsm+6sb7+glfXnPJhu7GYzOkH9xlU67SZe//6X/li/6zz6ftKAwbgbbR7QxWz0vP4lZuvnwVIMmlPv4vxSn1q/f/TIeSZWva6XZUPhPXb//p233nLazWHfWErCOJ09AhHlMh8Pr68MZL+w+Fxecgv1taBwdZe5RnEBTKjtfFcuLW4qBYj6rmzmdj3oGY7jdK2uZVu2Y3fPdFs3BnpHrzuO2bD0UoO2LA4o9mIW0DxWrrLb+fmcIIlcDsyHRMvilCyAq58g9rHAiseu5eGIGYdJLFXcSHgAJk1C9hT5a2e1smK+Ias5qMplLP6wP0knEJDsSbdh7kn3NRC6pJDrez7gXE44F7IWK5ylIjRqGa4xSOUNkOQi7Jp2s444jZYh5ExRFPtpCLXlYllUBvHtv6lhwgsr5WQZJwKHRnH+Pkzv8FtZCenj09yB5yl1QXYTjlxFVpnPx3nXd/Mu4TupT/NjJssqEkq2TPY/vU1LPibVqFSJEW6U3Kst34Q4AoA+4YcOS1PF8zO6E728XuWNIfWkXfZ3hWurWppladHRk1wrEwmPpGQaaAwklYL3PImfgKEKAn3pvqlYH0Su7Pv8UrFgY4EFRHL+lGL5hcfGGHj+2PDkwdl89SWzF1LWTcBGHLP1QvkmyRl/+mwhLsn9pPlK/q3jxH9r1xGsnTgyT/nCEJTN81V+szx/MBsklrBUSmGc7IIfAzgWfN9YFbniIuQ0zVIBH39Rco1rqZiQOGXC66uFYVd3C57ieQnum9M7mELbXy/rDf/wsr4fDcdSASOsVr70v501WowLkXon/QsuLXUj354yOJvv6PwrwSNSrzvdxqBh6J19qbfNqoB7mbTfmd9bdmp6eB7a/wI=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj0chlxIgUUEKt2lm2iktpdPOy5FxdsBtYtPY4TJfP3ZoUqC0pz0SEvLO9tprX7zsU47SxPEDziEThFEt7Lf1f08wsr2G0zRir+4Zdcc7MdC0iY3m9CRuufHUdZGlayHnOYSUC0RFW3csu25YDcNu3Vieb7u+a9Watvdb124h4xJautTkrnWaUO4XYdt6nlGfIU64T1EK3BfYHwcX57709FHJSe+cblkWAbPOXIiFb5q4FgGGJME1zFLz1NzzOY24PyYzikSewXPMiLf1572r1aq2OqmxbGY6lmWZlmdKn4iT2Ve986XcDFFIY7Zd9xBllGCUkD9IkboAMWeRFiQzlhExT9+Atk3bUtAGrLGB7Tr9qpsvAQp2H0TaI5lxZPA5skuwa4ghA4pBm1yHbf3rxzq43XuTIcpjlqX8YP05SkCXkLAFRAYvMyvZfRzxSLk6p4D9kOIk52QJP9WYLBAGro0yiMn6nHA5fBHXivZray5/pJwywJ9py6m5y1VSN49Up09mwMX/6dluv7YotyjJofN4dbYEB3Wf7qfiac2EK37hUfeq53xj7YLCrvOWVNXu5/XhsFaz9bwps+9NYT82kqv44exxBT+vWo3Ei9xh87Z1sk6Ds0XrO+05/PYExWhxHgaXg+tNfN41N+OziyBA4V14v5refL9yJ5MvZ5S5j8T2JtElrne/u2TDHiAI71irm/4zGyyheTmgv390V3wzmt67PwZ1dHUz+vXnLkn7Z83uMLb7o7thfZ6M5v0v5mSYTr6dO16UXjx43ckAP7ZfctrNYd9YSsI4nz4AFuVSjUfY14ayX0i8Ly/KQiIjLlz9hdIoLoAKvaN2KWnxcylAJPJlM7frYc/2PK9r9wbNoBUMnYFVt+yhFVhNz7P7jWapQVsWBxR7jMZExVIqu52f9wni1OdAI8iMJcvxHLj+DmIfCaSF9FoeDkY53DCp4jZ7epg2ojnl8/XcZtaaPhBgMP3T1LWfTFzSyyyIBWR72m07e9p9DZgsCCiBVxPO5YhzIYvxhJa5SOzaEtUo5PIKyJQK+0695ZqcpIsEFFUzZVGeQG0xXxSlMfn23zEQ5oWVcLxgmUCJXRzAN/M7/FaWQvpERDlwlVIXZDvhyF1UL/N5O293N+8SPsgjos6ZrKvICN4y2f/0Mi5qTqpZqRLD3C65V1s+CXEEwHyHn3lYmipetCQ70cv7VV4ZUlA6ZX+fUO2pli+XedHRphLLTMKbUjNtcww4l4q3uWGPQM0KwvzQhVOxPohc2ff55WJOxwIJSOX8acXyA6+NMXD12gjlyVl/9CmzF1LWTcBaHLP1EvkoUYzffbdgHys/aR7JvxXLopd2HcHaiSPzlE8MQehMrdTVsnljNjCTsERqIct2wY8BHAu+b6yKXHERcpqmuYC3v2hK5No6wpjlVIR9vTDsCm/BU2wW4L84vYIpxP35tl7zN2/ru4vzsZTAFOmVL/lvZ4MU44JBV4+CgktbX8vHpwxOZztC/0zwiNZbXrcxbNhWUGm963lOo+5UBdzLpPPK/NqyU9PD89D5Cw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx1GInXJJooLEpZ0yLQyXDtPh5cg4BlwSJ9gOl379sUNDgdKe9kiVqHe211774mVfCRSFjl8XgnBJY2a0W1XzHwhdAOAltipw4lpFb4otDwLXAuUKBrgCymgyMY22EClpMyERk1XTAbCoHCzoPgDPhyW/VCw4bmVsGiPChYJWLgVgGpsoZMLPwlbNlDM/RoIKn6GICF9if1jv3PvK00c5J7N2tWOZBeS1uZSJb9u4EBBMwhAXcBzZV/aRz1Ug/CGdMSRTTl5iBqJqvuxdr9eF9WUh5jPbAQDYwLOVTyDo7MKsfcs3k6DNpvFu3UQsZhSjkD4jTapD5DwOjHo4izmV8+gdaGhDoKEtssEWhkV2YdqvATJ2n0Q6IskFssQcwRxsQKaEE4aJ8XvQrpoXn+vgbu8DR0xMYx6Jk/XXKBG2ImGckMASeWY5u88jnilX7Ypgv81wmAq6Il09JgnCRBg9TqZ0c0+FGr5AGFn7jY1QfzSfMoK/0pYr+5Crom6fqU6LzoiQ/6dnh/3aoYxQmJLachv1PfY4CX44D7fN8vfetu/+HcNwVbquZhQOnXek9u1+WZ8O6362Xjbdg+vb1jxJWou+/OuOR/Nnu+sunq6bzfG8jzt3N9tF5a6XNukT5wJA7C4vf6DbYnnJwsaq1/D6P0f94WIhw+afu2+41xEiwpUQTVdhu4PCEceNAZXfwYjb43X3no5+jn9vl93ZHVb/t6//LJcd0n3sDS7nPXzr8IHsYkHArD92vg26s4FTHsc9p8HofDGBrlt9zekwh2NjLgnDdPJEsMyXejzaLeNG9QvJj+VFW2hgTTNXP9EaJSRh0qzpXVpa/FQJEA181czd+qYJPc9rAK/hwjIE9WtQBPAG1EHJ85xy0ck1aMfihGIzZlOqY2mV3c3PxwRx5AvCAsKtVZziORHmB4gtJJHRZgN1OGImyEOsVDwSsLR8pmsAEylLJWddEV66xEq5u7H8xX7x+lQSfqTc0DlS7gHBNKFEy7ueb6EGXEhViiVapTKEhRUqMJKqC4BrDfadoluyBY2SkGiidhQHaUgKyTzJCmOL3a9jISwyKxU4iblEIcyO37vZnX7LC6F8AqodhE6pQVQzyZmbqJjn8ybv0tkbK4evpwHVp0xVVXKKd0yOP70Oi56S/aTsE8MC5tz3W74IcQbA/oCffVqafbxgRQ+i57erujCUnNTy/i5RYVlIV6s062hFSyVX8LZSTGgPCU6V3m0f4gVh9h7C/tR1s2d9EnlvP+aXyjkbSiRJpObPyJafeGsMidBvjbY6N5vPPmSOQqq6SbKR52zNUD1JNOMPXy3Yx9pPmXvqZx3z4LVdZ7AO4qg81QNDUjbTK32xbN+ZDRwrWKqUMOaH4OcAzgU/Nu6LvOci1TRNUkne/2JoiauaCOM4ZbLdMjPDoexmPOU2If6r0xuYTNpf7uqNePeufuzcD5UARsjc+9L/drZoNi6YmPpJkHGpmhv19FTB2exA5l8Inlf68s1HSn+cSe2N+a3loKan56H2Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0515511403082951905</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0515511403082951905</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0515471403082947528</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0515491403082949777</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0515511403082951905</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B3B344494BE0401F0A05992630</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B1CE7B8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B09B82610AE0401F0A05992642</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e79a886-e9be-43d3-b770-ef35038f0465</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_UserGet_CS_FUNC_YOUTH_SAU_Get_CHILD_P2" searchProperties="true" id="ed662c97-01aa-48bd-8325-ee16d567eb6e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f659bb45-abf9-49f6-9ba0-94ec93cf4d47"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dd7a20d7-51ff-43e3-9de4-0cfacaddd2f1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthSAU" id="085a1778-7b28-476f-b901-e1e5411b519a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create -YouthSAU" id="731b991c-bb6e-4f89-9b08-03a6f0bf21b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="baee773d-bbf5-4562-a3e0-2584b6499611"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="b0899792-77b4-418c-8cc0-dd8bb322d4a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="e51efb9d-d1a4-4d82-90e4-c40166555eee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="62050d7d-3fe1-4631-a236-ce42ddedc3fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E7F7C3B668CE0401F0A05991C52</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E5E129FAE31E0401F0A079938FD:B4946D58"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0504421403082282153</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E83499E7A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E83499E7A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E83499E7A59E0401F0A07993925</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E7F7C3B668CE0401F0A05991C52</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E6C42376DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E5A8C527266E0401F0A0799390B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E7F7C3B668CE0401F0A05991C52</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E6C42376DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E5A8C527266E0401F0A0799390B</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VwEgIkUUGiUFpmeqHQ28zLkXEM8TSxU9vh0q8/dmhSoLSncyQk5J3ttde+eNnHAqaJG3aFwFwSRo1hv23+A31n1vSimeUHQcvyGq26FeDIs+zIQXA2s70m9E1jKESOh1RISGXbdG1HOTQtx7+1g9D2wnqr5jcav03jHnOhoJVLzTaNVZpQERZh22bOacigICKkMMUilCicdC8vQuUZwpKT2TnesCwC8k4sZRYCgGoRRjhJUA2xFByDHZ/jSIQTMqdQ5hy/xoxE23zdu1wua8t6jfE5cG3bBnYAlE8kyPy72flWbsbRkM7YZt2DlFGCYEJeoCZ1iWXMIqObzBknMk4/gHaAY2toC6+QhRyPfjfBW4CC3ReRdkhyAS0RQ6cEG+MZ5pgibNyNh23z+9c6uNl7yyEVM8ZTsbf+O0qYLnDCMhxZosysZPd1xAPl6hxjFA4pSnJBFvhKj0kGERbGiOMZWV0QoYYvEkbRfmMl1I+UU4bR37TlGGxzVdTBger0yRwL+X96tt2vDco9THLc8dYBXXAHYSc5+yXzGIHTFcMkBoPTdkFh23lDqmr363p/WKvZet20lnd30/ktf3KPgLx6QldL0j2ajH37Jjtxx1ePvfO8fj0Y9xs/fvAHJ7YfHut1NgU+b56NspfkJh7Wx6l8yNYifvj2a3Qx/T2QcxqMT6KWD7Kfq9Xz5eiccnT2A7js/nndbAXTOE2eziO/64BevLyp/+yK0fgajO7z6cPNizfs+xPnZvrtBU/OnKP8z1Ez984Xl73RZNh+y2k7h11jKQmTfPoHI1ku9XgM+8ZA9QvKz+VFW0hkzQrXMNMaJSSm0uzoXVpawlwJEIlC1czNetBzAve0NWj16ifNpt87tT3bGdhduxEETq/hlhq0YbFHscfojOhYWmU38/M5QZSGAtMIc2vBchRjYX6C2IcSGkM6VoeDUYFvmVLxqDWDduxH0VPqOHzpNnNWn668vGEaV0xe02venUnMd6TbcXeke4wRyQjW+q4HXKgJF1LV4hkucpk4tQWsUZyrG4BrEQ5dz28AQdIswZopSFmUJ7iWxVlRGSA2/64FkSisRKCMcQkTpzh/H6a3/62shPKJiHYQOqUTrLqJD1xFbpnPx3k3tvMu4bt5RPQxU2WVnKANk91Pb9Oix6QalSoxJJySe7XlLyEOAIBP+IH90lTxogXZil5er+rGUHrSKfv7DGvPtXyxyIuOtrRWcgUPlGQ6YIJRrgRvfcueMAUVBPjSfVOx3otc2Xf55TKmEwklTtX8GcXyC4+NCRb6sTFUB2f11ZfMTkhVN4lX8pCtl6g3iWb86bMFhUj7KfNI/S0Zj97adQBrK47KU70wJKFzvdI3y/qD2UBMwRIlhYxvgx8COBR811gVueIi1TRNc4k//mJojWubECGWUznsm4VhW3cLnnKd4fDN6R1Moe2vl/VKfHhZP15eTJQCptCsfMl/O1ukGBeETf0mKLi0zZV6e6rgdL6l868E30u9X/eC4LTVbQSV1LeCoB64jaqAO5l03pnfW7Zqun8eOv8C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VwEgIkUUGiUFpmeqHQ28zLkXEM8TSxU9vh0q8/dmhSoLSncyQk5J3ttde+eNnHAqaJG3aFwFwSRo1hv23+A31n1vSimeUHQcvyGq26FeDIs+zIQXA2s70m9E1jKESOh1RISGXbdG1HOTQtx7+1g9D2wnqr5jcav03jHnOhoJVLzTaNVZpQERZh22bOacigICKkMMUilCicdC8vQuUZwpKT2TnesCwC8k4sZRYCgGoRRjhJUA2xFByDHZ/jSIQTMqdQ5hy/xoxE23zdu1wua8t6jfE5cG3bBnYAlE8kyPy72flWbsbRkM7YZt2DlFGCYEJeoCZ1iWXMIqObzBknMk4/gHaAY2toC6+QhRyPfjfBW4CC3ReRdkhyAS0RQ6cEG+MZ5pgibNyNh23z+9c6uNl7yyEVM8ZTsbf+O0qYLnDCMhxZosysZPd1xAPl6hxjFA4pSnJBFvhKj0kGERbGiOMZWV0QoYYvEkbRfmMl1I+UU4bR37TlGGxzVdTBger0yRwL+X96tt2vDco9THLc8dYBXXAHYSc5+yXzGIHTFcMkBoPTdkFh23lDqmr363p/WKvZet20lnd30/ktf3KPgLx6QldL0j2ajH37Jjtxx1ePvfO8fj0Y9xs/fvAHJ7YfHut1NgU+b56NspfkJh7Wx6l8yNYifvj2a3Qx/T2QcxqMT6KWD7Kfq9Xz5eiccnT2A7js/nndbAXTOE2eziO/64BevLyp/+yK0fgajO7z6cPNizfs+xPnZvrtBU/OnKP8z1Ez984Xl73RZNh+y2k7h11jKQmTfPoHI1ku9XgM+8ZA9QvKz+VFW0hkzQrXMNMaJSSm0uzoXVpawlwJEIlC1czNetBzAve0NWj16ifNpt87tT3bGdhduxEETq/hlhq0YbFHscfojOhYWmU38/M5QZSGAtMIc2vBchRjYX6C2IcSGkM6VoeDUYFvmVLxqDWDduxH0VPqOHzpNnNWn668vGEaV0xe02venUnMd6TbcXeke4wRyQjW+q4HXKgJF1LV4hkucpk4tQWsUZyrG4BrEQ5dz28AQdIswZopSFmUJ7iWxVlRGSA2/64FkSisRKCMcQkTpzh/H6a3/62shPKJiHYQOqUTrLqJD1xFbpnPx3k3tvMu4bt5RPQxU2WVnKANk91Pb9Oix6QalSoxJJySe7XlLyEOAIBP+IH90lTxogXZil5er+rGUHrSKfv7DGvPtXyxyIuOtrRWcgUPlGQ6YIJRrgRvfcueMAUVBPjSfVOx3otc2Xf55TKmEwklTtX8GcXyC4+NCRb6sTFUB2f11ZfMTkhVN4lX8pCtl6g3iWb86bMFhUj7KfNI/S0Zj97adQBrK47KU70wJKFzvdI3y/qD2UBMwRIlhYxvgx8COBR811gVueIi1TRNc4k//mJojWubECGWUznsm4VhW3cLnnKd4fDN6R1Moe2vl/VKfHhZP15eTJQCptCsfMl/O1ukGBeETf0mKLi0zZV6e6rgdL6l868E30u9X/eC4LTVbQSV1LeCoB64jaqAO5l03pnfW7Zqun8eOv8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHkchF8IlUUFioZdMyxQBw1bzsjLOCXEb7BA7gc6vXzs0KVDa7axUifrk+DvfufizLzhaJ44/4BwyQRjVglFP/wfsZbTseNjwlh1suE0bjG7bc+V/TQ9CWHrNLtK1gPMcAsoFoqKnO5btGlbbsLtzy/Mt13ethudYv3RtARmX0NKlYenabp1Q7pdhe3qeUZ8hTrhP0Rq4L7A/G4zvfOnpo4qT3r/YsywDZv1YiNQ3TdwIAUOS4AZma/PCPPK5CLk/IyuKRJ7BS8yQ9/SXvdvttrFtNli2Mh3LskzLM6VPyMnqq97/Um2GMKAR26+HiDJKMErIb6RIjUHELNQGyYplRMTrd6Bt07YUtAE7bGDbpV918zVAye6TSEckM44MHiO7AptCBBlQDNrPadDTv36ug/u98wxRHrFszU/Wf0YJaAEJSyE0eJVZxe7ziGfK1b8A7AcUJzknBfxQY5IiDFybZBCR3R3hcvhCrpXt13Zc/pFqygD/SVsuzEOukrp5pjojsgIu/k/PDvu1R1mgJIf+7SaYbpbjXRZfNgurO3pceVMIu91vjz97JYVD5z2put0v69NhrWfrZRO7ve7cP2D39m/Bo+hmE3+byOqhrdjOCm9Z5CwUxSS18u+OWwTLy+unxUZ0H9nviX2bjttBOoWbLIvJ98WvwP3yF/lledNJPE9iBINR1rpftslMXF9G06d0a10NO068u1vMA/YzDwSC+7lJH4Y3q6dr1JpPxrvtbnS3yJ+33bvt6stoEz/Mbx5RNC460+Ibe1g89V5zOszh2FhJwixfPgIW1VKNRzDSrmS/kPhYXpSFhEZUuvqp0igugAq9r3YpafFzKUAk9GUz9+uroe05l+2h6zQ77dGwfWm5ln1lDayW59nDplNp0J7FCcUhoxFRsZTK7ufnY4J47XOgIWRGwXIcA9c/QBwhgbSATuXhYJTDnEkVf9wUraazCrvRNrLbmHW2PInJksW69oOJe3qfDSIB2ZF0286RdE8Bk5SA0nc14FxOOBeyFhtU5CKxGwVqUMjlDZApEfYdt9syOVmnCSim5pqFeQKNNE7Lyph8/+sYCPPSSjhOWSZQYpfn7930Tr9VlZA+IVEOXKX0F8huwpmrqFnl837ercO8K/hBHhJ1zGRZRUbwnsnxp9dpUWNSj0qdGOZ2xb3e8ocQZwDMD/iZp6Wp44UFOYheXa/yxpB60q/6u0GNTSMvirzsaEdpZSbhTSmZtjkDnEvBe56zJ6BmDWF+6r6pWZ9Eru3H/HIR05lAAtZy/rRy+YnHxgy4emwE8uDsPvuSOQop6yZgJ87Zhol8kyjGHz5bsI+VnzRP5M+WZeFru85gHcSRecoXhiB0pVbqZnl+ZzYwk7BESiHLDsHPAZwLfmysi1xzEXKalrmA979oSuN6OsKY5VQEI700HOpuyVM8p+C/Or2BKbX95bLe8Xcv64fx3Uwq4BrptS/5b2eDlOOCQVdvgpJLT9/Jt6cMTlcHOv9C8K3Ud5uu5112Bi2vlvqO5zU9p1UX8CiT/hvzW8tBTU/PQ/9f</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH53SCzfbEWYQxV0vqIC49eVMSBcQaZPSpFz2rz9JsRUQPXpmmGGyuvKtb13yJaccRaHjtTiHRBBGNf+8of8DqOaCY5cNsJyqUSnXHWNkuWWjZrsYW/UA43pd13zOU/ApF4iKhu5YdsWwaoZ9MrBcz6p4lUrJceovujaEhEto6VKydG0VhZR7WdiGnibUY4gT7lEUAfcE9vqt2xtPenoo56Q3Tzcss4BJcypE7JkmLgWAIQxxCbPIPDV3fE4D7vXJhCKRJvAWM+AN/W3vcrksLcsllkxMx7Is03JN6RNwMjnSm7/yzRD4dMw26zaijBKMQvIXKVK3IKYs0FrhhCVETKNPoG3TthS0AStsYLtCj3TzPUDG7ptIOyQTjgw+RXYO1oMxJEAxaI89v6Effa+Dm72DBFE+ZknE99Y/owR0ASGLITB4nlnO7vuIB8rVPAXs+RSHKScL6KoxiREGrt0nMCarG8Ll8AVcy9qvrbj8kXzKAP+kLafmNldJ3TxQnXMyAS7+T8+2+7VBGaIwheakbV+Fw87EQcvbs3VddP3L+9dZ3zQt1sgobDtvSBXtflvvD2sxW2+b8OxshkfTuyjx/2BBHl7Zo/1Y7obza+vm1e/Oxsd33cfKyfg3Xz8Npp37l054TMzl7dM1v5v0zd7AIqR+HXeP3XLwK5pArzO7ptf3SQ9q/KbS50O/nXSerp5Hl79xuC7z0eBu2LPpM3uM6hM3/rtstxcPV+Uhdcng5fLp5KEdp7EY9sJf7Zp/OWaD2XN4fHU5x0uz89B4z2k7h11jLgn9dPQKWORLNR7+udaR/ULia3lRFhIY48zVi5VGcQFU6E21S0mLl0oBIoEnm7lZd9q261xUWyftqlN3arULq2LZHatl1V237FpnuQZtWOxRbDM6JiqWUtnN/HxNEEceBxpAYixYiqfA9S8Qz5FAmk978nAwymHApIrbU1Tlr6OFwMyV2sXna8zQYj2Vx6PLxB29S1pjAcmOdNvOjnT3AJOYgNJ3NeBcTjgXshZztEhFaJcWqEQhlTdAokTYcyonVZOTKA5BMTUjFqQhlOJpnFXG5Jt/x0CYZ1bCccwSgUI7O3+fprf/La+E9AmIcuAqpTOQ3YQDV1E5z+dD3tWDV1YO30oDoo6ZLKtICN4w2f30Pi1qTIpRKRLD3M65F1t+CHEAwPyCn7lfmiJesCBb0fPrVd4YUk+aeX/nqDQvpYtFmnW0rrQykfCmlEzb7ANOpeCtB2wG1CwgzG/dNwXrvciFfZdfKqa0L5CASM6fli2/8djoA1ePDV8enNV3XzI7IWXdBKzEIVs7lG8SxfjLZwv2sPKT5nv5t2RJ8N6uA1hbcWSe8oUhCJ2olbpZ1p/MBmYSlkgpZMk2+CGAQ8F3jUWRCy5CTtMoFfD5F01pXENHGLOUCv9czwzbupvxFOsYvHenDzCZtr9d1iv+6WX95/amLxUwQnrhS/7b2SDZuGDQ1Zsg49LQV/LtKYPTyZbOvxH8KPUn5YrrXtRbVXdX6p1qUcCdTJofzB8tWzXdPw/NfwE=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0504421403082282153</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0504421403082282153</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0504361403082276930</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0504391403082279834</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0504421403082282153</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E7F7C3C668CE0401F0A05991C52</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E6C42386DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E5A8C537266E0401F0A0799390B</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e51efb9d-d1a4-4d82-90e4-c40166555eee</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_UserGet_CS_FUNC_YOUTH_BAU_Get_CHILD_P2" searchProperties="true" id="8feaff25-820c-4af3-baa6-845ba90671cd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4b87a66c-3463-49a6-9bff-85f0a66d0393"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ac41406f-5890-4cff-8149-850b79b0e05a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthBAU" id="cbb3968e-0496-41da-9acf-1093c0f5d984"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YouthBAU" id="d5894bce-c32e-44d9-8083-cbb81d97bf1e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="895d096b-34c8-4446-84a2-8abafa48f24e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="6a2308f0-4332-4ccb-bd44-31fc3b207660"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="9acd1c9a-5834-403b-b34f-a5ecbadf81b0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="36408a15-511c-4ff3-b1ef-57b98fe1218c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E6CAF7CF362E0401F0A05991C36</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E6F19824232E0401F0A05991C4C:D61E8A91"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0504501403082290615</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E5451B1158DE0401F0A05991C24</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E5451B1158DE0401F0A05991C24</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E5451B1158DE0401F0A05991C24</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E6CAF7CF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E5451BD158DE0401F0A05991C24</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E7765EE99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E6CAF7CF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E5451BD158DE0401F0A05991C24</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E7765EE99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1XIBcIlKkgUikrvBdrd3ZcjxxnA3YkTbAdCv/7YoUmB0p72SEjIk/GaNRcv+4SjKHS8LufABImpNuy39X9addyywK0bDkaBUas6U8NvNANjGriNWuD74GBb14acpzCkXCAq2rpj2TXDqht2c2K1PKvm1RoV22k969ojMC6hpUvF0rUsCin38rBtPWXUixEn3KMoAu4J7I2711ee9PRQwUnvnGxY5gFZZy5E4pkmrgSAIQxxBceReWLu+JwE3BuTGUUiZfAWM+Bt/W3varWqrKqVmM1Mx7Is02qZ0ifgZHakd34VmyEY0mm8WfcQjSnBKCSvSJG6BjGPA60bzmJGxDz6BNo2bUtBG5BhA9s1eqSb7wFydt9E2iHJODL4HNkF2AimwIBi0B5Gw7Z+9L0ObvZOGKJ8GrOI761/RgnoEsI4gcDgRWYFu+8jHihX5wSwN6Q4TDlZwo0akwRh4NodgynJrgiXwxdwLW+/lnH5I8WUAf5JW07Mba6SunmgOn0yAy7+T8+2+7VBeURhCp3JKz4+ty7O/z6cP8+O6XPVbhwP7uqn148P7ZzCtvOGVNnut/X+sJaz9bbprD6KxTq87fYyP4AQpy489i/Z8w3G1fP6i7iN/1xk9HXxtHq8TvzL+mC6MHsXj1ngN9Fl/dgKA3TV832+GnTXvzLXjs4u/N8tJwOfjiw2HNy7mTs6S/hyBPcDczkKe/cYP1jdzGT3VnjGXpuXTrq4MV/Wou841dPsebi+eFhMfv+66j7Zfxr+RTxgT1Y0nzVrs/Z7Tts57BoLSRin/gtgUSzVeAz72kD2C4mv5UVZiDwQuauXKI3iAqjQO2qXkhYvlQJEAk82c7Me9OyWc1bvdQeN3qBad86smmUPrK7ltlp2r1ovNGjDYo9iL6ZTomIpld3Mz9cEceRxoAEwYxmneA5c/wKxjwTShnQkD0dMOUxiqeK2u0xS6r/MVgj7QWvlhAJW/qK21rWbWNzSW9adCmA70m07O9I9AkwSAkrf1YBzOeFcyFos0DIVoV1ZogqFVN4ATImw59SarslJlISgmJpRHKQhVJJ5klfG5Jt/x0CY51bCcRIzgUI7P3+fprf/raiE9AmIcuAqpVOQ3YQDV1G1yOfzvN3tvAv4bhoQdcxkWQUjeMNk99P7tKgxKUelTAxzu+BebvkhxAEA8wt+5n5pynjBkmxFL65XeWNIPekU/V2gyqKSLpdp3tGG0kom4U0pmbY5BpxKwVtP4r9AzRLC/NZ9U7Lei1zad/mlYk7HAgmI5Pxp+fIbj40xcPXYGMqDk333JbMTUtZNQCYO2XqhfJMoxl8+W7CHlZ8038m/VcyC93YdwNqKI/OULwxB6Eyt1M2y/mQ2cCxhiZTCmG2DHwI4FHzXWBa55CLkNPmpgM+/aErj2jrCOE6pGPb13LCtuzlPsU7Ae3f6AJNr+9tlnfFPL+un66uxVMAI6aUv+W9ng+TjgkFXb4KcS1vP5NtTBqezLZ1/I/hR6t2aa5/attvs70q9UysLuJNJ54P5o2WrpvvnofMv</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1XIBcIlKkgUikrvBdrd3ZcjxxnA3YkTbAdCv/7YoUmB0p72SEjIk/GaNRcv+4SjKHS8LufABImpNuy39X9addyywK0bDkaBUas6U8NvNANjGriNWuD74GBb14acpzCkXCAq2rpj2TXDqht2c2K1PKvm1RoV22k969ojMC6hpUvF0rUsCin38rBtPWXUixEn3KMoAu4J7I2711ee9PRQwUnvnGxY5gFZZy5E4pkmrgSAIQxxBceReWLu+JwE3BuTGUUiZfAWM+Bt/W3varWqrKqVmM1Mx7Is02qZ0ifgZHakd34VmyEY0mm8WfcQjSnBKCSvSJG6BjGPA60bzmJGxDz6BNo2bUtBG5BhA9s1eqSb7wFydt9E2iHJODL4HNkF2AimwIBi0B5Gw7Z+9L0ObvZOGKJ8GrOI761/RgnoEsI4gcDgRWYFu+8jHihX5wSwN6Q4TDlZwo0akwRh4NodgynJrgiXwxdwLW+/lnH5I8WUAf5JW07Mba6SunmgOn0yAy7+T8+2+7VBeURhCp3JKz4+ty7O/z6cP8+O6XPVbhwP7uqn148P7ZzCtvOGVNnut/X+sJaz9bbprD6KxTq87fYyP4AQpy489i/Z8w3G1fP6i7iN/1xk9HXxtHq8TvzL+mC6MHsXj1ngN9Fl/dgKA3TV832+GnTXvzLXjs4u/N8tJwOfjiw2HNy7mTs6S/hyBPcDczkKe/cYP1jdzGT3VnjGXpuXTrq4MV/Wou841dPsebi+eFhMfv+66j7Zfxr+RTxgT1Y0nzVrs/Z7Tts57BoLSRin/gtgUSzVeAz72kD2C4mv5UVZiDwQuauXKI3iAqjQO2qXkhYvlQJEAk82c7Me9OyWc1bvdQeN3qBad86smmUPrK7ltlp2r1ovNGjDYo9iL6ZTomIpld3Mz9cEceRxoAEwYxmneA5c/wKxjwTShnQkD0dMOUxiqeK2u0xS6r/MVgj7QWvlhAJW/qK21rWbWNzSW9adCmA70m07O9I9AkwSAkrf1YBzOeFcyFos0DIVoV1ZogqFVN4ATImw59SarslJlISgmJpRHKQhVJJ5klfG5Jt/x0CY51bCcRIzgUI7P3+fprf/raiE9AmIcuAqpVOQ3YQDV1G1yOfzvN3tvAv4bhoQdcxkWQUjeMNk99P7tKgxKUelTAxzu+BebvkhxAEA8wt+5n5pynjBkmxFL65XeWNIPekU/V2gyqKSLpdp3tGG0kom4U0pmbY5BpxKwVtP4r9AzRLC/NZ9U7Lei1zad/mlYk7HAgmI5Pxp+fIbj40xcPXYGMqDk333JbMTUtZNQCYO2XqhfJMoxl8+W7CHlZ8038m/VcyC93YdwNqKI/OULwxB6Eyt1M2y/mQ2cCxhiZTCmG2DHwI4FHzXWBa55CLkNPmpgM+/aErj2jrCOE6pGPb13LCtuzlPsU7Ae3f6AJNr+9tlnfFPL+un66uxVMAI6aUv+W9ng+TjgkFXb4KcS1vP5NtTBqezLZ1/I/hR6t2aa5/attvs70q9UysLuJNJ54P5o2WrpvvnofMv</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o4FH7vr/C4jx3jC4bEnsAMgdJ6Gy4FNk3ysiOkAxa1ZWPJ4ObXr2RiAhSy6c4ww+j46DvfueiTbjiKI8fvcA6ZoAnTgl5L/8dZuICvmk3D9erEcO1605hDAwzHuvIaljW3vXlD1wLOcwgYF4iJlu5YtmtYTcO+nlmeb7m+69Xq186Trt1DxiW0dKlZulbEEeN+Gbal5xnzE8Qp9xmKgfsC+9PO4M6Xnj6qOOntmx3LMmDWDoVIfdPENQIYogjXcBKbN+aRzw3h/pQuGRJ5Bi8xCW/pL3u3221tW68l2dJ0LMsyLc+UPoTT5Ue9/aHaDCRgi2S37iKWMIpRRJ+RIjUAESZE60TLJKMijC9A26ZtKWgDCmxg22UfdfM1QMnunUhHJDOODB4iuwKbwAIyYBi0vydBS//4vg7u9s4yxPgiyWJ+sv4zSsA2ECUpEINXmVXs3o94plztG8B+wHCUc7qBoRqTFGHg2jiDBS3uKJfDR7hWtl8ruPzRasoA/0lbbsxDrpK6eaY6PboELv5Pzw77tUO5R1EO7edOz/0UmHH/Pt92m0NgX+PnbnNF6nePrZLCofOO1L7dL+vTYd3P1sum0B7Nwsn30XIwnPy4RV8/Xaf9B35HilX8k8ym9tPjct0dFXG3bt5uCvopFyu8fOrY187sgTz+NR0/dhcA3xq2WDkftlN2NfhxNXZvv3zph3nghW7w5MJ4k5Kf375/zb+v77+F7nMf3c0LItxG2sSj+0Hde2qO5xlZjaLlYh57E7PXd60PTw/5sBiv18EwHCThw6Y57LReczrM4dhYScI0n68Ai2qpxiPoaX3ZLyTelhdlocRYlK5+qjSKC2BCb6tdSlr8XAoQJb5s5m7d79qe87nhNuzbnt247n22XMvuWx2r4Xl213ErDdqxOKHYTdiCqlhKZXfz8zZBHPscGIHM2CQ5DoHrbyD2kEBawCbycCSMwyyRKs5cq4hX3pLG6cYmsTwR6zh5jpita8NEjNgo6ywEZEfSbTtH0j0BTFMKSt/VgHM54VzIWqzRJheRXdugGoNc3gCZEmHfca8bJpfxIlBMzTgheQS1NEzLyph89+8YCPPSSjlOk0ygyC7P38X0Tr9VlZA+hCoHrlK6BdlNOHMV1at8LufdOMy7gu/khKpjJssqMop3TI4/vU6LGpP9qOwTw9yuuO+3/CHEGQDzDX7maWn28ciGHkSvrld5Y0g9aVf9XaPaupZvNnnZ0SullZmEN6Vk2uYUcC4F79cs+QnM3EOY77pv9qxPIu/tx/xyEbKpQAJiOX9auXzHY2MKXD02Anlwive+ZI5CyroJKMQ5WzeSbxLF+M1nC/ax8pPmsfzbJhl5bdcZrIM4Mk/5whCULdVK3Sy/LswGTiQslVKYZIfg5wDOBT827ou85yLkNM1zAZe/aErjWjrCOMmZCHp6aTjU3ZKn+JWC/+r0G0yp7S+XdcEvXtYPg7upVMAY6Xtf+t/OBi3HBYOu3gQll5ZeyLenDM6WBzr/QvCC1NtvSf1xJu3fzL9bDmp6eh7a/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx1jC+yAPYEZLqF1C01OCCTNyxkhL1iNLTuWzCW/vpKJHSAkJz0zzDBar3a/vejbPec4jupel3PIBE2Y5g/a+r9o3mqeLZymMW+QhWE368jAltMyHDsA22q1CDRauuZznoPPuMBMtPW6hWzDOjNQ68ZyPcv2nHrNdZv3ujaDjEvTUqVm6domjhj3CrdtPc+Yl2BOucdwDNwTxJt0xyNPanq4xKR3zncoC4dZJxQi9UyT1AIgEEWkRpLYPDcPdM4D7k3okmGRZ/DsM+Bt/fnuer2urRu1JFuadcuyTMs1pU7A6fKz3vlUXobAZ4tkd+5jljBKcESfsAI1BhEmgdaNlklGRRi/YRqZyFKmDdgQgyCbfdbNFwcFug9aOgCZcWzwEKPS2DUsIANGQJte+23988cquLt7k2HGF0kW86Pz30ECtoIoSSEweBlZie7jFk+kq3MOxPMZiXJOV/BTtUmKCXDtKoMF3Ywol80XcK0ov7bh8kfLLgPyN2U5N/exSujmiewM6BK4+D8126/XzsoMRzl01tOpA93m92gW9b5MLu8sf4hcf7Ris2m7gLCvvANVlfv5fNysVW89XxqlVjT6OZj2/7k1H2bfevGPdLAO0+FojGYb67rxeIvMp/mSOnehPXyaRXf16dq6jEI/8eeA05H43nNsBy/Z9tv9p9D3H8D58cu/+325mq6nv8ZhA4+dKeoPtl9D5+u4dX/XXYRBa33bvSGZ/cguflvhVcy+wdR8yr7ny/rwfnwWBub8y6cVmt4OeuY0v2qmztVDtjjrtl9i2o/hUFhSwiSf/wYiyqNqD3+gDWW9sHifXpSEBsaiUPVSxVFcABN6R91S1OLlkoBo4Mli7s7DPnLrF83mmXNx4bo958KyLTS0ulbTdRsu6pUctENxBLGfsAVVvhTL7vrnfYAk9jiwADJjleQkBK6/Y3GABdZ8di0fR8I43CSSxVPnqYXnccPhzho95NvgcRsteBI7uvYzEZfsMusuBGQH1I3qB9R9DYSmFBS/qwbnssO5kLl4xKtcRKi2wjUGuZwAmSJhr263HJPTOI1AITXjJMgjqKVhWmTG5Lv/uoEJL6SUkzTJBI5Q8f7eDO/4W5kJqRNQpcBVSD2Q1YQTo8gu43kVt3NyZJXmu3lA1TOTaRUZJTskh59eukW1SdUqVWCEoxJ7deUvTZwwYL6DzzxOTeUvWNE97+V4lRND8kmnrO8jrj3W8tUqLyraVFyZSfOmpExkToDkkvC2N8kDMLMyYX5o3lSojzxX8kN8uQjZRGABsew/rTh+YNmYAFfLhi8fzuajm8yBS5k3ARtxStaP5E6iEL+7thCPKD0pvpJ/6yQLXsp1wtaeHxmn3DAEZUt1UpNl+0ZvkESapZIKk2zf+CkDp5wfCqskV1iE7KZ5LuDtL5riuLaOCUlyJvyBXgj2ebfAKbYpeC9Kr8wU3P48rDf8zWF9Nx5NJAPGWK906X8rG7RoFwK62gkKLG19I3dP6Zwt93j+GeBrqpdDD/UQclqDiuod10X9ul0l8CCSzivxa8leTo/fQ+cP</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0504501403082290615</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0504501403082290615</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0504451403082285753</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0504481403082288514</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0504501403082290615</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E6CAF7DF362E0401F0A05991C36</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E5451BE158DE0401F0A05991C24</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E7765EF99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9acd1c9a-5834-403b-b34f-a5ecbadf81b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_UserGet_CS_FUNC_CHILD_SAU_Get_CHILD_P2" searchProperties="true" id="08e03280-ae5b-49a7-ae90-b53d38c00203"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3a02b67c-3b90-4ba4-ab19-65359af0e661"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="98383b81-b6a4-4a0e-9392-b912d06aac42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="c0525b32-2374-4e75-8396-467f2df34425"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="bce972a8-ad66-4863-918e-430eb46e44a1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="991223b8-e908-46e6-8bb0-f1e71f6c8427"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="82827f02-f4b9-4c6c-9723-eea9db8f41b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="29c5911f-9b6d-4461-8c1c-ca001cb9afc6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="528eba53-60ac-47f8-84cf-2409a2700bd9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B370B42D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999AFAFD45309E0401F0A0599263C:9646D9A2"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051611403082961839</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BC6B30DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC6B30DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC6B30DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B370B42D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2D658A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999AFAFAF5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B370B42D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D658A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999AFAFAF5309E0401F0A0599263C</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3TqI1Pa0tLSDjAD4kc9oiJ4vPhyJ6YBom1SmhTq+fUnKbYColfvDDNMdnfWXvsjK2kzEEcNv8cYSjmmRAkGHfVfq9V0Zia0tYbn2ppthY7WCluWZrkuMJqeY9mNlqoEjGUoIIwDwjtqwzBtzXA0szUxPN9s+k2n7jruo6r8RikT0MKlbqhKHkeE+UXYjpqlxKeAYeYTECPmc+iPe8MrX3j6oOSkdtsblkXAtLvgPPF1HdZDBFEUwTqksd7Wd3zaIfPHeE4Az1L0FjNkHfVt73q9rq+tOk3nesMwDN3wdOETMjw/VrtH5WYUBmRGN+sTQCjBEET4D5CkhogvaKj0ojlNMV/En0CbumlIaA3lUIOmTY5V/T1Awe6bSDskUwY0tgBmCXaHZihFBCLl/i7oqMff6+Bm7yQFhM1oGrO99c8oIbJCEU1QqLEys5Ld9xEPlKvbRtAPCIwyhlfoWo5JAiBiym2KZji/wkwMX8iUov1KzsQPl1OG4E/a0ta3uQrq+oHqDPAcMf5/erbdrw3KbxBlqBv8skbj3iRsOSsdPZMWTsgo0qe1fEg7BYVt5w2pqt1v6/1hrWbrbdOiP71+9Ja3F3DM0lajOV/Xhjenv+LzqxHujYdno5uaG7nnZ/DKeLiYkvvpC3fPT8BoObuMM+bUuHeaRCCc8JCYR8+EXEfni7shpfe168Zgkd845HI56q/1WeAt8osaiMOH64hftB6aDr/PTx9G1mpqPBp5eMqv6G1iB4Pa6Ma04OVR3+bNIGDT6fLxtbU8x7f5S+c9p+0cdo2lJIyzp2cEebmU4xEMlDPRL8C/lhdpwaE2K1z9RGoU44hwtSt3SWnxMyFAOPRFMzfrsxPT87y+5Rp9uzGw+6eGbZhnRs9wPc8cOINSgzYs9iieUDLDMpZU2c38fE0Qxj5DJESptqIZXCCmfoE4ABwoAbkTh4MShiZUqLiZxLGbpkkrNp+f18+W23z6k88XIVSVa8pvyE3am3GU7ki32diR7jsEcYKR1Hc54ExMOOOiFkuwynhk1legTlAmboBUirDfsFtNneE4iZBkqsc0zCJUTxZJURmdbf4bGoCssGIGE5pyEJnF+fs0vf1vZSWET4ilA5Mp9ZHoJjpwFdllPp/n3dzOu4TvZSGWx0yUlacYbpjsfnqfFjkm1ahUiUFmltyrLT+EOACgf8FP3y9NFS9c4a3o5fUqbgyhJ92yv0tQX9az1SorOupKrUwFvC4k09THCGZC8F4n9AURvYLQv3XfVKz3Ilf2XX4ZX5AxBxzFYv6UYvmNx8YYMfnYCMTByb/7ktkJKerGUc4P2U4i8SaRjL98tkAfSj9hvhV/a5qG7+06gLUVR+QpXhgck7lcyZvl9ZPZgFTAYiGFNN0GPwRwKPiusSpyxYWLaXrKOPr8iyI1rqMCCGlGeDBQC8O27hY8+WuC/HenDzCFtr9d1jn79LL+Z3g1FgoYA7Xyxf/trOFiXCBS5Zug4NJRc/H2FMHJfEvn3wgekPoTp28Zg4F1Vkl90/MaTtOoCriTSfeD+aNlq6b756H7Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3TqI1Pa0tLSDjAD4kc9oiJ4vPhyJ6YBom1SmhTq+fUnKbYColfvDDNMdnfWXvsjK2kzEEcNv8cYSjmmRAkGHfVfq9V0Zia0tYbn2ppthY7WCluWZrkuMJqeY9mNlqoEjGUoIIwDwjtqwzBtzXA0szUxPN9s+k2n7jruo6r8RikT0MKlbqhKHkeE+UXYjpqlxKeAYeYTECPmc+iPe8MrX3j6oOSkdtsblkXAtLvgPPF1HdZDBFEUwTqksd7Wd3zaIfPHeE4Az1L0FjNkHfVt73q9rq+tOk3nesMwDN3wdOETMjw/VrtH5WYUBmRGN+sTQCjBEET4D5CkhogvaKj0ojlNMV/En0CbumlIaA3lUIOmTY5V/T1Awe6bSDskUwY0tgBmCXaHZihFBCLl/i7oqMff6+Bm7yQFhM1oGrO99c8oIbJCEU1QqLEys5Ld9xEPlKvbRtAPCIwyhlfoWo5JAiBiym2KZji/wkwMX8iUov1KzsQPl1OG4E/a0ta3uQrq+oHqDPAcMf5/erbdrw3KbxBlqBv8skbj3iRsOSsdPZMWTsgo0qe1fEg7BYVt5w2pqt1v6/1hrWbrbdOiP71+9Ja3F3DM0lajOV/Xhjenv+LzqxHujYdno5uaG7nnZ/DKeLiYkvvpC3fPT8BoObuMM+bUuHeaRCCc8JCYR8+EXEfni7shpfe168Zgkd845HI56q/1WeAt8osaiMOH64hftB6aDr/PTx9G1mpqPBp5eMqv6G1iB4Pa6Ma04OVR3+bNIGDT6fLxtbU8x7f5S+c9p+0cdo2lJIyzp2cEebmU4xEMlDPRL8C/lhdpwaE2K1z9RGoU44hwtSt3SWnxMyFAOPRFMzfrsxPT87y+5Rp9uzGw+6eGbZhnRs9wPc8cOINSgzYs9iieUDLDMpZU2c38fE0Qxj5DJESptqIZXCCmfoE4ABwoAbkTh4MShiZUqLiZxLGbpkkrNp+f18+W23z6k88XIVSVa8pvyE3am3GU7ki32diR7jsEcYKR1Hc54ExMOOOiFkuwynhk1legTlAmboBUirDfsFtNneE4iZBkqsc0zCJUTxZJURmdbf4bGoCssGIGE5pyEJnF+fs0vf1vZSWET4ilA5Mp9ZHoJjpwFdllPp/n3dzOu4TvZSGWx0yUlacYbpjsfnqfFjkm1ahUiUFmltyrLT+EOACgf8FP3y9NFS9c4a3o5fUqbgyhJ92yv0tQX9az1SorOupKrUwFvC4k09THCGZC8F4n9AURvYLQv3XfVKz3Ilf2XX4ZX5AxBxzFYv6UYvmNx8YYMfnYCMTByb/7ktkJKerGUc4P2U4i8SaRjL98tkAfSj9hvhV/a5qG7+06gLUVR+QpXhgck7lcyZvl9ZPZgFTAYiGFNN0GPwRwKPiusSpyxYWLaXrKOPr8iyI1rqMCCGlGeDBQC8O27hY8+WuC/HenDzCFtr9d1jn79LL+Z3g1FgoYA7Xyxf/trOFiXCBS5Zug4NJRc/H2FMHJfEvn3wgekPoTp28Zg4F1Vkl90/MaTtOoCriTSfeD+aNlq6b756H7Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx1jCWyIPYEZA0lDEtI20Nw0L3eEvICKLYElG5JfX9nEDhCSm94ZZhitV2fPfuhIp5LEUd0PpIREMcGNQb9t/oum9KTpgWM5DYIsZ0IaltfEEwu1HMdtnLRwEzdMYyBlCgMuFeGqbdYRdizUtPDJGHk+bvoI1/CJ82Aad5BIDa1dasg0NnHEpV+EbZtpwn1BJJM+JzFIX1F/FAyvfe3pk5KT2TndsiwCJp25UkvftmktBApRRGtUxPapvedzGkp/xGacqDSB55ihbJvPe9frdW3dqIlkZtcRQjbybO0TSjb7bHY+lZshHPCp2K57hAvOKInYE8lJDUHNRWgE0UwkTM3jN6CxjVEObcGGWhQ7/LNpvwQo2H0QaY9kIokl5wSXYLcwhQQ4BePn7aBtfv5YB7d7xwnhciqSWB6s/44S8AwisYTQkmVmJbuPIx4pV+cUqD/gNEoly+AmH5MloSCN7wlM2eaaST18oTSK9hsbqX+snDKgf9OWU3uXq6ZuH6lOn81Aqv/Ts91+bVHuSJRCB//4gVtX4/HtCMXDbvj7setlm+60dUMW7YLCrvOWVNXu5/XhsFaz9bypdyPSn3de4vRnw+bycnje/DJMz++/nsFjTzyl97NV1l0FI3voXHkP6KmnzvAGGpN6/+5uEssmml9+dS/UP4v5VfrwyZOqR4bDCyacKxRfrCfqOgjgFw9mVxf2RMZ3P7/cPyzXSdxVK3Y5C79et8LLicdHxN20hgM8Xvy68FBj3OB24xNpYnS2SFeLq2CahY8LNxq2X3LazWHfWErCKJ38BqrKZT4eg75xrvtF1PvykltYaE0LV3+Za5RUwJXZyXfl0uKnWoBY6OtmbtfnPex5Xrfeb7ongXcWnCEH4XMUINfz6s2GU2rQlsUBxZ7gU5bHylV2Oz/vE6SxL4GHkFiZSOkcpPkOYp8oYgz4rT4cgksYC63igrrzesZ4FGIZ40gh4sbZLAbTuBHqG/+WBFMFyZ5y4/qect8CZUsGubzn8y31gEulS7EiWaoiXMtIjUOqL4Ak12C/7py4tmTxMoKcqB2LMI2gtpwvi8LYcvtftwiVhZVJuhSJIhEujt+b2R1+KwuhfUKWO8g8pS7oZsKrm8j13TKfV3m7R2+sEj5IQ5afMl1VlTC6ZbL/6WVY8impJqVKjEpccq+2/CXEEQD7HX72YWmqeGHGdqKXt6u+MLScdMr+rkhtVUuzLC062sqlMtHwtlZMbI+AplrvHsdiAdyuIOwPXTcV64PIlX2fX6rmfKSIgljPn1EsP/DWGIHM3xoDfW42H33I7IXUdVOwUcdsvUg/SXLG775aqE9zP23+rv/WIglf2nUEayeOzlM/MBTjs3yVXyyPb8wGFRqWaSUUyS74MYBjwfeNVZErLkpP0yRV8PYXI5e4tkkoFSlXg75ZGHZlt+CpHpfgvzi9gimk/fmu3sg37+r74fVIC2BMzMqX/bezxYpxoVrvtH/BpW1u9NNTB+ezHZl/JnhE6XvNbgP1+43zfaV3UVXAvUw6r8yvLTs1PTwPnT8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/bhT2pQCpSPMVBHtvaC7gsr65U5IDxBt09qkvPjrb1JsBUSve0dnmJyePOc5L3mSE47jyPZ8ziETNGFa0Ovo/7h2GLahbhltB4eGU29hY9pEoYHARVNohgSRpq4FnOcQMC4wEx3dtpBjWE0DuWOr7aGmZzk11Gg+6NodZFxCS5eapWvrOGLcK8J29DxjXoI55R7DMXBPEG/kDwee9PRwyUnvnmxZFgGz7kKI1DNNUguBQBSRGkli88Tc8zkJuTeic4ZFnsFrzJB39Ne9q9WqtqrXkmxu2pZlmVbblD4hp/PvevdbuRnCgM2S7foMs4RRgiP6ghWpIYhFEmp+NE8yKhbxB9DIRJaCNmBNDIIc9l033wIU7L6ItEcy49jgC4xKsBuYQQaMgHZ7E3T071/r4HbvOMOMz5Is5gfrP6MEbAlRkkJo8DKzkt3XEY+Uq3sCxAsYiXJOl3ClxiTFBLj2M4MZXQ8ol8MXcq1ov7bm8p+WUwbkT9pyYu5yldTNI9Xp0Tlw8X96ttuvLcodjnLovtR7bnBdD4LBw1USBb5jCysIFu6AOJ2Cwq7zllTV7tf14bBWs/W6KUxP/25d/pi7dvpk+y8tfkH6d6hvPrZ+PNCb1YMgztWTO9xYWd+9a8wHF6gdnPP7kPgWDfpXk5WDF/Y8fFyeuvTbnd3sP/BzPO1NLvzr6dPtqkfCYZwP5xfPdT89HZPAj36gS9ca153BZnEe3Pze+Bnb/H7+OY7Hk8Zkkt3dw+XVdW/27dKBv4aCtOYCXdxbt/7k16/OW067OewbS0kY5dNHIKJcqvEIelpf9guLz+VFWWhozApXL1UaxQUwoXfVLiUtXi4FiIaebOZ23T9D7Xbb76u/Rt1qn1uOhfqWbzXabbtZPys1aMvigOJZwmZUxVIqu52fzwmS2OPAQsiMZZKTBXD9E8QeFlgL2I08HAnjME6kiqPUfXxewUvLms4YqjcWidtIMtRatHXtKhHX7DrzZwKyPe1G9p523wChKQUl8GrCuRxxLmQxnvEyFxGqLXGNQS6vgEypsGc7bsPkNE4jUFTNOAnzCGrpIi1KY/Ltr21gwgsr5SRNMoEjVBzAD/M7/FaWQvqEVDlwldIpyHbCu7uo4TXKfN7l3Th6Z5Xwfh5Sdc5kXUVGyZbJ/qe3cVFzUs1KlRjhqORebflDiCMA5if8zMPSVPHCJd2JXt6v8sqQgtIt+/uMa8+1fLnMi462lFhmEt6UmonMEZBcKt5mnDwBMysI80sXTsX6IHJl3+eXiwUbCSwglvOnFcsvvDZGwNVrI5AnZ/3Vp8xeSFk3AWtxzHYWyUeJYvzpu4V4RPlJ80/5s0qy8K1dR7B24sg85RNDUDZXK3W1bD6YDZJIWCq1MMl2wY8BHAu+b6yKXHERcpqmuYCPv2hK5Do6JiTJmQh6emHYFd6Cp9ik4L05vYMpxP31tl7zD2/ryXAwkhIYY73ypf/tbNBiXAjo6lFQcOnoa/n4lMHZfEfoXwm+1/rTs+Zp3er16v19rW9YVQH3Mum+M7+37NT08Dx0/wU=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051611403082961839</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051611403082961839</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0515561403082956038</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0515581403082958807</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_051611403082961839</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B370B52D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2D659A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999AFAFB05309E0401F0A0599263C</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>29c5911f-9b6d-4461-8c1c-ca001cb9afc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_UserGet_CS_FUNC_CHILD_BAU_Get_CHILD_P2" searchProperties="true" id="eed38a5f-73cf-4e42-814c-ae2a07867767"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8b89f309-0a13-43b7-a674-8e52c73a3aad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0b065a4f-19da-4a05-8084-d136d54a0719"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU1" id="89d4707d-0619-4023-8617-4c3248afaeba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU1" id="451af818-631e-439b-81bb-0a2084ae22e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="220b2acd-5e24-46e9-afb1-273e2f484d85"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="df223a37-2421-41fc-8d78-87ae87788e47"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="15e41a60-413b-4cb6-9faa-5e377e3715ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="64f127da-b460-4a1b-815b-244d303871ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B0FF73BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B371082D4BE0401F0A07991D6D:9A44728F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0516111403082971304</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B09BB2610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09BB2610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09BB2610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B0FF73BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2D68EA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BBFE0C76D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B0FF73BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D68EA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BBFE0C76D4E0401F0A07991D71</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jD4yNPYEZgyElTdIUkqY3L3eEvICoLRtLBpJfX8nEDhCSm94ZZhitV2fPfuhIZwwlseUHjEHOSUqVUdhR/7W8KbJchLSZ1XI1e4oMzQPU1Jq2jR2nPZ3axlRVRowVMKKMI8o7qmWYtmY4mtm+NTzfdHzDabiO86AqPyFnAlq4NAxV2SYxZX4ZtqMWOfVTxAjzKUqA+Rz7k+Dq0heePqo4qd2zHcsyYN5dcJ75uo4bEWCIY9zAaaKf6Qc+ZxHzJ2ROES9yeI4ZsY76vHez2TQ2zUaaz3XLMAzd8HThEzEy/6x2P1WbIRrRWbpb9xFNKcEoJk9IkroCvkgjJYjnaU74InkD2tRNQ0JrsMUaNm36WdVfApTsPoh0QDJnSGMLZFZgY5hBDhSDcjceddTPH+vgbu9tjiibpXnCjtZ/RwnoGuI0g0hjVWYVu48jnihX9wywP6I4LhhZw7UckwxhYMpNDjOyvSRMDF/ElLL9ypaJH6mmDPDftOVM3+cqqOsnqhOSOTD+f3q2368dyk8UF9ANzS0dPMTDm+n971X2Y3VJo/Ov//SpnqSdksK+845U3e7n9fGw1rP1vImFzahNHqzV7Xn/svX9Gk0Gv5gbQcu2lt5F/DQcPm0K4my8wfR28ZiNH5rpTTuO71ZfnIsxufhSPG0n28lw3JvG3z4VQXDedsmwbzg2al/3mqNkObCDi6vQPmfL8VSfb5/uErpYTu/N9TLNwmywvB4mSfKVf1tj17xyv+RuMLi6DkfBp/twQm56rcGa/F7qD8XYTX90XnLaz+HQWEnCpJguAfNqKcdjFCpD0S/E35cXaSGRNitd/UxqFONAudqVu6S0+IUQIBL5opm79bBvep7XM4ZDt9kLHHdg2IY5NALD9TwzbIWVBu1YHFHsp3RGZCypsrv5eZ8gTnwGNIJcW6cFXgBT30EMEUfKiI7F4Ugpg9tUqDhbrZ94BIDjeWQuULY0PWdu0iRSleuUf6ff82DGIT+QbtM6kO4xYJIRkPouB5yJCWcCEq/QuuCx2VijBoVC3AC5FGHfststnZEki0EyFRMcFTE0skVWVkZnu39LQ5iVVsJwluYcxWZ5/t5M7/hbVQnhExHpwGRKPRDdhFdXUctvVfm8nXdrP+8KPigiIo+ZKCvPCd4xOfz0Mi1yTOpRqRPDzKy411v+EuIEgP4OP/24NHW8aE32olfXq7gxhJ50q/6uUGPVKNbrouyoK7UyF/C6kExTnwAuhOA93qa/geo1hP6h+6ZmfRS5th/yK/iCTjjikIj5U8rlBx4bE2DysTESB2f70ZfMQUhRNw5bfsrWj8WbRDJ+99mCfSz9hPlG/G3SPHpp1wmsvTgiT/HC4ITO5UreLI9vzAZOBSwRUpjm++CnAE4FPzTWRa65cDFN04LD218UqXEdFWGcFpSPQrU07OtuyZM/ZuC/OL2CKbX9+bLesjcv619XlxOhgAlSa1/y384aKccFgyrfBCWXjroVb08RnM73dP6Z4Cmp93o9yzGNoJb6ludZjm3VBTzIpPvK/NqyV9Pj89D9Aw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jD4yNPYEZgyElTdIUkqY3L3eEvICoLRtLBpJfX8nEDhCSm94ZZhitV2fPfuhIZwwlseUHjEHOSUqVUdhR/7W8KbJchLSZ1XI1e4oMzQPU1Jq2jR2nPZ3axlRVRowVMKKMI8o7qmWYtmY4mtm+NTzfdHzDabiO86AqPyFnAlq4NAxV2SYxZX4ZtqMWOfVTxAjzKUqA+Rz7k+Dq0heePqo4qd2zHcsyYN5dcJ75uo4bEWCIY9zAaaKf6Qc+ZxHzJ2ROES9yeI4ZsY76vHez2TQ2zUaaz3XLMAzd8HThEzEy/6x2P1WbIRrRWbpb9xFNKcEoJk9IkroCvkgjJYjnaU74InkD2tRNQ0JrsMUaNm36WdVfApTsPoh0QDJnSGMLZFZgY5hBDhSDcjceddTPH+vgbu9tjiibpXnCjtZ/RwnoGuI0g0hjVWYVu48jnihX9wywP6I4LhhZw7UckwxhYMpNDjOyvSRMDF/ElLL9ypaJH6mmDPDftOVM3+cqqOsnqhOSOTD+f3q2368dyk8UF9ANzS0dPMTDm+n971X2Y3VJo/Ov//SpnqSdksK+845U3e7n9fGw1rP1vImFzahNHqzV7Xn/svX9Gk0Gv5gbQcu2lt5F/DQcPm0K4my8wfR28ZiNH5rpTTuO71ZfnIsxufhSPG0n28lw3JvG3z4VQXDedsmwbzg2al/3mqNkObCDi6vQPmfL8VSfb5/uErpYTu/N9TLNwmywvB4mSfKVf1tj17xyv+RuMLi6DkfBp/twQm56rcGa/F7qD8XYTX90XnLaz+HQWEnCpJguAfNqKcdjFCpD0S/E35cXaSGRNitd/UxqFONAudqVu6S0+IUQIBL5opm79bBvep7XM4ZDt9kLHHdg2IY5NALD9TwzbIWVBu1YHFHsp3RGZCypsrv5eZ8gTnwGNIJcW6cFXgBT30EMEUfKiI7F4Ugpg9tUqDhbrZ94BIDjeWQuULY0PWdu0iRSleuUf6ff82DGIT+QbtM6kO4xYJIRkPouB5yJCWcCEq/QuuCx2VijBoVC3AC5FGHfststnZEki0EyFRMcFTE0skVWVkZnu39LQ5iVVsJwluYcxWZ5/t5M7/hbVQnhExHpwGRKPRDdhFdXUctvVfm8nXdrP+8KPigiIo+ZKCvPCd4xOfz0Mi1yTOpRqRPDzKy411v+EuIEgP4OP/24NHW8aE32olfXq7gxhJ50q/6uUGPVKNbrouyoK7UyF/C6kExTnwAuhOA93qa/geo1hP6h+6ZmfRS5th/yK/iCTjjikIj5U8rlBx4bE2DysTESB2f70ZfMQUhRNw5bfsrWj8WbRDJ+99mCfSz9hPlG/G3SPHpp1wmsvTgiT/HC4ITO5UreLI9vzAZOBSwRUpjm++CnAE4FPzTWRa65cDFN04LD218UqXEdFWGcFpSPQrU07OtuyZM/ZuC/OL2CKbX9+bLesjcv619XlxOhgAlSa1/y384aKccFgyrfBCWXjroVb08RnM73dP6Z4Cmp93o9yzGNoJb6ludZjm3VBTzIpPvK/NqyV9Pj89D9Aw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3TqMzQtBWlHmEFErXcF/T59ORPTDQTbBJKUi7/+JMUiIHr0zDDDZHdn7bUvWcmhxGnihS0pQSjKmRUdN+x/fPcgrr6guIQrKCj5KPZK2K/Epf5L7HlVrxIcgGdbkZQZREwqzFTD9pDrl1Ct5NZ7KAjdWuiicrWKnm3rEYTU0NqljGxrniZMhnnYhp0JFnIsqQwZTkGGioTd1tVlqD1DXHCym4dLlnlA0RwqNQ4dh5RjIJAkpEx46hw6Gz6HsQy7dMCwygS8x4xlw37fO5vNyrNKmYuB4yGEHBQ42ieWdLBvN/eKzRBHrM+X6zZmnFGCE/qGDakrUEMeW61kwAVVw/QLaNdxkYEuwZyUiOuzfdv5CJCz+yHSBkkhcUkOsVuA3UMfBDAC1sN91LD3f9bB5d6ewEz2uUjl1vp3lIBNIeFjiEuyyKxg93PEHeVqHgIJI0aSTNIpXJsxGWMC0roV0KfzSyr18MXSyttvzaX+0WLKgPymLYfOOldN3dlRnWM6AKn+T8/W+7VEecRJBs0zb3Jdczw/Wowe6uh1OAuqNR9m52/Ub+QU1p2XpFbtfl9vD+tqtt43dWZR9DhK0NXkT6fVv6mfPrZOzx/aD+n1wemf0ZDLs8nzq+rX/dnRpVMfJBP/CSiqDJ5OnlS7cjO/P3r0g8Tr/Z1N23vn6CVLas+99uTubBF1F10se2IRnA/dpwQt0pe37vDijVbat97rqCYuFmdidDc/rV2JSkfSbnYK8vlidn7m11otd+/E82IeB3e3T/eC3HTpU2fW+MhpPYdNYyEJ3exlBEQVSzMe0bF1ovuF1ffyYixUH4jcNRwbjZIKmLKbZpeRljDTAkTjUDdzuT5pu0EQHHnHtXqnFXRaHeQj9wS1UDUIvFrFLzRoyWKLYpuzPjWxjMou5+d7giQNJbAYRGnKMzIEaX+DeIwVtiJ2rw8HZxJ6XKu4675OsjFf8HGSeEORLIJq/bU/VSPbuubqht2IVl+B2JBu19uQ7nsgdEzB6LsZcKknXCpdiwmeZipxy1NcZpDpG0AYEQ49v151JE3HCRimTsrjLIHyeDjOK+PI5b/WIiJzK5VkzIXCiZufvy/T2/5WVEL7xNQ4SJPSEehuwo6rCBX5fMq7uvPKKuBbWUzNMdNlVYKSJZPNTx/TYsZkNSqrxIh0C+6rLb+E2AHgfMPP2S7NKl48pWvRi+tV3xhaT5pFfye4PCln02mWd/TAaKXQ8I6WTNfpAsm04C16/BWYs4JwfnTfrFhvRV7ZN/llasi6CitI9fxZ+fIHj40uSPPYiPTBmf/0JbMRUtdNwVztsrUT/SYxjL99tpCQGD9tvtV/My7ij3btwFqLo/PULwxF2cCszM2y+GI2CNewVEshF+vguwB2Bd80roq84qL0NL1kCr7+YhmNa9iYEJ4xFR3buWFdd3OeajGG8MPpE0yu7e+X9Vx+eVn/vbrsagVMsb3ypf/tXKL5uBCwzZsg59Kw5/rtqYOzwZrOvxPcIfUoODryai7aknr/Y5Y3Mml+Mn+2rNV0+zw0/wU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj6uQT6CJClKAspvt5wLbrfblyjgDuE1sGjuQ8uuvHZoUKO3tXgkJeTKeOTNzfOwzjtLECULOIROEUS0adPR/pp4NvjvzjLY1bRverO0byMVNw/Vj8BFYjhM7uhZxnkNEuUBUdHTHsj3Dahn26cTyA7sV2G7Dc1t/dO0OMi5DS5eGpWtFmlAelGk7ep7RgCFOeEBRCjwQOBiHV5eB9AxQhUnvnm1Rlgmz7kKIZWCauBEDhiTBDcxS88zc8zmLeTAmc4pEnsFLzph39Je96/W6sXYbLJubjmVZpuWb0ifmZP5F755UmyGO6Ixt131EGSUYJWSDFKgrEAsWa2EyZxkRi/Sd0LZpWyq0AQU2sO3RL7r5mqBE98lIeyAzjgy+QHYVbAQzyIBi0H6Noo7+5XMT3O6dZIjyGctSfrD+O0hAV5CwJcQGryqr0H0+4pF2dc8ABxHFSc7JCq4VTZYIA9duM5iR4pJwSb6Ya+X4tYLLH6lYBvhvxnJm7mKV0M0j3RmQOXDxf2a2O69tlDuU5NDdbO4vxPT2cnLe5NPwfuFufnx3v52yTcE7JYRd5y2oetwv60Oy1tx62RTFj1Ho/g79GeLLi/Wpt+5NLu68ux5Ov+bjFf8mEvvyBvdS5tzfu2GL9R4SdHUR3gxgOkqHVxN/4D8/2dH097N3ki+uhtHtg9W+uWx7sUuTUSu+4D+h+WMUD1dO003/PE1o0h+MLibzzDa/t1wxKIAS2ZDp9eOqmH21oP1zZC6K+GST/4qKYXbanIxCRh/Gj32v81rTbg37xkoSxvn0AbColooe0UAbynkh8bG8KAuJjVnpGiyVRnEBVOhdtUtJS5BLASJxIIe5XQ/7tu/7vd7w3Oq3WwPv3PIse2iFVtv37UHbrjRoi+IAYp/RGVG5lMpu+fMxQJwGHGgMmbFiOV4A1z+IOEACaREdycPBKIcJkyqe2b7TjOO05ZK2by83jmMvNrBxde2aiRt6k4UzAdmectvOnnKPAJMlASXvit9cEpwL2YontMolZRor1KCQywsgUxocON5p0+QkXSaggJopi/MEGsvFsmyMybf/joEwL62E4yXLBErs8vi9W93ht6oR0icmyoGrknoghwlHbiKrqudN3c2jN1YVPsxjok6Z7KrICN4i2f/0ShbFkpopdWGY16yot/xliCMBzA/wmYetqfPFK7KTvbpd5YUh5aRbzfcJNZ4a+WqVlxNtK6nMZHhTKqZtjgHnUu+eJ+wRqFmHMD913dSoDzLX9n18uVjQsUACUsk/rVx+4q0xBq7eGpE8N8VnHzJ7KWXfBBTimK2fyCeJQvzhqwUHWPlJ8638W7Msfh3XkVg7eWSd8oEhCJ2rlbpYnt/hBmYyLJFKyLLd4McCHEu+b6ybXGMRkk3TXMD7XzQlcR0dYcxyKqKBXhp2ZbfEKZ6XELw6vQlTSvvLXV3wd+/q+6vLsRTAFOm1L/lvZ4OUdMGgqydBiaWjF/LpKZPT+Y7MvwA8ovSWFHunZVthrfRN33da3iuX9yrpvjG/tez09PA8dP8F</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0516111403082971304</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0516111403082971304</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051651403082965916</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051681403082968129</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0516111403082971304</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B0FF74BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2D68FA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BBFE0D76D4E0401F0A07991D71</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15e41a60-413b-4cb6-9faa-5e377e3715ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_UserGet_CS_FUNC_YOUTH_SAU_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="2d90f6cd-846f-4459-b189-9446b8b5b03e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5d8737ab-c77e-4764-bfbe-20ba435b4598"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="55967959-ecfd-41db-8dc8-1b90fcbd84f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTHSAU" id="aba78a44-90f7-4af3-962a-777afe7e7162"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTHSAU" id="8ecdd27e-7b16-41d2-ad5b-70a041e9aaea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="a9e1d51f-01d4-4b00-8bd5-ea2f530c07ae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="9ab4d79a-2934-4f62-85ec-284494b93395"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="b216f243-e823-4c93-aa83-804cfa86db03"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="ffd6501d-b35a-4c45-b645-262fe9a8d8c1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="4fa1256e-dfe7-41ce-b640-3c4953601534"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E6EAC97F23FE0401F0A05991C48</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E6EACB7F23FE0401F0A05991C48:1385DDE4"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0505201403082320100</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E6D91BCDD4AE0401F0A05991C38</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E6D91BCDD4AE0401F0A05991C38</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E6D91BCDD4AE0401F0A05991C38</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E6EAC97F23FE0401F0A05991C48</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E683B3AA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E6C42976DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E6EAC97F23FE0401F0A05991C48</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E683B3AA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E6C42976DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1P6QQHbAWYQBDtHUYGjR1/uhDRAjm0CSVqLv/4mxVZA9OKdYYbJ7s7aa39kJU0O4sjxO5wjJjAlWtBr6f9Mq2G17oWh4UzPq4YL4dTwgHtuzFyvAdy6401DqGsB5wkKCBeAiJbuWLZrWHXDPp9Ynm/VfLtecarus649IMYltHSpWLqWxRHhfh62pSeM+BRwzH0CYsR9Af1x5+bal54+KDjp7eaGZR6QtRdCLH3ThJUQQRRFsAJpbDbNHZ9myP0xnhMgEobeY4a8pb/vfX19rbxWK5TNTceyLNPyTOkTcjw/1dsnxWYUBmRGN+suIJRgCCL8BhSpGyQWNNQ60ZwyLBbxF9C2aVsK2kAZNKDtklPd/AiQszsSaYck48DgC2AXYCM0QwwRiLTfo6Clnx7Xwc3eCQOEzyiL+d76Z5QQSVFElyg0eJFZwe54xAPlajcR9AMCo4TjFA3VmCwBRFy7Y2iGs2vM5fCFXMvbr2Vc/nAxZQj+pC1Nc5urpG4eqE4PzxEX/6dn2/3aoDyAKEHtwVO3U+tXxfXj6G5UpdMh63WT0eI2c19aOYVt5w2pst3v6/1hLWfrfdOIkb+15fjVybzusFcjg8nQtX9dDR4ccUGGz6jBHq7cuj1ovPWfrQZeXzx2wN3vNYDV0eU0Hpwl9Wn6eNZht/P+0wmIMUbWff8KL9bBdGDRaOL2wArP7h3zmU6jIGOib8KJGNS9l45Va7x5f26dpD+aU/R4NySNi0b66+qudpmYNydpcnFGR9n9JekNns7cNLh1Wx85beewaywkYZxM/yIoiqUaj6Cn9WW/gPheXpQFh8Ysd/WXSqO4QETobbVLSYufSAHCoS+buVn3u7bnXNYvO12v0Xeq/UvLtey+JXP0PLvrnhcatGGxR7FLyQyrWEplN/PzPUEY+xyREDEjpQlcIK5/g9gDAmgBGcnDQQlHEypV3F7RmVuL1isveltkZFmzvAysGEt1bUjFLbllnZlAbEe6bWdHukcI4iVGSt/VgHM54VzIWqxAmojIrqSgQlAibwCmRNh33POayXG8jJBiasY0TCJUWS6WeWVMvvl3DAB5bsUcLikTILLz8/dlevvfikpInxArB65SukCym+jAVWQV+Xydd2077wK+k4RYHTNZVsEw3DDZ/fQxLWpMylEpE4PcLriXW34IcQDA/IafuV+aMl6Y4q3oxfUqbwypJ+2ivytQWVWSNE3yjjaUVjIJb0rJtM0xgokUvPWEviBilhDmUfdNyXovcmnf5ZeIBRkLIFAs50/Ll0c8NsaIq8dGIA9OduxLZiekrJtAmThk60byTaIYf/tsgT5UftJ8J/9eKQs/2nUAayuOzFO+MAQmc7VSN8v6i9mAVMJiKYWUbYMfAjgUfNdYFrnkIuQ0TROBvv6iKY1r6QBCmhAR9PTcsK27OU+xXiL/w+kTTK7t75d1xr+8rP/cXI+lAsZAL33xfzsbOB8XiHT1Jsi5tPRMvj1lcDLf0vl3ggekvufZF91ez+3sSn21lPrdTNqfzJ8tWzXdPw/tfwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1P6QQHbAWYQBDtHUYGjR1/uhDRAjm0CSVqLv/4mxVZA9OKdYYbJ7s7aa39kJU0O4sjxO5wjJjAlWtBr6f9Mq2G17oWh4UzPq4YL4dTwgHtuzFyvAdy6401DqGsB5wkKCBeAiJbuWLZrWHXDPp9Ynm/VfLtecarus649IMYltHSpWLqWxRHhfh62pSeM+BRwzH0CYsR9Af1x5+bal54+KDjp7eaGZR6QtRdCLH3ThJUQQRRFsAJpbDbNHZ9myP0xnhMgEobeY4a8pb/vfX19rbxWK5TNTceyLNPyTOkTcjw/1dsnxWYUBmRGN+suIJRgCCL8BhSpGyQWNNQ60ZwyLBbxF9C2aVsK2kAZNKDtklPd/AiQszsSaYck48DgC2AXYCM0QwwRiLTfo6Clnx7Xwc3eCQOEzyiL+d76Z5QQSVFElyg0eJFZwe54xAPlajcR9AMCo4TjFA3VmCwBRFy7Y2iGs2vM5fCFXMvbr2Vc/nAxZQj+pC1Nc5urpG4eqE4PzxEX/6dn2/3aoDyAKEHtwVO3U+tXxfXj6G5UpdMh63WT0eI2c19aOYVt5w2pst3v6/1hLWfrfdOIkb+15fjVybzusFcjg8nQtX9dDR4ccUGGz6jBHq7cuj1ovPWfrQZeXzx2wN3vNYDV0eU0Hpwl9Wn6eNZht/P+0wmIMUbWff8KL9bBdGDRaOL2wArP7h3zmU6jIGOib8KJGNS9l45Va7x5f26dpD+aU/R4NySNi0b66+qudpmYNydpcnFGR9n9JekNns7cNLh1Wx85beewaywkYZxM/yIoiqUaj6Cn9WW/gPheXpQFh8Ysd/WXSqO4QETobbVLSYufSAHCoS+buVn3u7bnXNYvO12v0Xeq/UvLtey+JXP0PLvrnhcatGGxR7FLyQyrWEplN/PzPUEY+xyREDEjpQlcIK5/g9gDAmgBGcnDQQlHEypV3F7RmVuL1isveltkZFmzvAysGEt1bUjFLbllnZlAbEe6bWdHukcI4iVGSt/VgHM54VzIWqxAmojIrqSgQlAibwCmRNh33POayXG8jJBiasY0TCJUWS6WeWVMvvl3DAB5bsUcLikTILLz8/dlevvfikpInxArB65SukCym+jAVWQV+Xydd2077wK+k4RYHTNZVsEw3DDZ/fQxLWpMylEpE4PcLriXW34IcQDA/IafuV+aMl6Y4q3oxfUqbwypJ+2ivytQWVWSNE3yjjaUVjIJb0rJtM0xgokUvPWEviBilhDmUfdNyXovcmnf5ZeIBRkLIFAs50/Ll0c8NsaIq8dGIA9OduxLZiekrJtAmThk60byTaIYf/tsgT5UftJ8J/9eKQs/2nUAayuOzFO+MAQmc7VSN8v6i9mAVMJiKYWUbYMfAjgUfNdYFrnkIuQ0TROBvv6iKY1r6QBCmhAR9PTcsK27OU+xXiL/w+kTTK7t75d1xr+8rP/cXI+lAsZAL33xfzsbOB8XiHT1Jsi5tPRMvj1lcDLf0vl3ggekvufZF91ez+3sSn21lPrdTNqfzJ8tWzXdPw/tfwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1PalMuGjjBTKG5RvAwg7uPLmZimEG2TkqSA/vqdFFsB0aNnhhkmqyvf+tYlX3IqYBK7ni8E5pIwagyCtvlvy62iKGo0rDqMWlatjrAFwzq0ogZyGvUmrLUAMI2BEBkeUCEhlW3TdUDNchoWaE6clufUPdCsNJq1B9OYYi4UtHKpOKaxTmIqvDxs28w49RgURHgUJlh4Enlj/2roKU8PFpzMzumGZR6Qd+ZSpp5to0qIEY5jVEEssU/tHZ/TUHhjMqNQZhy/xQxF23zbu1qtKqtqhfGZ7TqOYzstW/mEgsyOzc5RsRmHAxqxzboHKaMEwZi8Qk3qCss5Cw0/njFO5Dz5BBrYwNHQFl4jC4EaPTbt9wA5u28i7ZDkAlpiDkEBNsIR5pgibNyNBm3z+Hsd3OydcEhFxHgi9tY/o4TpEscsxaEliswKdt9HPFCuzilG3oCiOBNkia/1mKQQYWHcchyR9ZAINXyhMPL2G2uhfqSYMox+0pZTe5urom4fqE5AZljI/9Oz7X5tUKYwznCn1b9+ZsHvx9+PQXfIm2ejYZX6l+55/4S1cwrbzhtSZbvf1vvDWs7W26YZs+9pNzx/uvZd8nQ5yrrJ/UDE06vRxQPAc+BnoXOe0GBo09f1ANJh8Nx6uSAhp9N/+uC2OUmqiN4Eq6fG8+LIPV/6vdeTpiPu637am07PetNg0qojcklnF3K6vntoTjJx/nLyeikm5yxb3z/c8voNjeZ/nn9VR9UU3zX7q/5t95YcsQcahsHo6Yn1ptFiWU1d1n7PaTuHXWMhCePs8QkjWSz1eAwC40z1C8qv5UVbSGhFuauXao0SElNpdvQuLS1epgSIhJ5q5mZ91gMtt99oVrtV33fds75Tc8CZ4zv1Vgv0qk6hQRsWexR7jEZEx9Iqu5mfrwmixBOYhphbS5ahORbmF4gBlNAY0JE6HIwKPGFKxWFCFxI4IFm6M5DBmHEIHOeRKOm+ZvKG3nA/kpjvSDdwd6R7hBFJCdb6rgdcqAkXUtViAZeZjEFlCSsUZ+oG4FqEPbfWrNuCJGmMNVM7YWEW40o6T/PK2GLz71oQidxKBEoZlzAG+fn7NL39b0UllE9ItIPQKXWx6iY+cBU5RT6f513fzruAV+eC6GOmyio5QRsmu5/ep0WPSTkqZWJIgIJ7ueWHEAcA7C/42fulKeOFS7IVvbhe1Y2h9KRT9HcBK4tKtlxmeUd/aa3kCt5WkgnsMUaZEryXCXvG1C4h7G/dNyXrvcilfZdfJud0LKHEiZo/I19+47ExxkI/Ngbq4Ky/+5LZCanqJvFaHrL1YvUm0Yy/fLYgD2k/Zb5VfyvGw/d2HcDaiqPyVC8MSehMr/TN8vLJbCCmYImSQsa3wQ8BHAq+ayyLXHKRapoeM4k//2JojWubECGWUTkIzNywrbs5T/mSYu/d6QNMru1vl/VafHpZ/7kajpUCJtAsfcl/O1skHxeETf0myLm0zbV6e6rgdLal828ED0h90ALdXhDU/D2pb5YF3Mmk88H80bJV0/3z0PkL</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj0fBSQiFRAWJBhD0Qi/Q68uRcQZwGxyIHQj9+m2HJgVKe9ojISFPxmvWXLzsE45noe01OYdY0IhpvVZd/9e2LccKYGQ4I+waDgSOUbOtsjF2RhW74to1p1rRtR7nCfQYF5iJum6blmOYx4ZVG5quZ1Y82y5VbfNZ1+4h5hJaupRMXUtnIeNeFrauJzHzIswp9xieAfcE8QbNywtPeno456Q3TjYss4BxYyrE3EOIlAIgEIakRKIZOkE7PicB9wZ0wrBIYniPGfC6/r53tVqVVuVSFE+QbZomMl0kfQJOJ0d640++GYIeG0ebtY9ZxCjBIX3DitQliGkUaM1wEsVUTGdfQFvIMhW0ASkxiOWwIx19BMjY/RBph2TMscGn2MrBbmEMMTAC2t1tr64f/ayDm73DGDM+juIZ31v/jhKwJYTRHAKD55nl7H6OeKBcjRMgXo+RMOF0CX01JnNMgGvXMYxpekG5HL6Aa1n7tZTLH82nDMhv2nKCtrlK6uhAdVp0Alz8n55t92uDco/DBBo16jh3Lbri4ehu6Cedx+v1S3I8GafQq2cUtp03pIp2v6/3h7WYrfdNGD0+PFV9YV8v3Mu+nb6ZVdw9e4Y7d9R+TdLu6VnFf+iHZ6FldZd2OxieB93RlD45pN+7eWkt2uFF+XZE1sO36sufSv/+6dbGyK1M3srP1k1aM9MFfvoHdcru4vHh+O61/XLuo9VTk6xR1H11b/jD2mk9tu+G8VN3aA2GUdhdXNEaDzt/2OS5I7cE52flmF6144V/Wf/IaTuHXWMuCYNk9AJE5Es1Hr2W1pH9wuJ7eVEWGhjjzNWbK43iApjQG2qXkhYvkQJEA082c7Pu+JZrt499x3arxy3/uG06ptUxm2bFdS2/bOcatGGxR9GP2JiqWEplN/PzPUEy8ziwAGJjGSVkClz/BrGFBdZ67FYejohxGEZSxa3FyA3HyepluSi7oVOxRaW2DhYw0bV+JK7YVdwcC4h3pNuyd6T7FgidU1D6rgacywnnQtZigZeJCK3SEpcYJPIGiJUIe7ZTqyBOZ/MQFFM0i4IkhNJ8Os8qg/jm3zYw4ZmVcjKPYoFDKzt/X6a3/y2vhPQJqHLgKqVTkN2EA1eRlefzKe/KwSsrh28mAVXHTJZVxJRsmOx++pgWNSbFqBSJEW7l3Istv4Q4AIC+4Yf2S1PEC5Z0K3p+vcobQ+pJI+/vApcWpWS5TLKOVpVWxhIeScm00ABIIgVvPYxegaECAv3ovilY70Uu7Lv8EjFlA4EFzOT8adnyB4+NAXD12OjJg5P+9CWzE1LWTUAqDtn8UL5JFONvny3EI8pPmq/l3yqKg492HcDaiiPzlC8MQdlErdTNsv5iNkgkYamUwijeBj8EcCj4rrEocsFFyGkaJQK+/qIpjavrmJAoYaLX0jPDtu5mPMV6Dt6H0yeYTNvfL+uUf3lZP15eDKQCzrBe+NL/djZoNi4EdPUmyLjU9VS+PWVwNtnS+XeCB6S+5VqnfqvlNPekvlYUcCeTxifzZ8tWTffPQ+Mv</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0505201403082320100</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0505201403082320100</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0505151403082315394</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0505171403082317736</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0505201403082320100</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E6EAC98F23FE0401F0A05991C48</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E683B3BA22FE0401F0A05991C30</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E6C42986DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ffd6501d-b35a-4c45-b645-262fe9a8d8c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_UserGet_CS_FUNC_YOUTH_BAU_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="e8c4f5d0-a98e-4c90-b279-e18eab3eb574"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="69d5727b-3f42-4573-b38c-e7411a18a4e2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="eec36d71-c589-4856-8bf8-627cadec14dd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTHBAU" id="465df248-59e8-454b-b894-fe3ffa1edcfd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTHBAU" id="5b8e0f0f-b989-4df7-99b5-adbbbf0b3d2b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="a67a7fbc-83d2-4565-96b6-0176cc72a746"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="70ebce8e-cd38-4bc7-8c04-694031ab51e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="159a575b-6026-4a05-99c2-e3c34bb06bf1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="79295ab9-f4a8-41c4-8989-57e269153436"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="144baf0e-fbe5-416f-a9c4-f3f6bcd76c78"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E5B19BFC083E0401F0A05991C3C</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E5A8CD77266E0401F0A0799390B:34F0CA86"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0505281403082328895</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E5B1ABBE2AEE0401F0A07993911</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E5B1ABBE2AEE0401F0A07993911</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E5B1ABBE2AEE0401F0A07993911</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E5B19BFC083E0401F0A05991C3C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E6CAFDEF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E6F19A34232E0401F0A05991C4C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E5B19BFC083E0401F0A05991C3C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E6CAFDEF362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E6F19A34232E0401F0A05991C4C</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx1HIhaSQqCBRLi0zHdoD9DYvR8bZAU8TO8QOMP36sUOTAqU9nSMhIe9sr732xcs+4yiJnaDDOWSCMKoNey3931kUNWaR7xuo7jmG655iw3exb4SzmYd9yzsFt6lrQ85zGFIuEBUt3bFs17BODbs5tfzA8gLHq9V9/6eu3UHGJbR0qVm6tkliyoMibEvPMxowxAkPKEqABwIHk86Pq0B6BqjkpLfPtiyLgFl7IUQamCauhYAhjnENs8Q8M/d8zkIeTMicIpFn8BIz5C39Ze96va6t6zWWzU3HsizT8k3pE3IyP9HbX8rNEA5pxLbrLqKMEoxi8owUqR8gFizUOvGcZUQsknegbdO2FLQBG2xg26UnuvkaoGD3SaQ9khlHBl8guwQbQwQZUAza7XjY0k8+18Ht3mmGKI9YlvCD9d9RArqCmKUQGrzMrGT3ecQj5WqfAQ6GFMc5JysYqTFJEQau3WQQkc0V4XL4Qq4V7dc2XP5IOWWA/6YtZ+YuV0ndPFKdHpkDF/+nZ7v92qLcoTiH9vNSjKbX3u2jk4vRPIH0F59fJmLGO6xVUNh13pKq2v2yPhzWarZeNqHlfHZ78TCYTS/6oRNa9uDx+pTdd+rR/aIhbOvBvwkfvtbF5WV8615QW/hx82mZiiW5d/MGpNl36+aOhd3vYR2+PHedwehxinn8debczH+mDfPu6+O1ezdig9P+utkbZ6T3dGniycbqjq5yMr77mXbvv8WLf55cvonXaDReu7zj0Ub4JTK/3Xfiy2bz8jmOrtYXT26/9ZrTbg77xlISJvnsF2BRLtV4DHvaQPYLiY/lRVlIaESFa5AqjeICqNDbapeSliCXAkTCQDZzux50bd/pe+e2fz7oWs1633JlKa2O5fm+3a13Sw3asjig2GU0IiqWUtnt/HxMECcBBxpCZqxYjhfA9Q8Qe0ggbUjH8nAwymHKpIrjyHM8hPJNSunsF8Y+X1r82V/p2oiJa3qddSIB2Z5y286eco8Bk5SAknc131wOOBeyFEu0ykVs11aoRiGXF0CmNDhw3KZncpKkMSiiZsLCPIZaukiLwph8++8YCPPCSjhOWSZQbBfH793sDr+VhZA+IVEOXKV0DrKZcOQmsst83s/b2827hO/kIVGnTFZVZARvmex/eh0WNSXVpFSJYW6X3KstfwlxBMD8gJ95WJoqXrgiO9HL21VeGFJO2mV/l6i2rOWrVV50tKGkMpPwplRM25wAzqXe/Z6yJ6BmBWF+6rqpWB9Eruz7/HKxoBOBBCRy/rRi+Ym3xgS4emsM5bnZfPYhsxdS1k3ARhyzdWP5JFGMP3y14AArP2m+kX9rloWv7TqCtRNH5ikfGILQuVqpi+X3O7OBmYQlUglZtgt+DOBY8H1jVeSKi5DTNMsFvP9FUxLX0hHGLKdi2NMLw67sFjzF7xSCV6c3MIW0v9zVG/7uXf3w42oiBTBBeuVL/tvZIMW4YNDVk6Dg0tI38ukpg9P5jsy/EDyq9J3z877T6VdK3/D9um+/Hsm9TNpvzG8tOzU9PA/tPw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx1HIhaSQqCBRLi0zHdoD9DYvR8bZAU8TO8QOMP36sUOTAqU9nSMhIe9sr732xcs+4yiJnaDDOWSCMKoNey3931kUNWaR7xuo7jmG655iw3exb4SzmYd9yzsFt6lrQ85zGFIuEBUt3bFs17BODbs5tfzA8gLHq9V9/6eu3UHGJbR0qVm6tkliyoMibEvPMxowxAkPKEqABwIHk86Pq0B6BqjkpLfPtiyLgFl7IUQamCauhYAhjnENs8Q8M/d8zkIeTMicIpFn8BIz5C39Ze96va6t6zWWzU3HsizT8k3pE3IyP9HbX8rNEA5pxLbrLqKMEoxi8owUqR8gFizUOvGcZUQsknegbdO2FLQBG2xg26UnuvkaoGD3SaQ9khlHBl8guwQbQwQZUAza7XjY0k8+18Ht3mmGKI9YlvCD9d9RArqCmKUQGrzMrGT3ecQj5WqfAQ6GFMc5JysYqTFJEQau3WQQkc0V4XL4Qq4V7dc2XP5IOWWA/6YtZ+YuV0ndPFKdHpkDF/+nZ7v92qLcoTiH9vNSjKbX3u2jk4vRPIH0F59fJmLGO6xVUNh13pKq2v2yPhzWarZeNqHlfHZ78TCYTS/6oRNa9uDx+pTdd+rR/aIhbOvBvwkfvtbF5WV8615QW/hx82mZiiW5d/MGpNl36+aOhd3vYR2+PHedwehxinn8debczH+mDfPu6+O1ezdig9P+utkbZ6T3dGniycbqjq5yMr77mXbvv8WLf55cvonXaDReu7zj0Ub4JTK/3Xfiy2bz8jmOrtYXT26/9ZrTbg77xlISJvnsF2BRLtV4DHvaQPYLiY/lRVlIaESFa5AqjeICqNDbapeSliCXAkTCQDZzux50bd/pe+e2fz7oWs1633JlKa2O5fm+3a13Sw3asjig2GU0IiqWUtnt/HxMECcBBxpCZqxYjhfA9Q8Qe0ggbUjH8nAwymHKpIrjyHM8hPJNSunsF8Y+X1r82V/p2oiJa3qddSIB2Z5y286eco8Bk5SAknc131wOOBeyFEu0ykVs11aoRiGXF0CmNDhw3KZncpKkMSiiZsLCPIZaukiLwph8++8YCPPCSjhOWSZQbBfH793sDr+VhZA+IVEOXKV0DrKZcOQmsst83s/b2827hO/kIVGnTFZVZARvmex/eh0WNSXVpFSJYW6X3KstfwlxBMD8gJ95WJoqXrgiO9HL21VeGFJO2mV/l6i2rOWrVV50tKGkMpPwplRM25wAzqXe/Z6yJ6BmBWF+6rqpWB9Eruz7/HKxoBOBBCRy/rRi+Ym3xgS4emsM5bnZfPYhsxdS1k3ARhyzdWP5JFGMP3y14AArP2m+kX9rloWv7TqCtRNH5ikfGILQuVqpi+X3O7OBmYQlUglZtgt+DOBY8H1jVeSKi5DTNMsFvP9FUxLX0hHGLKdi2NMLw67sFjzF7xSCV6c3MIW0v9zVG/7uXf3w42oiBTBBeuVL/tvZIMW4YNDVk6Dg0tI38ukpg9P5jsy/EDyq9J3z877T6VdK3/D9um+/Hsm9TNpvzG8tOzU9PA/tPw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQSwMhUUGipEzT6e0A7bTzcmQcA+4kdrCdkM7Xjx2aFCjtaY+EhLyzvfbaFy/7mIM0cYIB54gJTIkWhT39324b+d4ctA3ktueGG8+7RjfuAgPEHcfuOtDxukDXIs5zFBEuABE93bFs17A6ht2dWn5gtQPHa7m++0vX7hDjElq6tCxdK9OE8KAK29NzRgIKOOYBASnigYDBZHB5EUjPANSc9P7xhmUVkPWXQmSBacJWjCBKEtiCNDWPzR2f45gHE7wgQOQMPceMeU9/3rter1vroxZlC9OxLMu0fFP6xBwvvur9L/VmFEdkTjfrISCUYAgS/AcoUpdILGmsDZIFZVgs0zegbdO2FLSBSmhA2yVfdfMlQMXug0g7JBkHBl8CuwYbozliiECk3Y6jnv71Yx3c7J0yQPicspTvrT9HCZECJTRDscHrzGp2H0c8UK7+MYJBRGCSc1ygKzUmGYCIazcMzXF5gbkcvphrVfu1kssfrqcMwc+05djc5iqpmweqE+IF4uL/9Gy7XxuUO5DkqI/vb+8u8mLkeRl0Sj/NFzZ6fEi+5Y9Wr6Kw7bwh1bT7eb0/rM1sPW+6W5QdALzrLA3/PN7+iGDnyh9Ofs9CYa6isE2juyx0fq3MKLXOVqfm/XR0UiRuOf7RTnEUr+++Dazz66z7dBWvwi/Uz93l7Xo9zaeFjx4c03s8mucdBt3Z1HKvbkRyNL712M3Nz1F6K75HMHT+ufQufvMsppNv9z+jbEbOfpxlq7Ob8Rfx/QSfL2YRnLUfzHB03r1yey85beewa6wlYZLPHhEU9VKNRxRqI9kvIN6XF2XBsTGvXINMaRQXiAi9r3YpaQlyKUA4DmQzN+vR0Pad085wMApPR0cd59RyLXtkDay279vDo06tQRsWexSHlMyxiqVUdjM/7xOEacARiREzCprDJeL6O4ghEECLyFgeDko4mlKp4h2PreK4Q4oCMMYsUrLEd3jp6doVFdfkmg3mArEd5badHeUeI4gzjJS8q/nmcsC5kKVYgSIXid0qQIugXF4ATGlw4LjdtslxmiVIETVTGucJamXLrCqMyTf/jgEgr6yYw4wyARK7On5vZrf/rS6E9ImxcuAqpRMkm4kO3ER2nc/bebe3867hB3mM1SmTVRUMww2T3U8vw6KmpJmUJjHI7Zp7s+WTEAcAzHf4mfulaeLFBd6KXt+u8sKQctKv+7sCrVUrL4q86qinpJJJeFMqpm1OEMyl3j1N6W9EzAbC/NB107Dei9zYd/nlYkkmAgiUyvnTquUH3hoTxNVbI5LnpvzoQ2YnpKybQKU4ZBsm8kmiGL/7aoEBVH7SfCP/1pTFL+06gLUVR+YpHxgCk4VaqYvl6Y3ZgFTCYqmElG2DHwI4FHzX2BS54SLkNM1ygd7+oimJ6+kAQpoTEYV6ZdiW3YqneMpQ8OL0CqaS9ue7uuRv3tX3lxcTKYAp0Btf/N/OBq7GBSJdPQkqLj29lE9PGZwstmT+meBrpW+f2IOTk1NncNoovef7R779ciR3Mum/Mr+2bNV0/zz0/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Q5j0chcSAtiQoS5TahpTdoT+e8jFxnA24Tm9oOl379OKFJgdJOz0hIyDvba6998bJPJU5iN2hJCUJRzoyw0zD/wXDiegRhqz6pHVs1mBxbPqofW8jxUdWJqlENg2mEUqYQMqkwUw3TdVDNcrRPfez4geMF1WoFed5v07gHITW0dqk4prFKYiaDPGzDTAULOJZUBgwnIANFglFreBFozwAXnMzm6YZlHlA0Z0rNA9smlQgIxDGpEJ7Yp/aOz2kkgxGdMqxSAW8xI9kw3/Yul8vKslrhYmq7juPYjm9rn0jS6Q+zeVRshihkE75ZtzHjjBIc01eckRqCmvHIaMVTLqiaJZ9AIxs5GbQFK2IRVGM/TPs9QM7um0g7JIXElpxhVIDdwgQEMALG3W3YMH98r4ObvWOBmZxwkci99Z9RAraAmM8hsmSRWcHu+4gHytU8BRKEjMSppAu4zMZkjglI41rAhK4uqNTDF0kjb7+xkvpHiykD8idtObW3uWrq9oHqdOgUpPo/Pdvu1wblHscpNPkyks+Lfuj3SDqg8fCm+jBa9V9jlEwbOYVt5w2pst1v6/1hLWfrbdPAx4Pl6HHCfWc4uJsKfhx3zm8unrpr6IbrO/84pP3zVXo96/xyGLsXeOyc8/v2xF4pbA9ErGpxWL9RUYyr6Mjp3/j90WC1vOfDQXu9Fr9RzXto9Qf3v6oXD57gP2V8ZfdjehOfX40Xy/XjTzKYdWaUvk7ZaDH762XZu3T+Ht9U+92j5/rQBXT35Djd372fvfpiSBrvOW3nsGssJGGUPj4BUcUyG4+wY/R0v7D6Wl4yC42sSe4azDONkgqYMpvZrkxaglQLEI0C3czNutdGvts97iG/Va25Vbfr1BzUc1qO5/uoXWsXGrRhsUexzdmEZrEyld3Mz9cESRJIYBEIa8FTMgNpfoHYwQobIbvVh4MzCWOuVfwpYZhS74TH+BHViHjynjw38h5d07jk6opdidZEgdiRbuTuSPctEDqnkOl7NuBST7hUuhYveJGqGFUWuMIg1TeAyEQ4cGt1z5Y0mceQMbUTHqUxVOazeV4ZW27+XQsTmVupJHMuFI5Rfv4+TW//W1EJ7RPRzEFmKZ2B7iYcuIrcIp8PeXsHr6wCvpVGNDtmuqxKULJhsvvpfVqyMSlHpUyMSFRwL7f8IcQBAPsLfvZ+acp40YJuRS+uV31jaD1pFv19wZWXSrpYpHlHTzKtFBre1pKJ7BGQVAveesyfgdklhP2t+6ZkvRe5tO/yS9WMjRRWkOj5M/LlNx4bI5DZYyPUB2f13ZfMTkhdNwUrdcjWjvWbJGP85bOFBCTz0+Zr/bfkInpv1wGsrTg6T/3CUJRNs1V2s6w/mQ3CNSzVUsjFNvghgEPBd41lkUsuSk/TY6rg8y9GpnENExPCU6bCjpkbtnU356nWcwjenT7A5Nr+dlmv5KeX9cPwYqQVMMFm6Uv/29mi+bgQ/VTV/jmXhrnSb08dnE23dP6N4Eep985Q6+ys67a6pdSf+H7VR+9HcieT5gfzR8tWTffPQ/Nf</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0505281403082328895</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0505281403082328895</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0505241403082324559</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0505261403082326679</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0505281403082328895</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E5B19C0C083E0401F0A05991C3C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E6CAFDFF362E0401F0A05991C36</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E6F19A44232E0401F0A05991C4C</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79295ab9-f4a8-41c4-8989-57e269153436</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_UserGet_CS_FUNC_CHILD_SAU_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="78b70e0b-ec96-483b-a6c9-fd08c067e2c9"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0f2322c4-54f2-4546-b632-a267dfde9a2c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9521a61c-ad26-4a90-8b79-4315778e5a5e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="48b81f1e-6dbd-4749-b831-e448d2d284d2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="ded060be-2214-4423-905e-fade3ca686c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="07d1b4d0-2cf0-4fdc-afc7-424ffc58a773"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="235c07e7-79f4-467a-a01c-3a33ef0bdb20"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="4bc0fae9-f690-41f7-8f85-4c6ed4306fa2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="9c363c58-f36e-42c5-912b-cb76ac4c2db9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="c0c4f2b2-ba6a-495e-9403-7cd8b4a93b4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B3E19B9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B2B579496AE0401F0A05992648:C4D914ED"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0516211403082981256</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B3E1909FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B3E1909FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B3E1909FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B3E19B9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BA13678CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B28B147D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B3E19B9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BA13678CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B28B147D05E0401F0A0599263A</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx1jmUDAnsAMH03rlqQJJG2SlzuyvBg1tkQk2UB+/ZVMTIBCbnpnmGG0Xp09+6EjnUmcpfWgJyUIRTmzwmHH/qfVPG37vh87cb3ZcBrNE+REHoATndbJyRQ1oxZEthVKmUPIpMJMdew68hoOOnW89g3yA+9U/2othB5s6ycIqaG1Sw3Z1jJLmQzKsB07FyzgWFIZMJyBDBQJJr2LUaA9A1xxsrtna5ZlQNGdKTUPXJfUYiCQpqRGeOaeuTs+Z7EMJjRhWOUCXmLGsmO/7F0sFrXFSY2LxK0jhFzku9onljT5aHc/VJshDtmUr9cDzDijBKf0GRtSF6BmPLZ6acIFVbPsCLTneshAO7AkDvEa7KPtvgYo2b0TaYekkNiRM+xVYGOYggBGwLodhx374/s6uN57IzCTUy4yubf+O0rACkj5HGJHVplV7N6PeKBc3TMgQchImktawKUZkzkmIK0rAVO6HFGphy+WVtl+ayn1j1ZTBuRv2nLmbnPV1N0D1RnSBKT6Pz3b7tca5SdOc+hqCr0+688er8df0WL6hZA0oqKIYq/RKSlsO69Jbdr9st4f1s1svWzKUOt5msgVvWl8ozQafP31jTze5LjPvKF4KK6y+4dG2o4e8sWKDMck+lS0W5Pr+2E49i9+t57Tx+juy5eLz0Vj5N9/KPj3bHBa/zTCs5+5is7F3fWVd3sXPT2ftpOvg5EM69lI3Td/tdJsAbMkdCUnhF+lbfSrPUrO69f3q7B1W094n3y4X8WJx0eX4nbKzy+Hq8EEdV5z2s5h11hJwiSPfgNR1dKMRzi0znW/sHpbXoyFxs60dA3mRqOkAqbsrtllpCXItQDRONDNXK/PB54+U/2Tz57f9/XiM2og7xz1UMv3vWHTrzRozWKP4oCzKTWxjMqu5+dtgiQLJLAYhFPwnMxA2m8gDrHCVsjG+nBwJuGGaxX3GhItZhihE9pM89VSZifCT5qoZVuXXP1gP0RvqkDsSLdX35HuMRA6p2D03Qy41BMula7FEy5ylXq1AtcY5PoGEEaEg3qj3XQlzeYpGKZuxuM8hdp8Ni8r48r1f93BRJZWKsmcC4VTrzx/R9Pb/1ZVQvvE1DhIk1IfdDfhwFWEqnyO593czruC7+UxNcdMl1UJStZMdj+9TosZk82obBIj0qu4b7b8JcQBAPcNfu5+aTbx4oJuRa+uV31jaD3pVv19wrWnWl4UednRltFKoeFdLZmeOwGSa8Fb3fBHYO4Gwn3XfbNhvRd5Y9/ll6sZmyisINPzZ5XLdzw2JiDNYyPUB2f53pfMTkhdNwVLdcg2SPWbxDB+89lCAmL8tPlK/y24iF/bdQBrK47OU78wFGWJWZmbZXVkNgjXsFRLIRfb4IcADgXfNW6KvOGi9DRFuYLjXyyjcR0ba2HPmQqHdmnY1t2Sp1rNIXh1+gOm1PaXy3opj17WdxejiVbADNsbX/rfzg4tx4WAbd4EJZeOvdRvTx2cJVs6/0LwiNSjt6R+N5PuH+Y/LVs13T8P3X8B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx1jmUDAnsAMH03rlqQJJG2SlzuyvBg1tkQk2UB+/ZVMTIBCbnpnmGG0Xp09+6EjnUmcpfWgJyUIRTmzwmHH/qfVPG37vh87cb3ZcBrNE+REHoATndbJyRQ1oxZEthVKmUPIpMJMdew68hoOOnW89g3yA+9U/2othB5s6ycIqaG1Sw3Z1jJLmQzKsB07FyzgWFIZMJyBDBQJJr2LUaA9A1xxsrtna5ZlQNGdKTUPXJfUYiCQpqRGeOaeuTs+Z7EMJjRhWOUCXmLGsmO/7F0sFrXFSY2LxK0jhFzku9onljT5aHc/VJshDtmUr9cDzDijBKf0GRtSF6BmPLZ6acIFVbPsCLTneshAO7AkDvEa7KPtvgYo2b0TaYekkNiRM+xVYGOYggBGwLodhx374/s6uN57IzCTUy4yubf+O0rACkj5HGJHVplV7N6PeKBc3TMgQchImktawKUZkzkmIK0rAVO6HFGphy+WVtl+ayn1j1ZTBuRv2nLmbnPV1N0D1RnSBKT6Pz3b7tca5SdOc+hqCr0+688er8df0WL6hZA0oqKIYq/RKSlsO69Jbdr9st4f1s1svWzKUOt5msgVvWl8ozQafP31jTze5LjPvKF4KK6y+4dG2o4e8sWKDMck+lS0W5Pr+2E49i9+t57Tx+juy5eLz0Vj5N9/KPj3bHBa/zTCs5+5is7F3fWVd3sXPT2ftpOvg5EM69lI3Td/tdJsAbMkdCUnhF+lbfSrPUrO69f3q7B1W094n3y4X8WJx0eX4nbKzy+Hq8EEdV5z2s5h11hJwiSPfgNR1dKMRzi0znW/sHpbXoyFxs60dA3mRqOkAqbsrtllpCXItQDRONDNXK/PB54+U/2Tz57f9/XiM2og7xz1UMv3vWHTrzRozWKP4oCzKTWxjMqu5+dtgiQLJLAYhFPwnMxA2m8gDrHCVsjG+nBwJuGGaxX3GhItZhihE9pM89VSZifCT5qoZVuXXP1gP0RvqkDsSLdX35HuMRA6p2D03Qy41BMula7FEy5ylXq1AtcY5PoGEEaEg3qj3XQlzeYpGKZuxuM8hdp8Ni8r48r1f93BRJZWKsmcC4VTrzx/R9Pb/1ZVQvvE1DhIk1IfdDfhwFWEqnyO593czruC7+UxNcdMl1UJStZMdj+9TosZk82obBIj0qu4b7b8JcQBAPcNfu5+aTbx4oJuRa+uV31jaD3pVv19wrWnWl4UednRltFKoeFdLZmeOwGSa8Fb3fBHYO4Gwn3XfbNhvRd5Y9/ll6sZmyisINPzZ5XLdzw2JiDNYyPUB2f53pfMTkhdNwVLdcg2SPWbxDB+89lCAmL8tPlK/y24iF/bdQBrK47OU78wFGWJWZmbZXVkNgjXsFRLIRfb4IcADgXfNW6KvOGi9DRFuYLjXyyjcR0ba2HPmQqHdmnY1t2Sp1rNIXh1+gOm1PaXy3opj17WdxejiVbADNsbX/rfzg4tx4WAbd4EJZeOvdRvTx2cJVs6/0LwiNSjt6R+N5PuH+Y/LVs13T8P3X8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj0chF66JChIlbSen14He6MvIdTbgkthp7ATo148dmhQo7bQjISHvbK+99sXLPuQojhyvzzmkgjCqBX5X/6eB6u0marpG68nCRsNxQ8Oth3XDDhF0HAfbE9fRtYDzDALKBaKiqzuW3TCslmF3bizXs1ueY9WabvNR1+4g5RJautQsXVvGEeVeEbarZyn1GOKEexTFwD2BvVH/4tyTnh4qOem9wzXLImDamwmReKaJayFgiCJcwyw2D80tn8OQeyMypUhkKbzFDHlXf9u7WCxqi3qNpVPTsSzLtFxT+oScTA/03q9yM4QBnbD1eoAoowSjiLwiReoCxIyFWj+aspSIWfwJtG3aloI2YIkNbDfogW6+ByjYfRNpi2TKkcFnyC7BhjCBFCgG7XYYdPWD73VwvfcmRZRPWBrznfXPKAHNIWIJhAYvMyvZfR9xT7l6h4C9gOIo4ySHSzUmCcLAtesUJmR5TrgcvpBrRfu1JZc/Uk4Z4J+05dDc5Cqpm3uq45MpcPF/erbZrzXKHYoy6M3HUeNozJyRexQ/XyL/Ap29mL4zmVqsW1DYdF6Tqtr9tt4d1mq23jbdo4emLc4fp9iZ+Vejm+B2dLd6OLvwTxbD+lnzVMx98zRq0fPw9yN/IOnf/ukjTpZjPPGDk3p4P1z1n4L71Xh+xsNfS+Tk/ayOj0M3Ch5+vwB0cGdqzgmcTeKAj/5qNfLxdStq/jl7wmg84JP8BovF8VMSPcyog4ZBe3E6Szqz+t3xL5oc9aPbQfMeWfy0Pr57fg667zlt5rBtLCVhlD09AxblUo1H4Gsnsl9IfC0vykJCY1K4eonSKC6ACr2ndilp8TIpQCT0ZDPX65OB7bruUd+ut9qdwXH72GpY9onVt9qua/uto1KD1ix2KA4YnRAVS6nsen6+JohjjwMNITVyluEZcP0LRB8JpAV0KA8HoxxumFTx1xwlqcsYhGRu89XzqjNPcrx41bVLJq7oVdqfCEi3lNt2tpR7CJgkBJS8q/nmcsC5kKV4QXkmIruWoxqFTF4AqdJgz2l0miYncRKBImrGLMwiqCWzpCiMydf/joEwL6yE44SlAkV2cfw+zW73W1kI6RMS5cBVSkcgmwl7biK7zOdD3s29N1YJ389Cok6ZrKpICV4z2f70PixqSqpJqRLD3C65V1t+CLEHwPyCn7lbmipemJON6OXtKi8MKSe9sr8vqPZSy/I8KzraVlKZSnhTKqZtjgBnUu9WN2wO1KwgzG9dNxXrnciVfZtfJmZ0JJCAWM6fViy/8dYYAVdvjUCem+V3HzJbIWXdBCzFPtsgkk8SxfjLVwv2sPKT5mv5t2Bp+N6uPVgbcWSe8oEhCJ2qlbpYVp/MBmYSlkglZOkm+D6AfcG3jVWRKy5CTtNTJuDzL5qSuK6OMGYZFYGvF4ZN2S14ilUC3rvTB5hC2t/u6iX/9K5+uDgfSQGMkV75kv92NkgxLhh09SQouHT1pXx6yuB0uiHzbwT3KH392HYtVy62lb7pVgXcyqT3wfzRslHT3fPQ+xc=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/C4jzvGHxiCPYEZEyD1NknTQJqmLzuKfG3U2BJYMob8+pVM7AAh2XRnmGF0fXXuuR860ilHWer4AeeQC8KoFo76+j+R57Qfom5k9LrQNVwXgYFOsGV4DrLbD93I6nU8XQs5LyCkXCAq+rpj2a5hdQ27N7M83+76TrvVbnd/6doPyLmEli4tS9fWWUq5X4Xt60VOfYY44T5FGXBfYH8aXF740tNHNSd9cLplWQXMB3MhFr5p4lYEGNIUtzDLzFNzz+c04v6UJBSJIofnmBHv6897y7Jsle0WyxPTsSzLtDxT+kScJJ/1wad6M0Qhjdl2fYYoowSjlDwhReoSxJxFWpAmLCdinr0BbZu2paANWGMD2y79rJsvASp2H0TaI5lzZPA5smuwG4ghB4pBu70J+/rnj3Vwu3eWI8pjlmf8YP1nlICuIGULiAxeZ1az+zjikXINTgH7IcVpwckKrtSYLBAGrl3nEJP1BeFy+CKuVe3X1lz+SD1lgP+kLafmLldJ3TxSnRFJgIv/07Pdfm1RfqC0gMEku12WTnuWiKv4Ynib/S7cePnYbX/tJP2Kwq7zllTT7uf14bA2s/W8afolOV9CNsHsuj0217M5AnwXmY/ll1tvloshu5t1zuHX09lfMXfLX8skuDtPVuOHuRXYZPpzGlx5SzcI8mX09PjpMQIe3adik9GluxqH43I4TIOvj0+TH/F3ev87/X6Thk9niJtfxsk9Dm/vnjZ/DQP3Mg161+LrQzyJ3Jl5wsu4ff1pQf8essvRrYXvrs8n1v1kWfZfctrNYd9YS8K0ePgNWNRLNR7hSJvIfiHxvrwoC4mMuHL1F0qjuAAq9IHapaTFL6QAkciXzdyuJ2e253lDpze03ZOR1RlbrmVPrMDqeJ7TbQe1Bm1ZHFA8YzQmKpZS2e38vE8QZz4HGkFurFiB58D1dxBHSCAtpDfycDDKYcakittk0+sUFPGNVy7sJEkdsirFKrYcXbti4hv9lgexgHxPu21nT7tvAJMFASXwasK5HHEuZDGWaFWI1G6tUItCIa+AXKmw77i9jslJtkhBUTUzFhUptBbzRVUak2//HQNhXlkJxwuWC5Ta1QF8M7/Db3UppE9ElANXKQ1BthOO3EV2nc+rvDtH76waPigios6ZrKvICd4y2f/0Mi5qTppZaRLD3K65N1v+EOIIgPkOP/OwNE28aEV2otf3q7wypKAM6v4uUWvZKlarouroiRLLXMKbUjNtcwq4kIq3mbFHoGYDYX7owmlYH0Ru7Pv8CjGnU4EEZHL+tGr5gdfGFLh6bYTy5Kw/+pTZCynrJmAtjtnOUvkoUYzffbdgHys/ab6WfyXLo5d2HcHaiSPzlE8MQWiiVupq2bwxG5hJWCK1kOW74McAjgXfNzZFbrgIOU0PhYC3v2hK5Po6wpgVVIQjvTLsCm/FU2wW4L84vYKpxP35tl7zN2/rn5cXUymBGdIbX/LfzgapxgWDrh4FFZe+vpaPTxmcJjtC/0zwiNa3x7ZneXLRaP2J59mjnVney2TwyvzaslPTw/Mw+Bc=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0516211403082981256</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0516211403082981256</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0516151403082975874</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0516181403082978668</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0516211403082981256</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B3E19C9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BA13688CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B28B157D05E0401F0A0599263A</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c363c58-f36e-42c5-912b-cb76ac4c2db9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_UserGet_CS_FUNC_CHILD_BAU_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="7b67ffd0-01bc-47b6-b0c3-6d1db593cd55"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2a8d607e-52dc-4f59-8eff-5a1a29f739c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="81252d26-059a-45eb-bc75-68862c7ac115"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU1" id="18e378d3-5a8b-4952-9827-899a5a37be1b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU1" id="fa229bd4-61ba-4e47-826a-29ea79187696"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="afe8a04e-568b-4842-9b36-086c13640083"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="079c7da5-2bf7-447e-b146-d9446d54d806"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="04ac9c13-87d7-4d50-b934-8b7e718ef178"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="7d8d8a02-ce41-406b-a2f8-af524af3ade0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="5ef6cb4e-e878-49cd-9790-57abb97bbbfe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B09CD0610AE0401F0A05992642</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B28B4E7D05E0401F0A0599263A:2E290895"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0516301403082990835</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B28B3E7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B28B3E7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B28B3E7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B09CD0610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B100ABBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B100CABA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B09CD0610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B100ABBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B100CABA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb/I4FH3vr4jSxypkIYQkAiSW0vJN6QJ0mb6MjOOA28QB22H79WMHkgKlnXYkJOSb63PPXXzsGgNxZPlNxhDlOCFKr1NX/3FMAIKgWtWs0LQ1u+wYmusElhbajrCPwbhs2KrSYyxFPcI4ILyuWoZwNRzNdEeG55uObzkl0yu/qsoTokxAC5eSoSqrOCLMz8LW1ZQSPwEMM5+AGDGfQ3/Y7N/4wtMHOSe1UduyzALSxpTzma/rsBQgiKIIlmAS6zX9wKcWMH+IJwTwlKJdzIDV1d3e5XJZWpZLCZ3olmEYuuHpwidgeHKuNs7yzSjokTDZrtuAJARDEOENkKT6iE+TQGlGk4RiPo2/gDZ105DQGlpBDZo2OVf1jwAZux8iHZCkDGhsCswcbIBCRBGBSHkc9Orq+c86uN07ooCwMKExO1r/jhIiCxQlMxRoLM8sZ/dzxBPlatQQ9HsERinDC3Qrx2QGIGLKPUUhXt1gJoYvYErWfmXFxA/nU4bgb9pS0/e5Cur6iep08AQx/n96tt+vLcoTiFLU6L5Nw4Ebmb1h1Lpq3Q2Hz9NHM4CO+zKpZxT2nbekinbv1sfDWszWbtO60rkfIqsF18/XZnW5arUvNjYc8cfx7cS1F+3mwLXMv7ovzUX0+PDwfD8YVN5tsAnh2tMt7+HugtCQsvKm0r+yzrqjhT29g/N4MdqUXy+hN5qk0S1jYaffpwPn2b2aVVqdJ+hW5/ZqjZN+HDSTi3XPi99cYPxZXTuv8ztYhXS1eT3rtp7/jq+c5nUn8MLloDy/gfWPnPZzODTmkjBMx28I8nwpx6PXUbqiX4B/Ly/SggMtzFz9mdQoxhHhakPuktLip0KAcOCLZm7X3bbpeV7L8NodwzGN5qVhG2bXaBoVz7Mc28o1aMviiGI7ISGWsaTKbufne4Iw9hkiAaLaIknhFDH1G8QO4EDpkYE4HAlhaJQIFU+r1ejdXY+ZGWDTXs4mmLjr+djaqMptwu/IHW2GHNED6TatA+keIIhnGEl9lwPOxIQzLmoxB4uUR2ZpAUoEpeIGoFKEfct2KzrD8SxCkqkeJ0EaodJsOssqo7Ptv6UByDIrZnCWUA4iMzt/X6Z3/C2vhPAJsHRgMqUWEt1EJ64iM8/n67wr+3nn8M00wPKYibJyiuGWyeGnj2mRY1KMSpEYZGbOvdjyS4gTAPo3/PTj0hTxggXei55fr+LGEHrSyPs7B6V5KV0s0qyjVamVVMDrQjJNfYhgKgRvPUreEdELCP1H903B+ihyYT/kl/IpGXLAUSzmT8mWP3hsDBGTj42eODirn75kDkKKunG04qds7Ui8SSTjb58t0IfST5jvxd8yocFHu05g7cUReYoXBsdkIlfyZll/MRswEbBYSGFC98FPAZwKfmgsilxw4WKaxilHX39RpMbVVQBhkhLe66iZYV93M558PUP+h9MnmEzbd5f1in15Wb/0b4ZCAWOgFr74v501nI0LRKp8E2Rc6upKvD1FcDLZ0/kdwRNSb7mt8mW1Y1QOpb7cLAp4kEnjk/mzZa+mx+eh8S8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb/I4FH3vr4jSxypkIYQkAiSW0vJN6QJ0mb6MjOOA28QB22H79WMHkgKlnXYkJOSb63PPXXzsGgNxZPlNxhDlOCFKr1NX/3FMAIKgWtWs0LQ1u+wYmusElhbajrCPwbhs2KrSYyxFPcI4ILyuWoZwNRzNdEeG55uObzkl0yu/qsoTokxAC5eSoSqrOCLMz8LW1ZQSPwEMM5+AGDGfQ3/Y7N/4wtMHOSe1UduyzALSxpTzma/rsBQgiKIIlmAS6zX9wKcWMH+IJwTwlKJdzIDV1d3e5XJZWpZLCZ3olmEYuuHpwidgeHKuNs7yzSjokTDZrtuAJARDEOENkKT6iE+TQGlGk4RiPo2/gDZ105DQGlpBDZo2OVf1jwAZux8iHZCkDGhsCswcbIBCRBGBSHkc9Orq+c86uN07ooCwMKExO1r/jhIiCxQlMxRoLM8sZ/dzxBPlatQQ9HsERinDC3Qrx2QGIGLKPUUhXt1gJoYvYErWfmXFxA/nU4bgb9pS0/e5Cur6iep08AQx/n96tt+vLcoTiFLU6L5Nw4Ebmb1h1Lpq3Q2Hz9NHM4CO+zKpZxT2nbekinbv1sfDWszWbtO60rkfIqsF18/XZnW5arUvNjYc8cfx7cS1F+3mwLXMv7ovzUX0+PDwfD8YVN5tsAnh2tMt7+HugtCQsvKm0r+yzrqjhT29g/N4MdqUXy+hN5qk0S1jYaffpwPn2b2aVVqdJ+hW5/ZqjZN+HDSTi3XPi99cYPxZXTuv8ztYhXS1eT3rtp7/jq+c5nUn8MLloDy/gfWPnPZzODTmkjBMx28I8nwpx6PXUbqiX4B/Ly/SggMtzFz9mdQoxhHhakPuktLip0KAcOCLZm7X3bbpeV7L8NodwzGN5qVhG2bXaBoVz7Mc28o1aMviiGI7ISGWsaTKbufne4Iw9hkiAaLaIknhFDH1G8QO4EDpkYE4HAlhaJQIFU+r1ejdXY+ZGWDTXs4mmLjr+djaqMptwu/IHW2GHNED6TatA+keIIhnGEl9lwPOxIQzLmoxB4uUR2ZpAUoEpeIGoFKEfct2KzrD8SxCkqkeJ0EaodJsOssqo7Ptv6UByDIrZnCWUA4iMzt/X6Z3/C2vhPAJsHRgMqUWEt1EJ64iM8/n67wr+3nn8M00wPKYibJyiuGWyeGnj2mRY1KMSpEYZGbOvdjyS4gTAPo3/PTj0hTxggXei55fr+LGEHrSyPs7B6V5KV0s0qyjVamVVMDrQjJNfYhgKgRvPUreEdELCP1H903B+ihyYT/kl/IpGXLAUSzmT8mWP3hsDBGTj42eODirn75kDkKKunG04qds7Ui8SSTjb58t0IfST5jvxd8yocFHu05g7cUReYoXBsdkIlfyZll/MRswEbBYSGFC98FPAZwKfmgsilxw4WKaxilHX39RpMbVVQBhkhLe66iZYV93M558PUP+h9MnmEzbd5f1in15Wb/0b4ZCAWOgFr74v501nI0LRKp8E2Rc6upKvD1FcDLZ0/kdwRNSb7mt8mW1Y1QOpb7cLAp4kEnjk/mzZa+mx+eh8S8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbUts6FH3vV3jcR8aRL7nZQzITcKBuCU0JBdqXM0LeTgS2HCTZcfr1R3awSULg0DOTmYy2t9Ze+6IlHQucxLY3EgK4pCnTAn+g/9PpEYeQDhjd+zYY7d5938AdxzWie+hGna4NtgO6FgiRQcCExEwOdNu02obZNaz+tel6VtdzzJbltn/r2g1woaCVS8vUtSKJmfCqsAM948xLsaDCYzgB4UnizUaTC095erjmpA+PNyyrgHy4kHLpIURaIRCIY9IiaYKO0Y7PcSi8GZ0zLDMOzzFDMdCf965Wq9bKaaV8jmzTNJHpIuUTCjr/rA8/1ZshDFiUbtanmKWMEhzTP7gkNQG5SENtFM9TTuUieQPaQpZZQhtQEINYbfZZRy8BKnYfRNohyQU2xAJbNdgVRMCBEdB+XgUD/fPHOrjZe80xE1HKE7G3/jtKwHKI0yWEhqgzq9l9HPFAuYbHQLyAkTgTNIfLckyWmIDQphwiWlxQoYYvFFrVfq0Q6kfrKQPyN205RttcFXV0oDo+nYOQ/6dn2/3aoNzgOIPhrR9Gjj29WvOzpRNMH/pun//IhXsuVoOKwrbzhlTT7uf1/rA2s/W86TZcr9FNb+SM78JvM0GCoPiZIyeaXqzRJbKd36Ib3JmzBf0qvq1u5mMpoEgvumd531902/j819Ek4XDOvqOvy093PQs7Xyl8+/0YTK9yP/v1Y3Lb/tMdJeLpaPJ42b55sL+keDbpzqOjx4d85CM3tOLbIx9NfHl1Pl9lkPwsxmR81v40/ZNjGt/Z5o9pEY3p4sv61+Alp+0cdo21JMyy+wcgsl6W4xH42pnqF5bvy0tpoaERVa7estQoIYFJfVjuKqXFy5QA0dBTzdysz04t13VPLNMcnZyMur2x2TatM3Nk9lzX8jt+rUEbFnsUT1MW0TJWqbKb+XmfIEk8ASwEbuRpRhYg9HcQfSyxFrArdThSJuA6VSpudXJe5HnH5mHiRL2CkkXRxqsHrmuXqfzOvvNRJIHvSLdl70j3FRC6pFDqezngQk24kKoWTzjPZGy1ctxikKkbgJci7NntfgcJmixjKJmiJA2zGFrLxbKqDBKbf9vARFRWKsgy5RLHVnX+3kxv/1tdCeUT0tJBlCmdgOomHLiK7DqfV3l3Dl5ZNfwoC2l5zFRZJadkw2T308u0lGPSjEqTGBFWzb3Z8pcQBwDQO/zQfmmaeGFOt6LX16u6MZSeDOv+PuHWUyvL86zqaK/USq7gkZJMC82AZErw1tfpIzDUQKAP3TcN673IjX2XXyYXbCaxhETNn1YtP/DYmIEoHxuBOjjFR18yOyFV3SQU8pDtNFZvkpLxu88W4pHST5mn6m+V8vClXQewtuKoPNULQ1I2L1flzbJ+YzZIqmCpksKUb4MfAjgUfNfYFLnhItU03WcS3v6ilRo30DEhacZk4OuVYVt3K55yvQTvxekVTKXtz5d1Id68rO8mFzOlgAnWG1/6384GrcaFqKeq8q+4DPRCvT1VcDbf0vlnggek3u6fOOOeb3Yaqe+4rt11Rk0BdzIZvjK/tmzVdP88DP8F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHqsQJ0ALUUHiUmYzA8xMoRfty8o4TjBNbOoLl/76tQNJgdJuZyUk5JPj73zn4s++FjBL/aAjBOaSMGqF/Zb9DwINGNdw5KCGj5xaXMVOw8dNpxGjuH4JLmEEPdsKhVA4pEJCKlu2D7yaAy4drzEFzcC7DKp+5arq/W1b95gLDa1dKsC2NllKRZCHbdmK04BBQURAYYZFIFEw6YyGgfYMYMHJbl/vWOYBeXsu5TJwXVSJMMJpiiqIZe61e+RzHYlgQhIKpeJ4HzMSLXu/d71eV9bVCuOJ6wMAXNB0tU8kSPLVbn8pNuMopDHbrXuQMkoQTMkLNKRGWM5ZZHXShHEi59k70J7rAQPt4A1ykFejX233NUDO7pNIRyS5gI6Y6ybswW5xjDmmCFt3t2HL/vq5Du72TjmkImY8EyfrP6OE6QqnbKlDiiKzgt3nEc+Uq32NURBSlCpBVnhsxmQJERbWL45jshkSoYcvElbefmsj9I8UU4bRn7Tl2j3kqqm7Z6rTJwkW8v/07LBfO5R7mCrc9i5+riGbxsPF/UvtZtzrhrOF+gsmYnzXyikcOu9Ile3er0+HtZyt/abpaDGcfVMvN/Ou2nS6HFUHw9Egm6tYdu5vkh8YVHnnqde/eNw+f8vkY6gulk/D9YwPU/JrDm6e4ELcvoyhLvj3L88RY8nvwbeu+/d881Bn29VsARZ392MMwH19+uA/LHqLqN4EF6ybAZd+l8n3H9Pfj4PGZDAez4ZoO7paP9eYaqKHL5I/PSTJ0yhkSb+77tORd9d6zekwh2NjIQkTNVtgJIulGY+wbw10v6D8WF6MhUROnLsGS6NRQmIq7bbZZaQlUFqASBToZu7Wg57XbDa7HgC9TrdzeXUDasAbgA64aja9fr1faNCOxQnFHqMxMbGMyu7m52OCKAsEphHmzoopNMfC/gCxDyW0QnqrDwejAk+ZVvHti9cAlKwi9ZJ6fl2gBCK0gWRhW2Mmf9KfvBNLzI+k2/OPpPsWI7Ik2Oi7GXChJ1xIXYtnuFIy9SorWKFY6RuAGxEO/Fqj7gqSLVNsmLoZi1SKK8v5Mq+MK3b/vgORyK1EoCXjEqZefv7eTe/0W1EJ7RMR4yBMSl2su4nPXEV+kc+bvOtnr6wCvqMiYo6ZLqvkBO2YHH96nRYzJuWolIkh4RXcyy1/CHEGwP2An3tamjJetCIH0YvrVd8YWk/aRX+fYeW5olYrlXf0ymgl1/CulkzPnWCktOBtp+wJU7eEcD9135SsTyKX9mN+Ss7pREKJMz1/Vr78xGNjgoV5bIT64Gw++5I5CqnrJvFGnrP1Uv0mMYw/fLagABk/bf6l/9aMR6/tOoN1EEfnqV8YktDErMzNsn1nNhDTsERLIeOH4OcAzgU/NpZFLrlIPU0zJfH7XyyjcS1bCwpTVIZ9Ozcc6m7OU26XOHh1egOTa/v+st6Idy/rx9FwohUwg3bpS/7b2SH5uCBsmzdBzqVlb/TbUwenyYHO7wmekXq/0a3eXPVBvZT6erPpX1Y7ZQGPMmm/Mb+1HNT09Dy0/wU=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0516301403082990835</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0516301403082990835</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0516251403082985261</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0516271403082987955</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0516301403082990835</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B09CD1610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B100ACBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B100CBBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d8d8a02-ce41-406b-a2f8-af524af3ade0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_UserGet_CS_FUNC_CLG_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="1026bc6c-d6c5-4106-83b1-4fde62cd231b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dc508cdf-5737-4abb-ae5e-144364754eda"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="449fa465-adfb-4184-80df-d586eb11ac6c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="4ea6975d-db74-4ba3-b17f-92ee40f317a5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="4ed8679c-33b3-4bae-835c-db76bf4c330a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="e0ac9198-571d-4b06-a2b2-08d90f8c0267"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="1fdbc8c4-ad48-432a-89cf-62c0ba30db83"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="2de7c96a-232f-4f45-a11d-6930e2deabb6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2D6EBA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B1D0218AF2E0401F0A07991D67:A1A9FF9B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0516361403082996838</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B28B517D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B28B517D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B28B517D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2D6EBA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2D705A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D6EBA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D705A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx1HIhXBJVJAolCrTy0wL05nh5cg4O+AS7DR2wuXrjx2aFCjt6RwJCXlne+21L172OUfL2PF7nEMqCKNaMOjo/wBuN9s49Ayn5diGa0dNY4rdhmFZTqs1xWgKqK1rAecZBJQLREVHdyzbNaymYbfHlufbTb/eqLluc6Jrj5ByCS1dapaurZcx5X4RtqNnKfUZ4oT7FC2B+wL7o97tjS89fVRy0rvnO5ZFwLQ7FyLxTRPXQsAQx7iG2dI8Nw98zkPuj8iMIpGl8BIz5B39Ze9qtaqt6jWWzkzHsizT8kzpE3IyO9O7X8rNEAY0Yrt1H1FGCUYx2SJF6hbEnIVaL56xlIj58h1o27QtBW3AGhvYdumZbr4GKNh9EumAZMqRwefILsEeIIIUKAbt50PQ0c8+18Hd3nGKKI9YuuRH67+jBDSHmCUQGrzMrGT3ecQT5eqeA/YDiuOMkxzu1JgkCAPXfqQQkfUN4XL4Qq4V7dfWXP5IOWWA/6Yt5+Y+V0ndPFGdAZkBF/+nZ/v92qE8ojiD7tR1/zzlOIzW1xv6Y7u9RNPHobn5jR7/dAoK+847UlW7X9bHw1rN1sumb6zV9OYPk342mngs+jW7md4t+n+s7eb2no3bidfebBY4sFqjdjvNo2RyjYY/m31YtYZZzO69p0CYOFvdg1nffhnWafT1t2km4+xpy213+ny1eOqzixzd0e+TfOXhq+sNm4yjVT7m28VN41vLDgmfoKeAtX+5s/ZzT8wnsbNO2dWXxtXtzFuZ9aQ5HGy/3g8vvgWd15z2czg0lpIwyqZPgEW5VOMRDLSh7BcSH8uLspDQiApXP1EaxQVQoXfVLiUtfiYFiIS+bOZuPezbnuddOIPm5UXPu+xdWq5lD62e1fA8p1l3Sw3asTii2Gc0IiqWUtnd/HxMEC99DjSE1MhZhufA9Q8QB0ggLaAP8nAwymHMpIrXs/rCixYx4yJ2mjFbJDNwwfN07Y6J7/R72osEpAfKbTsHyv0AmCQElLyr+eZywLmQpXhGeSZiu5ajGoVMXgCp0mDfcdsNk5NlEoMiai5ZmMVQS+ZJURiT7/4dA2FeWAnHCUsFiu3i+L2b3fG3shDSJyTKgauULkA2E07cRE6Zz/t5N/bzLuF7WUjUKZNVFSnBOyaHn16HRU1JNSlVYpjbJfdqy19CnAAwP+BnHpemihfmZC96ebvKC0PKSbfs7zOqPdeyPM+KjraUVKYS3pSKaZsjwJnUu82YLYCaFYT5qeumYn0UubIf8svEnI4EErCU86cVy0+8NUbA1VsjkOdm/dmHzEFIWTcBa3HK1o/lk0Qx/vDVgn2s/KT5h/xbsTR8bdcJrL04Mk/5wBCEztRKXSybd2YDMwlLpBKydB/8FMCp4IfGqsgVFyGnaZoJeP+LpiSuoyOMWUZFMNALw77sFjzFJgH/1ekNTCHtL3f1mr97V/++vRlJAVwivfIl/+1skGJcMOjqSVBw6ehr+fSUwelsT+ZfCJ5S+vZFw24NrMaR0veqAh5k0n1jfmvZq+nxeej+Cw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx1HIhXBJVJAolCrTy0wL05nh5cg4O+AS7DR2wuXrjx2aFCjt6RwJCXlne+21L172OUfL2PF7nEMqCKNaMOjo/wBuN9s49Ayn5diGa0dNY4rdhmFZTqs1xWgKqK1rAecZBJQLREVHdyzbNaymYbfHlufbTb/eqLluc6Jrj5ByCS1dapaurZcx5X4RtqNnKfUZ4oT7FC2B+wL7o97tjS89fVRy0rvnO5ZFwLQ7FyLxTRPXQsAQx7iG2dI8Nw98zkPuj8iMIpGl8BIz5B39Ze9qtaqt6jWWzkzHsizT8kzpE3IyO9O7X8rNEAY0Yrt1H1FGCUYx2SJF6hbEnIVaL56xlIj58h1o27QtBW3AGhvYdumZbr4GKNh9EumAZMqRwefILsEeIIIUKAbt50PQ0c8+18Hd3nGKKI9YuuRH67+jBDSHmCUQGrzMrGT3ecQT5eqeA/YDiuOMkxzu1JgkCAPXfqQQkfUN4XL4Qq4V7dfWXP5IOWWA/6Yt5+Y+V0ndPFGdAZkBF/+nZ/v92qE8ojiD7tR1/zzlOIzW1xv6Y7u9RNPHobn5jR7/dAoK+847UlW7X9bHw1rN1sumb6zV9OYPk342mngs+jW7md4t+n+s7eb2no3bidfebBY4sFqjdjvNo2RyjYY/m31YtYZZzO69p0CYOFvdg1nffhnWafT1t2km4+xpy213+ny1eOqzixzd0e+TfOXhq+sNm4yjVT7m28VN41vLDgmfoKeAtX+5s/ZzT8wnsbNO2dWXxtXtzFuZ9aQ5HGy/3g8vvgWd15z2czg0lpIwyqZPgEW5VOMRDLSh7BcSH8uLspDQiApXP1EaxQVQoXfVLiUtfiYFiIS+bOZuPezbnuddOIPm5UXPu+xdWq5lD62e1fA8p1l3Sw3asTii2Gc0IiqWUtnd/HxMEC99DjSE1MhZhufA9Q8QB0ggLaAP8nAwymHMpIrXs/rCixYx4yJ2mjFbJDNwwfN07Y6J7/R72osEpAfKbTsHyv0AmCQElLyr+eZywLmQpXhGeSZiu5ajGoVMXgCp0mDfcdsNk5NlEoMiai5ZmMVQS+ZJURiT7/4dA2FeWAnHCUsFiu3i+L2b3fG3shDSJyTKgauULkA2E07cRE6Zz/t5N/bzLuF7WUjUKZNVFSnBOyaHn16HRU1JNSlVYpjbJfdqy19CnAAwP+BnHpemihfmZC96ebvKC0PKSbfs7zOqPdeyPM+KjraUVKYS3pSKaZsjwJnUu82YLYCaFYT5qeumYn0UubIf8svEnI4EErCU86cVy0+8NUbA1VsjkOdm/dmHzEFIWTcBa3HK1o/lk0Qx/vDVgn2s/KT5h/xbsTR8bdcJrL04Mk/5wBCEztRKXSybd2YDMwlLpBKydB/8FMCp4IfGqsgVFyGnaZoJeP+LpiSuoyOMWUZFMNALw77sFjzFJgH/1ekNTCHtL3f1mr97V/++vRlJAVwivfIl/+1skGJcMOjqSVBw6ehr+fSUwelsT+ZfCJ5S+vZFw24NrMaR0veqAh5k0n1jfmvZq+nxeej+Cw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb/I4EH3vr4jSx1VwEq6JClIKtOXrdaEX2peVcSbgNnFo7ATor187NClQ2m1XQkKejM+cufjYRxxHoe16nEMiaMy0Qa+t/xM4gWk7YBotQhpGbVJvGI5tmUbddiwnaE4c2/R1bcB5CgPGBWairdumVTPMhmG1bk3HtRpu1amYjeqTrt1DwiW0dKmYuraMQsbdPGxbTxPmxphT7jIcAXcFcUfe5YUrPV1ccNI7R2uWecCkMxNi7iJEKj4QCENSIXGEjtCWz5HP3RGdMizSBN5j+rytv+9dLBaVRbUSJ1Nkm6aJTAdJH5/T6aHeOSg2gz9gQbxedzGLGSU4pG9YkboEMYt9zQuncULFLPoC2kKWqaANWBKDWDV2qKOPADm7HyJtkUw4NvgMWwXYEAJIgBHQ7oaDtn74sw6u994mmPEgTiK+s/4dJWAZhPEcfIMXmRXsfo64p1ydIyDugJEw5TSDKzUmc0yAazcJBHR5QbkcPp9refu1JZc/WkwZkN+05QhtcpXU0Z7q9OgUuPg/Pdvs1xrlHocpdJK7/p/gzem+3HPr5C554oF1PDWvmoNaq51T2HRekyrb/b7eHdZytt43Pa5OefP8YuINR38PW33vr6j7On54GnO8vJjMzl7JDGWNy2Z3eoO6l5f+2SqaTs7u6qnVeKqf8Zj3z6rkvHHb8p97s4MgbGW+jcYtVvXv71v46Y1c19lVc0qycc/8c/7QH4fVZbCKoruXm9pi1H+8746z07G3GDDv7GE58gUZwnU8mt+gg4vs+fRt3K0eTxFIMWjGD4/tj5w2c9g2FpIwSifPQESxVOMx6Gknsl9YfC8vykJ9I8hd3bnSKC6ACb2jdilpcVMpQNR3ZTPX65Ou5TjOsd1rmnXP6Xt9s2ZaJ6Zn1h3HblRrhQatWexQ7MYsoCqWUtn1/HxPkEQuB+ZDYmRxSmbA9W8Qe1hgbcCG8nDEjMNtLFXcMvGz+fpCoLHIFlb6/FKly8intWCla1exuGbXiRcISLa027K3tHsIhM4pKIFXE87liHMhi/GKs1SEViXDFQapvAISpcKuXWvVEafRPARFFUWxn4ZQmc/meWkQX//bBiY8t1JO5nEicGjlB/DL/Ha/FaWQPj5VDlyldAyynbDnLrKLfD7lXd97ZxXwXupTdc5kXUVCyZrJ9qePcVFzUs5KmRjhVsG93PJLiD0A6Bt+aLc0ZTw/oxvRi/tVXhlSUDpFf19x5bWSZlmad7SpxDKR8EhqpoVGQFKpeKvb+AUYKiHQjy6ckvVO5NK+zS8VMzYSWEAk50/Llz94bYyAq9fGQJ6c5U+fMlshZd0ELMU+WzeUjxLF+Nt3C3GJ8pPmG/m3iJOPxPdhbcSReconhqBsqlbqall9MRsklrBUamGcbILvA9gXfNtYFrnkIuQ0TVIBX3/RlMi1dUxInDIx6Om5YVN4c55iNQf3w+kTTC7u77f1kn95W48vL0ZSAiOsl770v50Nmo8LAV09CnIubX0pH58yOJtuCP07wX1a3zquW82eWd/Req8s4FYmnU/mz5aNmu6eh86/</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBQFFRUVxv3sJhWJRNBgT99e+g0ZPkJOfL+13p9PR0P73Q88wzNnyP7QCMUZy4YVBWxJfKP4jmmyxs72oWjxo1rl63am0G0rVmq2mxLGxwnNGulBWMU6QEODGC5KXC0ky9RvM1htHpdodtd2j2qcHz20p5iWJMTBOVJ7pSzn0vwJ2r25dKGged0MAu7gSGj3AngZ05UEcdotkx7pgqr883lFeH8auTJFGHouCTiSDyPPgEQ596pj7oPJu4M3ftwEjSGL35NPFL5e1slmVPWf0pjG2KpWmaonmK6JjYtX9VXkv3w8hUAiu8rbtGEAYuNDz3YhSgVJQ4oVkGnh3GbuL435hmKIYuTNdQDmuQ4YJfFeq3gyu6H1r6ADLGRg07BnM3NkMWilEAUXkxU14qv35WwdtZPTYCbIWxjz+t/xskFJyQF0bIrOF7ZHd0P7f4RbpenxHsKAH0Uuye0Lhok8iACJenMbLcfORi0nwmLl/LX87xvcMQ/C8leabe4ySwqS8yI7o2wsn/U6/3tbpZWRpeil5blwyeTFEculv5wp3kbh6zwGnScbR4uUJ4r3wD9Sj12/pzoz766u0Q4DjNEpgRs4K2FYLxBmssNrdwYtTrqT1hgh43dph0j1J301jlYp83dH0MjopfdTQbL4Xj0hq7DXNwXtClXnecN3x+OTWO/HoA0mUrsLut+HyOrD7L5xdtQqdMc6oM4hbHD3asQTmDY3thaht3oPXhgePp3TjzGpvQ2ZcGvfk08BZjcODi9VbGIYNffsf0PoYiriE6X4Ms/q8bNC8aifFYdItJYZHPM0GvqqJ0q2K3C1DXBpkiAFsRRhcwFuzD0Tm4PT6jBaAtZCCCszoDmWhvxKWmDaXMXC697VKRZUGdcVkfbMQS2RClfClu1wPaWG2jDSvT27kgmOtZuKsPIrN/yPoOHKu6mo115azupXysS/TqKrNzsr6oe5WZ6It6abUXeHUmZWJ29ShKmTPermbRZsFn8CJpKuB6gFlIXUft6/6SgfWZA/fSSAWHq1xw1O5yqeaSDqYlwR4vSWx6V95G0Dejne8574z3iXHd7C3Pu56Xbi/SXu1Kve782Jsru7qoSQMw2yx2q+XBWMmnEuyPwe7u0W24xjrM7G07E7XNYBhuFecEx0CTBEEDJF00UJXeAIQ9AagccPNLdy80w64pZ9SAxaUq7/Wa67N7XGOjR3sG024zm9GqOT02RSmobofpbu+ozlqeVIdz87TgE/6ywafqqWm4DMwjS1tL/WSYW31tXtpNxXwN+1XTHlDehZdjtTUA8eXseKo9S1bNCT7vXMtaCesJ57UsT63PIsuzojOu6qF2iOmmgOostTmfhkkJ2KoAQG+/2AuaKrSLpJpKpm1UwQCylKTgsmeTIbs8DvonD27qIMyHq8n+8FYYU8wkgco0ibSVVGqLwCyK0J8vJHkPFoJtx4ItyYIGRaBtlGG2Ifla9Iny5zzK1zzakgCk+hY0+X6pvqD5ZJLMOQ6cA2ERyLyjHvOV2fTp1hFJo/k44jIVj61guwoPqu/GizidL4bD8Sjf6WnvsCezyqLnw1N9W5JOhwi446HuHMRQNKbRZpNE1QDGMFEiX1Xyy2SL921359ODaoMRprQIW+zC32WLniFth7E9Z4b9WTCtt/gSTq1z36/u29mqqs+bUcvsBpZ4PlPbeEmHIJT5WeNo5ix7cBbZqJlZA3DYGew493jhzEvDrQ6zmTZczf1qo9Q4jUY+fdEpbhxNsnkv4yRNq9ZNQe/rOIrdTdq283gSmOzGSJqnLb1supF34Nn0oHNRfWn7pFjTkxm11GlJ49Zw69utCA6oGXUCUssaKb3z7mJcIn8CbwP083R4CG/zg3o/WT6MnjvpmJNuRTC5L4sLSBHLMrkVjOTvBKaQuGbNuqp2ooIF4QQFSeW1OFWQl05KKI5rdsiVcVtLTabdZLsS3W3XWbbRkGiOZmQa0C2ep1lRurOcG4pPELthYLmFr4LH3W6pvwOEfgejwERx7RSm0EG48heLRb7KSjAj128YYKSHhCfScotj5QbTrTfarEgLNFsHcotuy802XZeZVqU8DpNJMImBlaD4A0dkmA8ccYagG7moIJLFbYrJdYoTkpKjcUoTj3k6GU8BSgnVjAu212G5doPCrh95qABM+aGZeugpcqJrgih8+2VrBsRX6UzS/1Hm3etN/22In/fu2SA6plso4CIeAZGKoj8Ib6vTuAfzfdDc+6Dv5kFqusWFTlKbxC68Ifm49btjilZ5tAuJ6g75oflZ8MEq9TmghyPz5MJHzz+eA4RNEr7xei/J0Xg6PqWnU3otQqvgUjExTzEU3aLmCKaEEJ318IAC6mGC+hEXfaD+5Pkh/4gvTZxgnpDv2SctU74uf/AQmSNcPEQU0vL5T185H1ySvCUoT76SdT3yXikQ//VJAzuw0CPiKfnJwtj8Xa4vbL3zQ+IsBpgb2MWqYJ7nb5oChsSsS4ZYGL83/pWBr5x/FD6S/MCSkG7apQn6fqdcTKeXigFhmAaJIlaugvcT84ozOUeo81vpDzNX7vdG5nP8LZlfq6M5mV2+UXnouv9bueZe2wUicgq7VywvlZy8S4nzwH43od8Afjmk22T6/WVIf4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0516361403082996838</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0516361403082996838</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0516341403082994503</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0516361403082996838</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130911_020045</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2D6ECA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2D706A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E61862CE0C842255E0401F0A079902DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1fdbc8c4-ad48-432a-89cf-62c0ba30db83</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_UserGet_CS_FUNC_NONCLG_FAU_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="721a9832-d890-4eaf-ae35-7fa0e3462a9f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0fd30935-970f-438f-ab61-4de1035d3d25"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3c659e53-aa46-49e7-846c-2cbbf9d431bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG" id="aab6db41-8912-4425-af3e-ebb1963ec6ca"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG" id="d8dec5ea-59bf-4d1a-90ad-8757483fb1c0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="f7d3cee1-4a36-41af-84ba-1c32469090b5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="b48fa28b-cd4c-4a78-b463-1859faf69885"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="e8301d90-b4f6-476d-8004-cd3a2e87f8f5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="e0085640-07c5-423b-875d-7c40049ad8c7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="7e14523d-3a4d-4384-a1b1-2e573d424e9d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BA13D88CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B1D0378AF2E0401F0A07991D67:AC1815F6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0516451403083005352</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BBFFF576D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BBFFF576D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BBFFF576D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BA13D88CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2B5D1496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B09D08610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BA13D88CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B5D1496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B09D08610AE0401F0A05992642</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1P6QS3QEWYQ5IiiINXj0Zc7Id1APG0CTVrAX3+TYhEQvXpnmGGyu7P22h9ZyRlHceT4Tc4hEYRRrduu6/+MR46LKqFlgF0ODXdUxQYa2a5RdSwPjdyRVbYcXetynkKXcoGoqOuOJR0sz7Cr91bNtz3ftUterfysa78h4RJaupQsXVvGEeV+Hraupwn1GeKE+xTFwH2B/aB50/Olp48KTnrjbM0yD5g0pkLMfNPEpRAwRBEuYRabZ+aOz1nI/YBMKBJpAm8xQ17X3/YuFovSolxiycR0LMsyrZopfUJOJsd646jYDGGXjtl63UKUUYJRRF6RInUDYspCrRlNWELENP4E2jZtS0EbsMQGtl16rJvvAXJ230TaIZlwZPApsguwIYwhAYpBexh26/rx9zq43nufIMrHLIn53vpnlIBmELEZhAYvMivYfR/xQLkaZ4D9LsVRykkGt2pMZggD1wYJjMmyR7gcvpBrefu1JZc/UkwZ4J+05czc5iqpmweq0yYT4OL/9Gy7X2uU3yhKoVFp/Ym8l+5iGjjmlQnXnQfr18nttHOF3XpOYdt5TWrT7rf1/rBuZutt00XIm554KnvVdPVwhyvo8jK7unfm4UPwXBnPwZnYZvOZDJ5qvcGgP+w/vsyeaTrs9D183+qxpwF7OPdY2w1OA3bUP309ETXaXKGT14vKQ3zynI6zqzYjT8mj13o6QX/T67ByxzqvjCz7096sd3XXMq/7i2pbVJ/nMJyUYY5fHsvLp4sjrxx4aYAur09H/FckzlfCqr/ntJ3DrrGQhCAdvQAWxVKNR7etdWS/kPhaXpSFhMY4d/VnSqO4ACr0htqlpMVPpQCR0JfNXK87LbtWq5037XK7Wm1dVC4s17I7VtOq1Gp22zsvNGjNYo9ii9ExUbGUyq7n52uCOPY50BASI2MpngLXv0BsI4G0Lh3Kw8Eoh3smVXwa4RUf22U3I9m85tjZNCExcm1du2WiT/tJcywg2VFu29lR7iFgMiOg5F3NN5cDzoUsxRxlqYjsUoZKFFJ5ASRKg33HrZ6anMSzCBRRM2ZhGkFpNp3lhTH5+t8xEOa5lXA8Y4lAkZ0fv0+z2/9WFEL6hEQ5cJXSOchmwoGbqFzk83nep9t5F/DNNCTqlMmqioTgNZPdT+/DoqZkMymbxDC3C+6bLT+EOABgfsHP3C/NJl6Yka3oxe0qLwwpJ42iv3NUmpfSLEvzjlaUVCYS3pSKaZsB4FTq3eqe/QVqbiDMb103G9Z7kTf2XX6pmNJAIAGxnD8tX37jrREAV2+Nrjw3y+8+ZHZCyroJWIpDtlYknySK8ZevFuxj5SfNA/m3YEn43q4DWFtxZJ7ygSEInaiVulhWn8wGZhKWSCVkyTb4IYBDwXeNmyJvuAg5TaNUwOdfNCVxdR1hzFIqum09N2zLbs5TrGbgvzt9gMml/e2uXvJP7+o/N71ACmCM9I0v+W9ng+TjgkFXT4KcS11fyqenDE4nWzL/RvCA0p93Op3Titd2d5W+8n4kdzJpfDB/tGzVdP88NP4F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1P6QS3QEWYQ5IiiINXj0Zc7Id1APG0CTVrAX3+TYhEQvXpnmGGyu7P22h9ZyRlHceT4Tc4hEYRRrduu6/+MR46LKqFlgF0ODXdUxQYa2a5RdSwPjdyRVbYcXetynkKXcoGoqOuOJR0sz7Cr91bNtz3ftUterfysa78h4RJaupQsXVvGEeV+Hraupwn1GeKE+xTFwH2B/aB50/Olp48KTnrjbM0yD5g0pkLMfNPEpRAwRBEuYRabZ+aOz1nI/YBMKBJpAm8xQ17X3/YuFovSolxiycR0LMsyrZopfUJOJsd646jYDGGXjtl63UKUUYJRRF6RInUDYspCrRlNWELENP4E2jZtS0EbsMQGtl16rJvvAXJ230TaIZlwZPApsguwIYwhAYpBexh26/rx9zq43nufIMrHLIn53vpnlIBmELEZhAYvMivYfR/xQLkaZ4D9LsVRykkGt2pMZggD1wYJjMmyR7gcvpBrefu1JZc/UkwZ4J+05czc5iqpmweq0yYT4OL/9Gy7X2uU3yhKoVFp/Ym8l+5iGjjmlQnXnQfr18nttHOF3XpOYdt5TWrT7rf1/rBuZutt00XIm554KnvVdPVwhyvo8jK7unfm4UPwXBnPwZnYZvOZDJ5qvcGgP+w/vsyeaTrs9D183+qxpwF7OPdY2w1OA3bUP309ETXaXKGT14vKQ3zynI6zqzYjT8mj13o6QX/T67ByxzqvjCz7096sd3XXMq/7i2pbVJ/nMJyUYY5fHsvLp4sjrxx4aYAur09H/FckzlfCqr/ntJ3DrrGQhCAdvQAWxVKNR7etdWS/kPhaXpSFhMY4d/VnSqO4ACr0htqlpMVPpQCR0JfNXK87LbtWq5037XK7Wm1dVC4s17I7VtOq1Gp22zsvNGjNYo9ii9ExUbGUyq7n52uCOPY50BASI2MpngLXv0BsI4G0Lh3Kw8Eoh3smVXwa4RUf22U3I9m85tjZNCExcm1du2WiT/tJcywg2VFu29lR7iFgMiOg5F3NN5cDzoUsxRxlqYjsUoZKFFJ5ASRKg33HrZ6anMSzCBRRM2ZhGkFpNp3lhTH5+t8xEOa5lXA8Y4lAkZ0fv0+z2/9WFEL6hEQ5cJXSOchmwoGbqFzk83nep9t5F/DNNCTqlMmqioTgNZPdT+/DoqZkMymbxDC3C+6bLT+EOABgfsHP3C/NJl6Yka3oxe0qLwwpJ42iv3NUmpfSLEvzjlaUVCYS3pSKaZsB4FTq3eqe/QVqbiDMb103G9Z7kTf2XX6pmNJAIAGxnD8tX37jrREAV2+Nrjw3y+8+ZHZCyroJWIpDtlYknySK8ZevFuxj5SfNA/m3YEn43q4DWFtxZJ7ygSEInaiVulhWn8wGZhKWSCVkyTb4IYBDwXeNmyJvuAg5TaNUwOdfNCVxdR1hzFIqum09N2zLbs5TrGbgvzt9gMml/e2uXvJP7+o/N71ACmCM9I0v+W9ng+TjgkFXT4KcS11fyqenDE4nWzL/RvCA0p93Op3Titd2d5W+8n4kdzJpfDB/tGzVdP88NP4F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxljG4zBnsAMCaGhDU2LKUn7ckfIC1ZjS0aSDeTXX9nEBAjJTe4MM4zWq7NnP3Skc4GSuO73hAAuCaPasN/R/7G8ltUMQzA8t2UbDq6DMfNc12jWmy3LmTetNmrr2lCIDIZUSERlR69btmNYrmG3J5bn267vNGqe5fzRtSlwoaCVS83StXUSU+GXYTt6xqnPkCDCpygB4UvsB73Rja88fVRx0rvnW5ZlQN6NpEx908S1EDDEMa5hlpjn5oHPeSj8gCwokhmHp5ih6OhPe1erVW3VqDG+MOuWZZmWZyqfUJDFZ737qdoM4ZDO2XZ9iSijBKOYPKKC1AhkxEKtFy8YJzJKXoG2TdsqoA1YYwPbDv2sm88BSnbvRDogyQUyRITsCmwMc+BAMWi/xsOO/vl9HdzunXBExZzxRBytP0YJaA4xSyE0RJVZxe79iCfK1T0H7A8pjjNBcvhejEmKMAjtB4c5Wd8QoYYvFFrZfm0t1I9UUwb4I205N/e5Kurmier0yQKE/D892+/XFmWK4gy6CR7HQbZ2JrfZV+v66g+X7bOzVfNh4S46JYV95y2pXbuf1sfDuputp03ZRejyPJ2N7u16I532vp017vF1dmveLb7Sv1N3cR/+JM2p84cS73e9sbmZPiyCYDn5xVfj30mOWLS4G+DLCE/Q5tP12ShfL527YAj97zPE4aGX/hj1J+Np8jgf5SlY11/cIPrJvk3u5bAdfGEe2zzydqsfNmbB1d1jk8/Nqy83ImpNPv32rCxq9K4flunXy3SyDDe9znNO+zkcGitJCLLZX8CyWhbjMexrA9UvJN+Wl8JCQmNeuvppoVFCApV6t9hVSIufKQEioa+auV0PLm3P8y7qF82+7Xhu78pyLHtg9aym59Vdp11p0JbFEcVLRuekiFWo7HZ+3iaIE18ADYEbOctwBEJ/A7GPJNKGdKwOB6MCJkypuBprGUFKZ7mH17YA5kZIzJcuSnTtO5O39Jb35hL4gXbb9QPtHgMmKYFC4IsJF2rEhVTFWKI8k7Fdy1GNQqauAF6osF932k1TkCSNoaBqJizMYqilUVqWxhTb/7qBsCitROCUcYliuzyAr+Z3/K0qhfIJSeEgipQuQLUTTtxFjSqf1/Nu7uddwfeykBTnTNVVcoK3TA4/PY9LMSe7WdklhoVdcd9t+SDECQDzDX7mcWl28cKc7EWv7ld1ZShB6Vb9XaLaspbleVZ2tFWIJVfwptJM2wwAZ0rxNhP2ANTcQZjvunB2rI8i7+yH/DIZ0UAiCYmaP61cvuO1EYAoXhtDdXLW733KHIRUdZOwlqdsl7F6lBSM33y3YB8Xfsr8Q/2tGA+f23UCay+OylM9MSShi2JVXC2bV2YDMwVLlBYyvg9+CuBU8EPjrsg7LlJN0yyT8PoXrRC5jo4wZhmVw75eGvaFt+QpNyn4z04vYEpxf7qt1+LV2/p+dBMoCUyQvvMl/+1skHJcMOjFo6Dk0tHX6vGpgtPFntA/ETyh9ReDwaDZcvvOTutbnmf3W89H8iCT7gvzS8teTY/PQ/df</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb6M4FH6fX4GYxxEBExICaiKlSbPDNmmbS9uZvqxccwDPgEmxyWV+/RpSaJKm3XalSJEPx9/5zsWffcZxEptun3PIBE2Z4g276j92y8BWYAca2O2mZpk+0jqW09J8G1udJuq0bSdQFY/zHDzGBWaiq5oGsjSjraHOwnBc1HYtu9FGrQdVuYOMS2jp0jBUZZPEjLtl2K6aZ8xNMafcZTgB7grizvuTsSs9XVxxUntnO5ZlwKwXCbF0dZ00fCAQx6RB0kQ/0w98znzuzmnIsMgzeI7p8676vHe9XjfWzUaahbppGIZuOLr08TkNv6q9L9Vm8D0WpLv1ALOUUYJj+gcXpCYgotRX+nGYZlREyRvQSEdGAa3BhmgEWeyrqr8EKNl9EOmAZMaxxiOMKrAZBJABI6Dczryu+vVjHdztXWSY8SDNEn60/hwlYCuI0yX4Gq8yq9h9HPFEuXpnQFyPkTjndAVXxZgsMQGu3GQQ0M2Ycjl8PlfK9isbLn+0mjIgn2nLmb7PVVLXT1RnSEPg4v/0bL9fO5Q7HOfQ67eappXg6azVNkIj7/z+M74MNuPrHyuvW1LYd96Rqtv9vD4e1nq2njddDvxgzQN2E9oL64qR61bnHt8tZgkkeDJ1tltvHM8urvH0b9S27esAG+nmz8Tc+vfO3W04geb3eP3zYTAe89u/vjSjmxbSr8KLiM5iu4mz82/r6c10cDGbtx7mDhK/RNO7uRKX5xASb2TatsO20X3QXLSXFz8H/jQKL7L7qTV0btmXUed+ct78/oDW37x8fRuNwei+5LSfw6GxkoR5/vgLiKiWxXh4Q2Uk+4XF+/JSWKivBaWruyw0igtgQu0VuwppcXMpQNR3ZTN369EAOY5zbjhDo9NGRv/CsAw0MvpGy3HMtmVWGrRjcURxkLKAFrEKld3Nz/sESeJyYD5k2irNSQRcfQdxiAVWPDaThyNlHBapVHGUJk4CTyx8jBBpCz81/c5vkaOtqlyl4ppdZ/1AQHYg3cg8kO4ZELqkUOh7MeBcTjgXshZPeJWLGDVWuMEglzdAVoiwa1qdls5psoyhYKonqZ/H0FhGy7IyOt/9mxomvLRSTpZpJnCMyvP3ZnrH36pKSB+fFg68SOkcZDfhxFXUrPJ5lXfr5JVVwfdznxbHTJZVZJTsmBx+epmWYkzqUakTIxxV3Ostn4Q4AaC/w08/Lk0dz1/RvejV9SpvDKknvaq/T7jx1MhXq7zsqF1oZSbhdSmZSJ8DyaXgbRfpb2B6DaF/6L6pWR9Fru2H/HIRsbnAAhI5f0q5/MBjYw68eGx48uBsPvqSOQgp6yZgI07ZBrF8kxSM3322EJcUftJ8I//Waea/tOsE1l4cmad8YQjKwmJV3CzbN2aDpBKWSilMs33wUwCngh8a6yLXXIScpsdcwNtflELjuiomJM2Z8IZqadjX3ZKn2C7BfXF6BVNq+/NlveFvXtY/JuO5VMAEq7Uv/W9njZbjQkAt3gQll666kW9PGZyFezr/TPCE1J+PRqOW3R5atdTbjoOG9suRPMik98r82rJX0+Pz0PsX</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0516451403083005352</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0516451403083005352</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0516401403083000849</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0516431403083003110</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0516451403083005352</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BA13D98CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2B5D2496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B09D09610AE0401F0A05992642</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e0085640-07c5-423b-875d-7c40049ad8c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_UserGet_CS_FUNC_ADULT_SAU_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="febf05ef-9914-4914-9bc4-55827b992059"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f625fa50-b651-49c9-946a-06747428625a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="63977688-4ba7-4466-8645-aba463888275"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_SAU" id="7124e173-2b52-4a80-89a7-8f7d2b96d2bb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_SAU" id="d696e039-e2e4-41db-8be7-0e9bae2711c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="173e9580-0fc8-4021-9b52-5907fb89d80b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="ee48db42-a238-4898-9b11-2d8e4972d80e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="2f4c08c3-eefe-4a6a-95c7-bddc4dcb270e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="42f893fc-3d6b-4c51-9918-4391022565dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="41b3c349-fc34-4cf5-a126-de2831245fcd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BA14038CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B24138FB7CE0401F0A07991D61:2CD5CE0F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0516531403083013516</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BC6BDCDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC6BDCDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC6BDCDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BA14038CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B28BCE7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BB8C163A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BA14038CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B28BCE7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BB8C163A19E0401F0A0599264C</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtb5s6FP6+X4Hox4lgUvICaiLlZZnYmjVrurXblyvXHIhbsCk2JN2vvzYpNEnT3u5KkSIfjp/znBc/9pnAadL2R0JALilnRjAdmP8gcG+j6LZrIYQdyz11iIXb4a11SyIn6oU4Qj3PNAIhCgiYkJjJgdlGjmuhruX0r5DnO12/g1rIc3+bxk/IhYJWLi1kGps0YcKvwg7MImc+x4IKn+EUhC+JvxzNz33l6eOakzk827KsAubDlZSZb9ukFQKBJCEtwlP7zN7zOQuFv6Qxw7LI4SlmKAbm0971et1an7Z4HttthJCNPFv5hILGJ+bwQ70ZwoBFfLueYMYZJTihf7AmNQe54qExSmKeU7lKX4F2bAdpaAs2xCKOy05M+zlAxe6dSHskc4EtscJODXYJEeTACBg/LoOBefK+Dm73XuWYiYjnqThY/x0lYCUkPIPQEnVmNbv3Ix4p1/AMiB8wkhSClvBNj0mGCQhjkUNEN+dUqOELhVG139gI9aP1lAH5m7ac2btcFXX7SHWmNAYh/0/Pdvu1RfmJkwKGqPvpguTy+73o8OvZ1zL8JTfi/NfHLy4fVBR2nbekmnY/rQ+HtZmtp01xnH4s3T/JPFjjYnFP7rrxY+w5ncBOvehLb9lvY/fhu9u5zO/5zWgpguvLZDO9uF6A3aXt7K6/nKySBLWjr3/uPix+P5zG49ls9cgXS5Yhe3I9CX950165+uwRvCRXGaDxOPk8ywKSpYt5wu5LZ104X7vTmx8X8qZIikWnZL/Fl/TD/Aqv0d0kDjfe5z6d33i2O3jOaTeHfWMtCcvi9g6IrJd6PIKpMVP9wvJtedEWGlpR5epnWqOEBCbNod6lpcUvlADR0FfN3K5nE8fzvPHIcdFpf/Kp9wm5yJmhkTpLnjPtjmsN2rI4oDjhLKI6llbZ7fy8TZCkvgAWQm6VvCArEOYbiFMssRGwS3U4OBNwxZWKO0WZYugzhxDUj/G9J3rr3sPqrjSNb1xesIt8FEnI96Tbae9J9yUQmlHQ+q4HXKgJF1LV4gGXhUycVolbDAp1A+RahP222+/YgqZZApqpnfKwSKCVrbKqMrbY/rctTERlpYJkPJc4carz92p6h9/qSiifkGoHoVMag+omHLmK3Dqf1/Pu7OZdw4+KkOpjpsoqc0q2TPY/PU+LHpNmVJrEiHBq7s2Wv4Q4AmC/wc8+LE0TLyzpTvT6elU3htKTYd3fB9x6aBVlWVQd7WmtzBW8rSTTsZdACiV4j1f8HpjdQNjvum8a1geRG/s+v0Ku2FJiCamaP6NavuOxsQShHxuBOjib975k9kKquknYyGO2SaLeJJrxm88W4hPtp8wL9bfmefjcriNYO3FUnuqFISmL9UrfLI+vzAbhCpYqKeT5LvgxgGPB941NkRsuUk3TbSHh9S+G1riBiQnhBZPB1KwMu7pb8ZSPGfjPTi9gKm1/uqw34tXL+mZ+vlQKmGKz8aX/7WzRalwImPpNUHEZmBv19lTBWbyj808Ej0j9pDueTqbT01kj9R3Pa3c7qCngXibDF+aXlp2aHp6H4b8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtb5s6FP6+X4Hox4lgUvICaiLlZZnYmjVrurXblyvXHIhbsCk2JN2vvzYpNEnT3u5KkSIfjp/znBc/9pnAadL2R0JALilnRjAdmP8gcG+j6LZrIYQdyz11iIXb4a11SyIn6oU4Qj3PNAIhCgiYkJjJgdlGjmuhruX0r5DnO12/g1rIc3+bxk/IhYJWLi1kGps0YcKvwg7MImc+x4IKn+EUhC+JvxzNz33l6eOakzk827KsAubDlZSZb9ukFQKBJCEtwlP7zN7zOQuFv6Qxw7LI4SlmKAbm0971et1an7Z4HttthJCNPFv5hILGJ+bwQ70ZwoBFfLueYMYZJTihf7AmNQe54qExSmKeU7lKX4F2bAdpaAs2xCKOy05M+zlAxe6dSHskc4EtscJODXYJEeTACBg/LoOBefK+Dm73XuWYiYjnqThY/x0lYCUkPIPQEnVmNbv3Ix4p1/AMiB8wkhSClvBNj0mGCQhjkUNEN+dUqOELhVG139gI9aP1lAH5m7ac2btcFXX7SHWmNAYh/0/Pdvu1RfmJkwKGqPvpguTy+73o8OvZ1zL8JTfi/NfHLy4fVBR2nbekmnY/rQ+HtZmtp01xnH4s3T/JPFjjYnFP7rrxY+w5ncBOvehLb9lvY/fhu9u5zO/5zWgpguvLZDO9uF6A3aXt7K6/nKySBLWjr3/uPix+P5zG49ls9cgXS5Yhe3I9CX950165+uwRvCRXGaDxOPk8ywKSpYt5wu5LZ104X7vTmx8X8qZIikWnZL/Fl/TD/Aqv0d0kDjfe5z6d33i2O3jOaTeHfWMtCcvi9g6IrJd6PIKpMVP9wvJtedEWGlpR5epnWqOEBCbNod6lpcUvlADR0FfN3K5nE8fzvPHIcdFpf/Kp9wm5yJmhkTpLnjPtjmsN2rI4oDjhLKI6llbZ7fy8TZCkvgAWQm6VvCArEOYbiFMssRGwS3U4OBNwxZWKO0WZYugzhxDUj/G9J3rr3sPqrjSNb1xesIt8FEnI96Tbae9J9yUQmlHQ+q4HXKgJF1LV4gGXhUycVolbDAp1A+RahP222+/YgqZZApqpnfKwSKCVrbKqMrbY/rctTERlpYJkPJc4carz92p6h9/qSiifkGoHoVMag+omHLmK3Dqf1/Pu7OZdw4+KkOpjpsoqc0q2TPY/PU+LHpNmVJrEiHBq7s2Wv4Q4AmC/wc8+LE0TLyzpTvT6elU3htKTYd3fB9x6aBVlWVQd7WmtzBW8rSTTsZdACiV4j1f8HpjdQNjvum8a1geRG/s+v0Ku2FJiCamaP6NavuOxsQShHxuBOjib975k9kKquknYyGO2SaLeJJrxm88W4hPtp8wL9bfmefjcriNYO3FUnuqFISmL9UrfLI+vzAbhCpYqKeT5LvgxgGPB941NkRsuUk3TbSHh9S+G1riBiQnhBZPB1KwMu7pb8ZSPGfjPTi9gKm1/uqw34tXL+mZ+vlQKmGKz8aX/7WzRalwImPpNUHEZmBv19lTBWbyj808Ej0j9pDueTqbT01kj9R3Pa3c7qCngXibDF+aXlp2aHp6H4b8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0PzqlL7zZjjCDoF52xUVA3fXLnZgeSrRNSpJW9NdvUmwFRK97Z5zBnJ485zkveZJjgZLYC3pCAJeEUWM46Jj/ztvh3Gt4bcv37ltWo6X+O4LQs+4d8NG93/Dqbc80hkJkMKRCIio7pue4DctpWe7RzPEDtxU0vZrXPLozjRvgQkErl5pjGqskpiIownbMjNOAIUFEQFECIpA4mPZGF4HyDFDJyewer1kWAXl3IWUa2DauhYAhjnENs8Q+trd8jkMRTElEkcw4vMYMRcd83fv09FR7qtcYj2zPcRzb8W3lEwoSfTO7B+VmCId0ztbrPqKMEoxi8oI0qRHIBQuNXhwxTuQi+QDatV1HQ1uwwhZ2G/Sbab8FKNh9EWmLJBfIEgvklmATmAMHisG4ngw75revdXC9d8YRFXPGE7Gz/jtKQHOIWQqhJcrMSnZfR9xTru4x4GBIcZwJksOlHpMUYRDGmMOcrC6IUMMXCqNov7ES6o+UUwb4b9pybG9yVdTtPdUZkAiE/D892+zXGuUGxRl0zyaz1sPd8yzqTb3vj7R1ie0xNKRIV9edgsKm85pU1e7X9e6wVrP1uon3knTEoxb4Nxn1Jrfu79Z42sznVy/j3lVz8X0ONAubywfs0vP0ejmisyU7tftnjR839ZyPWD6uN14uKWmLsThAouH2l78WF4er0zqcjx9u83r2O6RXd3U8gaek93N2wevxIUt+jH7fn6chu46iyPemzsoT1xFNIB777cPbf+zF+cGqP/Umnh3lTv/hcRFND0dXnbecNnPYNpaSMM3uHwDLcqnHYzgwzlS/kPxcXrSFhNa8cA1SrVFCApVmV+/S0hJkSoBIGKhmrtdnfdf3/RPv6KR/2h44zVOn4bhnTs9p+r7XqvdKDVqz2KHYZ3ROdCytsuv5+ZwgTgIBNARu5SzDCxDmJ4gDJJExpBN1OBgVMGNKxV2ZHoVzeFgKz6PM9xcvy4g9PzqpaVwy+ZP+5L25BL4l3a63Jd0TwCQloPVdD7hQEy6kqsUS5ZmM3VqOahQydQNwLcKB1zhq2oIkaQyaqZ2wMIuhli7SojK2WP96FsKisBKBU8Ylit3i/H2Y3u63shLKJyTaQeiUTkB1E/ZcRY0yn4/zbm7mXcL3spDoY6bKKjnBaybbn96mRY9JNSpVYli4Jfdqy19C7AGwP+Fn75amihfmZCN6eb2qG0PpSbfs7xLVlrUsz7Oio22tlVzB20oyXXsKOFOC9zxjj0DtCsL+0n1Tsd6JXNm3+WVyQacSSUjU/BnF8guPjSkI/dgYqoOz+upLZiukqpuEldxn68fqTaIZf/pswQHWfso8Vj9PjIdv7dqDtRFH5aleGJLQSK/0zfL8wWxgpmCJkkLGN8H3AewLvm2silxxkWqa7jMJH38xtMZ1TIQxy6gcDszCsKm7BU/5nELw5vQOptD218t6JT68rH+NLqZKARNkVr7kv50tUowLBlO/CQouHXOl3p4qOI02dP6V4B6p77dOBv3BoH62LfVNpyrgVibdd+b3lo2a7p6H7h8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcps6FH3vVzD0MYMBB9+Y2DO+JC2t3TYmTdu8nFHExlYNgkgCY3/9kXAgtuPkJGfGMx5tttZe+6IlXXAUR013yDkwQRKqeZO+/k+zBYDDoGe0AqtjOLjZMZAVIgO6TvP+PAi6vV5T1zzOM/AoF4iKvt60bMew2obdvbF6rt12W61Gq9W+07VbYFxCS5eGpWtFHFHulmH7esaomyBOuEtRDNwV2PWHs6krPV1UcdIHFzuWZUA2WAqRuqaJGwFgiCLcwElsXpgHPhcBd32yoEhkDB5jBryvP+5dr9eN9XkjYQuzaVmWafVM6RNwsvioDz5UmyHwaJjs1mNEE0owisgWKVIzEMsk0IbRImFELOMXoG3TthS0AQU2sO3Qj7r5FKBk90akA5KMI4MvkV2BzSEEBhSD9nPu9fWPb+vgbu8NQ5SHCYv50fp9lIDmECUpBAavMqvYvR3xRLkGF4Bdj+Io4ySHb2pMUoSBaz8YhKSYEi6HL+Ba2X6t4PJHqikD/J62XJj7XCV180R1JmQBXPyfnu33a4dyi6IMBu1ZlsJd7F+Fq1nydb1cTie31+jymv1y+iWFfecdqbrdj+vjYa1n63HTXbFd80u/+FIk/BqNwtEvn07b8/lf3r5FnTtWXP5cTpyRfz+dX25FWrClNYu/33U2+aYXeKu2bQ3/kE7X91H2+8P59jZZfM2LXjf8sYpH5+E0dQr/vj2K2PWGj79eb1aj33Nr2Nqe+Z7nrTvsxjwz+aL1aRudzZxv1sPIicingmVD/KEQEH2m9qf885+uac22nVW3/5TTfg6HxkoS/Oz+L2BRLdV4eBPtSvYLidflRVlIYISlq5sqjeICqNAHapeSFjeTAkQCVzZzt74a271ebzTqju32+dDuXVqOZV9ZQ6slT1PbGVcatGNxRHGc0JCoWEpld/PzOkEcuxxoAMzIkwwvgeuvIE6QQJpH5/JwJJTDTSJV3A5hmbIHFLZzq2vT2FqnscixvZLn41sivtPvbBgKYAfabTcPtHsOmKQElMCrCedyxLmQxXhAeSYiu5GjBoVMXgFMqbDbdLotk5M4jUBRNeMkyCJopMu0LI3Jd/9NA2FeWgnHacIEiuzyAL6Y3/G3qhTSJyDKgauURiDbCSfuIqfK51nerZN3VgU/zAKizpmsq2AE75gcfnoaFzUn9azUiWFuV9zrLe+EOAFgvsLPPC5NHS/IyV706n6VV4YUlEHV3wfUeGhkeZ6VHe0osWQS3pSaaZs+4Ewq3uYmWQE1awjzTRdOzfoocm0/5JeJJfUFEhDL+dPK5RteGz5w9drw5Mkp3vqUOQgp6yagEKds40g+ShTjV98t2MXKT5p/yL91woKndp3A2osj85RPDEHoQq3U1bJ5YTZwImGJ1MKE7YOfAjgV/NBYF7nmIuQ03WcCXv6iKZHr6wjjJKPCm+ilYV94S55ik4L75PQMphT3x9u64C/e1r9nU19KYIz02pf8t7NBynHBoKtHQcmlrxfy8SmD08We0D8SPKH14/ZoMp5Mzq8Otb5l1QU8yGTwzPzcslfT4/Mw+Bc=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0516531403083013516</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0516531403083013516</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0516491403083009394</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0516511403083011526</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0516531403083013516</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BA14048CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B28BCF7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BB8C173A19E0401F0A0599264C</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42f893fc-3d6b-4c51-9918-4391022565dc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_UserGet_CS_FUNC_ADULT_BAU_Get_CHILD_Blocked_tou_P2" searchProperties="true" id="69c9f9e7-7e4e-44cf-892c-71f196fcf25d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f322c169-9993-4ecb-b23e-3fb0f90a1bd0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="deb89959-d4f0-4760-84c2-60b1744502f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_BAU" id="26349e46-72f6-4201-9bd6-3cd24e6ddf5b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_BAU" id="936f01d3-c7ff-485d-b15a-97f184e9d91b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="ab30c958-e9c0-4367-8bde-3258d9609e24"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="4d670dba-b4c7-4b98-b291-181b4b6fed50"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="db6350d1-9b23-4375-8597-9139336a05b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="596fac05-9dc7-4f02-8dec-12ddbfc18cbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="21982c2c-0542-47fd-9fda-396da2ae4374"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B10228BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999AE64821C68E0401F0A07991D55:120F1E00"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051721403083022123</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2413FFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2413FFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2413FFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B10228BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B28BEC7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BC6C15DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B10228BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B28BEC7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BC6C15DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyjyg4CfeoIHGZTtPbUC6dti9HrrMJPk1siB2a8vVjh4YCQ3vaIyEh72yvvfbFyz4ROI5crysEJJJyZviDtvlP04VGrYFrVr0OYFUdeLRwjdhWZVbBjaobBAGum4YvRAo+ExIz2TZd26ladt1ymhO75Tl1r9Ys15u1B9O4hUQoaOVStk0jiyMmvDxs20wT5nEsqPAYjkF4knjj7tWlpzw9XHAyOycblnnApDOXcuEhRMoBEIgiUiY8Ridoz+ckEN6YhgzLNIHXmIFom697n5+fy8+VMk9C5Nq2jewWUj6BoOF3s/Ot2AyBz2Z8s+5jxhklOKJrrEldgZzzwOhGIU+onMfvQDvIsTW0BRmxiFNl3030FiBn90mkPZKJwJaYY6cAG8EMEmAEjOnIb5vfP9fBzd5JgpmY8SQWB+uvUQK2gogvILBEkVnB7vOIR8rVOQHi+YxEqaAruNZjssAEhDFMYEazSyrU8AXCyNtvZEL9aDFlQL7SlhO0y1VRR0eqM6AhCPl/erbbrw3KLY5S6Ljr86fm5KLVTy5KIzQM6bQ/bAWz83Wv2c4p7DpvSG3b/bo+HNbtbL1uyuLsyZnSdPhzFPZJ9e7iNozs6Tprjps/b8jsflXifnZP7i76/lDeT3+cr4Or9U1puqTSqfeyBJdKOB5dDLvoevntuRQ+na3t7iL89RtXKmg8mlRInV3focdWd/HwG4Xp5LHSmwY/zmzevH88vXn6/YBuB2d3142zalhK1ra/LJ1Vln7sfEtvKmPKl30nTYK1uK3Xb0j7LafdHPaNhSSM08d/gchiqcfDHxinql9Yfiwv2kIDa5a7egutUUICk2ZH79LS4qVKgGjgqWZu1qd9p9Vq9RzbdZu9br3xw67azqndtRutljOoDQoN2rA4oNjnbEZ1LK2ym/n5mCCJPQEsgMRa8ZTMQZgfIA6wxIbPRupwcCZgwpWKO669XkkieI2snco8lhWXiLAagGlcc/mL/Uq6MwnJnnQ77p50j4DQBQWt73rAhZpwIVUtlniVysgpr3CZQapugESLsOdWmzUkaLyIQDNFMQ/SCMqL+SKvDBKbf9fCRORWKsiCJxJHTn7+3k3v8FtRCeUTUO0gdEo9UN2EI1dRtcjn/bxru3kX8N00oPqYqbLKhJINk/1Pb9Oix2Q7KtvEiHAK7tstX4Q4AoA+4IcOS7ONF6zoTvTielU3htKTTtHfJS4vy+lqleYdbWitTBQ8UpLpoDGQVAney4Q/AUNbCPSp+2bL+iDy1r7PL5VzNpZYQqzmz8iXn3hsjEHox4avDk722ZfMXkhVNwmZPGbrR+pNohl/+GwhHtF+yjxUf888Cd7adQRrJ47KU70wJGWhXumb5eWd2SBcwVIlhTzZBT8GcCz4vnFb5C0XqabpMZXw/hdDa1zbxITwlEl/YOaGXd3NecqXBXhvTn/B5Nr+elln4t3L+u7qcqwUMMbm1pf+t7NF83EhSu+Uf86lbWbq7amCs3BH518JHpF6t+pUTk97jf6+1NffjuReJp2/zH9bdmp6eB46fwA=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyjyg4CfeoIHGZTtPbUC6dti9HrrMJPk1siB2a8vVjh4YCQ3vaIyEh72yvvfbFyz4ROI5crysEJJJyZviDtvlP04VGrYFrVr0OYFUdeLRwjdhWZVbBjaobBAGum4YvRAo+ExIz2TZd26ladt1ymhO75Tl1r9Ys15u1B9O4hUQoaOVStk0jiyMmvDxs20wT5nEsqPAYjkF4knjj7tWlpzw9XHAyOycblnnApDOXcuEhRMoBEIgiUiY8Ridoz+ckEN6YhgzLNIHXmIFom697n5+fy8+VMk9C5Nq2jewWUj6BoOF3s/Ot2AyBz2Z8s+5jxhklOKJrrEldgZzzwOhGIU+onMfvQDvIsTW0BRmxiFNl3030FiBn90mkPZKJwJaYY6cAG8EMEmAEjOnIb5vfP9fBzd5JgpmY8SQWB+uvUQK2gogvILBEkVnB7vOIR8rVOQHi+YxEqaAruNZjssAEhDFMYEazSyrU8AXCyNtvZEL9aDFlQL7SlhO0y1VRR0eqM6AhCPl/erbbrw3KLY5S6Ljr86fm5KLVTy5KIzQM6bQ/bAWz83Wv2c4p7DpvSG3b/bo+HNbtbL1uyuLsyZnSdPhzFPZJ9e7iNozs6Tprjps/b8jsflXifnZP7i76/lDeT3+cr4Or9U1puqTSqfeyBJdKOB5dDLvoevntuRQ+na3t7iL89RtXKmg8mlRInV3focdWd/HwG4Xp5LHSmwY/zmzevH88vXn6/YBuB2d3142zalhK1ra/LJ1Vln7sfEtvKmPKl30nTYK1uK3Xb0j7LafdHPaNhSSM08d/gchiqcfDHxinql9Yfiwv2kIDa5a7egutUUICk2ZH79LS4qVKgGjgqWZu1qd9p9Vq9RzbdZu9br3xw67azqndtRutljOoDQoN2rA4oNjnbEZ1LK2ym/n5mCCJPQEsgMRa8ZTMQZgfIA6wxIbPRupwcCZgwpWKO669XkkieI2snco8lhWXiLAagGlcc/mL/Uq6MwnJnnQ77p50j4DQBQWt73rAhZpwIVUtlniVysgpr3CZQapugESLsOdWmzUkaLyIQDNFMQ/SCMqL+SKvDBKbf9fCRORWKsiCJxJHTn7+3k3v8FtRCeUTUO0gdEo9UN2EI1dRtcjn/bxru3kX8N00oPqYqbLKhJINk/1Pb9Oix2Q7KtvEiHAK7tstX4Q4AoA+4IcOS7ONF6zoTvTielU3htKTTtHfJS4vy+lqleYdbWitTBQ8UpLpoDGQVAney4Q/AUNbCPSp+2bL+iDy1r7PL5VzNpZYQqzmz8iXn3hsjEHox4avDk722ZfMXkhVNwmZPGbrR+pNohl/+GwhHtF+yjxUf888Cd7adQRrJ47KU70wJGWhXumb5eWd2SBcwVIlhTzZBT8GcCz4vnFb5C0XqabpMZXw/hdDa1zbxITwlEl/YOaGXd3NecqXBXhvTn/B5Nr+elln4t3L+u7qcqwUMMbm1pf+t7NF83EhSu+Uf86lbWbq7amCs3BH518JHpF6t+pUTk97jf6+1NffjuReJp2/zH9bdmp6eB46fwA=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/bgDbXgr7QgzvIgXFXTB1cUvd0J6gLhtWpOUt1+/SbEVEL16ZxyZnJ485zkveZIzgcOg5LWEAC5pxIx+t2H+69erU1Jz3ELFnqp/qFQqYL/kF2YIOQ5USg6auqbRFyKBPhMSM9kwSzaqFOxaAdXvbNdDjmfbRadWfjSNe+BCQSuXom0a6zBgwkvDNsyEMy/CggqP4RCEJ4k3bg2uPeXp4YyT2TzbsUwD8uZCytizLFL0gUAQkCKJQuvMOvA584U3pnOGZcLhJaYvGubL3tVqVVyVixGfWyXbti3btZSPL+j8u9n8lm0Gv89m0W7dwSxilOCAbrEmNQC5iHyjFcwjTuUifAcaWcjW0AVYkwJBFfbdtF4DpOw+iXRAkgtcEAuMMrARzIADI2D8GvUb5vfPdXC3945jJmYRD8XR+muUgC0hiGLwCyLLLGP3ecQT5WqeAfH6jASJoEsY6jGJMQFh3HKY0fU1FWr4fGGk7TfWQv3RbMqAfKUtZ9Y+V0XdOlGdLp2DkP+nZ/v92qHc4yCBZnc8EeOr5a+pL7tDO0JPN74za/PzijNvpBT2nXek8na/rI+HNZ+tl02Pt+eby80iWAyqtU6V1izcXv0Mw6flIH4cXzz84O7t1aL1fFvrDLezMl0N5GT+p/rgjoNndBvRBUy21YfLNb3/Mbj+djH654aPHu62aD7/6S4ntarfnQ/P14P1DXOeHHCfrtkSi/5oWBpehETcIMqf12V2ddlebevbwO31+GOZVeD35PLb5LJz4QRk4ncHq2Esuz8T0XjNaT+HQ2MmCeNk+gREZks9Hv2u0VP9wvJjedEWqg5E6urFWqOEBCbNpt6lpcVLlABR31PN3K17HeS6brtUb593nK5dPbcrNurZLbvquqVauZVp0I7FEcVOxGZUx9Iqu5ufjwmS0BPAfOCFZZSQBQjzA8Qultjos5E6HBETcBcpFUf17YIn9Zldc6erJ7TZOpV4w2JUNo1hJG/YDW/NJPAD6UalA+keAaExBa3vesCFmnAhVS2e8TKRASoucZFBom4ArkXYK1XqVUvQMA5AM7XCyE8CKMaLOK2MJXa/SouISK1UkDjiEgcoPX/vpnf8LauE8vGpdhA6pTaobsKbq6jmVbN83s+7up93Bt9KfKqPmSqr5JTsmBx+ep0WPSb5qOSJEYEy7vmWL0KcALA+4GcdlyaP5y/pXvTselU3htKTZtbfZ1x8LibLZZJ21NFayRW8pSQTWWMgiRK8zV30B5iVQ1ifum9y1keRc/shv0Qu2FhiCaGaPyNdfuKxMQahHxt9dXDWn33JHIRUdZOwlqdsnUC9STTjD58txCPaT5lv1c8q4v5ru05g7cVReaoXhqRsrlf6Ztm8MxskUrBUSWHE98FPAZwKfmjMi5xzkWqapomE978YWuMaJiYkSpjsd83UsK+7KU+5icF7dXoDk2r7y2W9Fu9e1r8H12OlgCE2c1/6384Fmo4LAVO/CVIuDXOt3p4qOJvv6fwLwVNSX0HlXq/tdHKpd1wXdWuvR/Igk+Yb81vLXk2Pz0PzLw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlHquQOEAgUUGiMHTolk4XSsv0ZWWcG3Cb2BA7fPTXrx0aCpR2OyshId9cn3vuh499LnASu0FLCEgl5czodRrmP7WqAx5xK1ZURzWrQry6NamWIyvyPFKvRKHnV0PT6AmRQY8JiZlsmK6DKpbjWah+5/gBqgVOpVRG7qNp3EMqFLRyKTmmsU5iJoI8bMPMUhZwLKgIGE5ABJIEw1b/OlCeAS44mc3zLcs8YNqcSTkPbJuUQiAQx6REeGKf2wc+56EIhnTKsMxSeI0Ziob5une1WpVW5RJPp7brOI7t+LbyCQWdfjeb34rNEPZYxLfrNmacUYJj+oI1qT7IGQ+NVjzlKZWz5ANoZCNHQ1uwJhZBFfbdtN8C5Oy+iHRAMhXYEjOMCrABRJACI2CMBr2G+f1rHdzuvUsxExFPE3G0/jNKwJYQ8zmEligyK9h9HfFEuZrnQIIeI3Em6BJu9JjMMQFh3KYQ0fU1FWr4QmHk7TfWQv1oMWVA/qQt5/Y+V0XdPlGdDp2CkP+nZ/v92qLc4ziD5vXiedSZ85/DS4xD56b/hM5C3PrJvOd+I6ew77wltWv36/p4WHez9bpp9bP6wz8bjAet5Cp5mS0eL5Lr287Iv7n4HdWen1aXD57HJ1ftdECc/r0jNhidZT/864g/3LP6bRr2K3g8GvfSG2f+bfRUb/db9uPj/WB6NXD9AX8cLMqbUfayvogpI+Ts4XfS92b87CEcPVTD6dT9BeP2dDK4GS/IYxUlcNVG9bi7+uvlm79c/f335vb3atya1Nv2w+UlabzltJ/DobGQhGE2eQIii6Uej17H6Kp+Yfm5vGgLDa0odw3mWqOEBCbNpt6lpSXIlADRMFDN3K67beT7/kXba6Nqp1Pu/nAqDuo6Lafq+65XdQoN2rI4otjmLKI6llbZ7fx8TpAkgQAWQmoteUZmIMxPEDtYYqPHBupwcCbgjisVZyGaLZkrCWEIRSR8epnChGzKyDRuuPzFfqWtSEJ6IN3IPZDuARA6p6D1XQ+4UBMupKrFAi8zGaPSEpcYZOoGSLUIB26lXrUFTeYxaKZ2wsMshtJ8Ns8rY4vtv2thInIrFWTOU4ljlJ+/D9M7/lZUQvmEVDsIndIFqG7Cu6vIC6pFPu/yrp68sgr4VhZSfcxUWWVKyZbJ4ae3adFjshuVXWJEoIL7bssfQpwAsD/hZx+XZhcvXNK96MX1qm4MpSfNor8LXFqUsuUyyzta01qZKnhbSSayh0AyJXibO/4MzN5B2F+6b3asjyLv7If8MjljQ4klJGr+jHz5hcfGEIR+bPTUwVl/9SVzEFLVTcJanrK1Y/Um0Yw/fbaQgGg/Zb5VfyueviV+CmsvjspTvTAkZVO90jfL5oPZIFzBUiWFPN0HPwVwKvihcVfkHReppmmSSfj4i6E1rmFiQnjGZK9j5oZ93c15ys0cgjendzC5tr9e1mvx4WU97l8PlQIm2Nz50v92tmg+LgRM/SbIuTTMtXp7quBsuqfzrwRPSL1bQeVu96LW3kl9zfdRx3s7kgeZNN+Z31v2anp8Hpr/Ag==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051721403083022123</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051721403083022123</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0516571403083017754</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051701403083020088</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_051721403083022123</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B10229BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B28BED7D05E0401F0A0599263A</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BC6C16DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>596fac05-9dc7-4f02-8dec-12ddbfc18cbf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_UserGet_CS_FUNC_YOUTH_SAU_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="95740421-8d55-4c01-8457-8c42c934ad02"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ee25926c-564f-43dc-9081-fd323f8d86aa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ddc50c1e-3efc-47a8-bc8f-63c179e23c10"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthSAU" id="a414e75e-32a9-44fc-86d9-8b5f4eeacb7e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create -YouthSAU" id="1c12c56a-e105-40df-822c-a03d12ceea06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="4a8ae4a5-7eac-4cf5-8402-a689a9d2db04"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="8eeda345-fbf2-454a-8346-70a905c3cf55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="f5d04e32-a797-4951-ade4-93236ee03f55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="55441df8-53cf-49ee-8a25-b9a697f36b35"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="3bcef072-e16c-45a6-876d-de1a43bd5c32"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E5E1392AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E53A2EC608CE0401F0A079938F9:C1E4BF11"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0506341403082394711</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E7766BF99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E7766BF99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E7766BF99B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E5E1392AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E6CB088F362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E5B1BB8E2AEE0401F0A07993911</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E5E1392AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E6CB088F362E0401F0A05991C36</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E5B1BB8E2AEE0401F0A07993911</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH5nSC9d2hBkusnf3iCIooi9nYrqAaJuWJi3grz9JsRUQPXpmmGGyuvKtb13yJecMBb7ldBiDmJOQKm6/pf4DttU0mzXQGrj6pFWrhq0h+6mu1atNjABjy7JsVXEZS8CljCPKW6plmFXNqGtm89awHaPuVIxyvVl/VJUpxExAC5eyoSqbwKfMycK21CSmTogYYQ5FATCHY2fSGV46wtNBOSe1fb5jmQWM20vOI0fXcdkDDL6PyzgM9HP9wOfcY86ELCjiSQxvMT3WUt/2rtfr8rpSDuOFbhmGoRu2Lnw8RhZnavtXvhk8l87D3bqHaEgJRj55RZLUEPgy9JSOvwhjwpfBJ9CmbhoSWoMN1rBZpWeq/h4gY/dNpAOSMUMaWyIzBxvDHGKgGJS7sdtSz77Xwd3e2xhRNg/jgB2tf0YJaAp+GIGnsTyznN33EU+Uq30O2HEp9hNGUriSYxIhDEwZxTAnm0vCxPB5TMnar2yY+JF8ygD/pC3n+j5XQV0/UZ0+WQDj/6dn+/3aoUyRn0C7NJtflR5eqFuN3Kfp9CXglfvZqtSz/ty0Mgr7zjtSRbvf1sfDWszW2ybPn00e7EWg9zo2m/bi1fWyWdsk3YWLtxe1qf930bx8uLtOBj2/9vzysPVfLRItezVv+bu2oqPJvfm8HjSv0c3Div+K4ab08Dobp0vKG3fcGv4dzJLGdNrbdtf33WfwRhv8POqGtjlcpY+j4eRxPLhI9X5/VMFbYjQxnv9Jx2P9rmr//lUqDat1M/JuX28Gs4lXerp0W+857edwaMwlYZI8PQPm+VKOh9tXBqJfiH8tL9JCPG2euTqR1CjGgXK1LXdJaXESIUDEc0Qzd+tBz7Sti9qFWbGtzkXFvDCqhjkwOkbDtivNQT/XoB2LI4q9kM6JjCVVdjc/XxPEgcOAehBraZjgJTD1C8Q+4khx6VgcjpAyuA2FipsNM/GxmND0ha0CDLjB5yitNeuqchXya3odd+Yc4gPpNq0D6R4DJhEBqe9ywJmYcMZFLVYoTbhvllNUppCIGyCWIuxY1WZNZySIfJBM9SD0Eh/K0TLKKqOz3b+lIcwyK2E4CmOOfDM7f5+md/wtr4Tw8Yh0YDKlLohuwomryMrz+Tzv2n7eOXwn8Yg8ZqKsPCZ4x+Tw0/u0yDEpRqVIDDMz515s+SHECQD9C376cWmKeF5K9qLn16u4MYSetPP+rlB5VU7SNMk62pBaGQt4XUimqU8AJ0LwtrfhC1C9gNC/dd8UrI8iF/ZDfglf0glHHAIxf0q2/MZjYwJMPjZccXA2333JHIQUdeOw4adsPV+8SSTjL58t2MHST5hH4m8dxt57u05g7cUReYoXBid0IVfyZtl+Mhs4FLBESGEY74OfAjgV/NBYFLngwsU0PSUcPv+iSI1rqQjjMKHc7auZYV93M558G4Hz7vQBJtP2t8t6wz69rGfDy4lQwACphS/5b2eNZOOCQZVvgoxLS92It6cIThd7Ov9G8KPUNxr1endg293agdTbZrco4EEm7Q/mj5a9mh6fh/a/</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH5nSC9d2hBkusnf3iCIooi9nYrqAaJuWJi3grz9JsRUQPXpmmGGyuvKtb13yJecMBb7ldBiDmJOQKm6/pf4DttU0mzXQGrj6pFWrhq0h+6mu1atNjABjy7JsVXEZS8CljCPKW6plmFXNqGtm89awHaPuVIxyvVl/VJUpxExAC5eyoSqbwKfMycK21CSmTogYYQ5FATCHY2fSGV46wtNBOSe1fb5jmQWM20vOI0fXcdkDDL6PyzgM9HP9wOfcY86ELCjiSQxvMT3WUt/2rtfr8rpSDuOFbhmGoRu2Lnw8RhZnavtXvhk8l87D3bqHaEgJRj55RZLUEPgy9JSOvwhjwpfBJ9CmbhoSWoMN1rBZpWeq/h4gY/dNpAOSMUMaWyIzBxvDHGKgGJS7sdtSz77Xwd3e2xhRNg/jgB2tf0YJaAp+GIGnsTyznN33EU+Uq30O2HEp9hNGUriSYxIhDEwZxTAnm0vCxPB5TMnar2yY+JF8ygD/pC3n+j5XQV0/UZ0+WQDj/6dn+/3aoUyRn0C7NJtflR5eqFuN3Kfp9CXglfvZqtSz/ty0Mgr7zjtSRbvf1sfDWszW2ybPn00e7EWg9zo2m/bi1fWyWdsk3YWLtxe1qf930bx8uLtOBj2/9vzysPVfLRItezVv+bu2oqPJvfm8HjSv0c3Div+K4ab08Dobp0vKG3fcGv4dzJLGdNrbdtf33WfwRhv8POqGtjlcpY+j4eRxPLhI9X5/VMFbYjQxnv9Jx2P9rmr//lUqDat1M/JuX28Gs4lXerp0W+857edwaMwlYZI8PQPm+VKOh9tXBqJfiH8tL9JCPG2euTqR1CjGgXK1LXdJaXESIUDEc0Qzd+tBz7Sti9qFWbGtzkXFvDCqhjkwOkbDtivNQT/XoB2LI4q9kM6JjCVVdjc/XxPEgcOAehBraZjgJTD1C8Q+4khx6VgcjpAyuA2FipsNM/GxmND0ha0CDLjB5yitNeuqchXya3odd+Yc4gPpNq0D6R4DJhEBqe9ywJmYcMZFLVYoTbhvllNUppCIGyCWIuxY1WZNZySIfJBM9SD0Eh/K0TLKKqOz3b+lIcwyK2E4CmOOfDM7f5+md/wtr4Tw8Yh0YDKlLohuwomryMrz+Tzv2n7eOXwn8Yg8ZqKsPCZ4x+Tw0/u0yDEpRqVIDDMz515s+SHECQD9C376cWmKeF5K9qLn16u4MYSetPP+rlB5VU7SNMk62pBaGQt4XUimqU8AJ0LwtrfhC1C9gNC/dd8UrI8iF/ZDfglf0glHHAIxf0q2/MZjYwJMPjZccXA2333JHIQUdeOw4adsPV+8SSTjL58t2MHST5hH4m8dxt57u05g7cUReYoXBid0IVfyZtl+Mhs4FLBESGEY74OfAjgV/NBYFLngwsU0PSUcPv+iSI1rqQjjMKHc7auZYV93M558G4Hz7vQBJtP2t8t6wz69rGfDy4lQwACphS/5b2eNZOOCQZVvgoxLS92It6cIThd7Ov9G8KPUNxr1endg293agdTbZrco4EEm7Q/mj5a9mh6fh/a/</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VwLtwSFaQUSpuZQmdKW3Xm5ch1NuBO4oTYIdCvP3ZoUqC0p3MkJOSd7bXXvnjZpxzHke35nEMmaMK0YNjT/3E6jt3sNLGBLbNlNM3QNR5d99EIu2GLYLvZck1X1wLOcwgYF5iJnm6bVtMw24bVvTVdz2x7jtNwzOZvXbuHjEto6dIwdW0dR4x7ZdienmfMSzCn3GM4Bu4J4k398ZUnPT1ccdL7p1uWZcCsvxAi9RAijRAIRBFpkCRGp2jP5zTk3pTOGRZ5Bi8xQ97TX/YWRdEonEaSzZFtmiYyXSR9Qk7nX/X+l2ozhAGbJdv1ALOEUYIj+owVqTGIRRJqfjRPMioW8TvQFrJMBW3AmhjEarKvOnoNULL7JNIeyYxjgy+wVYHdwAwyYAS0u5ugp3/9XAe3e28zzPgsyWJ+sP47SsBWECUphAavMqvYfR7xSLn6p0C8gJEo53QFEzUmKSbAtR8ZzOj6inI5fCHXyvZray5/tJoyIH/TllO0y1VSR0eqM6Rz4OL/9Gy3X1uUexzl0LftO9G8tojrF7EVhXgxWc6DYLHqTua9ksKu85ZU3e6X9eGw1rP1smllTqnTGfpw98Cfvwerx1+DZbFeP5+1guui67cuTn7mcL8JR4Op+W14OfdFhK9nT77PTtB3J//jnAzayeYnak9y9qU19if+5feFT6Nf/snsFqOcp5trhrL2aDW8LSYXd3c3I0QGj8tLdkFx23GT+OLSvHp6GH9rzbo/0nEminOGWLT88jBhwS/rKTHHof27yEf3537vNafdHPaNlSRM88cnIKJaqvEIhtpI9guLj+VFWWhozEpXL1UaxQUwoffVLiUtXi4FiIaebOZ2PRpYrn3eHpyZ3e7IadvnZtO0RqZvtlzXGjjtSoO2LA4oDhI2oyqWUtnt/HxMkMQeBxZCZqySnCyA6x8gDrHAWsBu5OFIGIfbRKo4sO5sY8VPBSwxiHTRNZ8LvJ7lujZJxDW7zvyZgGxPuS17T7lvgNCUgpJ3Nd9cDjgXshRLvMpFZDVWuMEglxdApjTYs5vdFuI0TiNQRFGchHkEjXSRloVBfPtvG5jw0ko5SZNM4Mgqj9+72R1+qwohfUKqHLhK6QxkM+HITWRX+byfd2s37wrez0OqTpmsqsgo2TLZ//Q6LGpK6kmpEyPcqrjXW/4S4ggA+oAfOixNHS9c0Z3o1e0qLwwpJ/2qv0vcWDby1SovO9pRUplJeCQV00JTILnUu81t8gcYqiHQp66bmvVB5Nq+zy8XCzYVWEAs508rl594a0yBq7dGIM/N+rMPmb2Qsm4C1uKYbRDJJ4li/OGrhXhE+UnzD/lXJFn42q4jWDtxZJ7ygSEom6uVulg278wGSSQslUqYZLvgxwCOBd831kWuuQg5TY+5gPe/aEriejomJMmZCIZ6adiV3ZKn2KTgvTq9gSml/eWuXvN37+qH8dVUCmCM9dqX/rezQctxIaCrJ0HJpaev5dNTBmfzHZl/IfhW6Tuddvts5LpnrVrpO67ruNZZXcC9TPpvzG8tOzU9PA/9fwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQS0MgUUEiBWaYKdMOML29HBlnB1wSh9oO0H79sUOTAqU97ZGQkHe211774mWfcpQmTtDhHJggGdUG3Zb+jwORa3uOZTTcuGG4rl83/MiZGg1oeJYHU7s5tXRtwHkOA8oFoqKlO5btGpZn2M2J5QeWF5x4taZTv9O1K2BcQkuXmty1SRPKgyJsS88ZDTLECQ8oSoEHAgfjzvA8kJ4BKjnp7dMtyyIga8+FWAamiWsRYEgSXMNZap6aez6nEQ/GZEaRyBk8x4x4S3/eu16va+uTWsZmpmNZlmn5pvSJOJl91dtfys0QDWicbddniGaUYJSQJ6RIDUHMs0jrJLOMETFP34C2TdtS0AZssIFtl37VzZcABbsPIu2RZBwZfI7sEmwEMTCgGLS/o0FL//qxDm73ThiiPM5Yyg/Wn6MEdAVJtoTI4GVmJbuPIx4pV/sUcDCgOMk5WcFvNSZLhIFrlwxisjknXA5fxLWi/dqGyx8ppwzwZ9pyau5yldTNI9Xpkhlw8X96ttuvLcoVSnJo/3DXYfozjAc/xvwX64Wsd7fOL1HYvO61Cgq7zltSVbuf14fDWs3W8ybx2HSHd53Rddj3vD+CNb6d39rDxZNrTe7RVSTjTV306C9my86oPrlfsyfaW0yd6ebvtR19hxTdjOqzhotiK7788msSd39eLDzcubm5uvl+73Tn8XUv8uDHyR+7+eTY9em3iPQ7i55I6tnGvWgOG1YYWTdNuJveOm785+H2l9NzBs3e+ZdrkZ2hfHyC0X0/vPs5HPpu6yWn3Rz2jaUkjPPpPWBRLtV4DLpaX/YLifflRVlIZMSFa7BUGsUFUKG31S4lLUEuBYhEgWzmdt0/s32nVw/tMGz2nE6vZ7mW3bc6VsP3T3zbLjVoy+KA4llGY6JiKZXdzs/7BHEacKARMGOV5XgOXH8HsYsE0gZ0JA9HRjlMMqni9soCKyPN1fwpBht7aEUdFjWwv9C135m4oBesEwtge9ptO3vaPQJMlgSUwKsJ53LEuZDFeECrXCR2bYVqFHJ5BTClwoHjNusmJ+kyAUXVTLMoT6C2nC+L0ph8++8YCPPCSjheZkygxC4O4Jv5HX4rSyF9IqIcuEopBNlOOHIXOWU+r/KuH72zSvhOHhF1zmRdBSN4y2T/08u4qDmpZqVKDPNqLqotn4Q4AmC+w888LE0VL1qRnejl/SqvDCko7bK/D6j2UMtXq7zoaEOJJZPwptRM2xwDzqXiPU6yBVCzgjA/dOFUrA8iV/Z9frmY07FAAlI5f1qx/MBrYwxcvTYG8uRsPvqU2Qsp6yZgI47ZzhL5KFGM33234AArP2m+lH/rjEUv7TqCtRNH5imfGILQmVqpq+XxjdnAmYQlUgsztgt+DOBY8H1jVeSKi5DTNM0FvP1FUyLX0hHGWU7FoKsXhl3hLXiKxyUEL06vYApxf76tN/zN2/pmeD6WEpgivfIl/+1skGJcMOjqUVBwaekb+fiUwelsR+ifCb7W+kbD88K+74f1A60PqwLuZdJ+ZX5t2anp4Xlo/ws=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0506341403082394711</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0506341403082394711</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0506291403082389803</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0506321403082392350</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0506341403082394711</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E5E1393AE31E0401F0A079938FD</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E6CB089F362E0401F0A05991C36</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E5B1BB9E2AEE0401F0A07993911</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4830d9c-88ec-4c42-ae57-ec8dbcee4bfd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55441df8-53cf-49ee-8a25-b9a697f36b35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_UserGet_CS_FUNC_YOUTH_BAU_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="110cf0b5-e134-4e41-9962-f8092b34a3ab"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6dc443a8-67af-4e13-b5c8-61141f6f049a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0df41333-a57a-411b-98fa-0f496d3a2061"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YouthBAU" id="9febdd84-1d9b-47bd-898d-a417ea61fea3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create -YouthBAU" id="6c821e18-1fd5-4584-a7a3-43cec73f62e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="ba78409c-23ab-4cc9-95a8-c2a1a412abe2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="e1548510-975c-4ee2-ab65-24955830e2b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="142384a5-93b5-4719-a50c-010f6daeb0ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="ad9564f3-b00a-43c7-bb1b-30aea8c3ac43"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="96fe2072-0f26-431a-b529-cb70e7dc14b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC192E7766D099B5E0401F0A0799391B</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC192E981505F1E2E0401F0A07993921:524A1C8E"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0506441403082404167</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC192E6C43516DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC192E6C43516DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC192E6C43516DC6E0401F0A05991C32</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC192E7766D099B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC192E664A82F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC192E9814E8F1E2E0401F0A07993921</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC192E7766D099B5E0401F0A0799391B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC192E664A82F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC192E9814E8F1E2E0401F0A07993921</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcps6FH3vVzD0sYO5+AoTe8aXJiV1LsekbpqXM7LYYDUgsCRsnK+vwIHYjpOTnhnPeLTZWnvti5Z0xlEcWc6Qc2CCJFRxJ33133Y38ANAWDPb7ZbW6hq+hgCBtlj4ttlttrodCFTF5TwDl3KBqOirlmG2NKOjmb07w3aMjtO0G52e9aAqc2BcQkuXhqEqeRxR7pRh+2rGqJMgTrhDUQzcEdjxhldTR3o6qOKkDs52LMuAbLAUInV0HTd8wBBFuIGTWD/TD3zOfO54JKRIZAyeY/q8rz7v3Ww2jU2zkbBQtwzD0A1blz4+J+FndfCp2gy+S4Nktx4jmlCCUUSeUEHqCsQy8ZVhFCaMiGX8BrSpm0YBrUGONWy26GdVfwlQsvsg0gFJxpHGl8iswGYQAAOKQfkxc/vq5491cLf3jiHKg4TF/Gj9d5SAriFKUvA1XmVWsfs44olyDc4AOy7FUcbJGq6LMUkRBq7cMghIPiVcDp/PlbL9Ss7lj1RTBvhv2nKm73OV1PUT1ZmQELj4Pz3b79cOZY6iDAZDY/k0/9W7vhmykatfeNbdt9nFucu+tJN+SWHfeUeqbvfz+nhY69l63hS253ZvFdhNMppMF78epvdfrFEQzr3J/Oel/mi67r1H9HZ4ufpn+zO//Z3nF+4N+da8Xzy4sy4NF1+Gs9EWVtmFO/oUXE7T63HXav38fte99ejqanExTR6/Zb0EPKGT7x0j6d60pmz+lOY3o3aghyx8euhMIZ7fRyt8bcfB8qEZ483XzafUa/Lt79tfxP/xw8DB/cTu9V9y2s/h0FhJgpctfgMW1bIYD3einMt+IfG+vBQW4mtB6eqkhUZxAVSog2JXIS1OJgWI+I5s5m59PjZt62u32+lMDNsetb8aLcM8N4ZG17abtjmqNGjH4ojiOKEBKWIVKrubn/cJ4tjhQH1g2jrJ8BK4+g7iBAmkuHQmD0dCOdwlUsVNbKSP7aiVbkO2NOOegDDv9FKWCVW5TsQNvWHDQAA70G7TOtDuGWCSEigEvphwLkecC1mMFVpnIjIba9SgkMkrgBUq7FitXlvnJE4jKKjqceJnETTSZVqWRue7f0tDmJdWwnGaMIEiszyAb+Z3/K0qhfTxSeHAi5RGINsJJ+4iq8rn7bzb+3lX8MPMJ8U5k3UVjOAdk8NPL+NSzEk9K3VimJsV93rLX0KcANDf4acfl6aO56/JXvTqfpVXhhSUQdXfFWqsGtl6nZUd7RZiySS8LjXT1D3AmVS87V3yCFSvIfQPXTg166PItf2QXyaW1BNIQCznTymXH3hteMCL14YrT07+0afMQUhZNwG5OGUbR/JRUjB+992CHVz4SfOt/NskzH9p1wmsvTgyT/nEEISGxaq4WrZvzAZOJCyRWpiwffBTAKeCHxrrItdchJymRSbg7S9KIXJ9FWGcZFS4E7U07AtvyVNsU3BenF7BlOL+fFvn/M3b+v5q6kkJjJFa+5L/dtZIOS4Y1OJRUHLpq7l8fMrgNNwT+meCr7W+M24122ZnMu7UWt+2bXPctOoCHmQyeGV+bdmr6fF5GPwB</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcps6FH3vVzD0sYO5+AoTe8aXJiV1LsekbpqXM7LYYDUgsCRsnK+vwIHYjpOTnhnPeLTZWnvti5Z0xlEcWc6Qc2CCJFRxJ33133Y38ANAWDPb7ZbW6hq+hgCBtlj4ttlttrodCFTF5TwDl3KBqOirlmG2NKOjmb07w3aMjtO0G52e9aAqc2BcQkuXhqEqeRxR7pRh+2rGqJMgTrhDUQzcEdjxhldTR3o6qOKkDs52LMuAbLAUInV0HTd8wBBFuIGTWD/TD3zOfO54JKRIZAyeY/q8rz7v3Ww2jU2zkbBQtwzD0A1blz4+J+FndfCp2gy+S4Nktx4jmlCCUUSeUEHqCsQy8ZVhFCaMiGX8BrSpm0YBrUGONWy26GdVfwlQsvsg0gFJxpHGl8iswGYQAAOKQfkxc/vq5491cLf3jiHKg4TF/Gj9d5SAriFKUvA1XmVWsfs44olyDc4AOy7FUcbJGq6LMUkRBq7cMghIPiVcDp/PlbL9Ss7lj1RTBvhv2nKm73OV1PUT1ZmQELj4Pz3b79cOZY6iDAZDY/k0/9W7vhmykatfeNbdt9nFucu+tJN+SWHfeUeqbvfz+nhY69l63hS253ZvFdhNMppMF78epvdfrFEQzr3J/Oel/mi67r1H9HZ4ufpn+zO//Z3nF+4N+da8Xzy4sy4NF1+Gs9EWVtmFO/oUXE7T63HXav38fte99ejqanExTR6/Zb0EPKGT7x0j6d60pmz+lOY3o3aghyx8euhMIZ7fRyt8bcfB8qEZ483XzafUa/Lt79tfxP/xw8DB/cTu9V9y2s/h0FhJgpctfgMW1bIYD3einMt+IfG+vBQW4mtB6eqkhUZxAVSog2JXIS1OJgWI+I5s5m59PjZt62u32+lMDNsetb8aLcM8N4ZG17abtjmqNGjH4ojiOKEBKWIVKrubn/cJ4tjhQH1g2jrJ8BK4+g7iBAmkuHQmD0dCOdwlUsVNbKSP7aiVbkO2NOOegDDv9FKWCVW5TsQNvWHDQAA70G7TOtDuGWCSEigEvphwLkecC1mMFVpnIjIba9SgkMkrgBUq7FitXlvnJE4jKKjqceJnETTSZVqWRue7f0tDmJdWwnGaMIEiszyAb+Z3/K0qhfTxSeHAi5RGINsJJ+4iq8rn7bzb+3lX8MPMJ8U5k3UVjOAdk8NPL+NSzEk9K3VimJsV93rLX0KcANDf4acfl6aO56/JXvTqfpVXhhSUQdXfFWqsGtl6nZUd7RZiySS8LjXT1D3AmVS87V3yCFSvIfQPXTg166PItf2QXyaW1BNIQCznTymXH3hteMCL14YrT07+0afMQUhZNwG5OGUbR/JRUjB+992CHVz4SfOt/NskzH9p1wmsvTgyT/nEEISGxaq4WrZvzAZOJCyRWpiwffBTAKeCHxrrItdchJymRSbg7S9KIXJ9FWGcZFS4E7U07AtvyVNsU3BenF7BlOL+fFvn/M3b+v5q6kkJjJFa+5L/dtZIOS4Y1OJRUHLpq7l8fMrgNNwT+meCr7W+M24122ZnMu7UWt+2bXPctOoCHmQyeGV+bdmr6fF5GPwB</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj6OQC+GSCJBSLiWnpeVAYWhfRsYxxG3ihNgB2q8fO5AUKO3QkZCQd7bXXvviZTcoCAPDdihFCcMRkdxOU/7HqiyssqcZSs2cm4qpVZBieRVNsUzD4Kb6YlGfy5JLaYpcQhkgrCkbmm4qWlXR64+aZWtV2zRKtZr2LEtTlFAOzV1Kmixtw4BQOwvblNOE2BGgmNoEhIjaDNpjZ3Bnc08b5JzkVmPHMguYtHzGYltVYclDEAUBLMEoVBvqkU/Do/YYLwlgaYL2MT3alPd7N5tNaVMuRclSNTRNUzVL5T4excsrufUr34w8lyyi3boNSEQwBAF+B4LUADE/8iQnWEYJZn74BbSu6pqAVtAWKlA3yZWsfgTI2F2IdEQyoUChPtBzsBFaoAQRiKTJyG3KV5d1cLf3MQGELqIkpCfrn1FCZI2CKEaeQvPMcnaXI54pV6uBoO0SGKQUr9G9GJMYQESlYYIWeHuHKR8+j0pZ+6Ut5T+cTxmCP2lLQz3kyqmrZ6rTwUtE2f/p2WG/dihTEKSotbkuE7ePuhPs3vUXk+7Ir/VHoanT0VMzo3DovCNVtHu/Ph3WYrb2m/xw9v6K49v+4OX9dTie6+GqXKvMwjB9V5dw9Pe09/Jwdzv/y5ilt0M1slJn/HLzu6/1ZxWyvcFvg/s/zoYkS3NpTH45Nw6dQa3dNYcrvRvH9W45+dPV6cvScH38DHtkNRk9eDNrrL7Gm2vPj96TWq/ee3J6nd+9dDKMoYPX+vPUn17/mrAVhAAOZk8LfLusrqbWa/Mjp8Mcjo25JIzT+QuCLF+K8XA7Uo/3C7Dv5UVYsKcsMlc7FhpFGSJMboldQlrslAsQ9mzezN2619Yto1utmk7d6JlOpauZmt7THK1mWWVLr+QatGNxQrEdkQUWsYTK7ubne4IwtCkiHkqUdZRCH1H5G8QOYEByyYgfjohQ9BhxFd8GsUkt3zOgpusbUzODwGPavL6RpfuIPZCHxFkwlBxJt24cSfcIQRxjJPRdDDjlE04Zr8UKrFMW6KU1KBGU8hsgESJsG2a9olIcxgESTNUw8tIAlWI/ziqj0t2/oQBIMyumMI4SBgI9O39fpnf6La8E9/GwcKAipWvEu4nOXEXlPJ+v864c5p3DO6mHxTHjZWUJhjsmx58+pkWMSTEqRWKQ6jn3YssPIc4AqN/wU09LU8Tz1vggen698huD60kr7+8KlFaldL1Os47WhFYmHF7lkqmrYwRTLnhvj9ErImoBoV503xSsTyIX9mN+KfPJmAGGQj5/Ura84LExRlQ8Nlx+cLaXvmSOQvK6MbRl52ztgL9JBONvny3QhsKPm4f8bxMl3ke7zmAdxOF58hcGw2QpVuJmeftiNmDEYTGXwig5BD8HcC74sbEocsGF8Wmapwx9/UUSGteUAYRRSpjbkTPDoe5mPNlbjOwPp08wmbbvL+st/fKyng3uxlwBQyAXvvi/nRWcjQtEsngTZFya8pa/PXlwsjzQ+T3BM1LfNssVvdppVwupr1iW3i4bRQGPMml9Mn+2HNT09Dy0/gU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZx1HIhWuigsSl7WTobQrt9PTlyHV2wG1ih9iBMF8/dmhSoLSnPRIS8s722mtfvOxjjuLI8fqcQyoIo5o/6ur/2mG7gyHsGLhVD4xG2GgZbsNBRgN17AC7CLWDpq75nGfgUy4QFV3dseyGYbUMuzO1XM9qeY1WzWk5D7p2BymX0NKlZulaHkeUe0XYrp6l1GOIE+5RFAP3BPYm/YtzT3p6qOSk9443LIuAaW8uROKZJq4FgCGKcA2z2Dw2d3yOA+5NyIwikaXwEjPgXf1l72q1qq3qNZbOTMeyLNNyTekTcDL7pveOys0Q+DRkm/UQUUYJRhH5gxSpCxBzFmj9aMZSIubxO9C2aVsK2oAcG9hu0G+6+RqgYPdJpB2SKUcGnyO7BLuBEFKgGLTbG7+rf/tcBzd7pymiPGRpzPfWX6MEdAkRSyAweJlZye7ziAfK1TsG7PkURxknS7hUY5IgDFy7TiEk+TnhcvgCrhXt13Iuf6ScMsBfacuxuc1VUjcPVGdEZsDF/+nZdr82KHcoyqC3/NVqnj3VV/O4Ga0GNFjdPD6PwTnPB/1uQWHbeUOqavfLen9Yq9l62ZTH89/5Ex5cRo3ni+nd5eDHc3vxs7++zcP2ePywxmEUjMG//3U1/f4QjJJmZ0WcB//C/act4PfJcHB6n59NLTQ/n/88Gt4v2GjI5rwe/kjpn+szH5J4shhfZVmA66uzZWd9Qi3ndpXkj6cJWIPxuNMOr3LUXwTfFwTju9/n4/TxhuGhf+R0zNAXo+Dy4u4qarf9fH3bfc1pO4ddYykJk+zxCbAol2o8/JF2KvuFxMfyoiwkMMLC1UuURnEBVOg9tUtJi5dJASKBJ5u5WZ8Obdc5cTt246Rzap84J1bDsk+tvtV23brr2KUGbVjsURwyGhIVS6nsZn4+JohjjwMNIDWWLMNz4PoHiCMkkObTG3k4GOUwZVLFw3VkccSW5Cm37GglWLu57iyBu7p2ycQVvUr7oYB0R7ptZ0e6bwCThIDSdzXgXE44F7IWC7TMRGTXlqhGIZM3QKpE2HManabJSZxEoJiaMQuyCGrJPCkqY/LNv2MgzAsr4ThhqUCRXZy/d9Pb/1ZWQvoERDlwldIAZDfhwFVUL/N5k3fz4JVVwvezgKhjJssqUoI3THY/vU6LGpNqVKrEMK/GotryRYgDAOYH/Mz90lTxgiXZil5er/LGkHrSK/u7QLVFLVsus6KjbaWVqYQ3pWTa5gRwJgVvPWXPQM0KwvzUfVOx3otc2Xf5ZWJOJwIJiOX8acXyE4+NCXD12PDlwck/+5LZCSnrJiAXh2zDSL5JFOMPny3Yw8pPmq/l34qlwWu7DmBtxZF5yheGIHSmVupmWb8zG5hJWCKlkKXb4IcADgXfNVZFrrgIOU2PmYD3v2hK47o6wphlVPgjvTBs627BU6wT8F6d3sAU2v5yWef83cv6/uJ8IhUwRnrlS/7b2SDFuGDQ1Zug4NLVc/n2lMHpbEvnXwi+lfrWsFFv2q3RsFVJfdN17WHdqQq4k0nvjfmtZaum++eh9xc=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0506441403082404167</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0506441403082404167</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0506381403082398676</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0506411403082401751</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0506441403082404167</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC192E7766D199B5E0401F0A0799391B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC192E664A83F4A5E0401F0A07993915</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC192E9814E9F1E2E0401F0A07993921</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4830d9c-88ec-4c42-ae57-ec8dbcee4bfd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad9564f3-b00a-43c7-bb1b-30aea8c3ac43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_UserGet_CS_FUNC_CHILD_SAU_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="cf17c7cf-04a3-4cee-b875-e4d896be5b68"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2ea273c9-b81a-4791-a4c5-b2004658103b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="15331a03-2cc6-4e3a-9747-2a3a76c7f939"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="c61ebdd7-8224-4d04-879f-ad4d95df138f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="9a34ad0a-2b4e-4ff8-bfee-dbf79639e841"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="37dbe3e2-b01a-4b7a-a748-f6b783f1dc10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="afcef6bf-9f07-4833-9b77-fa63f10e14e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="4cbea112-0e4a-4f31-9f85-c7ba42f3599c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="46657672-b144-410a-a5b4-3bf4351c8c5a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="5ddb65aa-a770-44db-bf3b-db741abe2538"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B24191FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999BA147F8CE7E0401F0A07991D6B:AD1674AD"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0517111403083031298</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B24186FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B24186FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B24186FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B24191FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B1032EBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B09E0D610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B24191FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B1032EBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B09E0D610AE0401F0A05992642</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3S6H8+UXri1HWEGRbbdB9wIXrb75UxMFhBtk9KkiP76kxRbAdHjPjOOTFZXvvWtS77kWKAk9sKeEJBJypkR9TvmPz4JfL/ecKwmUf8arl+3fMdrWW2MXM+DetudgWlEQuQQMSERkx3Tc9yG5bQs179ygtBth0675vj136ZxA5lQ0Mql5pjGOomZCIuwHTPPWMiRoCJkKAERShxOe6NhqDxDVHIyu8cblkXArLuQMg1tG9cIYIhjXMM8sY/tHZ9jIsIpnTMk8wxeYxLRMV/3Pj091Z7qNZ7Nbc9xHNsJbOVDBJ1/M7tH5WYgEZvxzfoUMc4oRjF9QZrUCOSCE6MXz3lG5SL5ANq1XUdDW7DGFnYb7JtpvwUo2H0RaYdkJpAlFsgtwSYwgwwYBuN6EnXMb1/r4GbvVYaYmPEsEXvrP6MEbAUxT4FYosysZPd1xAPl6h4DDiOG41zQFVzoMUkRBmGMM5jR9ZAKNXxEGEX7jbVQf7ScMsB/0pZje5urom4fqE6fzkHI/9Oz7X5tUG5QnEM3viLDH33kXQe+c9dgLyKO5+Qy4oOHx05BYdt5Q6pq9+t6f1ir2XrdFJ+3kT+5xNHFref004mc88VpPkzwPLhx71Hrr7FIhgRBdtmkEbl9wD07H8a/EGoOonv7afi4uo7v699H0r4PjoKmhOjvW3S55P0H/+H31Tia3Z0M3dGk8TIeQ9JY/nw5m13MyPni5q45Hrzg8/NWMkJp9Lg+uZt/R7PGEsi8lZ/1yZGLxHR5joPxr2F/cLMgXlN03nLazmHXWErCNL9/ACzLpR6PqG8MVL+Q/FxetIUSa1a4hqnWKCGBSbOrd2lpCXMlQJSEqpmb9eDUDYLgxGu4gTs4aZ+eOQ3HHTg9px0Ebr/llhq0YbFH8ZSzGdWxtMpu5udzgjgJBTACmbXiOV6AMD9B7COJjIhN1OHgTMAVVyq+TOvLuEGEn6mj7zkrslpiIlfCNC64/Ml+Zr2ZhGxHuV1vR7kngGlKQcu7nm+hBlxIVYolWuUydmsrVGOQqwsg0xoceg2/aQuapDFoonbCSR5DLV2kRWFssfn1LIRFYaUCpzyTKHaL4/dhdvvfykIoH0K1g9ApnYBqJry7iVphs8zn47yb23mX8L2cUH3KVFVlRvGGye6nt2HRU1JNSpUYFtVUVFv+EOIAgP0JP3u/NFU8sqJb0cvbVV0YSk66ZX+XqLas5atVXnS0raUyU/C2UkzXngLOld49X/FHYHYFYX/puqlY70Wu7Lv8crlgU4kkJGr+jGL5hbfGFIR+a0Tq3Ky/+pDZCanqJmEtD9lOY/Uk0Yw/fbXgEGs/ZR6rnyeekbd2HcDaiqPyVA8MSdlcr/TF8vzBbGCuYKlSQp5tgx8COBR811gVueIi1TTd5xI+/mJoieuYCGOeMxn1zcKwLbsFT/mcQvjm9A6mkPbXu3otPryrf42GUyWACTIrX/rfzhYtxgWrl6ryL7h0zLV6eqrgbL4l868EDyu93/pM6Xcz6b4zv7ds1XT/PHT/BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3S6H8+UXri1HWEGRbbdB9wIXrb75UxMFhBtk9KkiP76kxRbAdHjPjOOTFZXvvWtS77kWKAk9sKeEJBJypkR9TvmPz4JfL/ecKwmUf8arl+3fMdrWW2MXM+DetudgWlEQuQQMSERkx3Tc9yG5bQs179ygtBth0675vj136ZxA5lQ0Mql5pjGOomZCIuwHTPPWMiRoCJkKAERShxOe6NhqDxDVHIyu8cblkXArLuQMg1tG9cIYIhjXMM8sY/tHZ9jIsIpnTMk8wxeYxLRMV/3Pj091Z7qNZ7Nbc9xHNsJbOVDBJ1/M7tH5WYgEZvxzfoUMc4oRjF9QZrUCOSCE6MXz3lG5SL5ANq1XUdDW7DGFnYb7JtpvwUo2H0RaYdkJpAlFsgtwSYwgwwYBuN6EnXMb1/r4GbvVYaYmPEsEXvrP6MEbAUxT4FYosysZPd1xAPl6h4DDiOG41zQFVzoMUkRBmGMM5jR9ZAKNXxEGEX7jbVQf7ScMsB/0pZje5urom4fqE6fzkHI/9Oz7X5tUG5QnEM3viLDH33kXQe+c9dgLyKO5+Qy4oOHx05BYdt5Q6pq9+t6f1ir2XrdFJ+3kT+5xNHFref004mc88VpPkzwPLhx71Hrr7FIhgRBdtmkEbl9wD07H8a/EGoOonv7afi4uo7v699H0r4PjoKmhOjvW3S55P0H/+H31Tia3Z0M3dGk8TIeQ9JY/nw5m13MyPni5q45Hrzg8/NWMkJp9Lg+uZt/R7PGEsi8lZ/1yZGLxHR5joPxr2F/cLMgXlN03nLazmHXWErCNL9/ACzLpR6PqG8MVL+Q/FxetIUSa1a4hqnWKCGBSbOrd2lpCXMlQJSEqpmb9eDUDYLgxGu4gTs4aZ+eOQ3HHTg9px0Ebr/llhq0YbFH8ZSzGdWxtMpu5udzgjgJBTACmbXiOV6AMD9B7COJjIhN1OHgTMAVVyq+TOvLuEGEn6mj7zkrslpiIlfCNC64/Ml+Zr2ZhGxHuV1vR7kngGlKQcu7nm+hBlxIVYolWuUydmsrVGOQqwsg0xoceg2/aQuapDFoonbCSR5DLV2kRWFssfn1LIRFYaUCpzyTKHaL4/dhdvvfykIoH0K1g9ApnYBqJry7iVphs8zn47yb23mX8L2cUH3KVFVlRvGGye6nt2HRU1JNSpUYFtVUVFv+EOIAgP0JP3u/NFU8sqJb0cvbVV0YSk66ZX+XqLas5atVXnS0raUyU/C2UkzXngLOld49X/FHYHYFYX/puqlY70Wu7Lv8crlgU4kkJGr+jGL5hbfGFIR+a0Tq3Ky/+pDZCanqJmEtD9lOY/Uk0Yw/fbXgEGs/ZR6rnyeekbd2HcDaiqPyVA8MSdlcr/TF8vzBbGCuYKlSQp5tgx8COBR811gVueIi1TTd5xI+/mJoieuYCGOeMxn1zcKwLbsFT/mcQvjm9A6mkPbXu3otPryrf42GUyWACTIrX/rfzhYtxgWrl6ryL7h0zLV6eqrgbL4l868EDyu93/pM6Xcz6b4zv7ds1XT/PHT/BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx1GIHa6JChKFKcMMtFMovb0cGceATxM7tZ0A/fqxQ0OB0p72SEjIO9trr33xsk8liiMvaEtJhKKcWf1u0/6nhqZhDXo1x6/jslMhFeAgCCoOmFVJLSwDv1pDttWXMiV9JhViqml7AGqHmgMb18APYD2AoFT1/AfbuiFCamjtUgK2tYojJoM8bNNOBQs4klQGDMVEBgoH4/ZwEGjPABWc7NbphmUeULQWSiWB6+JSSDCJIlzCPHZP3T2f01AGYzpnSKWCvMQMZdN+2btcLkvLcomLuesBAFzgu9onlHR+Yre+FZtJ2Gczvll3EOOMYhTRZ2RIDYla8NBqR3MuqFrE70BDFwID7ZAVdjCssBPbfQ2Qs/sk0h5JIZEjFwgWYCMyI4IwTKzJqN+0Tz7Xwc3ea4GYnHERy4P11ygRlpGIJyR0ZJFZwe7ziEfK1TolOOgzHKWSZuTCjEmCMJHWH0FmdDWgUg9fKK28/dZK6h8tpozgr7Tl1N3lqqm7R6rTpXMi1f/p2W6/Nig3KEpJq/oorupVFf8gbVip9i6vb9OL9d1NdSiGzZzCrvOG1LbdL+vDYd3O1sumzsPk8aHHez3APPc+HlR/uVfPk8fJ7eo+UWU6dMFvirqju0Zjve5PUScZTAm8yjqzwa+f2bKcJc+9Z6xG9dlDEn8bJJWeisD63kv9bNK+8YZ8dBHC5fnt3Wicfu8P/VCgRVafzvnT1L9syPn3X3U87jwOJ3h0Bcrrxe9em4M/7P72/hvGY3F5vV5Mft49DN3vvTADzdecdnPYNxaSME6n/xKsiqUZj37XOtf9QupjeTEWGjqz3DVIjEZJRZiyW2aXkZYg1QJEw0A3c7M+70Df988gKHs/ztq1+g9QAfActEHd92G32i00aMPigGKHsxk1sYzKbubnY4I4DiRhIRFOxlO8INL+ALGLFLL6bKQPB2eSXHOt4lBLc12tecKeeQPCeB5HdD2fTuuPtnXB1SW7FO2ZImJPu6G3p90jgmlCiRF4M+FSj7hUuhhPKEtVBEsZKjGS6itAGBUOvEqj6koaJxExVN2Yh2lESskiyUvjys2/5yAscyuVOOFCoQjmB/Dd/A6/FaXQPiE1DtKkdEZ0O8mRuwgU+bzJu3r0zirg22lIzTnTdVWC4g2T/U+v42LmZDsr28SwhAX37ZYvQhwBcD/g5x6WZhsvzOhO9OJ+1VeGFpRW0d8nVHoqpVmW5h2tG7EUGt7VmgndMcGpVrz1NX8kzN1CuJ+6cLasDyJv7fv8UrVgY4UUifX8WfnyE6+NMZHmtdHXJ2f12afMXkhdN0VW6pitE+lHiWH84bsFB9j4afMf/bfkInxt1xGsnTg6T/3EUJTNzcpcLet3ZgNzDUu1FnKxC34M4FjwfeO2yFsuSk/TNFXk/S+WEbmmjTDmKVP9rp0bdoU356nWCQlend7A5OL+cluv5Lu39d1wMNYSGCN760v/29mh+bhgYptHQc6laa/041MHZ/MdoX8heETrvQps1M7P6p19ra+9Hsm9TFpvzG8tOzU9PA+tvw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH53Si1BoR5hBkD14F9Cz9eVMSBc0WpKapFz89TsptgKiR88MM0xWV771rUu+5FigWeKFbSGAS8Ko0e82zX8ReOCNPd9yqo5vVX0M1hj7DavuAoy9sd+YBIFp9IXIoE+FRFQ2Tc9xq5bydhsjJwjdeugeVfyj+qNp3AMXClq5VBzTWM4SKsI8bNPMOA0ZEkSEFM1AhBKHw/blRag8Q1RwMlvHa5Z5QN6KpUxD28aVCDAkCa5gNrOP7S2f40iEQzKlSGYc3mJGomm+7V0sFpXFUYXxqe05jmM7ga18IkGmB2brV7EZoj6dsPW6gyijBKOEvCJN6hJkzCKjnUwZJzKefQLt2q6joS1YYgu7VXpg2u8BcnbfRNoiyQWyRIzcAmwAE+BAMRh3g37TPPheB9d7RxxRMWF8JnbWP6MEdA4JSyGyRJFZwe77iHvK1ToGHPYpTjJB5nClxyRFGIRxw2FClhdEqOGLhJG331gK9SPFlAH+SVuO7U2uirq9pzpdMgUh/0/PNvu1RrlHSQYtfjn6XT9N+Ci+JDV6sTqMyfL59R/7xV80cwqbzmtSZbvf1rvDWs7W2ybcYLWo0WO9Ee90+vPbp0PcHV9fOPDK8J+7yYzW4O7sZBH0b29J9eHKbl83ht7gqjrFv7tPy+7tw6FNnEZGeQN1fp3x06DXu3nw2/EwnZxGj8gfn5zH+L69eKJ3hKePz/7VSDbmeDS/6KxuutIhksW47U1Wd3w6PD08GpxRZJ97Hfqr7mf3T/X7FKOrFGrn08Hyufme02YO28ZCEobZ+AmwLJZ6PPpdo6f6heTX8qItJLImuWuYao0SEqg0W3qXlpYwUwJEolA1c73uddwgCE6c4NTp+q7TPlWHy+05bacWBJ5f9QoNWrPYodhhdEJ0LK2y6/n5miCehQJoBNyaswzHIMwvELtIIqNPB+pwMCpgxJSKu041fY3404t0IUMxc1cvjWhyxH3TuGLyml7z9kQC35Ju19uS7gFgkhLQ+q4HXKgJF1LV4gXNM5m4lTmqUMjUDcC1CIdetVGzBZmlCWim9oxFWQKVNE7zythi/e9ZCIvcSgROGZcocfPz92l6u9+KSiifiGgHoVM6AdVN2HMVOUU+H/Ku7b2yCvh2FhF9zFRZJSd4zWT70/u06DEpR6VMDAu34F5u+SHEHgD7C372bmnKeNGcbEQvrld1Yyg9aRX9fUGVl0o2n2d5R+taK7mCt5VkuvYQcKYEbzViz0DtEsL+1n1Tst6JXNq3+WUypkOJJMzU/Bn58huPjSEI/djoq4Oz/O5LZiukqpuEpdxn6yTqTaIZf/lswSHWfsp8o/4WjEfv7dqDtRFH5aleGJLQqV7pm2X1yWxgpmCJkkLGN8H3AewLvm0si1xykWqaxpmEz78YWuOaJsKYZVT2u2Zu2NTdnKdcpRC+O32AybX97bJeik8v6z+XF0OlgDNklr7kv50tko8LBlO/CXIuTXOp3p4qOJ1u6PwbwT1S71Xdht87qXdKqa8HgavEvyzgViatD+aPlo2a7p6H1l8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0517111403083031298</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0517111403083031298</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051761403083026205</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051781403083028489</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0517111403083031298</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B24192FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B1032FBA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B09E0E610AE0401F0A05992642</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46657672-b144-410a-a5b4-3bf4351c8c5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_UserGet_CS_FUNC_CHILD_BAU_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="192e0d44-14f0-408b-a092-20d51ed7572e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="97009cb1-5cd4-45e4-b8f2-422720ad4592"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0240a6f6-1825-4071-847d-eef6d2a41f63"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU1" id="7a4e812a-0c0e-4f53-abe9-b9eab99bc95a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU1" id="36db352f-83d1-4360-9af8-9e09fe3140ab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="86765c08-5a67-4c7b-8d96-ac39150942cb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="ce997085-57d6-418f-b450-bdf60575ff52"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="c0caba1b-0454-4485-aab4-4869f100d821"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="68af19d4-89b5-4957-a183-0373044c00a2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="8df8f347-8ecc-4750-825a-1f9f409ec26d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFB38E5309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B1D2228AF2E0401F0A07991D67:9DBD93D9"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0517211403083041498</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2D86FA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2D86FA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2D86FA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFB38E5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B09E36610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999AFB3AB5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFB38E5309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B09E36610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999AFB3AB5309E0401F0A0599263C</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr0CZxyok4U5UkLgOqaDTgdIzMy9HxtmAaWKntgOhXz92aFKgtKdzJCTkne2117542dcChUHJ7QgBXBJGC16/Zfzrl0ulBTSXpoPwwqyAg0wEGExUbdQXuLos18u2UfCEiMGjQiIqW0bJdiqmXTOdxr3ddJ26+hWdRuW3UXgALhS0cimqXUkYUOGmYVtGzKnLkCDCpSgE4UrszjqTsas8XZRxMtrXB5ZpQN5eSxm5loWLvuIUBLiIWWhdWyc+175wZ2RFkYw5vMT0Rct42bvb7Yq7cpHxlVWybduym5by8QVZfTXaX7LN4Ht0yQ7rHqKMEowC8ow0qQnINfMLnWDFOJHr8B1ox3JsDW1Cgk3sVOhXw3oNkLL7JNIJSS6QKdbIycCmsAQOFENhPvVaxtfPdfCw954jKpaMh+Js/XeUgG4hYBH4psgyy9h9HvFCudrXgF2P4iAWZAu3ekwihEEU7jgsSTImQg2fLwpp+wuJUD+STRngv2nLtXXMVVG3LlSnT1Yg5P/p2XG/DigPKIih/S2St8thD828aV/a3ui5/GPGeTIN+a6VUjh2PpDK2/2yPh/WfLZeNk28pzj5td1U99Or+RV5nnRvB6jR/T0chcv56HFs3w8fdrXGvvZQ//UzSp567PtNg9Fg42zCB+tuXu9M9s835Xp/FfMvyInCMQ6W03h3M+46/1TmvX2AYjz5dXXrj4bPeC5+lH9Pao/b0ZTOceA49SfPasD+26YbJ2KwufMag2TEOw+z+ZfZ6Kq7vbXG8z76sWGVx6Q2aL3mdJzDqTGThFm82ACW2VKPh9cvDFW/kPxYXrSF+OYydXUjrVFCApVGW+/S0uLGSoCI76pmHtbDntNsNjvDbrkxqJbt5sCu2M7Q7tjVZrNUK/cyDTqwOKPYY3RJdCytsof5+ZggDl0B1AdublmM1yCMDxD7SKKCR6fqcDAq4J4pFXf8RwjsEOqLwN5s/PWi9hyvmqyWGIVbJr/T77yzlMBPpNspnUj3FDCJCGh91wMu1IQLqWrxhLaxDJziFhUpxOoG4FqE3VKlUbUECaMANFMrZH4cQDFaR2llLHH4L5kIi9RKBI4Ylyhw0vP3bnrn37JKKB+faAehU+qC6iZcuIrsLJ/3864e553Bd2Kf6GOmyio5wQcmp59ep0WPST4qeWJYOBn3fMtfQlwAsD7gZ52XJo/nb8lR9Ox6VTeG0pN21t8nVHwqxtttnHa0rrWSK3hLSaZjzQDHSvD29+wRqJVDWJ+6b3LWZ5Fz+ym/WK7pTCIJoZq/Qrr8xGNjBkI/Njx1cJLPvmROQqq6SUjkJVsvUG8SzfjDZwt2sfZT5jv1t2Pcf23XBayjOCpP9cKQhK70St8s+3dmAzMFS5QUMn4MfgngUvBTY17knItU07SIJbz/paA1rmUgjFlMpdc3UsOx7qY85T4C99XpDUyq7S+XdSLevax/TsYzpYAhMnJf8t/OJknHBYOh3wQpl5aRqLenCk5XRzr/QvCt1HdL/UZt2GkOOmdSX8kLeJJJ+435reWopufnof0H</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr0CZxyok4U5UkLgOqaDTgdIzMy9HxtmAaWKntgOhXz92aFKgtKdzJCTkne2117542dcChUHJ7QgBXBJGC16/Zfzrl0ulBTSXpoPwwqyAg0wEGExUbdQXuLos18u2UfCEiMGjQiIqW0bJdiqmXTOdxr3ddJ26+hWdRuW3UXgALhS0cimqXUkYUOGmYVtGzKnLkCDCpSgE4UrszjqTsas8XZRxMtrXB5ZpQN5eSxm5loWLvuIUBLiIWWhdWyc+175wZ2RFkYw5vMT0Rct42bvb7Yq7cpHxlVWybduym5by8QVZfTXaX7LN4Ht0yQ7rHqKMEowC8ow0qQnINfMLnWDFOJHr8B1ox3JsDW1Cgk3sVOhXw3oNkLL7JNIJSS6QKdbIycCmsAQOFENhPvVaxtfPdfCw954jKpaMh+Js/XeUgG4hYBH4psgyy9h9HvFCudrXgF2P4iAWZAu3ekwihEEU7jgsSTImQg2fLwpp+wuJUD+STRngv2nLtXXMVVG3LlSnT1Yg5P/p2XG/DigPKIih/S2St8thD828aV/a3ui5/GPGeTIN+a6VUjh2PpDK2/2yPh/WfLZeNk28pzj5td1U99Or+RV5nnRvB6jR/T0chcv56HFs3w8fdrXGvvZQ//UzSp567PtNg9Fg42zCB+tuXu9M9s835Xp/FfMvyInCMQ6W03h3M+46/1TmvX2AYjz5dXXrj4bPeC5+lH9Pao/b0ZTOceA49SfPasD+26YbJ2KwufMag2TEOw+z+ZfZ6Kq7vbXG8z76sWGVx6Q2aL3mdJzDqTGThFm82ACW2VKPh9cvDFW/kPxYXrSF+OYydXUjrVFCApVGW+/S0uLGSoCI76pmHtbDntNsNjvDbrkxqJbt5sCu2M7Q7tjVZrNUK/cyDTqwOKPYY3RJdCytsof5+ZggDl0B1AdublmM1yCMDxD7SKKCR6fqcDAq4J4pFXf8RwjsEOqLwN5s/PWi9hyvmqyWGIVbJr/T77yzlMBPpNspnUj3FDCJCGh91wMu1IQLqWrxhLaxDJziFhUpxOoG4FqE3VKlUbUECaMANFMrZH4cQDFaR2llLHH4L5kIi9RKBI4Ylyhw0vP3bnrn37JKKB+faAehU+qC6iZcuIrsLJ/3864e553Bd2Kf6GOmyio5wQcmp59ep0WPST4qeWJYOBn3fMtfQlwAsD7gZ52XJo/nb8lR9Ox6VTeG0pN21t8nVHwqxtttnHa0rrWSK3hLSaZjzQDHSvD29+wRqJVDWJ+6b3LWZ5Fz+ym/WK7pTCIJoZq/Qrr8xGNjBkI/Njx1cJLPvmROQqq6SUjkJVsvUG8SzfjDZwt2sfZT5jv1t2Pcf23XBayjOCpP9cKQhK70St8s+3dmAzMFS5QUMn4MfgngUvBTY17knItU07SIJbz/paA1rmUgjFlMpdc3UsOx7qY85T4C99XpDUyq7S+XdSLevax/TsYzpYAhMnJf8t/OJknHBYOh3wQpl5aRqLenCk5XRzr/QvCt1HdL/UZt2GkOOmdSX8kLeJJJ+435reWopufnof0H</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chCSSBRAWJQtlmodAW2u3ty5VxBvBuYkPsAO2vXzs0KVDa270SEvJkfObMh499xlESV4M255AKwqgWdpv6v/WpZ0V15BqAkWU4dW9m+AiBUXMibHt+tdaYIl0LOc8gpFwgKpp61bIdw/IMuzGx/MCuB1Wr0nDcR127h5RLaOlSsXRtm8SUB3nYpp6lNGCIEx5QlAAPBA7G7atBID0DVHDSW2c7lnnAtLUQYhmYJq5EgCGOcQWzxDwzD3zOIh6MyZwikaXwEjPiTf1l72azqWxqFZbOzaplWablm9In4mT+VW99KTZDFNIZ2607iDJKMIrJM1KkrkAsWKS14zlLiVgk70Dbpm0paAO22MC2Q7/q5muAnN0nkQ5IphwZfIHsAuwWZpACxaDd3YZN/evnOrjbO0kR5TOWJvxo/XeUgK4hZkuIDF5kVrD7POKJcrXOAAchxXHGyRqGakyWCAPXrlOYke2AcDl8Edfy9mtbLn+kmDLAf9OWM3Ofq6RunqhOl8yBi//Ts/1+7VDuUZxBi6we16n3hOcPkchMsuxcjsc/8CpzmNPMKew770iV7X5ZHw9rOVsvm1ZO3JnWBiF+fkbf1iG7u2v0eiFc9rfduXmNtv5ggDsL53JCfg0jO+b824/Jw7DRZv3ZTddi3uMlyhz4OUFPtPsl2oyH4fD8Hq7mTgjXty6q4YYrkkX/N71/6Pd5QrpJDXoXyB2yfwb3SeOaTukoGY5YdzzreVY7c0e+2xhd1vpfHr/d3Hz3fl6GuH9+Pbtj3+tXzdec9nM4NBaSMM6mvwCLYqnGI+xqPdkvJD6WF2UhkTHLXYOl0igugAq9pXYpaQkyKUAkCmQzd+tex/Z9/9zyL2qeZ1vtC8ux7J7Vtlzfr3pOtdCgHYsjih1GZ0TFUiq7m5+PCeIk4EAjSI01y/ACuP4BYhcJpIX0Vh4ORjlMmFRxl24QXyVTl4u5vWI1b11fCeS7vq4NmRjRUdqeCUgPpNuuHkj3LWCyJKD0XQ04lxPOhazFCq0zEduVNapQyOQNkCoRDqpOwzU5SZYxKKZmwqIshspyscwrY/Ldf9VAmOdWwvGSpQLFdn7+3k3v+FtRCekTEeXAVUrnILsJJ64iu8jnTd7uySurgG9nEVHHTJZVpATvmBx+ep0WNSblqJSJYW4X3MstfwlxAsD8gJ95XJoyXrQme9GL61XeGFJPWkV/V6iyqmTrdZZ3tK60MpXwppRM2xwDzqTgPU3Yb6BmCWF+6r4pWR9FLu2H/DKxoGOBBCRy/rR8+YnHxhi4emyE8uBsP/uSOQgp6yZgK07ZOrF8kyjGHz5bcICVnzRfy78NS6PXdp3A2osj85QvDEHoXK3UzfL0zmxgJmGJlEKW7oOfAjgV/NBYFrnkIuQ0TTMB73/RlMY1dYQxy6gIu3pu2NfdnKd4WkLw6vQGJtf2l8t6y9+9rB+uBmOpgAnSS1/y384GyccFg67eBDmXpr6Vb08ZnM73dP6F4Ampr3YbXq/tXxxJfc0pC3iQSeuN+a1lr6bH56H1Bw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chCd9EBQkKtNlC6Zayu92XK9cZwG1iB9sJ0F9/7dCkQGlv90pIyJPxmTMfPvaZQFFY9rpCAJeEUcPvt81/cLXyAHWnYjmVVtOquo2G1cRuxZo7Ts2t1Bpz3Cibhi9EAj4VElHZNsuOW7WcuuU275yW5za8cqVUrTX+mMZP4EJBK5eSYxqbKKTCy8K2zYRTjyFBhEdRBMKT2Jt2xyNPeXoo52R2znYss4C8s5Qy9mwblwLAEIa4hFlkn9kHPmeB8KZkQZFMOLzEDETbfNm7Xq9L60qJ8YVddhzHdlq28gkEWXw1O1/yzRD4dM5263NEGSUYheQZaVJjkEsWGN1wwTiRy+gdaNd2HQ1twQZb2K3Sr6b9GiBj90mkA5JcIEsskZuD3cIcOFAMxuzWb5tfP9fB3d47jqiYMx6Jo/XfUQKaQshiCCyRZ5az+zziiXJ1zgB7PsVhIkgK13pMYoRBGDcc5mQzIkINXyCMrP3GRqgfyacM8N+05cze56qo2yeq0ycLEPL/9Gy/XzuUnyhMoLNouOgWJuOJ5O5gNqePl/3GcvVjYM+cdkZh33lHqmj3y/p4WIvZetnkf7uY4Qt3XRvHv56i8/j+R2P5fZWyaoxm22Q5G/jf/Mv7u3UjZu7jYHZNxlfjm6dten9/EaxJMKz3hjKVD1uHDuBLOtrEvct06H67az4xiuxe+Pij7Dwvw/sxFc1JenlVe2rAr1H9phpdyf7l1c2f7xdMNIlEG3e+3s5Gv1cSgj5apV/8YZXIeD4bbZ9vZzye9BO//ZrTfg6HxlwSpsnDI2CZL/V4+H1jqPqF5Mfyoi0ksOaZqxdrjRISqDQ7epeWFi9RAkQCTzVztx6eu61WqzvsVbq9WsVpDZyq4w6drlNrtcr1ynmuQTsWRxTPGZ0THUur7G5+PiaII08ADYBbKUvwEoT5AWIfSWT49FYdDkYF3DGl4qye0rBWQfxRJq2H7SpKa/UnzGumcc3khE54dy6BHyi3Wz5Q7lvAJCag5V3Pt1ADLqQqxQqliQzdUopKFBJ1AXCtwV652qzZgkRxCJqoHbEgCaEUL+OsMLbY/ZcthEVmJQLHjEsUutnxeze74295IZRPQLSD0Cn1QDUTTtxEbp7Pm7xrJ2+sHL6bBESfMlVVyQneMTn89DosekqKSSkSw8LNuRdb/hLiBID9AT/7uDRFvCAle9Hz21VdGEpOOnl/V6i0KiVpmmQdbWip5AreVorp2lPAidK77R17AmoXEPanrpuC9VHkwn7IL5FLOpVIQqTmz8iWn3hrTEHot4avzs3msw+Zg5CqbhI28pTtPFRPEs34w1cL9rD2U+Yb9bdmPHht1wmsvTgqT/XAkIQu9EpfLNt3ZgMzBUuUEjK+D34K4FTwQ2NR5IKLVNP0kEh4/4uhJa5tIoxZQqXfNzPDvuxmPOU2Bu/V6Q1MJu0vd/VGvHtX/x6PpkoAI2QWvuS/nS2SjQsGUz8JMi5tc6Oenio4XezJ/AvBt0rfK/eb9WG3NegeKX21KOBBJp035reWvZoen4fOvw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0517211403083041498</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0517211403083041498</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0517161403083036483</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0517181403083038523</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0517211403083041498</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFB38F5309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B09E37610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999AFB3AC5309E0401F0A0599263C</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>68af19d4-89b5-4957-a183-0373044c00a2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_UserGet_CS_FUNC_CLG_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="757ade0b-6900-4632-9017-6e1d59129c31"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e3fa0836-9d30-4d28-8fa8-9b8386d65d03"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0ef2c27e-b714-47f1-9cb7-26215abc08cc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="29420c86-e66a-4e22-9e23-547e93b5f8fd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="84e5a83e-2ac3-42e2-832b-a6f3c71e5934"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="f1779f82-5821-47ca-9729-94eb13e76f31"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="cd9476db-73d1-40a6-9f55-84a7d899ccce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="3650c0b8-6123-4ce4-976e-8461f234603a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B1D2298AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B372BC2D4BE0401F0A07991D6D:9E6CEC20"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0517271403083047994</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B09E76610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09E76610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09E76610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B1D2298AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B241D2FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B1D2298AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B241D2FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tq4zelTQVKO8BMBRW8oaB+6suZkG4g2qbQpID++pMUWy6iR88MM0x2d9Ze+5KV1DmOQtvzOYdE0Jhp3XZD/6dmWRXbHSED48AxyuVR2ajZFWIgJ3BJxcIYg61rXc5T6DIuMBMN3bZQ2bCqBqrdWa6HHM+ulip25VnXHiDhElq6lCxdW0Yh414WtqGnCfNizCn3GI6Ae4J4A//q0pOeHs456c36imUWMGlOhJh6pklKARAIQ1IicWTWzS2fesC9AR0zLNIEPmIGvKF/7F0sFqXFUSlOxqZtWZZpuab0CTgdH+rNg3wzBF02ilfrFmYxowSH9B0rUlcgJnGg+eE4TqiYRF9AIxNZCtqAJTEIKrND3VwHyNj9EGmLZMKxwScY5WB9GEECjIB23+829MOfdXC19y7BjI/iJOI7699RAjaHMJ5CYPA8s5zdzxH3lKtZB+J1GQlTTudwrcZkiglw7SaBEV1eUi6HL+Ba1n5tyeWP5lMG5DdtqZubXCV1c0912nQMXPyfnm32a4XygMMUmh007Dy+nj+5HatVebyYm7XpS2qSzlnrqpFR2HRekSra/bHeHdZitj42nVccp9e7PGqdRe+3fLEc4MfB20XaGfjXr48QmGV38ec4XISdp5lzc1Trd3t+rXZ8/37HnOfBrNo+v7hkD6jn8Nt3fvB6tHx7Okn6QyvyqVOBsPzXXd6LUf/o/Xl4vHitPv0Vw/gl7HYeX07aJ5NT/uIkZ+EkROE4mN2iHnFS32ydW/3XwcHDmPA/8/tqgPxOOOxUXsa1xjqnzRy2jbkkDNLhCxCRL9V4dNvaqewXFt/Li7LQwBhlrt5UaRQXwITeVLuUtHipFCAaeLKZq/VpC7mue4zatu3W/FP7xCpb6NTyLcd1Ubvq5Bq0YrFDsRWzEVWxlMqu5ud7giTyOLAAEmMep2QCXP8GsY0F1rqsLw9HzDjcxVLFh5y7MZ/UYDisAZ2MQ8eZTd/LM127jkWP9RJ/JCDZUm5kbyl3HwidUlDyruabywHnQpZihuepCFFpjksMUnkBJEqDPbtcq5icRtMQFFEzioM0hNJ0Ms0KY/LVv21gwjMr5WQaJwKHKDt+X2a3+y0vhPQJqHLgKqVjkM2EPTcRyvP5Ou/KZt45vJ8GVJ0yWVWRULJisv1pPSxqSopJKRIjHOXciy2/hNgDYH7Dz9wtTREvmNON6PntKi8MKSfNvL8zXJqV0vk8zTrqKKlMJLwpFROZAyCp1Lu3u/gVmFlAmD+6bgrWO5EL+za/VEzYQGABkZw/LVv+4K0xAK7eGl15bpY/fchshZR1E7AU+2ytUD5JFONvXy3EI8pPmm/k3yJOgnW79mBtxJF5ygeGoGysVupieftiNkgsYalUwjjZBN8HsC/4trEocsFFyGkapgK+/qIpiWvomJA4ZaLb1jPDpuxmPMXbFLy10yeYTNo/7uol//Kufry6HEgBjLBe+NL/djZoNi4EdPUkyLg09KV8esrgbLwh8x8E9yi95Z441Sqy/ELpK65rV8vrWd7KpPnJ/NmyUdPd89D8Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tq4zelTQVKO8BMBRW8oaB+6suZkG4g2qbQpID++pMUWy6iR88MM0x2d9Ze+5KV1DmOQtvzOYdE0Jhp3XZD/6dmWRXbHSED48AxyuVR2ajZFWIgJ3BJxcIYg61rXc5T6DIuMBMN3bZQ2bCqBqrdWa6HHM+ulip25VnXHiDhElq6lCxdW0Yh414WtqGnCfNizCn3GI6Ae4J4A//q0pOeHs456c36imUWMGlOhJh6pklKARAIQ1IicWTWzS2fesC9AR0zLNIEPmIGvKF/7F0sFqXFUSlOxqZtWZZpuab0CTgdH+rNg3wzBF02ilfrFmYxowSH9B0rUlcgJnGg+eE4TqiYRF9AIxNZCtqAJTEIKrND3VwHyNj9EGmLZMKxwScY5WB9GEECjIB23+829MOfdXC19y7BjI/iJOI7699RAjaHMJ5CYPA8s5zdzxH3lKtZB+J1GQlTTudwrcZkiglw7SaBEV1eUi6HL+Ba1n5tyeWP5lMG5DdtqZubXCV1c0912nQMXPyfnm32a4XygMMUmh007Dy+nj+5HatVebyYm7XpS2qSzlnrqpFR2HRekSra/bHeHdZitj42nVccp9e7PGqdRe+3fLEc4MfB20XaGfjXr48QmGV38ec4XISdp5lzc1Trd3t+rXZ8/37HnOfBrNo+v7hkD6jn8Nt3fvB6tHx7Okn6QyvyqVOBsPzXXd6LUf/o/Xl4vHitPv0Vw/gl7HYeX07aJ5NT/uIkZ+EkROE4mN2iHnFS32ydW/3XwcHDmPA/8/tqgPxOOOxUXsa1xjqnzRy2jbkkDNLhCxCRL9V4dNvaqewXFt/Li7LQwBhlrt5UaRQXwITeVLuUtHipFCAaeLKZq/VpC7mue4zatu3W/FP7xCpb6NTyLcd1Ubvq5Bq0YrFDsRWzEVWxlMqu5ud7giTyOLAAEmMep2QCXP8GsY0F1rqsLw9HzDjcxVLFh5y7MZ/UYDisAZ2MQ8eZTd/LM127jkWP9RJ/JCDZUm5kbyl3HwidUlDyruabywHnQpZihuepCFFpjksMUnkBJEqDPbtcq5icRtMQFFEzioM0hNJ0Ms0KY/LVv21gwjMr5WQaJwKHKDt+X2a3+y0vhPQJqHLgKqVjkM2EPTcRyvP5Ou/KZt45vJ8GVJ0yWVWRULJisv1pPSxqSopJKRIjHOXciy2/hNgDYH7Dz9wtTREvmNON6PntKi8MKSfNvL8zXJqV0vk8zTrqKKlMJLwpFROZAyCp1Lu3u/gVmFlAmD+6bgrWO5EL+za/VEzYQGABkZw/LVv+4K0xAK7eGl15bpY/fchshZR1E7AU+2ytUD5JFONvXy3EI8pPmm/k3yJOgnW79mBtxJF5ygeGoGysVupieftiNkgsYalUwjjZBN8HsC/4trEocsFFyGkapgK+/qIpiWvomJA4ZaLb1jPDpuxmPMXbFLy10yeYTNo/7uol//Kufry6HEgBjLBe+NL/djZoNi4EdPUkyLg09KV8esrgbLwh8x8E9yi95Z441Sqy/ELpK65rV8vrWd7KpPnJ/NmyUdPd89D8Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlchFwIhUUGi0NL0yhSm2/Ky8tgHMJs4IXZC2l8/TmhSoLTbWQkJ+eT4O9+5+LNPOAoDy+tzDomgEVP8YVf9p+O4rVab2JpFOrZmW21D67gtpDkmsRynCS2LOKric56Cz7hATHRVyzBtzWhrZmdquJ7peE2jYTZbM1V5gIRLaOnSMFQlDwPGvTJsV00T5kWIU+4xFAL3BPYm/ZtrT3p6qOKk9k62LMuASW8pROzpOm4QwBAEuIGjUD/R93xOCPcmdMGQSBN4jUl4V33du9lsGptmI0oWumUYhm64uvQhnC6+q71v1WYgPptH2/UAsYhRjAL6ggpSNyCWEVH6wSJKqFiGH0CbumkU0BrkWMOmzb6r+luAkt0XkfZIJhxpfInMCuwe5pAAw6D8vPe76vevdXC7d5ogxudREvKD9Z9RApZBEMVANF5lVrH7OuKRcvVOAHs+w0HKaQa3xZjECANXxgnMaX5NuRw+wpWy/UrO5Y9WUwb4T9pyou9yldT1I9UZ0gVw8X96ttuvLcoDClLo/fT9C5fd4af8zDXmf6W+WJsvTv+yNbW7JYVd5y2put2v68NhrWfrdRPwUyO4wg/uTby8Mm9tMrvIxouOGLVnBD3o44ufjzPOw3gFZsp/RPej9Yv5MCaXcfa3WIyeHp/G/JLgK2e6SsffZjdp2hnDCEe2Qfh4Y5zN0SwP07x9Jgant83sfhA1w7t45a8unu7m9oCPfqxIe2gP/Mnt9cwVeQow0X9RDNNv+iNaJ2er4HHkjHzXp3ch7r7ltJvDvrGShEn6awVYVMtiPPyhci77hcTn8lJYKNHmpasXFxrFBTCh9opdhbR4qRQgSjzZzO36fGC6rntq2ebQOj91BmeGbZjnRt9wXNccts1Kg7YsDigOIjanRaxCZbfz8zlBHHocGIFEy6IUL4GrnyAOkUCKz+7l4YgYh2kkVdwMM2o1GZrPn+2FmW+eMytrSvUKQFVuI3HH7pL+XECyp92mtafd94BpTKEQ+GLCuRxxLmQx1ihLRWA2MtRgkMorIClU2LPsTkvnNIwDKKjqYUTSABrxMi5Lo/Ptv6UhzEsr5TiOEoECszyAH+Z3+K0qhfQhtHDgRUqnINsJR+4iq8rnXd6to3dWBd9PCS3OmayrSCjeMtn/9DYuxZzUs1Inhnk9F/WWP4Q4AqB/wk8/LE0dj2R0J3p1v8orQwpKr+rvGjXWjTTL0rKjTiGWiYTXpWaa+gRwKhXveRr9C0yvIfQvXTg164PItX2fXyqWbCKQgFDOn1Iuv/DamAAvXhu+PDn5V58yeyFl3QTk4phtEMhHScH403cL9nDhJ81j+beJEvLWriNYO3FknvKJIShbFKviann+YDZwJGGp1MIo2QU/BnAs+L6xLnLNRchp+pUK+PiLUohcV0UYRykT/lAtDbvCW/IUzzF4b07vYEpxf72tc/7hbf14cz2REhgitfal/+2s0XJcsNQ76V9y6aq5fHzK4GyxI/SvBI9oveGeOe22afRrrW+5rtW2rbqAe5n03pnfW3Zqengeer8B</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBQFFRUVxv3sJhWJRNBgT99e+g0ZPkJOfL+13p9PR0P73Q88wzNnyP7QCMUZy4YVBWxJfKP4jmmyxs72oWjxo1rl63am0G0rVmq2mxLGxwnNGulBWMU6QEODGC5KXC0ky9RvM1htHpdodtd2j2qcHz20p5iWJMTBOVJ7pSzn0vwJ2r25dKGged0MAu7gSGj3AngZ05UEcdotkx7pgqr883lFeH8auTJFGHouCTiSDyPPgEQ596pj7oPJu4M3ftwEjSGL35NPFL5e1slmVPWf0pjG2KpWmaonmK6JjYtX9VXkv3w8hUAiu8rbtGEAYuNDz3YhSgVJQ4oVkGnh3GbuL435hmKIYuTNdQDmuQ4YJfFeq3gyu6H1r6ADLGRg07BnM3NkMWilEAUXkxU14qv35WwdtZPTYCbIWxjz+t/xskFJyQF0bIrOF7ZHd0P7f4RbpenxHsKAH0Uuye0Lhok8iACJenMbLcfORi0nwmLl/LX87xvcMQ/C8leabe4ySwqS8yI7o2wsn/U6/3tbpZWRpeil5blwyeTFEculv5wp3kbh6zwGnScbR4uUJ4r3wD9Sj12/pzoz766u0Q4DjNEpgRs4K2FYLxBmssNrdwYtTrqT1hgh43dph0j1J301jlYp83dH0MjopfdTQbL4Xj0hq7DXNwXtClXnecN3x+OTWO/HoA0mUrsLut+HyOrD7L5xdtQqdMc6oM4hbHD3asQTmDY3thaht3oPXhgePp3TjzGpvQ2ZcGvfk08BZjcODi9VbGIYNffsf0PoYiriE6X4Ms/q8bNC8aifFYdItJYZHPM0GvqqJ0q2K3C1DXBpkiAFsRRhcwFuzD0Tm4PT6jBaAtZCCCszoDmWhvxKWmDaXMXC697VKRZUGdcVkfbMQS2RClfClu1wPaWG2jDSvT27kgmOtZuKsPIrN/yPoOHKu6mo115azupXysS/TqKrNzsr6oe5WZ6It6abUXeHUmZWJ29ShKmTPermbRZsFn8CJpKuB6gFlIXUft6/6SgfWZA/fSSAWHq1xw1O5yqeaSDqYlwR4vSWx6V95G0Dejne8574z3iXHd7C3Pu56Xbi/SXu1Kve782Jsru7qoSQMw2yx2q+XBWMmnEuyPwe7u0W24xjrM7G07E7XNYBhuFecEx0CTBEEDJF00UJXeAIQ9AagccPNLdy80w64pZ9SAxaUq7/Wa67N7XGOjR3sG024zm9GqOT02RSmobofpbu+ozlqeVIdz87TgE/6ywafqqWm4DMwjS1tL/WSYW31tXtpNxXwN+1XTHlDehZdjtTUA8eXseKo9S1bNCT7vXMtaCesJ57UsT63PIsuzojOu6qF2iOmmgOostTmfhkkJ2KoAQG+/2AuaKrSLpJpKpm1UwQCylKTgsmeTIbs8DvonD27qIMyHq8n+8FYYU8wkgco0ibSVVGqLwCyK0J8vJHkPFoJtx4ItyYIGRaBtlGG2Ifla9Iny5zzK1zzakgCk+hY0+X6pvqD5ZJLMOQ6cA2ERyLyjHvOV2fTp1hFJo/k44jIVj61guwoPqu/GizidL4bD8Sjf6WnvsCezyqLnw1N9W5JOhwi446HuHMRQNKbRZpNE1QDGMFEiX1Xyy2SL921359ODaoMRprQIW+zC32WLniFth7E9Z4b9WTCtt/gSTq1z36/u29mqqs+bUcvsBpZ4PlPbeEmHIJT5WeNo5ix7cBbZqJlZA3DYGew493jhzEvDrQ6zmTZczf1qo9Q4jUY+fdEpbhxNsnkv4yRNq9ZNQe/rOIrdTdq283gSmOzGSJqnLb1supF34Nn0oHNRfWn7pFjTkxm11GlJ49Zw69utCA6oGXUCUssaKb3z7mJcIn8CbwP083R4CG/zg3o/WT6MnjvpmJNuRTC5L4sLSBHLMrkVjOTvBKaQuGbNuqp2ooIF4QQFSeW1OFWQl05KKI5rdsiVcVtLTabdZLsS3W3XWbbRkGiOZmQa0C2ep1lRurOcG4pPELthYLmFr4LH3W6pvwOEfgejwERx7RSm0EG48heLRb7KSjAj128YYKSHhCfScotj5QbTrTfarEgLNFsHcotuy802XZeZVqU8DpNJMImBlaD4A0dkmA8ccYagG7moIJLFbYrJdYoTkpKjcUoTj3k6GU8BSgnVjAu212G5doPCrh95qABM+aGZeugpcqJrgih8+2VrBsRX6UzS/1Hm3etN/22In/fu2SA6plso4CIeAZGKoj8Ib6vTuAfzfdDc+6Dv5kFqusWFTlKbxC68Ifm49btjilZ5tAuJ6g75oflZ8MEq9TmghyPz5MJHzz+eA4RNEr7xei/J0Xg6PqWnU3otQqvgUjExTzEU3aLmCKaEEJ318IAC6mGC+hEXfaD+5Pkh/4gvTZxgnpDv2SctU74uf/AQmSNcPEQU0vL5T185H1ySvCUoT76SdT3yXikQ//VJAzuw0CPiKfnJwtj8Xa4vbL3zQ+IsBpgb2MWqYJ7nb5oChsSsS4ZYGL83/pWBr5x/FD6S/MCSkG7apQn6fqdcTKeXigFhmAaJIlaugvcT84ozOUeo81vpDzNX7vdG5nP8LZlfq6M5mV2+UXnouv9bueZe2wUicgq7VywvlZy8S4nzwH43od8Afjmk22T6/WVIf4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0517271403083047994</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0517271403083047994</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0517251403083045690</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0517271403083047994</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130911_020045</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B1D22A8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B241D3FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E61862CE0C842255E0401F0A079902DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd9476db-73d1-40a6-9f55-84a7d899ccce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_UserGet_CS_FUNC_NONCLG_FAU_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="b228d550-0627-4181-a846-9706cac6958f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="89c74bb9-5e1c-4d78-902b-17c80d689c71"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d81bbc0b-fbb7-4df6-875d-4ef3a24e6bef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG" id="3b409139-cc0c-4fb8-899c-3c277befd416"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG" id="437dbfe7-b211-4804-8847-59ea58da04ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="26361224-cfd9-4d39-8195-44da22199677"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="5529e7d8-d4d8-4a3a-882f-f89c1db1780e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="eec08efc-5e11-47cb-b83d-dd7441e64ac4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="87669356-477d-4a9b-9ebe-1a16efa90ad6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="5cf77082-37a0-40b1-93f6-a365a11df9fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2D8C9A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999AFB3FF5309E0401F0A0599263C:26693044"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0517361403083056239</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2B820496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B820496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B820496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2D8C9A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B229EDDB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999AE64DE1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D8C9A9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B229EDDB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999AE64DE1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGljyjkQoAkKkgplDM5hd5oTzt9GRlnA6aJncYOhH79OKGhwKGddiQk5J3ttde+eNmnHMWR5fmcQyoIo0rQ76j/tCzUbGNka1Pbmmg2ckFzpxi0dju0nYkTQrvlqkrAeQYB5QJR0VEtw7Q1o6WZzp3hembba1h1p9F8UpXfkHIJLV3qhqrkcUS5V4btqFlKPYY44R5FMXBPYG/sj4ae9PRQxUntnm5YlgHT7lyIxNN1XA8BQxThOmaxfqrv+ZyG3BuTGUUiS+EtZsg76tve1WpVXzXqLJ3plmEYuuHq0ifkZHaidn9UmyEM6JRt1j1EGSUYReQVFaRGIOYsVPxoxlIi5vEH0KZuGgW0BjnWsGnTE1V/D1Cy+yLSHsmUI43PkVmB3cIUUqAYlPvboKOefK2Dm713KaJ8ytKYH6y/RwnoEiKWQKjxKrOK3dcRj5SrewrYCyiOMk6WcFmMSYIwcOU6hSnJh4TL4Qu5UrZfybn8kWrKAH+nLaf6LldJXT9SnT6ZARf/p2e7/dqg/EZRBt2101xcDlx/2v9rXXtc+/xxfJ+8nvm3Y7tTUth13pDatvttfTis29l62zTkBF0J0MPGNL85d++v6XxE/HUU3oz86XkwwOzi9Ub0bi/8nw/+4DkZxtBbLd30ad56cUf3+d/t80tn+GvcPP9V+9GLh9YoN91agi+e8kYG+CJnwaq2+B3d2wsnuKkJ4oz0s8nDhXio3YfWw3Pjhrey5Ce8BvHjS8u/rHGUXyVz8/lH/hw1eT6Iltlo7qyv4zBinfecdnPYN1aSMM4mC8CiWhbjEfSVgewXEp/LS2EhoTYtXb2k0CgugAq1W+wqpMXLpACR0JPN3KwHPdN13TOr7/Rc3z33zw3bMAeGbzRd12o17EqDNiwOKPYYnZIiVqGym/n5nCCOPQ40hFRbsgzPgaufIPaRQEpAb+XhYJTDHZMqbrZeUGovXifLmW1OJiAWgnFiiIWqXDJxRa9Sfyog3ZNu09qT7lvAJCFQ6Hsx4FxOOBeyFi9omYnIrC9RnUImb4C0EGHPsp2mzkmcRFAw1WMWZhHUk3lSVkbnm39LQ5iXVsJxwlKBIrM8fx+md/itqoT0CUnhwIuUzkB2E45cRVaVz8d5N3fzruD9LCTFMZNlFSnBGyb7n96npRiT7ahsE8PcrLhvt3wT4giA/gk//bA023jhkuxEr65XeWNIPelW/X1B9Zd6tlxmZUfbhVamEl6XkmnqY8CZFLz1HXsGqm8h9C/dN1vWB5G39n1+mZjTsUACYjl/Srn8wmNjDLx4bATy4ORffcnshZR1E5CLY7ZeJN8kBeNPny3Yw4WfNF/LvxVLw/d2HcHaiSPzlC8MQeisWBU3y/qD2cBMwhIphSzdBT8GcCz4vnFb5C0XIadpkgn4+ItSaFxHRRizjIqgr5aGXd0teYp1At670x8wpba/XdY5//CyfhwNx1IBY6Rufcl/O2ukHBcMavEmKLl01Fy+PWVwOtvR+TeCx6T+zLEM220dSL3tbAu4l0n3D/Oflp2aHp6H7r8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGljyjkQoAkKkgplDM5hd5oTzt9GRlnA6aJncYOhH79OKGhwKGddiQk5J3ttde+eNmnHMWR5fmcQyoIo0rQ76j/tCzUbGNka1Pbmmg2ckFzpxi0dju0nYkTQrvlqkrAeQYB5QJR0VEtw7Q1o6WZzp3hembba1h1p9F8UpXfkHIJLV3qhqrkcUS5V4btqFlKPYY44R5FMXBPYG/sj4ae9PRQxUntnm5YlgHT7lyIxNN1XA8BQxThOmaxfqrv+ZyG3BuTGUUiS+EtZsg76tve1WpVXzXqLJ3plmEYuuHq0ifkZHaidn9UmyEM6JRt1j1EGSUYReQVFaRGIOYsVPxoxlIi5vEH0KZuGgW0BjnWsGnTE1V/D1Cy+yLSHsmUI43PkVmB3cIUUqAYlPvboKOefK2Dm713KaJ8ytKYH6y/RwnoEiKWQKjxKrOK3dcRj5SrewrYCyiOMk6WcFmMSYIwcOU6hSnJh4TL4Qu5UrZfybn8kWrKAH+nLaf6LldJXT9SnT6ZARf/p2e7/dqg/EZRBt2101xcDlx/2v9rXXtc+/xxfJ+8nvm3Y7tTUth13pDatvttfTis29l62zTkBF0J0MPGNL85d++v6XxE/HUU3oz86XkwwOzi9Ub0bi/8nw/+4DkZxtBbLd30ad56cUf3+d/t80tn+GvcPP9V+9GLh9YoN91agi+e8kYG+CJnwaq2+B3d2wsnuKkJ4oz0s8nDhXio3YfWw3Pjhrey5Ce8BvHjS8u/rHGUXyVz8/lH/hw1eT6Iltlo7qyv4zBinfecdnPYN1aSMM4mC8CiWhbjEfSVgewXEp/LS2EhoTYtXb2k0CgugAq1W+wqpMXLpACR0JPN3KwHPdN13TOr7/Rc3z33zw3bMAeGbzRd12o17EqDNiwOKPYYnZIiVqGym/n5nCCOPQ40hFRbsgzPgaufIPaRQEpAb+XhYJTDHZMqbrZeUGovXifLmW1OJiAWgnFiiIWqXDJxRa9Sfyog3ZNu09qT7lvAJCFQ6Hsx4FxOOBeyFi9omYnIrC9RnUImb4C0EGHPsp2mzkmcRFAw1WMWZhHUk3lSVkbnm39LQ5iXVsJxwlKBIrM8fx+md/itqoT0CUnhwIuUzkB2E45cRVaVz8d5N3fzruD9LCTFMZNlFSnBGyb7n96npRiT7ahsE8PcrLhvt3wT4giA/gk//bA023jhkuxEr65XeWNIPelW/X1B9Zd6tlxmZUfbhVamEl6XkmnqY8CZFLz1HXsGqm8h9C/dN1vWB5G39n1+mZjTsUACYjl/Srn8wmNjDLx4bATy4ORffcnshZR1E5CLY7ZeJN8kBeNPny3Yw4WfNF/LvxVLw/d2HcHaiSPzlC8MQeisWBU3y/qD2cBMwhIphSzdBT8GcCz4vnFb5C0XIadpkgn4+ItSaFxHRRizjIqgr5aGXd0teYp1At670x8wpba/XdY5//CyfhwNx1IBY6Rufcl/O2ukHBcMavEmKLl01Fy+PWVwOtvR+TeCx6T+zLEM220dSL3tbAu4l0n3D/Oflp2aHp6H7r8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1N6oVzaEWZAdFu34hbcW9wvZ0K6WqJtWpqUi7/+JMVWQPTomWGGyerKt751yZecMhRHlttjDDJOEqp4g476D54iQPVgqrWarUCzA8vR0NSZaj5uQMtp+349cFTFYywHjzKOKO+olmHamtHUzPa94bhmy603aobh/FWVP5AxAS1caoaqrOKIMrcI21HzjLoJYoS5FMXAXI7dce/m2hWeLio5qd3TDcsiYNadcZ66uo5rPmCIIlzDSayf6js+pz5zxySkiOcZvMb0WUd93btcLmvLei3JQt0yDEM3HF34+IyEx2r3qNwMvkeDZLM+QzShBKOIvCBJ6gb4LPGVXhQmGeGz+ANoUzcNCa3BCmvYtOmxqr8FKNh9EWmHZMaQxmbILMFGEEAGFIPye+R11OOvdXCz9z5DlAVJFrO99fcoAV1AlKTga6zMrGT3dcQD5eqeAnY9iqOckQUM5ZikCANTfmUQkNU1YWL4fKYU7VdWTPxIOWWAv9OWU32bq6CuH6jOgITA+P/p2Xa/Nih/UJRDF5m367vzu2v64/FkMNTP0Swyg/jpqt7HnYLCtvOGVNXu1/X+sFaz9bopD5b9yxM26v+erhAbWo31fNI0R/hheoku6OCvvT7vtx9tpzHPl+t6cOUs43zwcNkbxl44fwga9IKszs/yp8V1tDhKH/Q8f7aHP3r4hrQ82r7LfmS9wGi221fRavb8OHS8Zqs5aTw6D+my93IZzYPByfAiCCegv6R1xu14HqYG9mx+5K1PHkk8Diezl6vJ+ORn9NPuvOW0ncOusZSEcT59AszLpRwPb6BciH4h/rm8SAvxtaBwdVOpUYwD5WpX7pLS4uZCgIjvimZu1hdnpuM4fctyzgeDfr1+btiGeWH0jIbjWE27WWrQhsUexbOEBkTGkiq7mZ/PCeLYZUB9yLRFkuMZMPUTxAHiSPHoSByOhDK4T4SKm89kPQujZLGO6iK9lzYLQ9R21qGqDBN+S29F1zhkO9JtWjvSPQJMUgJS3+WAMzHhjItazNEi55FZW6AahVzcAJkUYdey2w2dkTiNQDLV48TPI6ils7SojM42/5aGMCushOE0yTiKzOL8fZje/reyEsLHJ9KByZT6ILoJB64iq8zn47wb23mX8L3cJ/KYibLyjOANk91Pb9Mix6QalSoxzMySe7XlmxAHAPRP+On7pani+QuyFb28XsWNIfSkW/Z3jmrzWr5Y5EVHW1IrMwGvC8k09THgXAje+j55BqpXEPqX7puK9V7kyr7LL+czOuaIQyzmTymWX3hsjIHJx4YnDs7qqy+ZnZCibhxW/JDtLBJvEsn402cLdrH0E+Zf4m+ZZP5buw5gbcUReYoXBic0lCt5s6w/mA2cCFgipDDJtsEPARwKvmusilxx4WKapjmHj78oUuM6KsI4ySn3Bmph2Nbdgidfp+C+Ob2DKbT99bJesQ8v68nN9VgoYIzUypf8t7NGinHBoMo3QcGlo67E21MEp+GWzr8SPCT1/bZl2E6ztyf17aqAO5l035nfW7Zqun8euv8C</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3jcx47xBXOxJzADIW3cQJKGtEnzckaRN6BiS0aSueTrj2RiBwjJSc8MM4y2t9Ze+6IlnQiUJl7YEwK4JIwa0aBj/hMg18exiyzcDhzLfwxaFqr72Kr7UG9AG+oxbppGJEQOERUSUdkxPcf1Ladpue1bJwjdVlhv17yW92Aav4ALBa1cao5prNOEirAI2zFzTkOGBBEhRSmIUOJw3BsNQ+UZopKT2T3ZsiwC8u5Myiy0bVyLAUOS4BpmqX1i7/mcxCIckylFMufwHDMWHfN572q1qq3qNcantuc4ju0EtvKJBZl+Nrufys0QR3TCtutTRBklGCXkCWlSI5AzFhu9ZMo4kbP0DWjXdh0NbcEaW9j16WfTfglQsPsg0h5JLpAlZsgtwW5gAhwoBuPnTdQxP3+sg9u9txxRMWE8FQfrv6MEdAkJyyC2RJlZye7jiEfK1T0BHEYUJ7kgS7jUY5IhDMK45jAh6yERavhiYRTtN9ZC/Ug5ZYD/pi0n9i5XRd0+Up0BmYKQ/6dnu/3aovxCSQ5dWOK7b3O4gkn84OZDDmnrd7M3PP9yP+oUFHadt6Sqdj+vD4e1mq3nTZds1XvgjTRuTeEP+rJ01ssIPRBf/hhef0HzxY+ode78uTn7sb6TveFq0Lrvx+lmM0Hzy3778up+MRK33/gQb5oX7U/9J3b14P/kzvmv89uM/+TnF2R11Zg/PnmBDOz737x+Pr1ozdNpQuatZXQ3h/zeubjoT78/OL8dMWqvcX8sF+Ixvv70bcSd+nXrAvlpMxGXbHonOi857eawbywlYZw//gEsy6Uej2hgfFX9QvJ9edEWEluTwjXMtEYJCVSaXb1LS0uYKwEicaiauV1/PXWDIOidNf3BmXvabJ85vuN+dXpOKwjcQaNRatCWxQHFU0YnRMfSKrudn/cJ4jQUQGPg1pLleAbCfAdxgCQyInqjDgejAm6ZUnE3X22eWLAKJvFk5bJFNlusXScTyDeNSyav6BXvTSTwPe12vT3tvgFMMgJa4PWECzXiQqpiLNAyl4lbW6IahVxdAVyrcOj57YYtSJoloKnaKYvzBGrZLCtKY4vtv2chLAorEThjXKLELQ7gm/kdfitLoXxioh2ETqkPqp1w5C7yynxe5d04emeV8L08JvqcqbpKTvCWyf6nl3HRc1LNSpUYFm7JvdrylxBHAOx3+NmHpanixUuyE728X9WVoQSlW/Z3gWqLWr5c5kVHW1osuYK3lWa69hhwrhRvc8vmQO0Kwv7QhVOxPohc2ff55XJGxxJJSNX8GcXyA6+NMQj92ojUyVl/9CmzF1LVTcJaHrOdJupRohm/+27BIdZ+ynyt/laMxy/tOoK1E0flqZ4YktCpXumrZfPGbGCmYInSQsZ3wY8BHAu+b6yKXHGRapoecwlvfzG0yHVMhDHLqYwGZmHYFd6Cp9xkEL44vYIpxP35tl6LN2/r+9FwrCQwRWblS/7b2SLFuGAw9aOg4NIx1+rxqYLT6Y7QPxN8rfV9r9/2HD9o9iqtbwSB1/TbVQH3Mum+Mr+27NT08Dx0/wU=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0517361403083056239</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0517361403083056239</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0517321403083052031</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0517341403083054216</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0517361403083056239</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2D8CAA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B229EEDB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999AE64DF1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>87669356-477d-4a9b-9ebe-1a16efa90ad6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_UserGet_CS_FUNC_ADULT_SAU_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="9a530dbd-2f4e-4849-93e7-64ca90685d83"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="539381fe-9d61-4061-8273-b8a9c513eb85"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f8ec00fc-5f5d-4d94-a194-2da14b3b4908"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_SAU" id="4db3dba8-11e4-495b-bc1d-b119fde23df8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_SAU" id="7d84f800-b3af-415e-a434-6cce038ad012"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="152a7863-e11d-4421-b72f-ff04df7850de"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="a1000b6a-292a-4d1a-b6ca-0691e5ea474b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="0317a1c5-ddcb-44d8-ac4f-336561ed4858"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="73c33b2b-95a5-4c51-870a-db9638c2048a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="a1015b99-1379-477b-8060-f204e72a0cb6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B28C687D05E0401F0A0599263A</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B1D2628AF2E0401F0A07991D67:9FF5F7C1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0517431403083063987</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2D90AA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2D90AA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2D90AA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B28C687D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B3B5AF494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B28C967D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B28C687D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B3B5AF494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B28C967D05E0401F0A0599263A</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73VzDdj07pBYrQEWbY4KVuvAKerS9n0nQVom1akxQqv34nxVZgo0fPjDOY1ZVvfeuSLznmKI5st885MEESWvOGXe1faFkt23faug+orTfBt+V/ZkNv+X7gB047BDC1msd5Bh7lAlHR1WzTaupmS7faE7PjWkdu06y3nc6jVrsHxiW0dKnLXXkcUe4WYbtaxqibIE64S1EM3BXYHfcvR670dFHJSesdr1kWAVlvLkTqGgauB4AhinAdJ7FxbGz5HAfcHZMZRSJj8BYz4F3tbe9yuawvG/WEzQzbNE3D7BjSJ+Bk9kPrHZSbIfBomKzXA0QTSjCKyAopUpcg5klQ60ezhBExjz+AtgzLVNA65FjHVpP+0Iz3AAW7LyJtkWQc6XyOrBLsDkJgQDHUpndeV/vxtQ6u904YojxMWMx31t+jBHQBUZJCoPMys5Ld1xH3lKt3DNj1KI4yThZwpcYkRRh47YZBSPIR4XL4Al4r2l/Lufwj5ZQB/k5bjo1NrpK6sac6QzIDLv5Pzzb7tUa5R1EGvXzK4sDP8fMdQvHF6uHQv5jcnibp74fbbkFh03lNqmr323p3WKvZetsUpKfDC6NjraYzPvI5O7smGW+d/w6vn5hzbp+cJdZgtRp5srpLyzs8OZscTlMmGujWbjhHWftpbDveebSyhqF5MDxfAWsdcmtldq7urvOnS89hVv4yHNsnv87Q0z/h7fzx3ntsPJ3Hgq5ufi1G8UVjdN6+zNn98sahTqMV+q3FlOeXB8/RAKZXzQdmTaYwNn4tHprd95w2c9g2lpIwzvwnwKJcqvHwhrVT2S8kPpcXZSGBHhaubqo0igugQuupXUpa3EwKEAlc2cz1+nRgdTqdn3Z70GofDU3nxGya1qnZN51Ox241+qUGrVnsUBwkNCQqllLZ9fx8ThDHLgcaANMXSYbnwLVPEIdIoJpH7+ThSCiHSSJVPEKRv7SO6GszsqyWE3BGjthruJQifJWIa3rN+qEAtiXdlr0l3XeASUpA6bsacC4nnAtZixe0yERk1ReoTiGTNwBTIuzazbZjcBKnESimRpwEWQT1dJ4WlTH4+tfWEeaFlXCcJkygyCrO34fp7X4rKyF9AqIcuErpJ8huwp6rqFHm83HezmbeJXw/C4g6ZrKsghG8ZrL96X1a1JhUo1IlhrlVcq+2fBNiD4DxCT9jtzRVvGBBNqKX16u8MaSe9Mr+vqD6Sz1bLLKio0dKK5mEN6RkWsYYcCYF73WSPAM1KgjjS/dNxXoncmXf5peJOR0LJCCW81crll94bIyBq8eGJw9O/tWXzFZIWTcBudhnG0TyTaIYf/pswS5WftJ8I3+WCQve27UHayOOzFO+MAShM7VSN8vrB7OBEwlLpBQmbBN8H8C+4NvGqsgVFyGnyc8EfPylpjSuqyGMk4wKb6gVhk3dLXiK1xTcd6e/YAptf7usc/7hZf37cjSWChgjrfIl/+2sk2JcMGjqTVBw6Wq5fHvK4HS2ofNvBPdJ/bBj9vudk/6O1DerAm5l0vvL/Ldlo6a756H3Bw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73VzDdj07pBYrQEWbY4KVuvAKerS9n0nQVom1akxQqv34nxVZgo0fPjDOY1ZVvfeuSLznmKI5st885MEESWvOGXe1faFkt23faug+orTfBt+V/ZkNv+X7gB047BDC1msd5Bh7lAlHR1WzTaupmS7faE7PjWkdu06y3nc6jVrsHxiW0dKnLXXkcUe4WYbtaxqibIE64S1EM3BXYHfcvR670dFHJSesdr1kWAVlvLkTqGgauB4AhinAdJ7FxbGz5HAfcHZMZRSJj8BYz4F3tbe9yuawvG/WEzQzbNE3D7BjSJ+Bk9kPrHZSbIfBomKzXA0QTSjCKyAopUpcg5klQ60ezhBExjz+AtgzLVNA65FjHVpP+0Iz3AAW7LyJtkWQc6XyOrBLsDkJgQDHUpndeV/vxtQ6u904YojxMWMx31t+jBHQBUZJCoPMys5Ld1xH3lKt3DNj1KI4yThZwpcYkRRh47YZBSPIR4XL4Al4r2l/Lufwj5ZQB/k5bjo1NrpK6sac6QzIDLv5Pzzb7tUa5R1EGvXzK4sDP8fMdQvHF6uHQv5jcnibp74fbbkFh03lNqmr323p3WKvZetsUpKfDC6NjraYzPvI5O7smGW+d/w6vn5hzbp+cJdZgtRp5srpLyzs8OZscTlMmGujWbjhHWftpbDveebSyhqF5MDxfAWsdcmtldq7urvOnS89hVv4yHNsnv87Q0z/h7fzx3ntsPJ3Hgq5ufi1G8UVjdN6+zNn98sahTqMV+q3FlOeXB8/RAKZXzQdmTaYwNn4tHprd95w2c9g2lpIwzvwnwKJcqvHwhrVT2S8kPpcXZSGBHhaubqo0igugQuupXUpa3EwKEAlc2cz1+nRgdTqdn3Z70GofDU3nxGya1qnZN51Ox241+qUGrVnsUBwkNCQqllLZ9fx8ThDHLgcaANMXSYbnwLVPEIdIoJpH7+ThSCiHSSJVPEKRv7SO6GszsqyWE3BGjthruJQifJWIa3rN+qEAtiXdlr0l3XeASUpA6bsacC4nnAtZixe0yERk1ReoTiGTNwBTIuzazbZjcBKnESimRpwEWQT1dJ4WlTH4+tfWEeaFlXCcJkygyCrO34fp7X4rKyF9AqIcuErpJ8huwp6rqFHm83HezmbeJXw/C4g6ZrKsghG8ZrL96X1a1JhUo1IlhrlVcq+2fBNiD4DxCT9jtzRVvGBBNqKX16u8MaSe9Mr+vqD6Sz1bLLKio0dKK5mEN6RkWsYYcCYF73WSPAM1KgjjS/dNxXoncmXf5peJOR0LJCCW81crll94bIyBq8eGJw9O/tWXzFZIWTcBudhnG0TyTaIYf/pswS5WftJ8I3+WCQve27UHayOOzFO+MAShM7VSN8vrB7OBEwlLpBQmbBN8H8C+4NvGqsgVFyGnyc8EfPylpjSuqyGMk4wKb6gVhk3dLXiK1xTcd6e/YAptf7usc/7hZf37cjSWChgjrfIl/+2sk2JcMGjqTVBw6Wq5fHvK4HS2ofNvBPdJ/bBj9vudk/6O1DerAm5l0vvL/Ldlo6a756H3Bw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0Q5j6OQC+EWFSQo9AxtaRno6e1lZJyd4BKcYDuE9uuPHZoUOLTTjoSEvLO99toXL/uUo2XkeF3OgQkSU23Yb+v/utCAwJ+BYfv1wHBbzboxa84cw2/W7GojgGq9buvakPMUhpQLREVbdyzbNay6YTdvrZZnNzzXqTTrzSdduwPGJbR0qVi6tllGlHt52LaeMurFiBPuUbQE7gnsTbujK096eqjgpHdOtyzzgKwzFyLxTBNXfMAQRbiC46V5au75nPrcm5KQIpEyeIvp87b+tjfLskpWrcQsNB3LskyrZUofn5Pwh945KTaDP6RBvF2fIRpTglFEXpEiNQIxj32tG4UxI2K+/ADaNm1LQRuwwQa2XfpDN98D5Oy+iLRHknFk8DmyC7AJBMCAYtB+TYZt/cfXOrjde8sQ5UHMlvxg/T1KQNcQxQn4Bi8yK9h9HfFIuTqngL0hxVHKyRqu1ZgkCAPXxgwCsrkiXA6fz7W8/dqGyx8ppgzwd9pyau5yldTNI9XpkxC4+D892+3XFuUORSl04lVNbKYZZY1+em9OrulFWJ3WH+/JpdXOKew6b0mV7X5bHw5rOVtvm+hoflebZRk9sxvmeDZ2r37+GkV/P13c3vdCt9qbj1+n9yx4TcjKuVk1JpbZPJvQ9PXaGpD0ryQehKFLH8nPVdYMT+4d9vj8MLbu/CAercN1LXMy/3n6kF122fnLncs3F7ZjP1yMF4/ZUwj+85XZexzQ+dX0vvlEJo+jf9gCnzuXA7N5edKYO8ELe93cwPy65S8Hs8Ww/Z7Tbg77xkISpunsGbAolmo8hn3tXPYLic/lRVmIbwS5q5cojeICqNA7apeSFi+VAkR8TzZzuz4/s1utVq/aq3XP3ZbbG1iuZZ9bXavWajn1qlVo0JbFAcWzmAZExVIqu52fzwnipceB+sCMdZziOXD9E8Q+Ekgb0ok8HDHlcBtLFU8SPvP5AoWN+soWr8xfLJ7xeuGEunYdixt6w7qBALYn3bazJ90TwCQhoPRdDTiXE86FrMUKrVMR2ZU1qlBI5Q3AlAh7jtusmZwskwgUU3MZ+2kElWSe5JUx+fbfMRDmuZVwnMRMoMjOz9+H6R1+KyohfXyiHLhKqQeym3DkKqoW+Xycd2037wK+m/pEHTNZVsEI3jLZ//Q+LWpMylEpE8PcLriXW74JcQTA/ISfeViaMp6/JjvRi+tV3hhSTzpFf1eosqqk63Wad7ShtJJJeFNKpm1OAadS8F5u4wVQs4Qwv3TflKwPIpf2fX6pmNOpQAKWcv60fPmFx8YUuHpsDOXB2Xz1JbMXUtZNwEYcs51F8k2iGH/6bMEeVn7SPJZ/Wcz893YdwdqJI/OULwxBaKhW6mZ5+WA2cCxhiZTCmO2CHwM4FnzfWBa55CLkNM1SAR9/0ZTGtXWEcZxSMezruWFXd3Oe4iUB793pD5hc298u6w3/8LJ+GF1NpQIukV76kv92Nkg+Lhh09SbIubT1jXx7yuA03NH5N4JHpN7pt6xutzXoHki9WxZwL5POH+Y/LTs1PTwPnd8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj6uQjxJIooKUAm3ZtmwX2FW3L1fGGcBt4gTbIXR//bVDkwKlvd0rISFPxmfOfPjYZxwlsROEnAMTJKXasN/R/7HaEM1xhI2WM3OMJjQdw4ts33BdwNhDXtN1ka4NOc9hSLlAVHR0x7KbhtUybG9q+YHdDpqthuW6D7r2CxiX0NKlYenaJokpD8qwHT1nNEgRJzygKAEeCBxMwtubQHoGqOKkd8+2LMuArLsUIgtMEzciwBDHuIHTxDwz93zOIh5MyIIikTN4iRnxjv6ytyiKRnHaSNnCdCzLMi3flD4RJ4sTvful2gzRkM7T7bqHaEoJRjH5gxSpWxDLNNLCeJEyIpbJO9C2aVsK2oANNrDdpCe6+RqgZPdJpD2SjCODL5FdgY1hDgwoBu3neNjRTz7Xwe3eKUOUz1OW8IP131ECuoY4zSAyeJVZxe7ziEfK1T0DHAwpjnNO1jBSY5IhDFy7YzAnmxvC5fBFXCvbr224/JFqygD/TVvOzF2ukrp5pDp9sgAu/k/Pdvu1RfmF4hy67OIpP3Wv0+jP5WhatJl99fUJWVf3jmd1Sgq7zltSdbtf1ofDWs/Wy6bMdTkp2n7+U0xQISfu8Xohwh9oNGk5i1N+bS42vbYdXv64f7x18sG3MDt32ezraSv73bweCXI5Ht+Tot+aj4rlFzdu+b+Ji+fxYDotYnI/vuO/ngfePb0011e0uPR+Dpze7G4mNqsFHyCfzoauS1sP1+dXcy++LszJKoFiff50E355itJl5G2uTOvbajrpPfweeZ3XnHZz2DdWkjDJZ4+ARbVU4zHsaxeyX0h8LC/KQiJjXroGmdIoLoAKvat2KWkJcilAJApkM7fri57t+/654/X8VrtvuQOradkXVmi5vu+0TsNKg7YsDij2UjonKpZS2e38fEwQJwEHGgEz1mmOl8D1DxD7SCBtSMfycKSUwzSVKu7mCyuylmuMNvncIckTRtEMPKZro1R8p99ZOBfA9pTbdvaUewyYZASUvKv55nLAuZClWKF1LmK7sUYNCrm8AJjS4MBpeq7JSZLFoIiaSRrlMTSyZVYWxuTbf8dAmJdWwnGWMoFiuzx+72Z3+K0qhPSJiHLgKqVzkM2EIzfRaZXPm7zdozdWBR/mEVGnTFZVMIK3TPY/vQ6LmpJ6UurEMLcr7vWWv4Q4AmB+wM88LE0dL1qTnejV7SovDCkn3aq/K9RYNfL1Oi872lZSySS8KRXTNieAc6l3z9P0CahZQ5ifum5q1geRa/s+v1ws6UQgAYmcP61cfuKtMQGu3hpDeW42n33I7IWUdROwEcdsvVg+SRTjD18tOMDKT5rv5F+Rsui1XUewduLIPOUDQxC6UCt1sTy/Mxs4lbBEKmHKdsGPARwLvm+si1xzEXKaZrmA979oSuI6OsI4zakY9vXSsCu7JU/xnEHw6vQGppT2l7t6w9+9q+9vbyZSABOk177kv50NUo4LBl09CUouHX0jn54yOF3syPwLwWNK3/etMPQH4YHSN+sC7mXSfWN+a9mp6eF56P4L</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0517431403083063987</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0517431403083063987</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0517401403083060192</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0517421403083062046</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0517431403083063987</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B28C697D05E0401F0A0599263A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B3B5B0494BE0401F0A05992630</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B28C977D05E0401F0A0599263A</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>73c33b2b-95a5-4c51-870a-db9638c2048a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_UserGet_CS_FUNC_ADULT_BAU_Get_CHILD_Blocked:clg_P2" searchProperties="true" id="6ceabf55-1e65-455c-85d0-ffa8f7e43fdb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="eae51aa2-5725-4239-978e-501e8d828682"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ddba572d-46fc-4496-9445-ee177664a708"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult_BAU" id="744e886f-8321-4170-94c9-1226cb820604"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult_BAU" id="b1b6fe94-235f-4ff7-87bf-f28dfcc83720"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="c432b710-2e0a-4d11-a67c-b429cabc481a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="d16b5709-8469-402b-8dcc-a23dda51af0b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="79464723-a4c8-4167-a648-2b3065f2eb43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="5aacb852-19bb-45fe-b048-8d350af8d6dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="0f2eaca7-7725-4722-bbf5-7e1d2a748edc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AE65251C68E0401F0A07991D55</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B1D28E8AF2E0401F0A07991D67:3EC7191F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0517521403083072147</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BC01A876D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC01A876D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC01A876D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AE65251C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B2B850496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B372F92D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AE65251C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B850496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B372F92D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlchFwK5qCBxaaeZKZ22UHp5WbnOAdwGG2InhP31a4eGAqXdzkpIyCfH3/nOxZ99wtE8ccIO55AKwqgW9Vv637HvP3mNCRjItW3D9SxkBAFqGG7zCdUDN6h7lq9rEecZRJQLREVLdyzbNaymYfsjKwhtL3T9WrNhP+raGFIuoaVLzdK1Yp5QHpZhW3qW0pAhTnhI0Rx4KHA47AwuQukZooqT3j7ZsCwDpu2ZEIvQNHEtBgxJgmuYzc0Tc8/nJObhkEwpElkKrzFj3tJf965Wq9qqXmPp1HQsyzKtwJQ+MSfT73r7W7UZ4ohO2GbdQ5RRglFC/kGK1ADEjMVaJ5mylIjZ/ANo27QtBW1AgQ1su/S7br4FKNl9EWmPZMqRwWfIrsBuYAIpUAza7U3U0r9/rYObvaMUUT5h6ZwfrP+MEtAcEraA2OBVZhW7ryMeKVf7BHAYUZxknORwqcZkgTBw7SqFCSkuCJfDF3OtbL9WcPkj1ZQB/pO2nJi7XCV180h1+mQKXPyfnu32a4MyRkkGbRJdO+e27Oj97fgnGy6Su2lf5P275OG2VVLYdd6Q2rb7dX04rNvZet007I9W6+7lbd5cP15M+Gk++NGbRZjPcj64vGteP168+CQZdR5XV/5pPU3Y2flyMn3ibPkSM/slX5t/WWtR3JuXv4pvY56NIxEFL2NhQXFztcoHzH6edf20760d8258NbhbZkU9cPDSF02GHx5+PP92RqdROiD3l9xfdrHXc4V1HWffms/Xv/B5t3t67nYveln0ELutt5x2c9g3VpIwzJ6eAYtqqcYj6mtnsl9IfC4vykJiY1K6hgulUVwAFXpb7VLSEmZSgEgcymZu1mc9OwiCzmmz4TTsXtM/tVzLPrM6lhcEdr/RqDRow+KAYo/RCVGxlMpu5udzgngecqAxpEbOMjwDrn+C2EcCaRG9kYeDUQ4jJlWcWUXTc6Y2cQnxRL14WoDjFU2ma5dM/Ka/085EQLqn3Lazp9w3gMmCgJJ3Nd9cDjgXshRLlGcisWs5qlHI5AWQKg0OHddvmJzMFwkoouacxVkCtcVsURbG5Jt/x0CYl1bC8YKlAiV2efw+zO7wW1UI6RMT5cBVSl2QzYQjN1G9yufjvBu7eVfwnSwm6pTJqoqU4A2T/U9vw6KmZDsp28Qwtyvu2y1/CHEEwPyEn3lYmm28OCc70avbVV4YUk7aVX+XqLasZXmelR31lFSmEt6UimmbQ8CZ1Lv1iL0ANbcQ5peumy3rg8hb+z6/TMzoUCABczl/Wrn8wltjCFy9NSJ5boqvPmT2Qsq6CSjEMVsvkU8SxfjTVwsOsfKT5iv5t2Jp/NauI1g7cWSe8oEhCJ2qlbpY1h/MBmYSlkglZOku+DGAY8H3jdsib7kIOU1PmYCPv2hK4lo6wphlVER9vTTsym7JU6wXEL45vYMppf31ri74h3f1/eBiKAVwjvStL/lvZ4OU44JBV0+CkktLL+TTUwan0x2ZfyX4Xum7Pcvu+F6z7+4rvfd2JPcyab8zv7fs1PTwPLT/BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlchFwK5qCBxaaeZKZ22UHp5WbnOAdwGG2InhP31a4eGAqXdzkpIyCfH3/nOxZ99wtE8ccIO55AKwqgW9Vv637HvP3mNCRjItW3D9SxkBAFqGG7zCdUDN6h7lq9rEecZRJQLREVLdyzbNaymYfsjKwhtL3T9WrNhP+raGFIuoaVLzdK1Yp5QHpZhW3qW0pAhTnhI0Rx4KHA47AwuQukZooqT3j7ZsCwDpu2ZEIvQNHEtBgxJgmuYzc0Tc8/nJObhkEwpElkKrzFj3tJf965Wq9qqXmPp1HQsyzKtwJQ+MSfT73r7W7UZ4ohO2GbdQ5RRglFC/kGK1ADEjMVaJ5mylIjZ/ANo27QtBW1AgQ1su/S7br4FKNl9EWmPZMqRwWfIrsBuYAIpUAza7U3U0r9/rYObvaMUUT5h6ZwfrP+MEtAcEraA2OBVZhW7ryMeKVf7BHAYUZxknORwqcZkgTBw7SqFCSkuCJfDF3OtbL9WcPkj1ZQB/pO2nJi7XCV180h1+mQKXPyfnu32a4MyRkkGbRJdO+e27Oj97fgnGy6Su2lf5P275OG2VVLYdd6Q2rb7dX04rNvZet007I9W6+7lbd5cP15M+Gk++NGbRZjPcj64vGteP168+CQZdR5XV/5pPU3Y2flyMn3ibPkSM/slX5t/WWtR3JuXv4pvY56NIxEFL2NhQXFztcoHzH6edf20760d8258NbhbZkU9cPDSF02GHx5+PP92RqdROiD3l9xfdrHXc4V1HWffms/Xv/B5t3t67nYveln0ELutt5x2c9g3VpIwzJ6eAYtqqcYj6mtnsl9IfC4vykJiY1K6hgulUVwAFXpb7VLSEmZSgEgcymZu1mc9OwiCzmmz4TTsXtM/tVzLPrM6lhcEdr/RqDRow+KAYo/RCVGxlMpu5udzgngecqAxpEbOMjwDrn+C2EcCaRG9kYeDUQ4jJlWcWUXTc6Y2cQnxRL14WoDjFU2ma5dM/Ka/085EQLqn3Lazp9w3gMmCgJJ3Nd9cDjgXshRLlGcisWs5qlHI5AWQKg0OHddvmJzMFwkoouacxVkCtcVsURbG5Jt/x0CYl1bC8YKlAiV2efw+zO7wW1UI6RMT5cBVSl2QzYQjN1G9yufjvBu7eVfwnSwm6pTJqoqU4A2T/U9vw6KmZDsp28Qwtyvu2y1/CHEEwPyEn3lYmm28OCc70avbVV4YUk7aVX+XqLasZXmelR31lFSmEt6UimmbQ8CZ1Lv1iL0ANbcQ5peumy3rg8hb+z6/TMzoUCABczl/Wrn8wltjCFy9NSJ5boqvPmT2Qsq6CSjEMVsvkU8SxfjTVwsOsfKT5iv5t2Jp/NauI1g7cWSe8oEhCJ2qlbpY1h/MBmYSlkglZOku+DGAY8H3jdsib7kIOU1PmYCPv2hK4lo6wphlVER9vTTsym7JU6wXEL45vYMppf31ri74h3f1/eBiKAVwjvStL/lvZ4OU44JBV0+CkktLL+TTUwan0x2ZfyX4Xum7Pcvu+F6z7+4rvfd2JPcyab8zv7fs1PTwPLT/BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZxyokgQBJVJC4dFqmhWmh05nDy5FxdsAQnGA7XPr1Y4cmBYb2dI6EhLyzvfbaFy/7iqNlVPZbnAMTJKZar9vQ/4WybYODLCOwXNdwQhsbbjnwjEpt4kC96oUhOLrW4zyFHuUCUdHQy5btGFbNsN0ny/Ptul+1Sm7NHevaMzAuoaVLydK17TKi3M/CNvSUUT9GnHCfoiVwX2B/1Orf+9LTRzknvXm1Z5kFZM2ZEIlvmrgUAIYowiUcL80r88jnKuD+iEwpEimD15gBb+ivezebTWlTKcVsapYtyzItz5Q+ASfTL3rzIt8MQY+G8X7dQTSmBKOIvCBFqg9iFgdaK5rGjIjZ8h1o27QtBW3AFhvYdugX3XwLkLH7JNIRScaRwWfIzsGGEAIDikH7Mew19C+f6+B+7xNDlIcxW/KT9d9RArqGKE4gMHieWc7u84hnytW8Auz3KI5STtYwUGOSIAxce2AQku094XL4Aq5l7de2XP5IPmWA/6YtV+YhV0ndPFOdLpkCF/+nZ4f92qM8oyiFJhlb9cHl3Hu5TAYL59vzbfhz15/32zfWopFROHTekyra/bo+HdZitl43zZzR5k70f3W+3baWg6i22N49uuv2PwyvazdPjzfVu/b4MrlfOQN6HbQcs165vdluu7Qqx2Vy3R/fEPI9qW2GP6blyUU8ntrWz+u7CfvxDT0sKpXd3WV/vgriweOOXLvtuw0aVMKeW32q3oy3u0r/cRUl4/mcTdq1hZc8k3n95+W0NxHdjnfhVB84dobMG/P74Ut5bVXixltOhzkcG3NJGKWTOWCRL9V49LraV9kvJD6WF2UhgRFmrn6iNIoLoEJvql1KWvxUChAJfNnM/fprx/Y8r11uu1XL8Wqta8ux7K9Wy6p6XrnmuLkG7VmcUOzENCQqllLZ/fx8TBAvfQ40AGas4xTPgOsfIHaRQFqPDuXhiCmHp1iquD1xFtOphyYVYiF78bKro3kwCysp1bVBLL7T76wVCmBH2m2Xj7R7CJgkBJTAqwnncsS5kMVYoXUqIru0RiUKqbwCmFJhv+y4VZOTZRKBomou4yCNoJTMkqw0Jt//lw2EeWYlHCcxEyiyswP4bn6n3/JSSJ+AKAeuUmqDbCecuYucPJ/3864e5p3Dt9KAqHMm6yoYwXsmx5/exkXNSTErRWKY2zn3YstfQpwBMD/gZ56WpogXrMlB9Px+lVeGFJRm3t8VKq1K6XqdZh2tK7FkEt6UmmmbI8CpVLzdU7wAahYQ5qcunIL1SeTCfswvFTM6EkjAUs6fli0/8doYAVevjZ48OdvPPmWOQsq6CdiKc7ZOJB8livGH7xbsY+UnzQ/ybxOz4K1dZ7AO4sg85RNDEDpVK3W17N6ZDRxLWCK1MGaH4OcAzgU/NhZFLrgIOU2TVMD7XzQlcg0dYRynVPS6emY4FN6Mp9gl4L85/QGTifvrbb3l797Wv/r3IymBS6QXvuS/nQ2SjQsGXT0KMi4NfSsfnzI4nR4I/SvBM1rfseyWW691nULr655nd+tvR/Iok+Yf5j8tBzU9PQ/N3w==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyJKH6uQa6FEBYmSshsKLS29nHNeVq4zAbfBDrEDKb9+7dBQoLTbsxIS8mQ8883F38wZR7PE8TucQyYIo1oYtPR/6q7rArafDA8iMDwnqhvIa1oGtpvIilDs1bGjayHnOYSUC0RFS3cs2zOsumGf3llN3274J17Ndu3fuvYAGZempUrN0rVillDul25bep5RnyFOuE/RDLgvsD/uDAe+1PRRhUlvn61Rlg6z9lSI1DdNXIsAQ5LgGmYz88zc0TmLuD8mE4pEnsGbz4i39Le7y+WytnRrLJuYjmVZptU0pU7EyeRIb/+oLkMU0pitz11EGSUYJWSFFKghiCmLtE4yYRkR09knpm3TtpRpAwos0+fRI918d1Ci+6alHZAZRwafIrsydgsxZEAxaPe3YUs/+l4F13fvMkR5zLIZ3zv/GSSgC0hYCpHBq8gqdN+3eCBd7TPAfkhxknOygCvVJinCwLVRBjEpBoTL5ou4VpZfK7j8karLAP9JWc7MbawSunkgOwGZABf/p2bb9VpbeUBJDu2xdTHokP6N/TIRQWwO4ov0tXh9zNw0bJUQtpXXoDblfjvvN+umt94uXcbP4rS/6vb+fpoHl2IFzHoWHv9F0+trHPSim5hF/f7QHQf282wwxvXecPk4Wrl/jbqX0XBlr05u+u5D9zq5e1z++PmE6vcNEjwtOlePvVVxPjw/vi6y7rx/0REX5LYbXhwPi6j3gDt3v+vHozS+t5ZFfdRw3SkehSdj6J0PRP3xt9M//SGeWeeX5/Dpr0FxBSlapZPWe0zbMewKK0oY50/PgEV1VO0RBlpP1guJr+lFSUhkxKWqnyqO4gKo0NvqlqIWP5cERCJfFnN97nXtZrN57jacXtMJvPMLy7PsntWxGs2mHdSDioPWKPYgdhmNifKlWHbdP18DxDOfA40gMxYsx1Pg+hcWAySQFtJb+TgY5XDHJIvbLzxG0/Tl+SXKC7sonPr81fVSlpzq2hUT1/Q668QCsh3utp0d7r4FTFICiuBVh3PZ4lzIZMzRIheJXVugGoVcjoBMsbDveKcnJiezNAEF1ZyxKE+glk7TMjUmX/87BsK8lBKOU5YJlNjlA/w0vv1vVSqkTkSUAlchnYMsJxyYRV4Vz4e4Tw7OrMp8J4+IemcyryIjeI1k99N7u6g+2fTKJjDM7Qr75sofmjhgwPwCn7mfmo2/aEG2vFfzVY4MSSjtqr5zVJvX8sUiLyvaUGSZSfOm5EzbHAPOJeO93rEXoObGhPmtgbNBved5I9/Fl4spHQskYCb7TyuP39g2xsDVthHKl1N8d5XZcSnzJqAQh2TdRC4lCvGXewv2sdKT4pH8W7Isei/XAVtbfmSccsUQhE7USY2W1096AzNplkguZNm28UMGDjnfFW6SvMEiZDc95QI+/6IpkmvpCGOWUxEGeinYJt4Sp3hNwX9X+mCmJPe3aV3wT6f1z6GcSlOYIX2jS/5b2SBlu2DQ1VJQYmnphVw+pXM62SL6N4AHuL5r2Z3TRj3wdrm+8f4kdyJpfxB/lGzldP89tP8F</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0517521403083072147</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0517521403083072147</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0517471403083067909</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0517501403083070064</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0517521403083072147</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AE65261C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B2B851496AE0401F0A05992648</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B372FA2D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8d70d7c-e4e3-4372-8a03-222427f07689</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5aacb852-19bb-45fe-b048-8d350af8d6dc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_UserGet_CS_FUNC_CHILD_Get_Self_Blocked:clg_P2" searchProperties="true" id="80127eb6-235b-41a3-9ffe-398ee10fec48"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="69b3e060-03e2-4056-9e33-c51e349290b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e16c0531-e69b-485b-9fc3-59c83639009f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="d3f60e93-f654-4224-96de-8a0b57dae8af"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="453080d9-a534-4b33-a3e5-49c734232f46"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="97ab79f4-ab7f-4117-9a5f-e845afd3a426"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:clg");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="0895f2bd-0a35-44c0-838c-74e69db91bdd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="9015bc87-5acc-4f7a-b5b4-f03ae4571128"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B2D93BA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B2B87F496AE0401F0A05992648:E469010E"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0517581403083078611</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BB8CF93A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BB8CF93A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BB8CF93A19E0401F0A0599264C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B2D93BA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BC022276D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B2D93BA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BC022276D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHquQBMIlUUGiUGbYYdoul9F0XlaufSAuiZ3GToD++rVDkwJDu52VkJBPjr/znYs/+1KgOKoHfSEglZQzYzzsmv/UPUIeSKdhkaXTsTwCxOo0Gy3Ld0nHQ41Wk7gt0xgLkcGYCYmY7Jp1x/Usp2W5nbnjB247aLZrDaf1yzR+QCoUtHKpOaaxjSMmgiJs18xSFnAkqAgYikEEEgez/vdJoDwDVHIye5d7lkXAtBdKmQS2jWsEMEQRrmEe25f2kc8lEcGMrhiSWQovMYnomi97N5tNbdOo8XRl1x3HsR3fVj5E0NVns/ep3AxkzJZ8vx4gxhnFKKLPSJP6DjLkxOhHK55SGcZvQLu262hoC7bYwq7HPpv2a4CC3QeRjkimAlkiRG4JNoUlpMAwGIvpuGt+/lgH93vnKWJiydNYnKz/jBKwHCKeqECizKxk93HEM+XqXQIOxgxHmaA53OgxSRAGYdylsKTbCRVq+IgwivYbW6F+tJwywH/Slkv7kKuibp+pzpCuQMj/07PDfu1RfqAog97S/5L5cD9pP/w1i+dk7OZP0WKW/M2fF92CwqHznlTV7pf16bBWs/WyaUMm7uDbYzz81gpbcXSdXMl6cutP279C2ucTtv3JWRu8q/5XrOL+epq3Oruv66dk6SU34Xr2PBmTFhbZ9Gf+fP8pdULPzhd0AXdeeOcP4Xb6vObp6GG4nIS3X4aLi3okmtv2t+FotLv4wr7e70bXzxfhKo5zfHPdWNwNldz4ftsm60/3FyT2/PXCW98vnMf2Zr7B3decDnM4NpaSMMseHgHLcqnHYzw0RqpfSL4vL9pCibUsXINEa5SQwKTZ07u0tASZEiBKAtXM/Xo0cH3fv6oP/cZV37/uXzue446cvtP0/Xqr4ZUatGdxQnHA2ZLqWFpl9/PzPkEcBwIYgdTKeYZDEOY7iEMkkTFmU3U4OBMw50rFWy2+y3ZIwhJvMl/Ucf5ISdN7NI0bLm/ZbdpfSkiPlNutHyn3FDBNKGh51/Mt1IALqUrxhPJMRm4tRzUGmboAUq3BQd3rNG1B4yQCTdSOOckiqCVhUhTGFvv/uoWwKKxU4ISnEkVucfzezO70W1kI5UOodhA6pStQzYQzN5FX5vN23s3DvEv4fkaoPmWqqjKleM/k+NPrsOgpqSalSgwLt+RebflDiDMA9jv87NPSVPFITg+il7erujCUnPTK/j6h2lMty/Os6GhbS2Wq4G2lmK49A5wpvdvN+RqYXUHYH7puKtYnkSv7Mb9Mhmwm1fTGav6MYvmBt8YMhH5rjNW52X70IXMUUtVNwlaesw0i9STRjN99teAAaz9lvlN/G56S13adwTqIo/JUDwxJ2Uqv9MWye2M2MFewVCkhTw/BzwGcC35srIpccZFqmh4yCW9/MbTEdU2EMc+YHA/NwnAouwVPuUsgeHX6DaaQ9pe7eivevKt/fp/MlADGyKx86X87W7QYFwymfhIUXLrmVj09VXC2OpD5F4JnlP6qMxj5jb7rHyu9N6gKeJRJ7zfz75aDmp6eh96/</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHquQBMIlUUGiUGbYYdoul9F0XlaufSAuiZ3GToD++rVDkwJDu52VkJBPjr/znYs/+1KgOKoHfSEglZQzYzzsmv/UPUIeSKdhkaXTsTwCxOo0Gy3Ld0nHQ41Wk7gt0xgLkcGYCYmY7Jp1x/Usp2W5nbnjB247aLZrDaf1yzR+QCoUtHKpOaaxjSMmgiJs18xSFnAkqAgYikEEEgez/vdJoDwDVHIye5d7lkXAtBdKmQS2jWsEMEQRrmEe25f2kc8lEcGMrhiSWQovMYnomi97N5tNbdOo8XRl1x3HsR3fVj5E0NVns/ep3AxkzJZ8vx4gxhnFKKLPSJP6DjLkxOhHK55SGcZvQLu262hoC7bYwq7HPpv2a4CC3QeRjkimAlkiRG4JNoUlpMAwGIvpuGt+/lgH93vnKWJiydNYnKz/jBKwHCKeqECizKxk93HEM+XqXQIOxgxHmaA53OgxSRAGYdylsKTbCRVq+IgwivYbW6F+tJwywH/Slkv7kKuibp+pzpCuQMj/07PDfu1RfqAog97S/5L5cD9pP/w1i+dk7OZP0WKW/M2fF92CwqHznlTV7pf16bBWs/WyaUMm7uDbYzz81gpbcXSdXMl6cutP279C2ucTtv3JWRu8q/5XrOL+epq3Oruv66dk6SU34Xr2PBmTFhbZ9Gf+fP8pdULPzhd0AXdeeOcP4Xb6vObp6GG4nIS3X4aLi3okmtv2t+FotLv4wr7e70bXzxfhKo5zfHPdWNwNldz4ftsm60/3FyT2/PXCW98vnMf2Zr7B3decDnM4NpaSMMseHgHLcqnHYzw0RqpfSL4vL9pCibUsXINEa5SQwKTZ07u0tASZEiBKAtXM/Xo0cH3fv6oP/cZV37/uXzue446cvtP0/Xqr4ZUatGdxQnHA2ZLqWFpl9/PzPkEcBwIYgdTKeYZDEOY7iEMkkTFmU3U4OBMw50rFWy2+y3ZIwhJvMl/Ucf5ISdN7NI0bLm/ZbdpfSkiPlNutHyn3FDBNKGh51/Mt1IALqUrxhPJMRm4tRzUGmboAUq3BQd3rNG1B4yQCTdSOOckiqCVhUhTGFvv/uoWwKKxU4ISnEkVucfzezO70W1kI5UOodhA6pStQzYQzN5FX5vN23s3DvEv4fkaoPmWqqjKleM/k+NPrsOgpqSalSgwLt+RebflDiDMA9jv87NPSVPFITg+il7erujCUnPTK/j6h2lMty/Os6GhbS2Wq4G2lmK49A5wpvdvN+RqYXUHYH7puKtYnkSv7Mb9Mhmwm1fTGav6MYvmBt8YMhH5rjNW52X70IXMUUtVNwlaesw0i9STRjN99teAAaz9lvlN/G56S13adwTqIo/JUDwxJ2Uqv9MWye2M2MFewVCkhTw/BzwGcC35srIpccZFqmh4yCW9/MbTEdU2EMc+YHA/NwnAouwVPuUsgeHX6DaaQ9pe7eivevKt/fp/MlADGyKx86X87W7QYFwymfhIUXLrmVj09VXC2OpD5F4JnlP6qMxj5jb7rHyu9N6gKeJRJ7zfz75aDmp6eh96/</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41FIwj1RQaKw251uaCnQC305Ms4ETBMnxA6Xfv22Q5MCpT30SEjIk/GaNRcv+4KhwC/aLcYg5iSkitNpqP9Wq1695pUMbVKt1bQylDwNVQFpZgXVKgBmFTykKg5jCTiUcUR5Qy0aZlkzqppZHxmWbdZtwyiU69UXVXmEmAlo4VIwVGUd+JTZadiGmsTUDhEjzKYoAGZzbA9bva4tPG2UcVKbF1uWacC4OeM8snUdF1zA4Pu4gMNAv9D3fC5cZg/JlCKexPAe02UN9X3varUqrEqFMJ7qRcMwdMPShY/LyPRcbZ5lm8F1qBdu121EQ0ow8skbkqR6wGehq7T8aRgTPgu+gDZ105DQGqyxhs0yPVf1jwApuxOR9kjGDGlshswMbAAexEAxKA8Dp6Gen9bB7d5RjCjzwjhgB+ufUQK6BD+MwNVYllnG7nTEI+VqXgC2HYr9hJEl3MoxiRAGpvRj8Mi6S5gYPpcpafuVNRM/kk0Z4J+05ULf5Sqo60eq0yFTYPz/9Gy3X1uUR+Qn0ESXrHrr3/ffOjdvrQev7W6e74xRvT0uOo2Uwq7zllTe7vf14bDms/W+Kfozmj2irv/6Z/NiJN2NNcBo1Jot3F++HvY3hBr/PFhzYrRql/Hm+u3BXzpuL5qOO0Ogjy19c9cZOyXoj8e14fjM/D28bv/uOkFptii5/XH3mU1bHPfumTd4JU+jUb3+VGo/jILiQPcrXlCn1afJcLVZvN126ve+0X9zxndhJX4av/TOblfLOZ0k8xt9Nb1+vblNzHrjI6fdHPaNmSQMk8kcMM+WcjycjnIl+oX49/IiLcTVvNTVjqRGMQ6Uq025S0qLnQgBIq4tmrldX7VNy7Iu20axWKxVO+VfRtkwr4yWUbMss1MzMw3asjig2A6pR2QsqbLb+fmeIA5sBtSFWFuGCZ4BU79B7CCOFIcOxOEIKYNRKFScRPPZPJqbKCIbk8cR1CaVKUMGVpXbkN/Ru7jlcYj3pNss7kn3ADCJCEh9lwPOxIQzLmqxQMuE+2ZhiQoUEnEDxFKE7WK5XtEZCSIfJFM9CN3Eh0I0i9LK6Gz7X9QQZqmVMByFMUe+mZ6/L9M7/JZVQvi4RDowmdIliG7Cp6uoZleyfD7lXTl6ZWXwrcQl8piJsvKY4C2T/U8f0yLHJB+VPDHM8rHIt/wQ4giA/g0//bA0eTx3SXaiZ9eruDGEnjSz/i5QYVFIlssk7WhNamUs4HUhmaY+BJwIwduMwlegeg6hn3Tf5KwPIuf2fX4Jn9EhRxwCMX9KujzhsTEEJh8bjjg461NfMnshRd04rPkxW9sXbxLJ+NtnC7ax9BPmvvhbhbH70a4jWDtxRJ7ihcEJncqVvFk2X8wGDgUsEVIYxrvgxwCOBd835kXOuXAxTZOEw9dfFKlxDRVhHCaUOx01NezqbsqTbyKwP5w+waTa/n5Zr9mXl/VzrzsUChggNfcl/+2skXRcMKjyTZByaahr8fYUwel0R+ffCR6R+st6+8oqtUwrl/qKZRWr5XZewL1Mmp/Mny07NT08D82/</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0517581403083078611</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0517581403083078611</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0517561403083076285</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0517581403083078611</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B2D93CA9EAE0401F0A05992634</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BC022376D4E0401F0A07991D71</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>027aba9f-4602-45c5-b486-7ebd54fae0f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0895f2bd-0a35-44c0-838c-74e69db91bdd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_UserGet_CS_FUNC_CHILD_Get_Self_Blocked:tou_P2" searchProperties="true" id="6909612e-90b1-4aee-a70a-a171be8d97ff"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="aa2084c4-02c4-4b43-965c-925bb08c87f3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2865e18a-459a-4d7d-9ace-ee3fe0ca4240"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="8c34ef22-b540-42b4-af66-305cc1d23c4b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="5d7f8871-9fec-4269-a727-c4bd7ac656df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="e5919b2c-3396-433b-a752-15cef97434f1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));
myTC.setPropertyValue("Status","blocked:tou");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="d924c32c-e95e-4528-8737-d35b32d12b8f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="8f8b240b-f4da-4e89-98ec-346c57f3be26"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","CHILD");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B09F31610AE0401F0A05992642</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B3732E2D4BE0401F0A07991D6D:5B9743C9"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051841403083084884</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B1D2B28AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D2B28AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D2B28AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B09F31610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AE65561C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B09F31610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AE65561C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxGlj1XIQggkKkiUlCmarixd5uXKOA54mtjBdlj6668dmhQo7e1cCQn55Pg731n82WccpIkTdDlHTGBKtEHY1v9peCiGCDaNljX1DDeKY8OPPWAA17ci6Nqe5zZ0bcB5jgaEC0BEW3cs2zUsz7BbY8sP7FZg1WsNr/lb1x4Q4xJautQsXVunCeFBEbat54wEFHDMAwJSxAMBg1H3+iqQngEoOemdsy3LIiDrzIXIAtOEtQhBlCSwBmlqnpl7PmcRD0Z4RoDIGXqLGfG2/rZ3tVrVVvUaZTPTsSzLtHxT+kQcz070zo9yM4oGJKbbdQ8QSjAECX4FitQ1EnMaad1kRhkW8/QTaNu0LQVtoDU0oO2SE918D1Cw+ybSHknGgcHnwC7BhihGDBGItMlw0NZPvtfB7d4xA4THlKX8YP13lBBZooRmKDJ4mVnJ7vuIR8rVOUMwGBCY5Bwv0Y0akwxAxLU7hmK8vsJcDl/EtaL92prLHy6nDMG/acuZuctVUjePVCfEM8TF/+nZbr+2KA8gyVEnDtdery/YYLh4fJjal+eTkfCvFqufi0m7oLDrvCVVtfttfTis1Wy9bRpyPB71b+suHoE7zlf+POvOQv8muqSbFmjVk+aUseeLy/rF9WQxvni+/nmRvzju/U2v8Tt58e8fstfFn40zce/r6x+t2WzAo8nd66Q7OyVh42Y4v6Ot9MmMxyun5T7+BPeb7D4NT29R/ZHPYPzHW5BLs+EtVpsheBxdTKfeze9VGJ5Pn36QW/qLLtLny8bp3J0+9265237PaTeHfWMpCaN8+gdBUS7VeAxCrS/7BcTX8qIsODLiwjXIlEZxgYjQO2qXkpYglwKEo0A2c7vu92zf988tv1+3PdvqXliuZfetrtXwfcdznVKDtiwOKPYoibGKpVR2Oz9fE4RpwBGJEDOWNIdzxPUvEEMggDYgQ3k4KOFoTKWK25DyNM+WDDjuxnF8UWcvdavx+qJrN1TcklvWjQVie9JtO3vSPUQQZxgpfVcDzuWEcyFrsQDLXCR2bQlqBOXyBmBKhAPHbTVMjtMsQYqpmdIoT1Atm2dFZUy+/XcMAHlhxRxmlAmQ2MX5+zS9w29lJaRPhJUDVymdI9lN9OEqagaNMp/P827s5l3Cd/MIq2MmyyoYhlsm+5/ep0WNSTUqVWKQ2yX3astfQhwBML/gZx6WpooXLfFO9PJ6lTeG1JNO2d8FqC1q+XKZFx1tKq1kEt6UkmmbIwRzKXibMX1BxKwgzG/dNxXrg8iVfZ9fLuZkJIBAqZw/rVh+47ExQlw9Ngby4Ky/+5LZCynrJtBaHLP1EvkmUYy/fLbAACo/ab6TfyvKovd2HcHaiSPzlC8MgclMrdTNsvlkNiCVsFhKIWW74McAjgXfN1ZFrrgIOU3TXKDPv2hK49o6gJDmRAxCvTDs6m7BU2wyFLw7fYAptP3tsl7zTy/rp+urkVTAFOiVL/5vZwMX4wKRrt4EBZe2vpZvTxmczHZ0/o3gEam3Q+fcaXX7TiX1Td+3Q69ZFXAvk84H80fLTk0Pz0PnXw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxGlj1XIQggkKkiUlCmarixd5uXKOA54mtjBdlj6668dmhQo7e1cCQn55Pg731n82WccpIkTdDlHTGBKtEHY1v9peCiGCDaNljX1DDeKY8OPPWAA17ci6Nqe5zZ0bcB5jgaEC0BEW3cs2zUsz7BbY8sP7FZg1WsNr/lb1x4Q4xJautQsXVunCeFBEbat54wEFHDMAwJSxAMBg1H3+iqQngEoOemdsy3LIiDrzIXIAtOEtQhBlCSwBmlqnpl7PmcRD0Z4RoDIGXqLGfG2/rZ3tVrVVvUaZTPTsSzLtHxT+kQcz070zo9yM4oGJKbbdQ8QSjAECX4FitQ1EnMaad1kRhkW8/QTaNu0LQVtoDU0oO2SE918D1Cw+ybSHknGgcHnwC7BhihGDBGItMlw0NZPvtfB7d4xA4THlKX8YP13lBBZooRmKDJ4mVnJ7vuIR8rVOUMwGBCY5Bwv0Y0akwxAxLU7hmK8vsJcDl/EtaL92prLHy6nDMG/acuZuctVUjePVCfEM8TF/+nZbr+2KA8gyVEnDtdery/YYLh4fJjal+eTkfCvFqufi0m7oLDrvCVVtfttfTis1Wy9bRpyPB71b+suHoE7zlf+POvOQv8muqSbFmjVk+aUseeLy/rF9WQxvni+/nmRvzju/U2v8Tt58e8fstfFn40zce/r6x+t2WzAo8nd66Q7OyVh42Y4v6Ot9MmMxyun5T7+BPeb7D4NT29R/ZHPYPzHW5BLs+EtVpsheBxdTKfeze9VGJ5Pn36QW/qLLtLny8bp3J0+9265237PaTeHfWMpCaN8+gdBUS7VeAxCrS/7BcTX8qIsODLiwjXIlEZxgYjQO2qXkpYglwKEo0A2c7vu92zf988tv1+3PdvqXliuZfetrtXwfcdznVKDtiwOKPYoibGKpVR2Oz9fE4RpwBGJEDOWNIdzxPUvEEMggDYgQ3k4KOFoTKWK25DyNM+WDDjuxnF8UWcvdavx+qJrN1TcklvWjQVie9JtO3vSPUQQZxgpfVcDzuWEcyFrsQDLXCR2bQlqBOXyBmBKhAPHbTVMjtMsQYqpmdIoT1Atm2dFZUy+/XcMAHlhxRxmlAmQ2MX5+zS9w29lJaRPhJUDVymdI9lN9OEqagaNMp/P827s5l3Cd/MIq2MmyyoYhlsm+5/ep0WNSTUqVWKQ2yX3astfQhwBML/gZx6WpooXLfFO9PJ6lTeG1JNO2d8FqC1q+XKZFx1tKq1kEt6UkmmbIwRzKXibMX1BxKwgzG/dNxXrg8iVfZ9fLuZkJIBAqZw/rVh+47ExQlw9Ngby4Ky/+5LZCynrJtBaHLP1EvkmUYy/fLbAACo/ab6TfyvKovd2HcHaiSPzlC8MgclMrdTNsvlkNiCVsFhKIWW74McAjgXfN1ZFrrgIOU3TXKDPv2hK49o6gJDmRAxCvTDs6m7BU2wyFLw7fYAptP3tsl7zTy/rp+urkVTAFOiVL/5vZwMX4wKRrt4EBZe2vpZvTxmczHZ0/o3gEam3Q+fcaXX7TiX1Td+3Q69ZFXAvk84H80fLTk0Pz0PnXw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EH2fr3B5HlPGC6tdgSqWMOMskwSSDDMvt4TcgIgtOZZsIF9/JRM7QEhucqtSRdRunT696EinHEWh43U5h0QQRjV/0Nb/mYLTcmzLNVrVemDUgmrdQAiB/M8Jqk3LcpuOq2s+5yn4lAtERVt3LLtmWA3Dbt1Zrme3PKtRcR37r649QMIltHSpWLq2jkLKvTxsW08T6jHECfcoioB7Anvj7tWlJz09VHDSO6dblnnApLMQIvZME1cCwBCGuIJZZJ6aez6nAffGZE6RSBN4iRnwtv6yd7VaVVbVCkvmpmNZlmm5pvQJOJl/1zvfis0Q+HTGtus+oowSjELyjBSpKxALFmjdcM4SIhbRO9C2aVsK2oA1NrBdo9918zVAzu6TSHskE44MvkB2ATaCGSRAMWj3I7+tf/9cB7d77xJE+YwlET9Yf40S0AxCFkNg8CKzgt3nEY+Uq3MK2PMpDlNOMvilxiRGGLh2k8CMrC8Jl8MXcC1vv7bm8o8UUwb4K205NXe5SurmkeoMyBy4+D892+3XFuUBhSl0VmFrdMmrqz/3J7Xx7+fexYxOhs3qzW3faucUdp23pMp2v6wPh7WcrZdNfowid/O4qm/E9fKWTc6RZfdOJiejfnUQPz4+i+VTA01Pfq2n0FjyJQ3P7V6KHs7r2L54HJhO/DvKnjb1YPUnW3575mc/fqRdMYyi9IKy+OHxbMV/Nictx43vMn7R7Nfcs9sr6waP4+qPv+PuYoSmw6bor6fdyXxxN4vIT3LfmwStXvrt1p9fT6fjjTkZnk1X4EQ9v/2a024O+8ZCEsbpdAlYFEs1Hv5AG8p+IfGxvCgLCYxZ7urFSqO4ACr0jtqlpMVLpQCRwJPN3K6Hfdt13e5Zo15v2P1G68yqWfbQ6lpN17UH9XqhQVsWBxT7jM6IiqVUdjs/HxPEkceBBpAYGUvxArj+AeIACaT5dCQPB6Mc7phUccr4opotkvW0FmUsqtWWT5tNUpMa/IuJa3qddGcCkj3ltp095R4BJjEBJe9qvrkccC5kKZ5QlorQrmSoQiGVF0CiNNhzaq26yUkUh6CImhEL0hAq8SLOC2Py7a9jIMxzK+E4ZolAoZ0fv3ezO/xWFEL6BEQ5cJVSD2Qz4c1N1PTqRT5v8q4fvbEK+G4aEHXKZFVFQvCWyf6n12FRU1JOSpkY5nbBvdzyRYgjAOYH/MzD0pTxgozsRC9uV3lhSDnpFP19QpWnSpplad7RppLKRMKbUjFtcww4lXq3uWOPQM0SwvzUdVOyPohc2vf5pWJBxwIJiOT8afnyE2+NMXD11vDluVl/9iGzF1LWTcBaHLP1Q/kkUYw/fLVgDys/ab6RPyuWBK/tOoK1E0fmKR8YgtC5WqmLZfPObGAmYYlUQpbsgh8DOBZ831gWueQi5DRNUwHvf9GUxLV1hDFLqfAHem7Yld2cp9jE4L06vYHJpf3lrl7zd+/qydXlWApghPTSl/y3s0HyccGgqydBzqWtr+XTUwan8x2ZfyH4Vul79sDpOa3u0NlX+kazLOBeJp035reWnZoenofOvw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051841403083084884</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051841403083084884</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051821403083082712</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_051841403083084884</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B09F32610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AE65571C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>027aba9f-4602-45c5-b486-7ebd54fae0f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d924c32c-e95e-4528-8737-d35b32d12b8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_UserGet_CS_FUNC_CLG_Get_CHILD_Active_and_Deleted_CLG_P2" searchProperties="true" id="cbc3011c-708c-4e9a-913b-7b90181996b9"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d27fd6b3-eb0d-4744-b51b-89c701f4acb6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2f0ea100-74c6-4fbc-8515-2e5a62bb8207"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="0c8e5b34-0561-4467-888e-6ceb1ea17935"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="22e80e3d-550e-4c0a-a718-4d461f38314b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Update_User_Status" id="aa04e166-4084-4dbd-ade5-9377998b20fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));
myTC.setPropertyValue("Status","deleted");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="eb76437e-3e7b-489b-9b17-6d5d3e9e20f0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - CHILD BAU" id="28428407-bcd1-4bb7-9ed8-355e4891b8c6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","CHILD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-15</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_620139dd-bca5-4ba9-9ed4-a445cbeca280</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B1D2CE8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-13</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999AE65A31C68E0401F0A07991D55:8A08D7FB"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0518101403083090941</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E6085227310DC880E0401F0A059906E4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B09F52610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09F52610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B09F52610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B1D2CE8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AE65891C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B1D2CE8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AE65891C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E61862CE0C832255E0401F0A079902DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj1VIHAI0UUHieoYeaHuAFqYvI+NswDSxaexw6dePE5oUKO30jISEvLO99toXL/ta4DCwvboQEEnKmdZtVfV/MDjFK3taMtyiQwxnZk8N18HEQJXyzMElZ1a0y7rWFSKGLhMSM1nVbQs5hlU20NXIcj105VluwalYT7r2CJFQ0MqlYOnaNgyY8NKwVT2OmMexoMJjOAThSeIN6/2epzw9nHHSa9d7lmnAqLaQcuWZJin4QCAISIHw0Lw2j3yufeEN6ZxhGUfwFtMXVf1t72azKWyKBR7NTduyLNNyTeXjCzq/0Gs/ss3gd9mM79dNzDijBAf0FSek+iAX3NfqwZxHVC7CT6CRiawE2oAtMQhy2IVuvgdI2X0T6YhkJLAhFhhlYAOYQQSMgPYw6Fb1i+91cL93FGEmZjwKxcn6zygBW0PAV+AbIsssY/d9xDPlql0D8bqMBLGga7hNxmSFCQjtPoIZ3faoUMPnCy1tv7YV6kezKQPyJ225Ng+5Kurmmeq06ByE/D89O+zXHuURBzHUlqUdHowux53Go9n5vfy1ae6KgyVseKNeTSkcOu9J5e1+W58Oaz5bb5uiNkMjQPjJ3UwepGvdN59v+qbzazMbxFeA6YAOwZo/wqR4O0EYl+5erP7z8+PPuOu6NEbtRmdUGfd9P1yM1j9+97YsLjd/zxsv7dsgmF7+HN73Fo3AbiGzEvqXPeyPUPOvyfipv5jseHHJu9N+azSuDPrtv1+3o7v2+HJSfLnxb17xj6e7h6fxzeulte6Lsc97v8ab6ntOhzkcGzNJGMbTJRCZLZPx6La0juoXll/LS2KhvjFLXb1VolFCApN6LdmVSIsXKwGivqeauV93msh13QZq2c32Vb1jty3HQh2rblVcF7XKlUyD9ixOKDY5m9EkVqKy+/n5miAJPQHMh8hY85gsQOhfILawxFqXDdTh4EzAiCsVR5RtrGd7DgyFOzQDIIwuKV5Od7p2y+Udu4vqMwnRkXYj+0i7B0DoikIi8MmECzXiQqpivOB1LANUWOMCg1hdAVGiwp7tXJVMQcNVAAlVM+R+HEBhtVilpTHF/t82MBGplQqy4pHEAUoP4Kf5nX7LSqF8fJo4iCSlBqh2woe7qOKVsnw+z7t0mHcGX499mpwzVVcZUbJncvzpfVySOclnJU+MCJRxz7f8IcQZAPMLfuZpafJ4/poeRM/uV3VlKEGpZf19wYWXQrxex2lHK4lYRgreVJqJzCGQWCnebsSfgZk5hPmtCydnfRI5tx/zi+WCDSWWEKr509LlN14bQxDJa6OrTs72u0+Zo5CqbhK28pytGahHScL4y3cL8Ujip8z36m/DI/+9XWewDuKoPNUTQ1I2T1bJ1bL7ZDYIV7BUaSGPDsHPAZwLfmzMi5xzkWqaprGEz79oichVdUwIj5nstvTUcCi8KU+5W4H37vQBJhX3t9t6Kz69rSf93lBJYIj13Jf+t7NB03EhoCePgpRLVd+qx6cKzuYHQv9G8IzWW26nZJeRVc+1vuS6dtmx8wIeZVL7YP5oOajp6Xmo/Qs=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj1VIHAI0UUHieoYeaHuAFqYvI+NswDSxaexw6dePE5oUKO30jISEvLO99toXL/ta4DCwvboQEEnKmdZtVfV/MDjFK3taMtyiQwxnZk8N18HEQJXyzMElZ1a0y7rWFSKGLhMSM1nVbQs5hlU20NXIcj105VluwalYT7r2CJFQ0MqlYOnaNgyY8NKwVT2OmMexoMJjOAThSeIN6/2epzw9nHHSa9d7lmnAqLaQcuWZJin4QCAISIHw0Lw2j3yufeEN6ZxhGUfwFtMXVf1t72azKWyKBR7NTduyLNNyTeXjCzq/0Gs/ss3gd9mM79dNzDijBAf0FSek+iAX3NfqwZxHVC7CT6CRiawE2oAtMQhy2IVuvgdI2X0T6YhkJLAhFhhlYAOYQQSMgPYw6Fb1i+91cL93FGEmZjwKxcn6zygBW0PAV+AbIsssY/d9xDPlql0D8bqMBLGga7hNxmSFCQjtPoIZ3faoUMPnCy1tv7YV6kezKQPyJ225Ng+5Kurmmeq06ByE/D89O+zXHuURBzHUlqUdHowux53Go9n5vfy1ae6KgyVseKNeTSkcOu9J5e1+W58Oaz5bb5uiNkMjQPjJ3UwepGvdN59v+qbzazMbxFeA6YAOwZo/wqR4O0EYl+5erP7z8+PPuOu6NEbtRmdUGfd9P1yM1j9+97YsLjd/zxsv7dsgmF7+HN73Fo3AbiGzEvqXPeyPUPOvyfipv5jseHHJu9N+azSuDPrtv1+3o7v2+HJSfLnxb17xj6e7h6fxzeulte6Lsc97v8ab6ntOhzkcGzNJGMbTJRCZLZPx6La0juoXll/LS2KhvjFLXb1VolFCApN6LdmVSIsXKwGivqeauV93msh13QZq2c32Vb1jty3HQh2rblVcF7XKlUyD9ixOKDY5m9EkVqKy+/n5miAJPQHMh8hY85gsQOhfILawxFqXDdTh4EzAiCsVR5RtrGd7DgyFOzQDIIwuKV5Od7p2y+Udu4vqMwnRkXYj+0i7B0DoikIi8MmECzXiQqpivOB1LANUWOMCg1hdAVGiwp7tXJVMQcNVAAlVM+R+HEBhtVilpTHF/t82MBGplQqy4pHEAUoP4Kf5nX7LSqF8fJo4iCSlBqh2woe7qOKVsnw+z7t0mHcGX499mpwzVVcZUbJncvzpfVySOclnJU+MCJRxz7f8IcQZAPMLfuZpafJ4/poeRM/uV3VlKEGpZf19wYWXQrxex2lHK4lYRgreVJqJzCGQWCnebsSfgZk5hPmtCydnfRI5tx/zi+WCDSWWEKr509LlN14bQxDJa6OrTs72u0+Zo5CqbhK28pytGahHScL4y3cL8Ujip8z36m/DI/+9XWewDuKoPNUTQ1I2T1bJ1bL7ZDYIV7BUaSGPDsHPAZwLfmzMi5xzkWqaprGEz79oichVdUwIj5nstvTUcCi8KU+5W4H37vQBJhX3t9t6Kz69rSf93lBJYIj13Jf+t7NB03EhoCePgpRLVd+qx6cKzuYHQv9G8IzWW26nZJeRVc+1vuS6dtmx8wIeZVL7YP5oOajp6Xmo/Qs=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0TpYxWSQAIkAiQGygyjFkbl0mlfjozjgEtiB9vh9vXHDk0KlPa0R0JC3tlee+2Ll93gII7KfptzxASmROt3m/o/lVrgho4LDKvqhoYThhXDm9kzA4WwUq94dVSu13Stz3mK+oQLQERTL1u2I/0Nuz62PN+u+3a5VPfcZ12bIsYltHQpWbq2jSPC/SxsU08Z8SngmPsExIj7Avqj9v2dLz19kHPSW40Dyywgay2ESHzThKUAQRRFsARpbDbME59GwP0RnhMgUoZeYwa8qb/u3Ww2pU2lRNncLFuWZVqeKX0CjufXeusq34yCPgnpYd0BhBIMQYT3QJG6R2JBA60dzSnDYhF/AG2btqWgDbSFBrQdcq2bbwEydl9EOiHJODD4Atg52AMKEUMEIm3y0G/q11/r4GHvmAHCQ8pifrb+HiVE1iiiCQoMnmeWs/s64oVytRoI+n0Co5TjNRqoMUkARFz7w1CIt3eYy+ELuJa1X9ty+cP5lCH4nbY0zGOukrp5oTpdPEdc/J+eHffrgDIFUYpaZGKtR9X9oDaaTG9rwU0d7peT26H3Mq43MwrHzgdSRbtf1+fDWszW6yaa3E1qv/Z4PO0MnjZLz/lZNbvCbTvmkgw6e7PSvt3Mht64v1h5e/cmJutOe/owq01+vQx+9+5vBp24U51v78Ieia6WI7ofuzHcVB83znj53GEYw9v5yPvF4/X4pef9fGARAc/T2VMtSbx+t7tdPvXotPfyNEn2qwmHG/r3mQWPZDe7GlfZEPf2yQ7Yo/Rx+DtwaPMtp+McTo25JIzS2QuCIl+q8eh3tZ7sFxCfy4uy4MAIM1c/URrFBSJCb6ldSlr8VAoQDnzZzMO617E9z2vfVt26Z3eq9VvLseye1bZqnmd3XTfXoAOLM4odSkKsYimVPczP5wRh7HNEAsSMNU3hAnH9E8QuEEDrkwd5OCjhaEylijPXXlmL+iJwQuSQJVtAb1/zdgtdG1AxJEPWDgViJ8ptl0+U+wFBnGCk5F3NN5cDzoUsxQqsUxHZpTUoEZTKC4ApDfbLTt01OY6TCCmiZkyDNEKlZJFkhTH54b9sAMgzK+YwoUyAyM6O34fZnX/LCyF9AqwcuErpB5LNRBduIivP513e7sUbK4dvpwFWp0xWVTAMD0xOP70Ni5qSYlKKxCC3c+7Flm9CXAAwP+FnnpemiBes8VH0/HaVF4aUk1be3xUorUrpep1mHa0pqWQS3pSKaZsjBFOpd7sxXSJiFhDml66bgvVZ5MJ+yi8VCzISQKBYzp+WLb/w1hghrt4afXlutl99yJyElHUTaCsu2TqRfJIoxp++WqAPlZ80/5F/G8qCt3ZdwDqKI/OUDwyByVyt1MWy+2A2IJWwWCohZcfglwAuBT81FkUuuAg5TbNUoI+/aErimjqAkKZE9Lt6ZjiW3Yyn2CXIf3N6B5NJ++tdveUf3tV/7+9GUgBjoBe++L+dDZyNC0S6ehJkXJr6Vj49ZXAyP5L5V4Lvlf6H5fXcctW22oXSu55XrjrlooAnmbTemd9bjmp6fh5a/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBQFFRUVxv3sJhWJRNBgT99e+g0ZPkJOfL+13p9PR0P73Q88wzNnyP7QCMUZy4YVBWxJfKP4jmmyxs72oWjxo1rl63am0G0rVmq2mxLGxwnNGulBWMU6QEODGC5KXC0ky9RvM1htHpdodtd2j2qcHz20p5iWJMTBOVJ7pSzn0vwJ2r25dKGged0MAu7gSGj3AngZ05UEcdotkx7pgqr883lFeH8auTJFGHouCTiSDyPPgEQ596pj7oPJu4M3ftwEjSGL35NPFL5e1slmVPWf0pjG2KpWmaonmK6JjYtX9VXkv3w8hUAiu8rbtGEAYuNDz3YhSgVJQ4oVkGnh3GbuL435hmKIYuTNdQDmuQ4YJfFeq3gyu6H1r6ADLGRg07BnM3NkMWilEAUXkxU14qv35WwdtZPTYCbIWxjz+t/xskFJyQF0bIrOF7ZHd0P7f4RbpenxHsKAH0Uuye0Lhok8iACJenMbLcfORi0nwmLl/LX87xvcMQ/C8leabe4ySwqS8yI7o2wsn/U6/3tbpZWRpeil5blwyeTFEculv5wp3kbh6zwGnScbR4uUJ4r3wD9Sj12/pzoz766u0Q4DjNEpgRs4K2FYLxBmssNrdwYtTrqT1hgh43dph0j1J301jlYp83dH0MjopfdTQbL4Xj0hq7DXNwXtClXnecN3x+OTWO/HoA0mUrsLut+HyOrD7L5xdtQqdMc6oM4hbHD3asQTmDY3thaht3oPXhgePp3TjzGpvQ2ZcGvfk08BZjcODi9VbGIYNffsf0PoYiriE6X4Ms/q8bNC8aifFYdItJYZHPM0GvqqJ0q2K3C1DXBpkiAFsRRhcwFuzD0Tm4PT6jBaAtZCCCszoDmWhvxKWmDaXMXC697VKRZUGdcVkfbMQS2RClfClu1wPaWG2jDSvT27kgmOtZuKsPIrN/yPoOHKu6mo115azupXysS/TqKrNzsr6oe5WZ6It6abUXeHUmZWJ29ShKmTPermbRZsFn8CJpKuB6gFlIXUft6/6SgfWZA/fSSAWHq1xw1O5yqeaSDqYlwR4vSWx6V95G0Dejne8574z3iXHd7C3Pu56Xbi/SXu1Kve782Jsru7qoSQMw2yx2q+XBWMmnEuyPwe7u0W24xjrM7G07E7XNYBhuFecEx0CTBEEDJF00UJXeAIQ9AagccPNLdy80w64pZ9SAxaUq7/Wa67N7XGOjR3sG024zm9GqOT02RSmobofpbu+ozlqeVIdz87TgE/6ywafqqWm4DMwjS1tL/WSYW31tXtpNxXwN+1XTHlDehZdjtTUA8eXseKo9S1bNCT7vXMtaCesJ57UsT63PIsuzojOu6qF2iOmmgOostTmfhkkJ2KoAQG+/2AuaKrSLpJpKpm1UwQCylKTgsmeTIbs8DvonD27qIMyHq8n+8FYYU8wkgco0ibSVVGqLwCyK0J8vJHkPFoJtx4ItyYIGRaBtlGG2Ifla9Iny5zzK1zzakgCk+hY0+X6pvqD5ZJLMOQ6cA2ERyLyjHvOV2fTp1hFJo/k44jIVj61guwoPqu/GizidL4bD8Sjf6WnvsCezyqLnw1N9W5JOhwi446HuHMRQNKbRZpNE1QDGMFEiX1Xyy2SL921359ODaoMRprQIW+zC32WLniFth7E9Z4b9WTCtt/gSTq1z36/u29mqqs+bUcvsBpZ4PlPbeEmHIJT5WeNo5ix7cBbZqJlZA3DYGew493jhzEvDrQ6zmTZczf1qo9Q4jUY+fdEpbhxNsnkv4yRNq9ZNQe/rOIrdTdq283gSmOzGSJqnLb1supF34Nn0oHNRfWn7pFjTkxm11GlJ49Zw69utCA6oGXUCUssaKb3z7mJcIn8CbwP083R4CG/zg3o/WT6MnjvpmJNuRTC5L4sLSBHLMrkVjOTvBKaQuGbNuqp2ooIF4QQFSeW1OFWQl05KKI5rdsiVcVtLTabdZLsS3W3XWbbRkGiOZmQa0C2ep1lRurOcG4pPELthYLmFr4LH3W6pvwOEfgejwERx7RSm0EG48heLRb7KSjAj128YYKSHhCfScotj5QbTrTfarEgLNFsHcotuy802XZeZVqU8DpNJMImBlaD4A0dkmA8ccYagG7moIJLFbYrJdYoTkpKjcUoTj3k6GU8BSgnVjAu212G5doPCrh95qABM+aGZeugpcqJrgih8+2VrBsRX6UzS/1Hm3etN/22In/fu2SA6plso4CIeAZGKoj8Ib6vTuAfzfdDc+6Dv5kFqusWFTlKbxC68Ifm49btjilZ5tAuJ6g75oflZ8MEq9TmghyPz5MJHzz+eA4RNEr7xei/J0Xg6PqWnU3otQqvgUjExTzEU3aLmCKaEEJ318IAC6mGC+hEXfaD+5Pkh/4gvTZxgnpDv2SctU74uf/AQmSNcPEQU0vL5T185H1ySvCUoT76SdT3yXikQ//VJAzuw0CPiKfnJwtj8Xa4vbL3zQ+IsBpgb2MWqYJ7nb5oChsSsS4ZYGL83/pWBr5x/FD6S/MCSkG7apQn6fqdcTKeXigFhmAaJIlaugvcT84ozOUeo81vpDzNX7vdG5nP8LZlfq6M5mV2+UXnouv9bueZe2wUicgq7VywvlZy8S4nzwH43od8Afjmk22T6/WVIf4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0518101403083090941</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0518101403083090941</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_051881403083088677</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0518101403083090941</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130911_020045</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E608A05B1127BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B1D2CF8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AE658A1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E61862CE0C842255E0401F0A079902DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value>urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD3</con:name><con:value>urn:dece:userid:org:dece:E61847F4FE71FB9FE0401F0A07995289</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08adc646-1311-416b-b5ab-b8f23f07cecf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bea2c7bc-9454-4c3d-9c8f-ebcb7147b934</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c029175-97df-4aa3-bd58-e56abdbe6027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56e84f74-144a-4609-8df5-0421d96f3cac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>364e1d9f-ffdd-4500-bb2a-1f7c4fe293a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e128cdb7-2033-4571-9481-b741edbfbc35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eb76437e-3e7b-489b-9b17-6d5d3e9e20f0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_CS_FUNC_YOUTH_BAU_Get_Self_P2" searchProperties="true" id="73e3dd9e-be40-4e6a-891f-3208b256974d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e3446b0f-cb2c-41b3-bdaa-9365b2c2450f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="74b2d017-9f00-4586-976a-3932c5ec6798"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="5e85ef60-ca6f-4420-9d18-795967335cc9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="98dc8572-756f-492f-ac30-36ca516e8926"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="c1188f0f-8aca-4d6c-a1d6-9512a9f20737"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH BAU" id="933d4130-3c4d-49c4-9ac7-1df5a90b9419"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"0319EEC0C5B421B7E05307991E0AA268:29CA5206"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0502381410780758273</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319E944324817B5E05307991E0AAB28</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319E944324817B5E05307991E0AAB28</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319E944324817B5E05307991E0AAB28</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319E7EA3E9C19B7E05307991E0AA66C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319E94919AB17C0E05307991E0ABE2C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319E7EA3E9C19B7E05307991E0AA66C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319E94919AB17C0E05307991E0ABE2C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn3sGNnm7gnMcEtDm6QBkjTJyxlF3galtmwk2Tj5+iMZcDEhOfQ8ebS9tfbaFy3pTOAwcNy+EMAljVglCwMm3NzaNRLO3AgLKlyGQxCuJO68f3XpOlXLxbstRmUy6hr/tNqkAw3HNi0P+2bdgoaJvbpjApBWE/vE6RBfuQqRwIQJiZnsGo5l102rY9qNW9t2a7Zbb1XrVvPJqNwDFwpbuVQtY0sqE11jKWXsIrRer6vrWjXiC+RYlo0eri7nZAkhNnpnm4zyQLy39SdVDwgEAamSKERnqORz5gl3ThcMy4TDNpb3USwLWR2kfDxBF1+MYi94E+ZH+XKIWcQowQF9w7o+VyCXkVfpB4uIU7kMP0zCtjSwCRkxiV1nXwxUpnYiUIkhF9gUS2xvsWbgAwdGoHI3m3SNL6d1Ld96yzETfsRDUV7+HR9gKQRRDJ4pdmltqZ0OeKRSvTMg7oSRIBE0hWs9rDEmILbdBHI6VOWGg0+zSyrUgGZCs0P79A6Wm2qM6AKE/D8N2mvOBuQeBwn0buTLszX9Ob4L8fl9PyLNR0h/Xczow+1jNyew75wbitZulgdDWQzRZse3r8hJrRnyfvjM/n47fibtWpglfBWJ9TAjQRBN7ZmKm/AGH7R/Zf3fo4ev3gzP0R33Y6+BHofWYNwKXtppsI5Xg1Q+TVpDfP/ASS25uL7IHr494P7T9WJwnaHFeUK/01Ur+fZIb2j9cpq++aPHJ//HgDanT/xlir9n/en4zhu+XT5Nz2M6WN60G/zxQkzl+ne3SGePf9m2O/Pz5PkFiNwt9RhMRpVz1SUsPxczbaGe6eeubqzFR0hg0ujpXVo73ETJHfVc1cPN2qrZnXFr3K+NO0O7M2iNrUbNanU69tjq95vN4U5kNiwOKA4j5lMdS0vuZmw+J0hCVwDzgJtplCilE8YniCMscWXCZuoQREzAbaTkOVwGdWsVeE72HNqNJnDntcbf1mJhVK4j+ZP95H1fAi9rcr2kyTMgNKaghVvPtVCDLaSqxQqniQzsaoqrDBIl7VyrrOvU2w0kaBgHoJmiMPKSAKrxMs4rg8Tm65iYiNxKBYkjLnGQHwj0YXqH/3aVUD4e1Q5CpzQA1U04csfUdvl8nHdrP+8dfD/xqD5fqqySU7JhUv71Z1r0mBSjUiRGhL3jXmz5S4gjAOgTfuiwNEU8L6V70XeXuboWlJD0dv1d4eqqmqRpkne0ZVk1xBU8UrppozmQROnc6230GxgqINBJl0rB+iByYS/zS+SSzSWWEKr5q+TLE14RcxD6FTFRByc79YlSCqnqJiGTx2zDQL2ANONPH0nEJdpPmW/UZx1x70+7jmDtxVF5qkeEpGyhV/pCef1gNkikYKmSwojvgx8DOBa8bCyKXHCRapqeEwkf/6lojesamJAoYXIyMnLDvu7mPOVrDO4fp3cwubQXbz363489k+YjQEC9EAXN8fWV7er5Z4s97d4GfSffnXq9pmTKbg0aJfkeOO2iKCV2vXfm95a9Oh3OeO9f</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn3sGNnm7gnMcEtDm6QBkjTJyxlF3galtmwk2Tj5+iMZcDEhOfQ8ebS9tfbaFy3pTOAwcNy+EMAljVglCwMm3NzaNRLO3AgLKlyGQxCuJO68f3XpOlXLxbstRmUy6hr/tNqkAw3HNi0P+2bdgoaJvbpjApBWE/vE6RBfuQqRwIQJiZnsGo5l102rY9qNW9t2a7Zbb1XrVvPJqNwDFwpbuVQtY0sqE11jKWXsIrRer6vrWjXiC+RYlo0eri7nZAkhNnpnm4zyQLy39SdVDwgEAamSKERnqORz5gl3ThcMy4TDNpb3USwLWR2kfDxBF1+MYi94E+ZH+XKIWcQowQF9w7o+VyCXkVfpB4uIU7kMP0zCtjSwCRkxiV1nXwxUpnYiUIkhF9gUS2xvsWbgAwdGoHI3m3SNL6d1Ld96yzETfsRDUV7+HR9gKQRRDJ4pdmltqZ0OeKRSvTMg7oSRIBE0hWs9rDEmILbdBHI6VOWGg0+zSyrUgGZCs0P79A6Wm2qM6AKE/D8N2mvOBuQeBwn0buTLszX9Ob4L8fl9PyLNR0h/Xczow+1jNyew75wbitZulgdDWQzRZse3r8hJrRnyfvjM/n47fibtWpglfBWJ9TAjQRBN7ZmKm/AGH7R/Zf3fo4ev3gzP0R33Y6+BHofWYNwKXtppsI5Xg1Q+TVpDfP/ASS25uL7IHr494P7T9WJwnaHFeUK/01Ur+fZIb2j9cpq++aPHJ//HgDanT/xlir9n/en4zhu+XT5Nz2M6WN60G/zxQkzl+ne3SGePf9m2O/Pz5PkFiNwt9RhMRpVz1SUsPxczbaGe6eeubqzFR0hg0ujpXVo73ETJHfVc1cPN2qrZnXFr3K+NO0O7M2iNrUbNanU69tjq95vN4U5kNiwOKA4j5lMdS0vuZmw+J0hCVwDzgJtplCilE8YniCMscWXCZuoQREzAbaTkOVwGdWsVeE72HNqNJnDntcbf1mJhVK4j+ZP95H1fAi9rcr2kyTMgNKaghVvPtVCDLaSqxQqniQzsaoqrDBIl7VyrrOvU2w0kaBgHoJmiMPKSAKrxMs4rg8Tm65iYiNxKBYkjLnGQHwj0YXqH/3aVUD4e1Q5CpzQA1U04csfUdvl8nHdrP+8dfD/xqD5fqqySU7JhUv71Z1r0mBSjUiRGhL3jXmz5S4gjAOgTfuiwNEU8L6V70XeXuboWlJD0dv1d4eqqmqRpkne0ZVk1xBU8UrppozmQROnc6230GxgqINBJl0rB+iByYS/zS+SSzSWWEKr5q+TLE14RcxD6FTFRByc79YlSCqnqJiGTx2zDQL2ANONPH0nEJdpPmW/UZx1x70+7jmDtxVF5qkeEpGyhV/pCef1gNkikYKmSwojvgx8DOBa8bCyKXHCRapqeEwkf/6lojesamJAoYXIyMnLDvu7mPOVrDO4fp3cwubQXbz363489k+YjQEC9EAXN8fWV7er5Z4s97d4GfSffnXq9pmTKbg0aJfkeOO2iKCV2vXfm95a9Oh3OeO9f</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn3sGF+AGHsCM4RL6lPIDULavJxR5G0jsGVjyZjw9ZUMuEBJDj1PHm1vrb32RUu6ZigKTafDGKScxLSyjkLKnMLaUrKUOjFihDkURcAcjp1xZzR0zKruoP0WpeL2Wsq/Rt22dd/yVevK8NV6DXS16du2evXmA242/QZueMKVsQxcyjiivKWYulFXdVs1GhPDcGqmY1xV62bzValMIWUCW7hUdWVHas1ayozzxNG0PM+rea0ap4Fm6rqh/RgNx3gGEVLa19uMikBpe+ePqx5gCENcxXGkXWtHPtcec8YkoIhnKexieR/F0jXd1oSPx0jwRSn3gudSPy6WXURjSjAKyQbJ+oyAz2Kv0gmDOCV8Fn2YhKFLYBXWWMVGnX5RtGNqFwIdMUwZUtkMGTusJ/AhBYqh8vzktpQvl3Wt2DpJEWV+nEbsePl3fICuIIwT8FS2T2tH7XLAM5VqXwN2XIrDjJEV3MlhTRAGtusm4MuhKg8p+GQ9JEwM6JpJdtohvZPltho9EgDj/6dBB83ZgkxRmEG7NwCejJvDbPG8WT70bm8ntnurvW/Ww8dWQeDQuTCUrd0uT4ayHKLtjp/zyYBn7jsZNxf6FUr0yaxG9J8WDHA4j/zFa+Obld6PuhM/CqcazgfPj5Ofdy8meQu7qBu93GdB0Ou8vizu63kyIbOnUR7cWv2RPx0Nvj9k3zJvCq8/3CbNF4N5R/8aRP3JdE6Dbmjls2G/4a433qAb+b37xebH07OmPS6/fu+uDHPUX2/o7UtuW/9MTBpN53GrTOeA/7Ftf+bH2dscMN8v5Ri4vcpAdAnxz8VMWoin+oWrk0jxYRwoV9pyl9QOJxNyRzxH9HC71muG3bfrtmF3bgyrq/f1Rk23bNvo652bvtndi8yWxQnFbkx9ImNJyd2OzecEceQwoB6k6irOhNIx5RPEHuKo4tIncQhiymASC3meR/nVcrZ6ny2vwiBKN/XI9qOVlSuVu5jf0/u043NIjyW5fiTJT4BJQkDqthxrJuaacVGKJVplPDSqK1SlkAllT6XIOma92dAYiZIQJFEtir0shGoyS4rCaGz7NVWEWWElDCdxylFYnAftw+xO/+0LIXw8Ih2YTOkGRDPhzBWj7/P5OG/rMO89fCfziDxeoqo8JXjL5PjX72GRU1JOSpkYZsaee7nlLyHOAGif8NNOS1PG81bkIPr+Lhe3gtCR9r6/S1RdVrPVKis6aul6TUsFvCZk09DGgDMhc++TeAFUKyG0i+6UkvVJ5NJ+zC/jMzrmiEMk5q9SLC94RIyByUeEK87N+tIXylFIUTcOa37O1g3FA0gy/vSNhB0s/YT5QXzyOP2d+DmsgzgiT/GG4IQGciXvk/cPZgPHApYIJYzTQ/BzAOeCHxvLIpdcuJimt4zDx38qUuJaCsI4zih3e0phOJTdgid/T8D57fQHTKHs5VOP/PdbTyXFCGAQD0RGCnx5Yzty/mlwIN27oGfUu14TMmVYN41D9e7cmM2yKEfs2n+Y/7Qc1Ol0xtu/AA==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxieR8NmExFjuiMKQUXFDfeXE1gUi7JJsemvP4XdOnafnrlzboQRWElW5pcLWV/9wIbvsR2AMYoTNwyqqvxa+5sXBZ4zuUMDiU2u0eR5tiGKsN3gWpZ1gC2LgzRfq6oYp0gNcGIEyWuNpRmuQYsNhl4yTIcnP/alybL7WnWNYkxME5UXulYtfC/AnZvb11oaB53QwC7uBIaPcCeBHR1o4w7R7Bh3TLW3H+8obw7jNydJog5FwRcTQeR58AWGPvWD+qTzw8Qd3bUDI0lj9OHTxK+1j715nr/k3EsY2xRL0zRFixTRMbFr/1V7q9w3I1MNrPB93TWCMHCh4blXowSlocQJzSrw7DB2E8f/hWmGYujSdAMVsAGZZvBXjfrp4IbuDy19Ahljo4Edg7kbWyALxSiAqLpaqK+1v/6sgu97l7ERYCuMffxl/d8goSBDXhghs4Hvkd3R/bnFb9L19gPBjhpAL8VuhiZlm0QGRLg6i5HlFmMXk+YzcfVW/mqB7x2G4H8pyQ/qGSeBTX2TGdm1EU7+n3o91+rdytrwUvRm1C+51D5ch4dTT3CiNWLX07Hht9kwfL1BeFZ+B/Uo9cf6a6M++upjk7Ucj1f9vTxL47NXrEfaYrLb9/yLinB2tlpcL5ZUIVGOttRuXwTAqENnNd0JfWErOofNQt/Z7pifzi+y4EwrgwMyjxpFR1KvvZjOjhIfSdP2UOjrOqK1ka0Nzx67DbShuldW8/rYkE/N4+qqWetdMh5tiyyV5WxgjmhlO664+inczA6tMbEmZ/xlVl+9/ozpOYYyrhG63IIs/295WpSNxHgsuuWksMjnmaA3TVW7dbnbBahrg1yVgK1K4yuYSPbp7JzcvpjTEpivekAGF20Bctneyev5fKTk5nrt7ddqrydpi2Y+ADu5Ql7ISrGW99shbWz20Y7t0XtdksztIjxww8gcnPKBAyfaUssnS/WiHZVislTozU1mF2R91Y4aM12uuMrmKInaQsnl/OZRVnJnst8sot1KzOFVmWug2QfMSuk62mDprxnILRx4VMYaON3kkqN112utUJZgVpHsyZrEtuz29hH0zejge86T8QExvjT768uh76X7q3LUukq/q5/7unrg5LkyBIvd6rBZn4xNL6vAwQQc7h5d3jW2YW7v27k83w1H4V51MjgBc0WS5oCkiwaa2h+CsC8BrQnc4to9Sq2wa/ZyasjiSl30+q3txT1vsdGnPYNpt5ndeNOanVuyEtT3o/RwdDRn25vWR7qZrcREvO5wVs9ahsvAIrLmW2WQjAprMNcrh5lcbOGgbtpDyruKvVgThiC+XhxPsxfJpjXFl4NrWRtpO216guVp3CKyPCu64PoynJ9iuiUhjqV2l2yUVICtSQD0j6ujNNekdplUU83nO00yQE9JUnA9ssmIXZ+Hg8yDOw6ExWgzPZ4+CmPKuSJR+VwhbaVU2jIwyyIM9JXSO4KVZNuxZCs9aQ5lMN+po3xH8rUaEOWveezd8mgrElC4PWiJgwq3osVkmujNJrgE0iroiY52LjZmy6eFM1LG+iRq5hqeWMF+E540341XcaqvRqPJuDgs0/7pSGaVReujjNtXlOwUAXcyWjonOZSNWbTbJVE9gDFM1MjX1OI63eNj2z349LDOM9KMlqHArvxDvuobyn4U2zozGiyCGSeIFZxal4FfP7bzTX2ptyLB7AaWfLlQ+3hNhyDsiQv+bBYse3JW+biVW0NwOhjspPBE6SIqo/0S5ov5aKP7db7CZ+OxT1+XVHMSTXO9nzeV+bzOmdJysMRR7O7Stl3E08Bkd0bSyvb0uuVG3klk09OyGXFr2yfFmmVmJGizyry5hXvfFiI4pBZUBhTBGqv9y+FqXCN/Ct8H6Nfp8BC+zw/qebJ8Gj130qGTbkUwuS/LA0iVqz1yKhjJ7wlMKXHNhnVT7UQlC8IJCpLaW7mrJC+dlFAc1+yQI+N9rbRogRApgeUYlm0xnEI3aaZHA5oXRUaUpDvLeUfxBWI3DCy39FXyuPdT6vcAod/BKDBR3MjCFDoI135jscxXVQ0W5PgNA4yWIeGJnMAxIujyNM+32rzMdMUW1+UZWhHpNs3LSq06CZNpMI2BlaD4M0dsfuKICwTdyEUlkSxPU0yOU5yQlJyNLE085iUzXgKUEqoZl2yvwzbbPIVdP/JQCZjyQzP10EvkRLcEUfj9yTYMiG/ShbL8W9W7t5P+lyF+fXfPBtEx3VIBl/FIiFQUfUN4m/dgfh208Bz03TxITbc80Elqk9iF70g+v/rZMWWrPNqFRHWH/ND8Kvhklfoa0MORmbnw0fOP6wBhk4RvvN1LcjZezi9plqW3Iggll4qJeYqhaIHSEUwJIboswxMKqIcJ6o+46AP1F88P+Wd8aeIEekK+Z5+0TPW2/IOLiI5weRFRScsXf3rL+eSS5C1BRfKdrOuR+0qJ+LdXGtiBpR4Rz8gjD2PzZ7m+sfXkh8RZDjA3sMtVyTwvv2gKGBKzLhliYfxs/DsD3zn/LHwk+YElId10SBP06zfVcjq91gwIwzRIVLl2EzxPzBvO5BKhzk+lf5m5cb8PMl/gX5L5rTbWyezyjdpD1/3fyg331i4QkV3YvWF5rRXkXkqcB/bThP4A+HVIM4LMKjwHWizfeh7StAAeQ/pzJG//Ev9b8pTTr9/D2z8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0502381410780758273</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0502381410780758273</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_050261410780726236</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0502381410780758273</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_052433</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319E7EA3E9D19B7E05307991E0AA66C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319E94919AC17C0E05307991E0ABE2C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E607201723132613E0401F0A059919BB</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1188f0f-8aca-4d6c-a1d6-9512a9f20737</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_CS_FUNC_YOUTH_SAU_Get_Self_P2" searchProperties="true" id="b10baad0-0fd8-47e8-864b-5a9eacfa771f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="69355b4e-60e6-4af6-a924-8366954bf8d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2b82674a-0b00-4e26-a4a5-ad6f92612f1c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="90d741b8-2b9b-4330-8d42-819a84d367d3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="8f596951-7797-4680-9257-96d57755f01d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="1fe27f9c-7781-4b22-859b-f91192d8f4bb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="1f01485d-204b-4945-95ec-7181927533c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"031A011A93450AF8E05305991E0A9053:B87A0D44"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0503441410780824870</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319FB13670B7CCCE05305991E0AEFF8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319FB13670B7CCCE05305991E0AEFF8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319FB13670B7CCCE05305991E0AEFF8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319F69A377974BBE05305991E0A78A8</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319E94840AF17BEE05307991E0ADA76</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319F69A377974BBE05305991E0A78A8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319E94840AF17BEE05307991E0ADA76</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTH08U9Ly1dIRZhDkgoIooF7Oy52Q7kK0TaFJofjrb1KgAqKXc5862d1Ze+2PrOSa48AvOA3OIRI0ZLkk8Bl3UmtNiyPmhJhT7jAcAHcEcUaNfs8p5A0H77douW6rpv1jmRUMFcvTix6u6CVSMPSpUSnodqFQnZZsewpVV7pyHkOXcYGZqGkFwyzpRlU3y2PTdIoFp1zIV63Sby33AhGX2NIlb2g7UgmvaXMhFg5C6/U6vy7mw2iGCoZhor/7vRGZQ4C1+vU2ozRQVN/5k7wLBHyf5EkYoGt05HPtcmdEZwyLOIJdLPe7WAYyqkj6uJzOrrRsL7hd5oXpsolZyCjBPv3Aqj59EPPQzTX8WRhRMQ++TcI0FLAOCdGJWWJXGjqmdiHQEcOIY53PsbnDGoIHETACuedht6ZdXda1dOs4wox7YRTw4+Wf8QG2Aj9cgKvzfVo7apcDnqlU/RqI02XEjzldwYMa1gUmwHfdBHI5VO4xAo8mPcrlgCZcsUOH9E6W22q06Ay4+D8NOmjOFuQF+zHUaScK/WRm9yZ2ONxsmu+Th6dlud17R0+1lMChc2rIWrtdngxlNkQ7+CEev9lFsxmUsN/t+PZstikbnc5DdVp5idy2sXgYbZ5Hw3daNm+95/540B9Y5svk7vH+HT5e2V1nuJxQz53ftYMn9tyrvPZHNpDJI1qX2pMOQbNe8tz3g7/ebteT1rDlPbU8q7sZPf3qbWLXGyQ982HcscbBckVXv9qu8XrbswZD0RvEye/74iSu3BtRgj7sl3UtS+eA/7Ftf+ZH8fQNiNgv1Rh0W7m27BIWP4uZslBX91JXZ6HEhwtgQqurXUo7nFjKHXUd2cPt2iia1Xal2ihalpSsm5tbo1w0ytWqeWs0LLth70Vmy+KEYjNkHlWxlORux+ZngiRwODAXIn0VxlLpuPYDYgsLnOuyoTwEIeMwDqU8L2O8TDZBxRO+ZU6Nalhdvr3ZZIG13EMoBmwQNTwB0bEml440eQiELigo4VZzzeVgcyFrscSrWPhmfoXzDGIp7ZFSWadQssuI02Dhg2KKgtCNfcgv5ou0MohvvwUdE55aKSeLMBLYTw8E+ja903/7SkgflyoHrlK6AdlNOHPHlPb5fJ+3dZj3Hr4Ru1SdL1lWEVGyZXL863Na1Jhko5IlRri5555t+UOIMwDoB37otDRZPHdFD6LvL3N5LUghqe/7u8T5ZT5ereK0o5ZhFFEk4ZHUTRONgMRS5zbj8B0YyiDQRZdKxvokcmY/5heLORsJLCCQ85dLlxe8IkbA1SuiKw9OcukT5SikrJuARJyzNX35AlKMf3wkEYcoP2l+lJ91GH0mfg7rII7MUz4iBGUztVIXyuab2SChhKVSCsPoEPwcwLngx8asyBkXIadpGgv4/k9OaVxNw4SEMRPdlpYaDnU35Sk2C3A+nb7ApNKevfXofz/2dJqOAAH5QuQ0xVdXtqPmn80OtHsX9It835jFimXcWM1m81C+b9vtTL6P2dW/mL9aDup0OuP1fwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTH08U9Ly1dIRZhDkgoIooF7Oy52Q7kK0TaFJofjrb1KgAqKXc5862d1Ze+2PrOSa48AvOA3OIRI0ZLkk8Bl3UmtNiyPmhJhT7jAcAHcEcUaNfs8p5A0H77douW6rpv1jmRUMFcvTix6u6CVSMPSpUSnodqFQnZZsewpVV7pyHkOXcYGZqGkFwyzpRlU3y2PTdIoFp1zIV63Sby33AhGX2NIlb2g7UgmvaXMhFg5C6/U6vy7mw2iGCoZhor/7vRGZQ4C1+vU2ozRQVN/5k7wLBHyf5EkYoGt05HPtcmdEZwyLOIJdLPe7WAYyqkj6uJzOrrRsL7hd5oXpsolZyCjBPv3Aqj59EPPQzTX8WRhRMQ++TcI0FLAOCdGJWWJXGjqmdiHQEcOIY53PsbnDGoIHETACuedht6ZdXda1dOs4wox7YRTw4+Wf8QG2Aj9cgKvzfVo7apcDnqlU/RqI02XEjzldwYMa1gUmwHfdBHI5VO4xAo8mPcrlgCZcsUOH9E6W22q06Ay4+D8NOmjOFuQF+zHUaScK/WRm9yZ2ONxsmu+Th6dlud17R0+1lMChc2rIWrtdngxlNkQ7+CEev9lFsxmUsN/t+PZstikbnc5DdVp5idy2sXgYbZ5Hw3daNm+95/540B9Y5svk7vH+HT5e2V1nuJxQz53ftYMn9tyrvPZHNpDJI1qX2pMOQbNe8tz3g7/ebteT1rDlPbU8q7sZPf3qbWLXGyQ982HcscbBckVXv9qu8XrbswZD0RvEye/74iSu3BtRgj7sl3UtS+eA/7Ftf+ZH8fQNiNgv1Rh0W7m27BIWP4uZslBX91JXZ6HEhwtgQqurXUo7nFjKHXUd2cPt2iia1Xal2ihalpSsm5tbo1w0ytWqeWs0LLth70Vmy+KEYjNkHlWxlORux+ZngiRwODAXIn0VxlLpuPYDYgsLnOuyoTwEIeMwDqU8L2O8TDZBxRO+ZU6Nalhdvr3ZZIG13EMoBmwQNTwB0bEml440eQiELigo4VZzzeVgcyFrscSrWPhmfoXzDGIp7ZFSWadQssuI02Dhg2KKgtCNfcgv5ou0MohvvwUdE55aKSeLMBLYTw8E+ja903/7SkgflyoHrlK6AdlNOHPHlPb5fJ+3dZj3Hr4Ru1SdL1lWEVGyZXL863Na1Jhko5IlRri5555t+UOIMwDoB37otDRZPHdFD6LvL3N5LUghqe/7u8T5ZT5ereK0o5ZhFFEk4ZHUTRONgMRS5zbj8B0YyiDQRZdKxvokcmY/5heLORsJLCCQ85dLlxe8IkbA1SuiKw9OcukT5SikrJuARJyzNX35AlKMf3wkEYcoP2l+lJ91GH0mfg7rII7MUz4iBGUztVIXyuab2SChhKVSCsPoEPwcwLngx8asyBkXIadpGgv4/k9OaVxNw4SEMRPdlpYaDnU35Sk2C3A+nb7ApNKevfXofz/2dJqOAAH5QuQ0xVdXtqPmn80OtHsX9It835jFimXcWM1m81C+b9vtTL6P2dW/mL9aDup0OuP1fwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl5wAnYFqghLwkw2AplAXm4JuQ3K2LLRQiBffyUDHmBILnOfXGq3Tp9edKRLjpLYDZqcAxMkpaVlElMe5Na6IRkNUsQJDyhKgAcCB4Pm3W3glu0AbbcYpV67bvyDIrfiepPIDCNcNb2Ja5uT0LPNc2/iA3IqbsUH5cq5hB7lAlFRN1zb8UzbN53zoeMElUrg1MpurfZqlH4C4wpbuZRtY0NqyevGTIgssKz39/fye6Wcsqnl2rZjje5uB3gGCTIal+uM8kCssfHH5RAwxDEu4zSxLq09n8uQBwMypUhIBptY4WexbMv2LeUTcjL9ZhR7IezRKM2XLURTSjCKyQfS9bkDMUvDUjOepoyIWfJpEo6tgU1YYhM7Hv1mWPvUTgTaY8g4MvkMORusJ4iAAcVQen7q1Y1vp3Ut3zpkiPIoZQnfX/4dH6ALiNMMQpNv09pQOx3wSKUal4CDHsWx5GQB93pYM4SBb7oJ+HSo0iODiCxvCVcDuuSanbVL72C5rkabTIGL/9OgneasQX6iWEIjG0cv3fZ1v9+yf42uozQaDO95pRmPb57rOYFd59xQtHa9PBjKYojWO34Mbv3xRbaQbx7cjUcskW4P31yvuvFc+pX39LXbvz6TENdmYc91PxbSd966kwXuT/nN99fmC59k7GyEz9ohSNkev94NWi8XLxIvflpntjezPpj49VB97t8/k9qP8Ps8ufqoDc9vRz8+av3u2Wo0vngiyePTeJVV/dXI7zw8zFfAVSve5HP/evC68mqtxe3N43zYqRfp7PDft23P/EBO3gCL7VKPQa9d6qouIfG1mGkLCc0odw0yLT5cABVGQ+/S2hFIJXckDFQP12u74vgd36t5drPrVK86Hfu8Yld93+nYzXazerEVmTWLA4qtlEZEx9KSux6brwniJOBAQ2DmIpVK6bjxBWIbCVTq0Sd1CFLKYZgqeXbRLGOufHuLMimTuZuxKKpxGxul+1Q80AfWjASwfUn29iT5CTDJCGjd1mPN1VxzoUoxRwspYqe8QGUKUik70yIbuF7t3OIkyWLQRK0kDWUM5WyW5YWx+Prrmgjz3Eo4zlImUJyfB+vT7A7/bQuhfEKiHbhO6QpUM+HIFWNv8/k87+pu3lv4pgyJPl6qqoIRvGay/+v3sOgpKSalSAxzZ8u92PKXEEcArC/4WYelKeKFC7ITfXuXq1tB6Uhj2985Ks/LcrGQeUertl2xmIK3lGw61gCwVDK3Gqa/gFoFhHXSnVKwPohc2Pf5STGjA4EEJGr+SvnyhEfEALh+RPTUuVme+kLZC6nqJmApjtlasXoAacZfvpFwgLWfMj+qz3vKwt/tOoK1E0flqd4QgtCpXun7ZPXJbOBUwRKlhCnbBT8GcCz4vrEocsFFqGmaSAGf/ylpiasbCONUUtFrG7lhV3ZznmKVQfDb6Q+YXNmLpx7577eeSfIRwOpZqfxzfH1jB3r+6XRHujdBD9W7e+VULqr2VbXVauXqfb5W7063WyuKsseu8Yf5T8tOnQ5nvPEv</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxieR8NmExFjuiMKQUXFDfeXE1gUi7JJsemvP4XdOnafnrlzboQRWElW5pcLWV/9wIbvsR2AMYoTNwyqqvxa+5sXBZ4zuUMDiU2u0eR5tiGKsN3gWpZ1gC2LgzRfq6oYp0gNcGIEyWuNpRmuQYsNhl4yTIcnP/alybL7WnWNYkxME5UXulYtfC/AnZvb11oaB53QwC7uBIaPcCeBHR1o4w7R7Bh3TLW3H+8obw7jNydJog5FwRcTQeR58AWGPvWD+qTzw8Qd3bUDI0lj9OHTxK+1j715nr/k3EsY2xRL0zRFixTRMbFr/1V7q9w3I1MNrPB93TWCMHCh4blXowSlocQJzSrw7DB2E8f/hWmGYujSdAMVsAGZZvBXjfrp4IbuDy19Ahljo4Edg7kbWyALxSiAqLpaqK+1v/6sgu97l7ERYCuMffxl/d8goSBDXhghs4Hvkd3R/bnFb9L19gPBjhpAL8VuhiZlm0QGRLg6i5HlFmMXk+YzcfVW/mqB7x2G4H8pyQ/qGSeBTX2TGdm1EU7+n3o91+rdytrwUvRm1C+51D5ch4dTT3CiNWLX07Hht9kwfL1BeFZ+B/Uo9cf6a6M++upjk7Ucj1f9vTxL47NXrEfaYrLb9/yLinB2tlpcL5ZUIVGOttRuXwTAqENnNd0JfWErOofNQt/Z7pifzi+y4EwrgwMyjxpFR1KvvZjOjhIfSdP2UOjrOqK1ka0Nzx67DbShuldW8/rYkE/N4+qqWetdMh5tiyyV5WxgjmhlO664+inczA6tMbEmZ/xlVl+9/ozpOYYyrhG63IIs/295WpSNxHgsuuWksMjnmaA3TVW7dbnbBahrg1yVgK1K4yuYSPbp7JzcvpjTEpivekAGF20Bctneyev5fKTk5nrt7ddqrydpi2Y+ADu5Ql7ISrGW99shbWz20Y7t0XtdksztIjxww8gcnPKBAyfaUssnS/WiHZVislTozU1mF2R91Y4aM12uuMrmKInaQsnl/OZRVnJnst8sot1KzOFVmWug2QfMSuk62mDprxnILRx4VMYaON3kkqN112utUJZgVpHsyZrEtuz29hH0zejge86T8QExvjT768uh76X7q3LUukq/q5/7unrg5LkyBIvd6rBZn4xNL6vAwQQc7h5d3jW2YW7v27k83w1H4V51MjgBc0WS5oCkiwaa2h+CsC8BrQnc4to9Sq2wa/ZyasjiSl30+q3txT1vsdGnPYNpt5ndeNOanVuyEtT3o/RwdDRn25vWR7qZrcREvO5wVs9ahsvAIrLmW2WQjAprMNcrh5lcbOGgbtpDyruKvVgThiC+XhxPsxfJpjXFl4NrWRtpO216guVp3CKyPCu64PoynJ9iuiUhjqV2l2yUVICtSQD0j6ujNNekdplUU83nO00yQE9JUnA9ssmIXZ+Hg8yDOw6ExWgzPZ4+CmPKuSJR+VwhbaVU2jIwyyIM9JXSO4KVZNuxZCs9aQ5lMN+po3xH8rUaEOWveezd8mgrElC4PWiJgwq3osVkmujNJrgE0iroiY52LjZmy6eFM1LG+iRq5hqeWMF+E540341XcaqvRqPJuDgs0/7pSGaVReujjNtXlOwUAXcyWjonOZSNWbTbJVE9gDFM1MjX1OI63eNj2z349LDOM9KMlqHArvxDvuobyn4U2zozGiyCGSeIFZxal4FfP7bzTX2ptyLB7AaWfLlQ+3hNhyDsiQv+bBYse3JW+biVW0NwOhjspPBE6SIqo/0S5ov5aKP7db7CZ+OxT1+XVHMSTXO9nzeV+bzOmdJysMRR7O7Stl3E08Bkd0bSyvb0uuVG3klk09OyGXFr2yfFmmVmJGizyry5hXvfFiI4pBZUBhTBGqv9y+FqXCN/Ct8H6Nfp8BC+zw/qebJ8Gj130qGTbkUwuS/LA0iVqz1yKhjJ7wlMKXHNhnVT7UQlC8IJCpLaW7mrJC+dlFAc1+yQI+N9rbRogRApgeUYlm0xnEI3aaZHA5oXRUaUpDvLeUfxBWI3DCy39FXyuPdT6vcAod/BKDBR3MjCFDoI135jscxXVQ0W5PgNA4yWIeGJnMAxIujyNM+32rzMdMUW1+UZWhHpNs3LSq06CZNpMI2BlaD4M0dsfuKICwTdyEUlkSxPU0yOU5yQlJyNLE085iUzXgKUEqoZl2yvwzbbPIVdP/JQCZjyQzP10EvkRLcEUfj9yTYMiG/ShbL8W9W7t5P+lyF+fXfPBtEx3VIBl/FIiFQUfUN4m/dgfh208Bz03TxITbc80Elqk9iF70g+v/rZMWWrPNqFRHWH/ND8Kvhklfoa0MORmbnw0fOP6wBhk4RvvN1LcjZezi9plqW3Iggll4qJeYqhaIHSEUwJIboswxMKqIcJ6o+46AP1F88P+Wd8aeIEekK+Z5+0TPW2/IOLiI5weRFRScsXf3rL+eSS5C1BRfKdrOuR+0qJ+LdXGtiBpR4Rz8gjD2PzZ7m+sfXkh8RZDjA3sMtVyTwvv2gKGBKzLhliYfxs/DsD3zn/LHwk+YElId10SBP06zfVcjq91gwIwzRIVLl2EzxPzBvO5BKhzk+lf5m5cb8PMl/gX5L5rTbWyezyjdpD1/3fyg331i4QkV3YvWF5rRXkXkqcB/bThP4A+HVIM4LMKjwHWizfeh7StAAeQ/pzJG//Ev9b8pTTr9/D2z8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0503441410780824870</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0503441410780824870</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0503151410780795771</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0503441410780824870</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_052433</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319F69A377A74BBE05305991E0A78A8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319E94840B017BEE05307991E0ADA76</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E607201723132613E0401F0A059919BB</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1fe27f9c-7781-4b22-859b-f91192d8f4bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_UserGet_CS_FUNC_NONCLG_FAU_Get_YOUTH_P2" searchProperties="true" id="02e094af-568d-44ec-b459-18519a882ecc"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6aa17aec-d10a-4704-bc5c-4fd038cf98fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="016f90af-b3ae-46d3-b507-c5aec521a0d5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="c84618c8-eed8-4a67-8275-22a09d85bcaf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="0c28393c-7d11-40f5-8c8e-4cd1dde6b99a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="1bafefa1-87f5-40e3-9884-86858efb9953"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="ed275655-ebab-4d1b-8c3d-7960bf76d8e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999BB81453A19E0401F0A0599264C:77955345"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0508201403082500660</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999AFA6445309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999AFA6445309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999AFA6445309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B093E9610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B21E20DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B093E9610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B21E20DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E607201723122613E0401F0A059919BB</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj0chVwKJChKFQ8uUXgSl7ZyXkXE24DaxQ+wA7dePHZoUKO30jISEvLO99toXL/uUoyR2wg7nkAnCqDbotfR/AE99cJBneK4bGZ7nIWPqzmyj0UT1ujf1bade17UB5zkMKBeIipbuWLZnWL5hN++sILSaod2sBX7wW9fuIeMSWrrULF3bJDHlYRG2pecZDRnihIcUJcBDgcNx52oYSs8QlZz09umWZREway+ESEPTxLUIMMQxrmGWmKfmns9pxMMxmVMk8gzeYka8pb/tXa/XtbVbY9ncdCzLMq3AlD4RJ/MTvf2j3AzRgM7Ydt1FlFGCUUxekSJ1BWLBIq0Tz1lGxCL5BNo2bUtBG7DBBrY9eqKb7wEKdt9E2iOZcWTwBbJLsBHMIAOKQZuMBi395Hsd3O69yxDlM5Yl/GD9Z5SAriBmKUQGLzMr2X0f8Ui52qeAwwHFcc7JCq7VmKQIA9duM5iRzZBwOXwR14r2axsuf6ScMsB/0pZTc5erpG4eqU6PzIGL/9Oz3X5tUe5RnEO72Wucn5uvP39fWjZbUM4zlxKHX9yyQaugsOu8JVW1+219OKzVbL1tYj/HnSdh/X1xUV/17PV46l8PbWt6dt/bTH6fuS/UGQ1n8HIZmCJ9eh7fDYfd4UP80OmRywvPGQWTxnP/2V+ma+Lf/7B+NS7dR3N+tlyxB3Q76fVHV8wMouH5/MWbjKI73l+juuM9JI89u3sGNwuevk5+5p0GmuW3z7Ft80VvQsXkL8Z+PN27fuKbz4N8kqX8/uK8iVvvOe3msG8sJWGcT58Ai3KpxmPQ0/qyX0h8LS/KQiJjVriGqdIoLoAKva12KWkJcylAJAplM7frftcOguDMCtxfgW9bnV+WZ9l9q2PVg8DxPafUoC2LA4pdRmdExVIqu52frwniJORAI8iMFcvxArj+BWIPCaQN6EgeDkY53DGp4ilaos3Sai7912X0mi4sV7g88nXtmokbepN1ZgKyPeG2nT3hHgEmKQGl7mq8uZxvLmQllmiVi9iurVCNQi71P1MSHDpes25ykqQxKJ5mwqI8hlq6SIu6mHz77xgI88JKOE5ZJlBsF6fv0+QOv5V1kD4RUQ5cpXQGspdw5CKyynw+z7u+m3cJ38kjog6ZLKrICN4y2f/0PitqSKpBqRLD3C65V1v+EOIIgPkFP/OwNFW8aEV2opeXq7wvpJq0y/4uUW1Zy1ervOhoQyllJuFNKZi2OQacS7l7uWPPQM0KwvzWbVOxPohc2ff55WJBxwIJSOT8acXyG0+NMXD11BjIY7P57jtmL6Ssm4CNOGbrxvJFohh/+WjBIVZ+0nwr/9Ysi97bdQRrJ47MU74vBKFztVL3yssns4GZhCVSCFm2C34M4FjwfWNV5IqLkNM0zQV8/kVTCtfSEcYsp2LQ0wvDruoWPMVLCuG70weYQtnfruoN//SqfrwajqX+JUivfMl/OxukGBcMunoRFFxa+ka+PGVwOt9R+TeCH4W+0+/4nld3rWBf6N1uVcC9TNofzB8tOzU9PA/tfwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj0chVwKJChKFQ8uUXgSl7ZyXkXE24DaxQ+wA7dePHZoUKO30jISEvLO99toXL/uUoyR2wg7nkAnCqDbotfR/AE99cJBneK4bGZ7nIWPqzmyj0UT1ujf1bade17UB5zkMKBeIipbuWLZnWL5hN++sILSaod2sBX7wW9fuIeMSWrrULF3bJDHlYRG2pecZDRnihIcUJcBDgcNx52oYSs8QlZz09umWZREway+ESEPTxLUIMMQxrmGWmKfmns9pxMMxmVMk8gzeYka8pb/tXa/XtbVbY9ncdCzLMq3AlD4RJ/MTvf2j3AzRgM7Ydt1FlFGCUUxekSJ1BWLBIq0Tz1lGxCL5BNo2bUtBG7DBBrY9eqKb7wEKdt9E2iOZcWTwBbJLsBHMIAOKQZuMBi395Hsd3O69yxDlM5Yl/GD9Z5SAriBmKUQGLzMr2X0f8Ui52qeAwwHFcc7JCq7VmKQIA9duM5iRzZBwOXwR14r2axsuf6ScMsB/0pZTc5erpG4eqU6PzIGL/9Oz3X5tUe5RnEO72Wucn5uvP39fWjZbUM4zlxKHX9yyQaugsOu8JVW1+219OKzVbL1tYj/HnSdh/X1xUV/17PV46l8PbWt6dt/bTH6fuS/UGQ1n8HIZmCJ9eh7fDYfd4UP80OmRywvPGQWTxnP/2V+ma+Lf/7B+NS7dR3N+tlyxB3Q76fVHV8wMouH5/MWbjKI73l+juuM9JI89u3sGNwuevk5+5p0GmuW3z7Ft80VvQsXkL8Z+PN27fuKbz4N8kqX8/uK8iVvvOe3msG8sJWGcT58Ai3KpxmPQ0/qyX0h8LS/KQiJjVriGqdIoLoAKva12KWkJcylAJAplM7frftcOguDMCtxfgW9bnV+WZ9l9q2PVg8DxPafUoC2LA4pdRmdExVIqu52frwniJORAI8iMFcvxArj+BWIPCaQN6EgeDkY53DGp4ilaos3Sai7912X0mi4sV7g88nXtmokbepN1ZgKyPeG2nT3hHgEmKQGl7mq8uZxvLmQllmiVi9iurVCNQi71P1MSHDpes25ykqQxKJ5mwqI8hlq6SIu6mHz77xgI88JKOE5ZJlBsF6fv0+QOv5V1kD4RUQ5cpXQGspdw5CKyynw+z7u+m3cJ38kjog6ZLKrICN4y2f/0PitqSKpBqRLD3C65V1v+EOIIgPkFP/OwNFW8aEV2opeXq7wvpJq0y/4uUW1Zy1ervOhoQyllJuFNKZi2OQacS7l7uWPPQM0KwvzWbVOxPohc2ff55WJBxwIJSOT8acXyG0+NMXD11BjIY7P57jtmL6Ssm4CNOGbrxvJFohh/+WjBIVZ+0nwr/9Ysi97bdQRrJ47MU74vBKFztVL3yssns4GZhCVSCFm2C34M4FjwfWNV5IqLkNM0zQV8/kVTCtfSEcYsp2LQ0wvDruoWPMVLCuG70weYQtnfruoN//SqfrwajqX+JUivfMl/OxukGBcMunoRFFxa+ka+PGVwOt9R+TeCH4W+0+/4nld3rWBf6N1uVcC9TNofzB8tOzU9PA/tfwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc6o6FH0/v4Khjx2EANrCVGcsVg+nn1e97Wlf7qQhaHogQRLQ9tffBAtVa3vbO+OMk83O2mt/ZCUnHKaJ7fc5x7kgjGrhoKv/4zrAenRc14iOXMdw4/aRAbF9bBxZ7WO3DQC2LE/XQs4LHFIuIBVd3baAa1gdAxxPLc+3jn0btDqW+6BrtzjnElq6tCxdW6UJ5X4VtqsXOfUZ5IT7FKaY+wL5k/7lhS89fVhz0nsna5ZVwLw3FyLzTRO1IoxwkqAWYql5Ym75nETcn5AZhaLI8WvMiHf1173L5bK1dFosn5m2ZVmm5ZnSJ+JkdqD3ftSbcRTSmK3XAaSMEgQT8gIVqUss5izS+smM5UTM0w+ggQksBW3gFTIQcOmBbr4FqNh9EWmLZM6hwecQ1GBjHOMcU4S1v8dhVz/4WgfXe6c5pDxmecp31t+jhGmJE5bhyOB1ZjW7ryPuKVfvBCM/pCgpOCnxlRqTDCLMtZscx2R1QbgcvohrVfu1FZc/Uk8ZRt9py4m5yVVSN/dUZ0BmmIv/07PNfq1RbmFS4B4Inszxyr25XbVf5lc3IZycJotzdleKs25FYdN5Tapp9+t6d1ib2Xrd9DJkcTBaLX6NJpc/nakdTPOjc+dhvLzIzuH83i2G5Xk0Mh8C9xC9XC+H4W32s384Oxulg7F37zzZESVBYZfjkUV/pJDjIKBsfs3ju8Gof3vJrMPnWThe2PQh9maL6W34Jxulp6CTLaaUz8blQ4deeaPheHH6mIP7Q7P/e5HgcwC9H4/XFyX4azS6y1kwQkcXPD3rvuW0mcO2sZaESfH4hJGol2o8woE2lP2C4nN5URYSGXHl6mdKo7jAVOg9tUtJi19IASKRL5u5Xg8D4HneqQ3ObGtw6jhnlmuBodW32p5nd9xOrUFrFjsUA0ZjomIplV3Pz+cEUepzTCOcGyUr0Bxz/RPEARRQC+lYHg5GOZ4yqeJzJxMAOMVzZ/lMikeWxh0Sg9TRtSsmrul13o8FzreUG9hbyj3GiGQEK3lX883lgHMhS7GAZSES0Cphi+JCXgC50mDfdo/bJidplmBF1ExZVCS4lc2zqjAmX//bBkS8shKOMpYLmIDq+H2Y3e63uhDSJyLKgauUTrFsJt5zE4E6n4/zbm/mXcP3i4ioUyarKnKC1ky2P70Ni5qSZlKaxBAHNfdmyzch9gCYn/Azd0vTxItKshG9vl3lhSHlpFf3dwFbi1ZRlkXV0SMllbmEN6ViAnOCUSH17nnK/mBqNhDml66bhvVO5Ma+za8QczoRUOBUzp9WLb/w1phgrt4aoTw3q68+ZLZCyroJvBL7bEEinySK8aevFuQj5SfNN/JvyfLorV17sDbiyDzlA0MQOlMrdbE8fzAbiElYIpWQ5Zvg+wD2Bd82NkVuuAg5TY+FwB9/0ZTEdXWIECuoCAd6ZdiU3YqneM6w/+b0DqaS9te7esU/vKt/X15MpACmUG98yX87G6QaF4R19SSouHT1lXx6yuB0tiHzrwTfK31/2O+4btuxvG2ld4KmgFuZ9N6Z31s2arp7Hnr/Ag==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxieR8NmExFjuiMKQUXFDfeXE1gUi7JJsemvP4XdOnafnrlzboQRWElW5pcLWV/9wIbvsR2AMYoTNwyqqvxa+5sXBZ4zuUMDiU2u0eR5tiGKsN3gWpZ1gC2LgzRfq6oYp0gNcGIEyWuNpRmuQYsNhl4yTIcnP/alybL7WnWNYkxME5UXulYtfC/AnZvb11oaB53QwC7uBIaPcCeBHR1o4w7R7Bh3TLW3H+8obw7jNydJog5FwRcTQeR58AWGPvWD+qTzw8Qd3bUDI0lj9OHTxK+1j715nr/k3EsY2xRL0zRFixTRMbFr/1V7q9w3I1MNrPB93TWCMHCh4blXowSlocQJzSrw7DB2E8f/hWmGYujSdAMVsAGZZvBXjfrp4IbuDy19Ahljo4Edg7kbWyALxSiAqLpaqK+1v/6sgu97l7ERYCuMffxl/d8goSBDXhghs4Hvkd3R/bnFb9L19gPBjhpAL8VuhiZlm0QGRLg6i5HlFmMXk+YzcfVW/mqB7x2G4H8pyQ/qGSeBTX2TGdm1EU7+n3o91+rdytrwUvRm1C+51D5ch4dTT3CiNWLX07Hht9kwfL1BeFZ+B/Uo9cf6a6M++upjk7Ucj1f9vTxL47NXrEfaYrLb9/yLinB2tlpcL5ZUIVGOttRuXwTAqENnNd0JfWErOofNQt/Z7pifzi+y4EwrgwMyjxpFR1KvvZjOjhIfSdP2UOjrOqK1ka0Nzx67DbShuldW8/rYkE/N4+qqWetdMh5tiyyV5WxgjmhlO664+inczA6tMbEmZ/xlVl+9/ozpOYYyrhG63IIs/295WpSNxHgsuuWksMjnmaA3TVW7dbnbBahrg1yVgK1K4yuYSPbp7JzcvpjTEpivekAGF20Bctneyev5fKTk5nrt7ddqrydpi2Y+ADu5Ql7ISrGW99shbWz20Y7t0XtdksztIjxww8gcnPKBAyfaUssnS/WiHZVislTozU1mF2R91Y4aM12uuMrmKInaQsnl/OZRVnJnst8sot1KzOFVmWug2QfMSuk62mDprxnILRx4VMYaON3kkqN112utUJZgVpHsyZrEtuz29hH0zejge86T8QExvjT768uh76X7q3LUukq/q5/7unrg5LkyBIvd6rBZn4xNL6vAwQQc7h5d3jW2YW7v27k83w1H4V51MjgBc0WS5oCkiwaa2h+CsC8BrQnc4to9Sq2wa/ZyasjiSl30+q3txT1vsdGnPYNpt5ndeNOanVuyEtT3o/RwdDRn25vWR7qZrcREvO5wVs9ahsvAIrLmW2WQjAprMNcrh5lcbOGgbtpDyruKvVgThiC+XhxPsxfJpjXFl4NrWRtpO216guVp3CKyPCu64PoynJ9iuiUhjqV2l2yUVICtSQD0j6ujNNekdplUU83nO00yQE9JUnA9ssmIXZ+Hg8yDOw6ExWgzPZ4+CmPKuSJR+VwhbaVU2jIwyyIM9JXSO4KVZNuxZCs9aQ5lMN+po3xH8rUaEOWveezd8mgrElC4PWiJgwq3osVkmujNJrgE0iroiY52LjZmy6eFM1LG+iRq5hqeWMF+E540341XcaqvRqPJuDgs0/7pSGaVReujjNtXlOwUAXcyWjonOZSNWbTbJVE9gDFM1MjX1OI63eNj2z349LDOM9KMlqHArvxDvuobyn4U2zozGiyCGSeIFZxal4FfP7bzTX2ptyLB7AaWfLlQ+3hNhyDsiQv+bBYse3JW+biVW0NwOhjspPBE6SIqo/0S5ov5aKP7db7CZ+OxT1+XVHMSTXO9nzeV+bzOmdJysMRR7O7Stl3E08Bkd0bSyvb0uuVG3klk09OyGXFr2yfFmmVmJGizyry5hXvfFiI4pBZUBhTBGqv9y+FqXCN/Ct8H6Nfp8BC+zw/qebJ8Gj130qGTbkUwuS/LA0iVqz1yKhjJ7wlMKXHNhnVT7UQlC8IJCpLaW7mrJC+dlFAc1+yQI+N9rbRogRApgeUYlm0xnEI3aaZHA5oXRUaUpDvLeUfxBWI3DCy39FXyuPdT6vcAod/BKDBR3MjCFDoI135jscxXVQ0W5PgNA4yWIeGJnMAxIujyNM+32rzMdMUW1+UZWhHpNs3LSq06CZNpMI2BlaD4M0dsfuKICwTdyEUlkSxPU0yOU5yQlJyNLE085iUzXgKUEqoZl2yvwzbbPIVdP/JQCZjyQzP10EvkRLcEUfj9yTYMiG/ShbL8W9W7t5P+lyF+fXfPBtEx3VIBl/FIiFQUfUN4m/dgfh208Bz03TxITbc80Elqk9iF70g+v/rZMWWrPNqFRHWH/ND8Kvhklfoa0MORmbnw0fOP6wBhk4RvvN1LcjZezi9plqW3Iggll4qJeYqhaIHSEUwJIboswxMKqIcJ6o+46AP1F88P+Wd8aeIEekK+Z5+0TPW2/IOLiI5weRFRScsXf3rL+eSS5C1BRfKdrOuR+0qJ+LdXGtiBpR4Rz8gjD2PzZ7m+sfXkh8RZDjA3sMtVyTwvv2gKGBKzLhliYfxs/DsD3zn/LHwk+YElId10SBP06zfVcjq91gwIwzRIVLl2EzxPzBvO5BKhzk+lf5m5cb8PMl/gX5L5rTbWyezyjdpD1/3fyg331i4QkV3YvWF5rRXkXkqcB/bThP4A+HVIM4LMKjwHWizfeh7StAAeQ/pzJG//Ev9b8pTTr9/D2z8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0508201403082500660</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0508201403082500660</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0508171403082497883</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0508201403082500660</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_052433</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B093EA610AE0401F0A05992642</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B21E21DB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E607201723132613E0401F0A059919BB</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1bafefa1-87f5-40e3-9884-86858efb9953</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_CS_FUNC_ADULT_SAU_Get_YOUTH_P2" searchProperties="true" id="2537f18c-1abc-465b-aa22-db08084629ad"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="27b65aad-d043-4a41-b509-298b2e9e41e6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="14c33b1f-c943-43d8-b227-cf19a9dc3630"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="452e0dc3-26d0-4a32-9a30-ef53b4d788c9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="b8ff424d-cd78-44c6-a1e6-12467b98baf5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth SAU" id="0d3af660-c55f-48d5-8404-62a65f864d85"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth SAU" id="d5157fbf-a145-4ada-a671-08c2666fc454"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="56491c9a-a157-45c9-896c-631d06377629"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="166713f4-1cd5-4024-988b-8d4d92bc504e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"0319EEC0EE7A21B3E05307991E0A8A44:C19E40DA"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0505251410780925572</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319E94688A752AFE05305991E0A458C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319E94688A752AFE05305991E0A458C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319E94688A752AFE05305991E0A458C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319E7EAAA3219B9E05307991E0A32CF</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319E7EBE46D5A2BE05305991E0A3AB1</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319E7EBE49B5A2BE05305991E0A3AB1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319E7EAAA3219B9E05307991E0A32CF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319E7EBE46D5A2BE05305991E0A3AB1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319E7EBE49B5A2BE05305991E0A3AB1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZeQrYFegihCy601gUoEhM3nZEnID2tiSsWQg+fqVDHiAkCyzTy61W6dPX3SkK4HTxAm7QkAuKWe1TZowEZbWtlHkLORYUBEynIIIJQlH3cF96NStEO+3GLXopm383QCCcdCamtgjsel5btMMfN8zvQZ2G04wbbqWrVyFKCBiQmIm24Zj2Z5pBabtj207dN3Q9+qe4z8btQnkQmErl7pl7EhtRNtYSJmFCK3X6/rarfN8jhzLstGPwf2ILCDFRudqm1EZKO/s/Ek9BgJJQuqEp+gKHflcxSIc0TnDsshhFyv+KJaFrAApn1jQ+Rej2gtxxGa8XPYw44wSnNA3rOszALngca2bzHlO5SL9MAnb0sAmbIhJbI99MdAxtQuBjhjmAptige0d1iPMIAdGoPb9MWobXy7rWrl1nGMmZjxPxfHy9/gAW0HCM4hNsU9rR+1ywDOV6lwBCSNGkkLQFQz1sGaYgNh1E8jlULWHHGZ0c0+FGtCN0OzQIb2T5bYaN3QOQv6fBh00ZwsywUkBnUFrMEB/JgnYlH+T8bAP9Hrmrnu+TdolgUPn0lC1drs8GcpqiLY7yDpeX0v7zl+NU8t+ekEPm++T7swZ3E0Hi7+ip/uvrJW72Y8fRfI8CwLyNr0L5sPnIpCj8fOqJx0rjZKfzst4EE0enppLp9GA6UuEpoP+Q/HSn4zipZst/pr07u5bic2veXYztN/I6HqN7aeMt6zbyXpmPSZk+XXSRMOf8S1+Gwcbv9/YfO0N/3h8Jg/x5qkIvNuoXaVzwP/Ytj/zo2L6DxC5X+oxiG5qt6pLWH4uZtpCY3NWuoaZFh8hgUmjo3dp7QgLJXc0DlUPt2vLtYN+s9/tdl3HDq6DvuW7VjMI7L6lLL3bvchsWZxQ7HE2ozqWltzt2HxOkKShABZDbq54oZROGJ8g3mCJaxF7VIeAMwFjruR5sZwygX2Ywzq33WI1ZXLJX+USG7Uhl9/Yt7w7k5Afa7J3pMmPQGhGQQu3nmuhBltIVYslXhUysesrXGdQKGnPtcqGjtfykaBploBmilIeFwnUs0VWVgaJ7dcxMRGllQqS8VzipDwQ6MP0Tv/tK6F8YqodhE7pGlQ34cwd4+3z+Tjv5mHee/huEVN9vlRZZU7Jlsnxr1/TosekGpUqMSLsPfdqy29CnAFAn/BDp6Wp4sUrehB9f5mra0EJSWff3yWuL+vFalWUHW1alotyBY+UbtpoBKRQOvc65i/AUAWBLrpUKtYnkSv7Mb9CLthIYgmpmr9aubzgFTECoV8RkTo4m0ufKEchVd0kbOQ5Wy9RLyDN+NNHEgmJ9lPmB/VZ8zz+1a4zWAdxVJ7qESEpm+uVvlBeP5gNwhUsVVLI80PwcwDngh8bqyJXXKSapmkh4eM/Na1xbQMTwgsmoxujNBzqbslTvmYQ/nJ6B1NKe/XWo//92DNpOQIE1AtR0BJfX9mhnn82P9DuXdB38h14jVar2/Sd7m0p3/5Wvj2/1auKcsSu88783nJQp9MZ7/wL</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZeQrYFegihCy601gUoEhM3nZEnID2tiSsWQg+fqVDHiAkCyzTy61W6dPX3SkK4HTxAm7QkAuKWe1TZowEZbWtlHkLORYUBEynIIIJQlH3cF96NStEO+3GLXopm383QCCcdCamtgjsel5btMMfN8zvQZ2G04wbbqWrVyFKCBiQmIm24Zj2Z5pBabtj207dN3Q9+qe4z8btQnkQmErl7pl7EhtRNtYSJmFCK3X6/rarfN8jhzLstGPwf2ILCDFRudqm1EZKO/s/Ek9BgJJQuqEp+gKHflcxSIc0TnDsshhFyv+KJaFrAApn1jQ+Rej2gtxxGa8XPYw44wSnNA3rOszALngca2bzHlO5SL9MAnb0sAmbIhJbI99MdAxtQuBjhjmAptige0d1iPMIAdGoPb9MWobXy7rWrl1nGMmZjxPxfHy9/gAW0HCM4hNsU9rR+1ywDOV6lwBCSNGkkLQFQz1sGaYgNh1E8jlULWHHGZ0c0+FGtCN0OzQIb2T5bYaN3QOQv6fBh00ZwsywUkBnUFrMEB/JgnYlH+T8bAP9Hrmrnu+TdolgUPn0lC1drs8GcpqiLY7yDpeX0v7zl+NU8t+ekEPm++T7swZ3E0Hi7+ip/uvrJW72Y8fRfI8CwLyNr0L5sPnIpCj8fOqJx0rjZKfzst4EE0enppLp9GA6UuEpoP+Q/HSn4zipZst/pr07u5bic2veXYztN/I6HqN7aeMt6zbyXpmPSZk+XXSRMOf8S1+Gwcbv9/YfO0N/3h8Jg/x5qkIvNuoXaVzwP/Ytj/zo2L6DxC5X+oxiG5qt6pLWH4uZtpCY3NWuoaZFh8hgUmjo3dp7QgLJXc0DlUPt2vLtYN+s9/tdl3HDq6DvuW7VjMI7L6lLL3bvchsWZxQ7HE2ozqWltzt2HxOkKShABZDbq54oZROGJ8g3mCJaxF7VIeAMwFjruR5sZwygX2Ywzq33WI1ZXLJX+USG7Uhl9/Yt7w7k5Afa7J3pMmPQGhGQQu3nmuhBltIVYslXhUysesrXGdQKGnPtcqGjtfykaBploBmilIeFwnUs0VWVgaJ7dcxMRGllQqS8VzipDwQ6MP0Tv/tK6F8YqodhE7pGlQ34cwd4+3z+Tjv5mHee/huEVN9vlRZZU7Jlsnxr1/TosekGpUqMSLsPfdqy29CnAFAn/BDp6Wp4sUrehB9f5mra0EJSWff3yWuL+vFalWUHW1alotyBY+UbtpoBKRQOvc65i/AUAWBLrpUKtYnkSv7Mb9CLthIYgmpmr9aubzgFTECoV8RkTo4m0ufKEchVd0kbOQ5Wy9RLyDN+NNHEgmJ9lPmB/VZ8zz+1a4zWAdxVJ7qESEpm+uVvlBeP5gNwhUsVVLI80PwcwDngh8bqyJXXKSapmkh4eM/Na1xbQMTwgsmoxujNBzqbslTvmYQ/nJ6B1NKe/XWo//92DNpOQIE1AtR0BJfX9mhnn82P9DuXdB38h14jVar2/Sd7m0p3/5Wvj2/1auKcsSu88783nJQp9MZ7/wL</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn1kjO9cPIEZbmndkISGJOX05YyQN6DWlowlE5Ovr2TABUJy6HnyaHtr7bUvWtIVR3Fk+13OIRWE0UoeR5T7hbWtZSn1GeKE+xTFwH2B/Un3duTbNdNH+y1aJRi0tX8bbggtG3k6ajQc3bXNuo7QbK47DavumJbnmXVbunKeQUC5QFS0Ndu0XN1s6Zb3aFm+4/pWs9ayWj+0yjOkXGJLl5qp7UjlvK0thUh8w3h5eam9ODWWLgzbNC1jejua4CXESOtcbTMqAqWdnT+uhYAhinANs9i4Mo58rkLuT8iCIpGlsIsVvhfLNMyWIX1CThaftHIvhAGds2LZR5RRglFEXpGqzy2IJQsr3WjBUiKW8btJWKYC1iHHOrZc+kkzjqldCHTEMOVI50tk7bAeYA4pUAyVp4egrX26rGvF1scUUT5nacyPl3/HB+gaIpZAqPN9WjtqlwOeqVTnCrAfUBxlnKzhTg1rgjDwXTcBXw5VGacwJ/mIcDmgOVfsjEN6J8ttNQZkAVz8nwYdNGcL8oyiDDrzHm46vefhTRaQuw2w9Dpfu6h/U//81C4IHDoXhrK12+XJUJZDtN3xayOa/aGTRSwd/Rx8u3en0Q1Yq/vP07GRBzT/6syrY2PWrdtiXO0tqw5/ilmLeqv4ezVNveboPn5d/czdsfcMr/1+BPlwkXy9gUW2DO++TBubjIzN5/THt/yfeD1rJvdZNfruDbqkCutpMhtV40WfDdHD/NfrF4O/eGtk3dZHz+GX2dN1c9YPpu6kOf2WT197QbtM54D/sW1/5ifZ7CdgsV+qMQgGlWvZJSQ+FjNlIaE+L1z9RIkPF0CF1lG7lHb4mZQ7Evqyh9u16VitYWPYG7r1gde1e0PTc0yv1bKGZtfp9qy9yGxZnFDsMzonKpaS3O3YfEwQxz4HGkKqr1kmlY5rHyAOkECVgD7IQ8Aoh0cm5dmaCc+0wnDFnNeNZcPSTRqtGXJdT6vcMXFP79PuXEB6LMrukSg/ACYJAaXcarC5nGwuZDFWaJ2JyKqtUY1CJrU9VTLr227TMziJkwgUVSNmYRZBLVkmRWkMvv3aOsK8sBKOE5YKFBUnwng3v9N/+1JIn5AoB65S6oFsJ5y5ZMx9Pu/n3TjMew/fzUKiDpisq0gJ3jI5/vVnXNSclLNSJoZ5ORfllr+EOANgfMDPOC1NGS9ck4Po+9tc3gtSSTr7/q5QbVXL1uus6GjDNB0jlfCGFE7LmADOpNBtHtkvoEYJYVx0q5SsTyKX9mN+mVjSiUACYjl/lWJ5wTNiAlw9IwJ5cvJL3yhHIWXdBOTinK0fySeQYvzhKwn7WPlJ81h+Xlga/mnXGayDODJP+YoQhC7USt0om3dmAzMJS6QWsvQQ/BzAueDHxrLIJRchp2mWCXj/T0WJXFtDGLOMimCgFYZD4S14ik0C/h+nNzCFtpePPfLfrz2dFCOAQT4ROSnw1Z3tq/mniwPx3gV9o98tt95sdhue3b0+1G/Xa/bLohyx67wxv7Uc1Ol0xju/AQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGfnKxRWoIpBkmCEkARLYvGwJuQElRjKWDGS+fiQDDpDLMvvkUrt1+vRFR7oQeB45QUMISCTlrLCeR0wEmbVmpAkLOBZUBAzPQQSSBP3GbSdwilaAd1uMQrtVM/6tlEmlWrJ8c0JcYnqT0DWx7fqmHVYcy6paYwd7ylWIFNpMSMxkzXAs2zOtqmn7A9sOXD+wnGLJLT8bhSdIhMJWLkXL2JJai5oxkzIOEFqtVsWVW+TJFClwG41uO30ygzk26hebjLJASX3rT4ohEIgiUiR8ji7Qgc9FKII+nTIs0wS2scKvYlnIqiLlEwo6PTPyvRC22YRnyyZmnFGCI/ob6/rcgpzxsNCIpjyhcjb/Mgnb0sAmrIlJbI+dGeiQ2olABwwTgU0xw/YWqwcTSIARKDz22jXj7LSuZVsHCWZiwpO5OFz+HR9gS4h4DKEpdmltqZ0O+Eml6hdAgjYjUSroErp6WGNMQGy7CeR0qMJ9AhO67lChBnQtNDu0T+9oualGi05ByP/ToL3mbECecJRC3R3diCRcrsPevPfww/31iFo3z7zjVp5vaxmBfefMkLd2szwaynyINjvuq0K+8Kd04Nl++o94bQw6s9YLLpNf9mDwc9RfdsPX1rLpWFHs+/L6vMx7nPviZdhiFqLy4WFR6g4r5yXOy69yRMSPuD8ZPg/OnSa8OMOVTDljr6PRA+p6DhrH3cVNKbwrEwHdn49P9pQ3Z4ItfM7sTujRUakxWgzHj6SbLBepldy0xuub+9nTz35ZDq9qeTp7/A9tuzPfT8cvQORuqceg3Spcqy5h+b2YaQsNzUnmGsRafIQEJo263qW1I0iV3NEwUD3crC3Xrl6Vry6vvOql33Auryzftfxq1b6yGm7j0t6JzIbFEcUmZxOqY2nJ3YzN9wTJPBDAQkjMJU+V0gnjG8QWlrjQZj11CDgTMOBKnm1sjRdWuubA8W91xAXmcWQRR2lyl8s7dpc0JhKSQ032DjS5B4TGFLRw67kWarCFVLVY4GUqI7u4xEUGqZL2RKts4HgVHwk6jyPQTNGch2kExXgWZ5VBYvN1TExEZqWCxDyROMoOBPoyveN/u0oon5BqB6FTugTVTfhwx3iBv8vn67zL+3nv4BtpSPX5UmWVCSUbJoe/3qdFj0k+KnliRORjkW/5S4hPANA3/NBxafJ44ZLuRd9d5upaUEJS3/V3gYuLYrpcpllHy5blokTBI6WbNuoDSZXOvQ34KzCUQ6CTLpWc9VHk3H7IL5Uz1pdYwlzNXyFbnvCK6IPQr4i2OjjrU58oByFV3SSs5We2ZqReQJrxt48kEhDtp8z36rPiSfjerk+w9uKoPNUjQlI21St9obx9MRuEK1iqpJAn++CfAXwW/NCYFznnItU0jVMJX/8paI2rGZgQnjLZbhmZYV93M57yLYbg3ekDTCbt+VuP/vdjz6TZCBBQL0RBM3x9ZQd6/tl0T7u3QT/Id9UrVSqNsu80rvfl2/MrzbwoB+zqH8wfLXt1Op7x+h8=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0505251410780925572</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0505251410780925572</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0504151410780855760</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0504461410780886426</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0505251410780925572</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319E7EAAA3319B9E05307991E0A32CF</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319E7EBE46E5A2BE05305991E0A3AB1</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319E7EBE49C5A2BE05305991E0A3AB1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56491c9a-a157-45c9-896c-631d06377629</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_CS_FUNC_ADULT_BAU_Get_YOUTH_P2" searchProperties="true" id="55286ce4-495b-4543-b78b-c9680d7e9b6b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="711ab3cd-0aa7-4cd9-b8fa-da34702fc9ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4ecbdb29-38e1-4d98-a264-f4f712307df4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="9f0caf45-cda3-402d-8871-18baf67bec1e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="fee05a28-984e-433d-9e53-c046fe7adadc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth SAU" id="78d5307c-052e-4fe7-9955-c2a248563871"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth SAU" id="9c110419-7579-4d19-a335-18fddc2c7041"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="ecb894c9-ae61-472f-a249-99614f8686d0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="e7746473-45c9-4373-9a4e-881a4f110148"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"031A019C744E14DCE05307991F0A7DEB:3081B1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_050761410781026993</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>031A015AD2576BD5E05305991F0ABA1A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:031A015AD2576BD5E05305991F0ABA1A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:031A015AD2576BD5E05305991F0ABA1A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>031A020687FF6BE9E05305991F0AC48A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>031A019C743514DCE05307991F0A7DEB</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319D52F6B261E58E05307991F0A3586</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:031A020687FF6BE9E05305991F0AC48A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:031A019C743514DCE05307991F0A7DEB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319D52F6B261E58E05307991F0A3586</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPvYMf4AQ/AEZkwcWickaUOSm/TljpAXI2JLxpIN5NdXMuACIbn0Pnm0Xp09+6EjnXOUxLbrcQ6ZIIzWlklMuVtau1qeUZchTrhLUQLcFdgdeTdD166bLtpu0WqB39X+naBOewzthj5xWk29aTca+thu2LqDO1bohHhih4505TyHgHKBqOhqtmk1dbOjW86DZbkNx21a9Xb77JdWe4KMS2zpUje1Dakl72pTIVLXMBaLRX3RqLMsMmzTtIznm+EITyFBWu98nVEZKOtt/HE9BAxxjOuYJca5sedzHnJ3RCKKRJ7BJlb4USzTMDuG9Ak5ib5o1V4IAzph5fICUUYJRjF5Q6o+NyCmLKx5ccQyIqbJh0lYpgLWYYl1bDXpF83Yp3Yi0B7DjCOdT5G1wbqHCWRAMdQe74Ou9uW0rpVbHzJE+YRlCd9f/h0foAXELIVQ59u0NtROBzxSqd45YDegOM45KeBWDWuKMPBNNwGfDlX7kcGELIeEywFdcsXO2KV3sFxXwycRcPF/GrTTnDXIE4pz6AV+lCa+M71LOncpdq4cOhj4EX+9eXrslgR2nUtD1dr18mAoqyFa7yBhK38svLufIZ38HBpfFz+HT6bfFOath2fX46vmfMVfYHj2I75GXnHDklb0NjTzS4e/PPfN0eL2itlOFMzCl+94+PVmOJg7z+HjdXPV8dr+c7CYddLXrJg+Ftfj+aXVenz9Nnv4Pm5bWTDw+5G3sK+iFsLz21+QN6x+sELD1a/ZGJGO/dV+mr6Af1cU/1x3vt3mm3QP+O/btmd+lI9ngMV2qcYg8GsD2SUkPhczZSGhPild3VSJDxdAhdZTu5R2uLmUOxK6sofrtdmwPNM2W2ftwaDVv+xcmk7DdDoda2B6F80zbysyaxYHFC8YnRAVS0nuemw+J4gTlwMNIdMLlkul49oniD4SqBbQe3kIGOXwwKQ8zyLC2RuNV8RaWoklz2FjPrFahZTvWybu6F3mTQRk+5rc3NPke8AkJaCEW801l4PNhazFHBW5iK16geoUcintmVJZ126eOQYnSRqDYmokLMxjqKfTtKyMwddfW0eYl1bCccoygeLyQBgfpnf4b1sJ6RMS5cBVSn2Q3YQjd0xjm8/Hebd3897Ce3lI1PmSZRUZwWsm+7/+TIsak2pUqsQwt7bcqy1/CXEEwPiEn3FYmipeWJCd6NvLXF4LUkh62/7OUX1ez4siLzvaNs2GkUl4Q+qmZYwA51LnVg/sFahRQRgnXSoV64PIlX2fXy6mdCSQgETOX61cnvCKGAFXr4hAHpzlqU+UvZCybgKW4pjtIpYvIMX400cSdrHyk+Yf8rNgWfinXUewduLIPOUjQhAaqZW6UFYfzAZmEpZIKWTZLvgxgGPB941VkSsuQk7TOBfw8Z+a0riuhjBmORWBr5WGXd0teYpVCu4fp3cwpbRXbz3y3489nZQjgEG+EDkp8dWV7ar5p9GOdm+CvpNvy/F822m3+r6zK999z6rke59d7535vWWnTocz3vsN</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPvYMf4AQ/AEZkwcWickaUOSm/TljpAXI2JLxpIN5NdXMuACIbn0Pnm0Xp09+6EjnXOUxLbrcQ6ZIIzWlklMuVtau1qeUZchTrhLUQLcFdgdeTdD166bLtpu0WqB39X+naBOewzthj5xWk29aTca+thu2LqDO1bohHhih4505TyHgHKBqOhqtmk1dbOjW86DZbkNx21a9Xb77JdWe4KMS2zpUje1Dakl72pTIVLXMBaLRX3RqLMsMmzTtIznm+EITyFBWu98nVEZKOtt/HE9BAxxjOuYJca5sedzHnJ3RCKKRJ7BJlb4USzTMDuG9Ak5ib5o1V4IAzph5fICUUYJRjF5Q6o+NyCmLKx5ccQyIqbJh0lYpgLWYYl1bDXpF83Yp3Yi0B7DjCOdT5G1wbqHCWRAMdQe74Ou9uW0rpVbHzJE+YRlCd9f/h0foAXELIVQ59u0NtROBzxSqd45YDegOM45KeBWDWuKMPBNNwGfDlX7kcGELIeEywFdcsXO2KV3sFxXwycRcPF/GrTTnDXIE4pz6AV+lCa+M71LOncpdq4cOhj4EX+9eXrslgR2nUtD1dr18mAoqyFa7yBhK38svLufIZ38HBpfFz+HT6bfFOath2fX46vmfMVfYHj2I75GXnHDklb0NjTzS4e/PPfN0eL2itlOFMzCl+94+PVmOJg7z+HjdXPV8dr+c7CYddLXrJg+Ftfj+aXVenz9Nnv4Pm5bWTDw+5G3sK+iFsLz21+QN6x+sELD1a/ZGJGO/dV+mr6Af1cU/1x3vt3mm3QP+O/btmd+lI9ngMV2qcYg8GsD2SUkPhczZSGhPild3VSJDxdAhdZTu5R2uLmUOxK6sofrtdmwPNM2W2ftwaDVv+xcmk7DdDoda2B6F80zbysyaxYHFC8YnRAVS0nuemw+J4gTlwMNIdMLlkul49oniD4SqBbQe3kIGOXwwKQ8zyLC2RuNV8RaWoklz2FjPrFahZTvWybu6F3mTQRk+5rc3NPke8AkJaCEW801l4PNhazFHBW5iK16geoUcintmVJZ126eOQYnSRqDYmokLMxjqKfTtKyMwddfW0eYl1bCccoygeLyQBgfpnf4b1sJ6RMS5cBVSn2Q3YQjd0xjm8/Hebd3897Ce3lI1PmSZRUZwWsm+7/+TIsak2pUqsQwt7bcqy1/CXEEwPiEn3FYmipeWJCd6NvLXF4LUkh62/7OUX1ez4siLzvaNs2GkUl4Q+qmZYwA51LnVg/sFahRQRgnXSoV64PIlX2fXy6mdCSQgETOX61cnvCKGAFXr4hAHpzlqU+UvZCybgKW4pjtIpYvIMX400cSdrHyk+Yf8rNgWfinXUewduLIPOUjQhAaqZW6UFYfzAZmEpZIKWTZLvgxgGPB941VkSsuQk7TOBfw8Z+a0riuhjBmORWBr5WGXd0teYpVCu4fp3cwpbRXbz3y3489nZQjgEG+EDkp8dWV7ar5p9GOdm+CvpNvy/F822m3+r6zK999z6rke59d7535vWWnTocz3vsN</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn08gwGFKkx1hhbb4+5tt9juti9n0rCEnEJAErz01+8Elaq1Pe7zxGSx8q1vXfIlJxynScv1OIdC0Iw15mnCuFtZe1pZMDfDnHKX4RS4K4gbeNdXbqtpuHi9RWsM/Z72D+k6oWXZHb11PLZ0q4stvftq2LrZgtdO1wbLaBPpynkJQ8YFZqKntQzT0g1HN+2RabrtY9dsNzvt7ovWeISCS2zp0jS0Fak572mxELmL0Gw2a87azayIUMswTPR0fRWQGFKs9U+WGVWBiv7KnzRDIJAkpEmyFJ2gLZ+TkLsBjRgWZQGrWOFXsQxkOEj6hJxGR1q9F8IhG2fV8gyzjFGCE/qOVX2uQcRZ2PCSKCuoiNMvkzANBazDnOjEtNiRhrapHQi0xbDgWOcxNldY9zCGAhiBxsP9sKcdHda1auuowIyPsyLl28s/4wNsCkmWQ6jzdVoraocD7qlU/wSIO2QkKTmdwo0a1hwT4KtuAjkcqvGzgDGdX1EuB3TOFTu0SW9nuayGTyPg4v80aKM5S5BHnJTQ/9GOcz7qwMzmKQpmTyO7+3w6eEj95KFXEdh0rgx1a5fLnaGsh2i5g/7dRnfYgMAfPr84bBBdzlgyd8rI5+K5s4icaMRFK3Cuzu/ni0v+gC/IcXr3Pvg1b787WfjXLR9YYtw1Zr4Z57lzm8fe4LgUkxcSXl8MF/jHGfy6NiYsmAfeJXXi+P7qZTzJotGPB1NMHh1EOSqvR8Xs/Obp4o09DyY0CuOCvAZ30VPeveIPz+djb/B0cTrr1els8N+2rc98UL7+C0Ssl2oMhn7jXHYJi+/FTFloqI8rVzdX4sMFMKH11S6lHW4p5Y6Gruzhcm20Tc8wnbOO1bZNyz8bGHbb6DiOeW54HX9wuhaZJYsdimcZG1MVS0nucmy+J0hSlwMLodCnWSmVjmvfIPpY4MaQ3ctDkDEOo0zKczE9FpQv2MTqOJYZ2vhtnuZdlmiNm0zcstvCGwsotiXZ2pLkeyA0p6B0W401l3PNhSzFBE9LkZjNKW4yKKWyF0pk3ZbVtRGnaZ6AIorSLCwTaOZxXhUG8eW3pWPCKyvlJM8KgZPqPKAvs9v9ty6E9AmpcuAqpVOQzYQ9V4yxzufrvDubea/hvTKk6njJqoqCkiWT7V8fw6KmpJ6UOjHCzTX3essfQuwBQN/wQ7ulqeOFU7oRfX2Xy1tB6kh/3d8Jbk6a5XRaVh3tGEYbFRIeSdk0UQCklDK3GGVvwFANgQ66U2rWO5Fr+za/UsQsEFhAKuevUS0PeEQEwNUjYijPzfzQF8pWSFk3AXOxz3aWyAeQYvztG4m4RPlJ80/5mWVF+NGuPVgbcWSe8g0hKIvUSt0niy9mg2QSlkolzIpN8H0A+4JvG+si11yEnKbXUsDXfxpK4noaJiQrmRj6WmXYlN2Kp1jk4H44fYKplL1+6tH/fuvptBoBAvKByGmFr25sV80/izakexX0s3rbnt+yO8envl2pt71U71PP9OqibLHrfzJ/tmzUaXfG+78B</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDv24gwEUX5jqDJa6S9dWq9122y93YoiaLiSYBKv++pugUrW2172fmBxOnvOclzzJpYBJ7Hi+EJhLwmhpmcRUeLm1ZWScegwKIjwKEyw8ibyRf9vznLLlwd0WoxQGLeMfy7acWtWpmmg8bphVqzYxmxBFZsUZY9etunZ1PFGuQmQ4pEJCKluGY9lV02qatvtg216l5lWa5Ua9/mKUHjEXClu5lC1jS2opWsZMytQD4O3trfxWKTM+BY5l2eD3bW+EZjiBRvtyk1EeiLe3/qgcYYTjGJURS8AlOPC5jIQ3IlMKZcbxNlb0WSwLWE2gfCJBphdGsRdHIZ2wfHkFKaMEwZisoa7PLZYzFpX8eMo4kbPk0yRsSwObeIlMZFfphQEOqZ0JdMCQC2iKGbS3WEM8wRxThEu/hmHLuDiva/nWBw6pmDCeiMPl3/HBdIFjluLIFLu0ttTOBzxRqfYlRl5IUZwJssB3elhTiLDYdhOj86FKA44nZNkjQg3oUmh2YJ/e0XJTjYBMsZD/p0F7zdmAPMI4w23/fpFKN4hJLbmtpakVvTZRIvqr2bzRygnsO+eGorWb5dFQFkO02TF+GY1fMb/zn57WAf6Guvat4yzv+5Jz9J33ew2nuorht+7L4Lkezl9/dNfJaNh0/FlMeveLUf8lkzcAfO/cre/vg/sfb48Pd/ObQbc7F73oN4Mvnc5M3Ejwgh6763BIB+j5Zz/8hVarkFw9reUzSB17HcjrwSq46gfPM9Lt/ngeMPZ8O7zJmLjuh7a/GDz1Zsl1q0hnj/+hbXfmR5lKCsndUo9BGJS6qktQfi1m2kIic5K7eqkWHyExlUZb79La4WVK7kjkqR5u1lbFbgau0611nJp97TauLbdi1ZtNu2v5FbdR24nMhsURxStGJ0TH0pK7GZuvCaLEE5hGmJsLlimlE8YXiAGUsBTSoToEjAr8wJQ8269jljTIqtGM6n/cNPljVXAy5YlRumOyT/vcn0jMDyW5eiDJQ4xISrDWbT3WQs21kKoUc7jIZGyXF7BMcaaUnWuR9ZxqwwWCJGmMNVGQsCiLcTmdpXlhgNh8HRMikVuJQCnjEsb5eQCfZnf8b1cI5RMR7SB0Sh2smolPXDHOLp/P867v572D97OI6OOlqio5QRsmh7/eh0VPSTEpRWJI2DvuxZa/hDgBAL7gB45LU8SLFmQv+u4uV7eC0pH2rr9zWJ6Xs8Uiyztat6wK4AoeKNm0wQijTMnc6oH9wRQUEOCsO6VgfRS5sB/yy+SMjiSUOFHzV8qXZzwiRljoR0Sozs3y3BfKQUhVN4mX8pTtKlYPIM34yzcS8pD2U+aB+rwxHr236wTWXhyVp3pDSEKneqXvk9Uns4GYgiVKCRnfBz8FcCr4obEocsFFqmkaZxJ//qekJa5lQIRYRmUYGLlhX3ZznnKVYu/d6QNMruzFU4/891vPJPkIIKweiILk+PrG9vT80+medG+DHqm3b9muHzhuvdYJ3Fy93Y16d3zbL4pywK79wfzRslen4xlv/ws=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_050761410781026993</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_050761410781026993</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_050621410780962859</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0506381410780998978</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_050761410781026993</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>031A020688006BE9E05305991F0AC48A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>031A019C743614DCE05307991F0A7DEB</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319D52F6B271E58E05307991F0A3586</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecb894c9-ae61-472f-a249-99614f8686d0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_CS_FUNC_YOUTH_SAU_Get_YOUTH_P2" searchProperties="true" id="b84c42ac-dbb6-41bb-a56e-f99656cbf7bf"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ab11d585-40cb-4296-acf2-a08b9e52abe5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="52a04a36-7c38-47bd-b91a-3e2f050f7b06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth SAU" id="d97a2ad4-a230-4712-b3a4-1dcd640f8fba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth SAU" id="e9560c3d-949e-43d4-81f5-25d48e7e5c9b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth BAU" id="714ffd73-907f-4e08-a8ea-7db87a5806aa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth BAU" id="a0c77808-98ff-47f1-ae56-4d76f7632367"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="afdda972-24e0-4276-b0d1-143c8ca932f6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH BAU" id="8e0054c3-19c7-48c7-8b1a-420de7dd2907"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"031A1265AEFB3CD5E05307991E0A9570:2418B8FF"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0508351410781115432</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>031A0D7629D92102E05305991E0A8168</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:031A0D7629D92102E05305991E0A8168</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:031A0D7629D92102E05305991E0A8168</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>031A0270148E0D69E05305991E0A6126</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319EEC0C65221B7E05307991E0AA268</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319F63ABC0C26BAE05307991E0A06DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:031A0270148E0D69E05305991E0A6126</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319EEC0C65221B7E05307991E0AA268</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319F63ABC0C26BAE05307991E0A06DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP4rTPfjTkla5K0jzIDoyl3UVdBx/XInJKcQbZPapID8+k0KVED0svdTJ6cnz3nOS57kVJE48oOOUpBqLkVpEUdCBbm15WSpCCRRXAWCxKACTYNh52oQ+GUckM0Wp9TvtZx/6161ScPQcyuh77snJ17DHVcxdv0G1Bu47mEchsZVqQz6QmkidMvxsXfi4qbrVUeeF1TqgVcrV6r4ySk9QKoMtnEpY2dNaqFazlTrJEBoPp+X55WyTCfIx9hDj1eDIZ1CTJz26SqjPFDaXvvTMgMKUUTLVMboFO34nDIVDPlEEJ2lsI7FPouFEW4i48MUn3xzir3A+iKU+fKMCCk4JRFfElufK9BTyUqdaCJTrqfxp0l42AK7sKAu9U7ENwftUjsSaIdhqoirpsRbY91BCCkICqX7u37L+XZc1/Kto5QIFco0VrvLv+MDYgaRTIC5apPWmtrxgAcq1T4FGvQFjTLFZ3BthzUhFNS6m0CPhyr9SiHkiwFXZkAXyrJD2/T2lqtq9PgElP4/DdpqzgrkgUQZtNm8yi4vxme/55r+qldu2fW5TMcj8ubJVk5g2zk3FK1dLfeGshii1Q7a/Fl7nL49nvfuLh/+ub1Bz1GNMXyx0JXmZDRmgyo05+FZ48dyuby+vOEvP8f3sRqrJIob6tqbNoYKzhfJAH2/uewwtES3s6dGqn4v5oMfcjKc0l6z83wT3kd+pzIYjO6i56fBw9PTDOKRWHSHvfFV40eVMv+t2yW3F6nuTLrL7z8fH4dhByci8ru3S3Xx2n18uv7dKtLZ4r9r25z5YTZ+Bqo3SzsG/V7pwnSJ6K/FzFo4c8PcNUis+CgNQjttu8tqR5AZueMsMD1crXHF62C/bhSscY57teY5rlZwtdn0znGn5vm1jcisWOxRPJMi5DaWldzV2HxNkMaBAsEgdWcyM0qnnC8Qe0STUl/cmUMghYKRNPL8Er7wecieZUULrxqxmp4vnl+VD07pWuobcZN2Qg3priaf7GjyHVCecLDCbedamcFW2tTilcwyHXnlGSkLyIy0p1ZlA/+kUUWKx0kElimKJcsiKCfTJK8MUquv7xKqcitXNJGpJlF+INCn6e3/21TC+DBuHZRNqQumm3DgjsGbfD7Pu76d9wa+kzFuz5cpq045XTHZ/fU+LXZMilEpEqPK23AvtvwlxAEA9AU/tF+aIh6b8a3om8vcXAtGSNqb/r6S8ms5m82yvKN1jCsoNfDI6KaHhkAzo3NvI/kCAhUQ6KhLpWC9F7mw7/LL9FQMNdEQm/kr5csjXhFDUPYV0TcHZ3HsE2UnpKmbhoU+ZDuLzAvIMv7ykUQDav2M+Zf5zGXK3tt1AGsrjsnTPCI0FxO7shfK2yezQaWB5UYKZboNfgjgUPBdY1Hkgos20zTONHz+p2Q1ruUQSmUmdL/n5IZt3c156rcEgnenDzC5tBdvPf7fjz2X5yNAjYYZ/xzfXtmBnX8x2dLuddAP8t2r1/xmr+l72N+W74ZXaxRF2WHX/mD+aNmq0/6Mt/8A</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP4rTPfjTkla5K0jzIDoyl3UVdBx/XInJKcQbZPapID8+k0KVED0svdTJ6cnz3nOS57kVJE48oOOUpBqLkVpEUdCBbm15WSpCCRRXAWCxKACTYNh52oQ+GUckM0Wp9TvtZx/6161ScPQcyuh77snJ17DHVcxdv0G1Bu47mEchsZVqQz6QmkidMvxsXfi4qbrVUeeF1TqgVcrV6r4ySk9QKoMtnEpY2dNaqFazlTrJEBoPp+X55WyTCfIx9hDj1eDIZ1CTJz26SqjPFDaXvvTMgMKUUTLVMboFO34nDIVDPlEEJ2lsI7FPouFEW4i48MUn3xzir3A+iKU+fKMCCk4JRFfElufK9BTyUqdaCJTrqfxp0l42AK7sKAu9U7ENwftUjsSaIdhqoirpsRbY91BCCkICqX7u37L+XZc1/Kto5QIFco0VrvLv+MDYgaRTIC5apPWmtrxgAcq1T4FGvQFjTLFZ3BthzUhFNS6m0CPhyr9SiHkiwFXZkAXyrJD2/T2lqtq9PgElP4/DdpqzgrkgUQZtNm8yi4vxme/55r+qldu2fW5TMcj8ubJVk5g2zk3FK1dLfeGshii1Q7a/Fl7nL49nvfuLh/+ub1Bz1GNMXyx0JXmZDRmgyo05+FZ48dyuby+vOEvP8f3sRqrJIob6tqbNoYKzhfJAH2/uewwtES3s6dGqn4v5oMfcjKc0l6z83wT3kd+pzIYjO6i56fBw9PTDOKRWHSHvfFV40eVMv+t2yW3F6nuTLrL7z8fH4dhByci8ru3S3Xx2n18uv7dKtLZ4r9r25z5YTZ+Bqo3SzsG/V7pwnSJ6K/FzFo4c8PcNUis+CgNQjttu8tqR5AZueMsMD1crXHF62C/bhSscY57teY5rlZwtdn0znGn5vm1jcisWOxRPJMi5DaWldzV2HxNkMaBAsEgdWcyM0qnnC8Qe0STUl/cmUMghYKRNPL8Er7wecieZUULrxqxmp4vnl+VD07pWuobcZN2Qg3priaf7GjyHVCecLDCbedamcFW2tTilcwyHXnlGSkLyIy0p1ZlA/+kUUWKx0kElimKJcsiKCfTJK8MUquv7xKqcitXNJGpJlF+INCn6e3/21TC+DBuHZRNqQumm3DgjsGbfD7Pu76d9wa+kzFuz5cpq045XTHZ/fU+LXZMilEpEqPK23AvtvwlxAEA9AU/tF+aIh6b8a3om8vcXAtGSNqb/r6S8ms5m82yvKN1jCsoNfDI6KaHhkAzo3NvI/kCAhUQ6KhLpWC9F7mw7/LL9FQMNdEQm/kr5csjXhFDUPYV0TcHZ3HsE2UnpKmbhoU+ZDuLzAvIMv7ykUQDav2M+Zf5zGXK3tt1AGsrjsnTPCI0FxO7shfK2yezQaWB5UYKZboNfgjgUPBdY1Hkgos20zTONHz+p2Q1ruUQSmUmdL/n5IZt3c156rcEgnenDzC5tBdvPf7fjz2X5yNAjYYZ/xzfXtmBnX8x2dLuddAP8t2r1/xmr+l72N+W74ZXaxRF2WHX/mD+aNmq0/6Mt/8A</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpbN3RWoMiEXNgnJBJKZnZctIbexElsylgwmX7+SAQcYkmX2yaV26/Tpi450LnAcOa4nBKSSclbJ44gJt7B2jSxlLseCCpfhGIQriTv27u9cp4pcvN1iVIaDrvFPrdOxW4FDzEajDmYd4cDE9aZj1mw7mDqk0ZjCVLkKkcGQCYmZ7BoOsusm6ph2Y2Lbbq3l1ptVp9n5ZVReIBUKW7lUkbEhlYuuEUqZuJa1XC6ry1qVpzPLQci2ft7fjUkIMTZ65+uMikBpb+NPqj4QiCJSJTy2zq09n3NfuGM6Y1hmKWxi+Z/FQhbqWMrHF3T2zSj3gj9kAS+WF5hxRgmO6DvW9bkHGXK/4kUznlIZxp8mYSMNbEJOTGLX2TfD2qd2ItAew1RgU4TY3mA9QQApMAKV56dh1/h2WteKrZMUMxHwNBb7yz/jA2wBEU/AN8U2rQ210wGPVKp3DsQdMhJlgi5gpIc1wQTEpptAToeqPKYQ0PyOCjWgudDsrF16B8t1NQZ0BkL+nwbtNGcN8oKjDHr09S/2EL83m3HT6fT5GUJXtWkgvNYZ6hYEdp0LQ9na9fJgKMshWu+4bUZeMlp6tzYezP9+igb5z9vnu3zSDqF9M+nfXyESNya/ogZZXtcWw9Xq6kc/6gjPX7bDd89/vO9cTc/YjGfzG0muH+ad+svkee7PZNCZz67R98fcuVw40fQxZ22cp2h5Mx2hXxftH2ySre5G8+/xS7/9o9Fn7ZvBVIwGz5d0NRp+D7MwmZ89t6ZJ/vT6ksrm5G3YLdPZ4b9v2575cTZ9BSK3Sz0Gw0HlSnUJy6/FTFuobwaFq5to8RESmDR6epfWDjdTckd9V/VwvUY1u3N5eYEumg3HsfutS9SooZY6TpfI85xmeysyaxYHFC84C6iOpSV3PTZfEySxK4D5kJoLnimlE8YXiAMscWXIntQh4EzAhCt5tmdk0XpzRIvHwYyHrBXEr8IP/ciojLh8YA+pF0hI9zW5vqfJT0BoQkELt55roQZbSFWLOV5kMrKrC1xlkClpT7XKuk693bAEjZMINFMr5n4WQTUJk6Iyllh/HRMTUVipIAlPJY6KA2F9mt7hv20llI9PtYPQKfVBdROO3DG1bT6f593azXsL72U+1edLlVWmlKyZ7P/6mBY9JuWolIkRYW+5l1v+EOIIgPUFP+uwNGU8f0F3om8vc3UtKCHpbfs7x9V5NVsssqKjLYRqVqrgLaWbtjUGkimdW034GzCrhLBOulRK1geRS/s+v0yGbCyxhFjNX6VYnvCKGIPQr4ihOjj5qU+UvZCqbhJyecx2EakXkGb85SOJuET7KfOj+ix56n+06wjWThyVp3pESMpmeqUvlNUns0G4gqVKCnm6C34M4FjwfWNZ5JKLVNM0zSR8/qeiNa5rYEJ4xuRwYBSGXd0teMpVAu6H028whbSXbz363489kxYjQEC9EAUt8PWV7er5Z7Md7d4EPZBvDw1a6nYddBwbOYV8N9by3bY/5HufXe838++WnTodznjvXw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPvYMZZtMLYnMAMhmdKGNAFKSV7uCHkNSmzZsWRD+fVXMuACJbn0Pnm0Xp09+6EjXXEcR5bf5RwyQRNWW8cR435pbWt5xvwEc8p9hmPgviD+uDu886068vF+i1Yb9NvaPw3SRE3sWbpLXFtvEMfT3QZ2dNuF+TxwTGIhS7pynsOAcYGZaGsWMhs68nSzOTFN33Z9E9Utu/Gs1aaQcYktXepI25Fa87a2FCL1DWO1WtVXdj3JFoaFkGnMhndjsoQYa52rbUZloKyz8yf1AAhEEamTJDaujCOfq4D7Y7pgWOQZ7GIF78VCBvIM6RNwuvikVXshGLAwKZfXmCWMEhzRDVb1GYJYJkGtGy2SjIpl/G4SJlLAOqyJTswG+6QZx9QuBDpimHGs8yU2d1gjCCEDRqD2YzRoa58u61q5dZJhxsMki/nx8u/4ACsgSlIIdL5Pa0ftcsAzlepcAfEHjEQ5pwXcq2FNMQG+6yaQy6FqDxmEdH1HuRzQNVfsjEN6J8ttNfp0AVz8nwYdNGcLMsVRDp1N/9vwG8RPzWsaGhP7pzfmt3y9xPFs2C4JHDqXhqq12+XJUFZDtN3xNOfoLdzYqeVZa8uNvw7X0XK0dl3m3qfF/WY4H07vvgxebnvTjTn5PJ29wFP35TZIvNXTTX86S57DQShoHqeBNyKTJ5LkSfE8nZqfzccfj70UTRznaVzkX3vPRdHChfPlTcyeN5z1IiNg/DXIZ000inqNhvUz7zfD1vfFw2o2Nx7DL6I5Z9Mxofevs8Vr/vO1XaVzwP/Ytj/z43z+AkTsl2oMBv3arewSFh+LmbLQQA9LVz9V4sMFMKF11C6lHX4u5Y4Gvuzhdo1s07t17G7vGl1bTq97g5o2anmeeYO6yOnf7EVmy+KE4nXCQqpiKcndjs3HBEnsc2ABZHqR5FLpuPYBYh8LXBuwkTwECeMwSaQ8m6GX2XaUz+M3cMw1cckmL4q85WRa7T4R39n3rBsKyI5FuXEkyiMgNKWglFsNNpeTzYUsxhsuchGZ9QLXGeRS2zMls77VcJsGp3EagaJqxEmQR1BPl2lZGoNvv5aOCS+tlJM0yQSOyhNhvJvf6b99KaRPQJUDVyn1QLYTzlwyaJ/P+3m3DvPew3fzgKoDJusqMkq2TI5//R4XNSfVrFSJEW7uuVdb/hLiDIDxAT/jtDRVvKCgB9H3t7m8F6SSdPb9fcP1t7oalLKjLYRsI5PwhhRO0xgDyaXQ/Zokr8CMCsK46FapWJ9EruzH/HKxZGOBBcRy/mrl8oJnxBi4ekYM5MlZX/pGOQop6yZgLc7ZriP5BFKMP3wlEZ8oP2l+kJ9VkgW/23UG6yCOzFO+IgRlC7VSN8qvd2aDJBKWSi1MskPwcwDngh8bqyJXXIScpnku4P0/NSVybQ0TeQ8wMehrpeFQeEue4lcK/m+nP2BKba8ee/S/X3s6LUeAgHwiclriqzvbV/PPFgfivQt6ot9d1G85ltf3LBNZpX43t/rtmo5bFeWIXecP85+WgzqdznjnXw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0508351410781115432</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0508351410781115432</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0507371410781057493</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_050881410781088338</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0508351410781115432</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>031A0270148F0D69E05305991E0A6126</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319EEC0C65321B7E05307991E0AA268</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319F63ABC0D26BAE05307991E0A06DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>afdda972-24e0-4276-b0d1-143c8ca932f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_CS_FUNC_YOUTH_BAU_Get_YOUTH_P2" searchProperties="true" id="beea9b80-daac-4c3f-87f0-2dab2a413362"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fffbadb7-efd7-480e-8a92-c17c7fa38215"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f5ecbdf0-1e45-4830-b4a7-a0ed3fa915f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth BAU1" id="8d13f109-98b1-41f2-8ddb-68c6191b9708"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth BAU1" id="5b6cf78f-0b36-4b29-9a0b-7ac825651a9d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Youth BAU" id="87cdb503-94bb-455d-a655-a5a32b3dcdea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Youth BAU" id="a0ea75b2-6728-43ef-8f43-f34b0a92abe1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="88f49054-754c-4752-9b1a-9038714352dd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH BAU" id="b9697b33-f027-4f80-9c19-9daf1b425046"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60717D2E54D6256E0401F0A059907AB</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0319D97416612687E05307991F0A5A72:97E30DE4"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_051071410781207168</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319CF8CDA3C6731E05305991F0A508A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319CF8CDA3C6731E05305991F0A508A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319CF8CDA3C6731E05305991F0A508A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319E9F1586D2D6AE05305991F0A2568</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319D656C96A261FE05307991F0A804B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319D97325E5267BE05307991F0AA9DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319E9F1586D2D6AE05305991F0A2568</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319D656C96A261FE05307991F0A804B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319D97325E5267BE05307991F0AA9DE</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5hwK5AFZcw64TcgCSTvGwJuQ3K2LKxZAP5+pEMeIAhWWafXGq3Tp++6EiXDEWh6XYYg5STmFZWUUiZW1hbSpZSN0aMMJeiCJjLsTvu3A5ds6q7aLdFqXj9lvJvEDiGbjSnKhi1qVqzHKxO/aatWsjUdYz9adC0hStjGXiUcUR5SzF1o6bqjmrYE8NwraZr61WnYb0plWdImcAWLlVd2ZJasZYy5zxxNW25XFaXVjVOZ5pAN7Qft8MxnkOElPblJqMiUNre+uOqDxjCEFdxHGmX2oHPpc/cMZlRxLMUtrH8z2Lpmu5owsdnZPZNKfeC79EgLpY9RGNKMArJB5L1uQU+j/1KJ5zFKeHz6NMkDF0Cq7DCKjZq9JuiHVI7E+iAYcqQyubI2GKNIIAUKIbK08hrKd/O61qxdZIiyoI4jdjh8u/4AM0hjBPwVbZLa0vtfMATlWpfAnY9isOMkRzu5LAmCAPbdhPw+VCVhxQCshoSJgZ0xSQ7bZ/e0XJTjT6ZAeP/p0F7zdmAPKMwgzalQV2bemj46ny/8PgQwjf6hu4//IvXVkFg37kwlK3dLI+GshyizY7x96uL5ceED2rmYw7k1cCRNuw2zOX1qp6Fz/27UfYere3syXx3urX43Xp4cpLhRXcQvl0PXyZ5fTLJaW539fj77T3inffefQ7jl6sna74c3Y+uHx6ciTnl5sdLj/5Dmh72mxgRMp9f5ze3Xth9Dxp3NxZOrMH45pHy7uKZf9TXWbIYIe8mqP14GrxNPaiHaPnYKtPZ439o2535cTZ9B8x3SzkGXr8yEF1C/Gsxkxbiq0Hh6iZSfBgHypW23CW1w82E3BHfFT3crHXLcK6cgWE3632zX+9c6bal245jDPSOadebO5HZsDii2ItpQGQsKbmbsfmaII5cBtSHVM3jTCgdU75A7COOKh4diUMQUwaTWMizkayDD0ScKUvtxTrE8Tps/DSoo1TuYn5P79NOwCE9lOTagSSPAJOEgNRtOdZMzDXjohQLlGc8NKo5qlLIhLKnUmRds9a0NUaiJARJVItiPwuhmsyTojAa23xNFWFWWAnDSZxyFBbnQfs0u+N/u0IIH59IByZT6oJoJpy4Ymq7fD7Pu7Gf9w6+k/lEHi9RVZ4SvGFy+Ov3sMgpKSelTAwzY8e93PKXECcAtC/4acelKeP5OdmLvrvLxa0gdKS96+8CVRfVLM+zoqMNqZepgNeEbBraGHAmZG49iX8C1UoI7aw7pWR9FLm0H/LL+JyOOeIQifmrFMszHhFjYPIR4Ylzszr3hXIQUtSNw4qfsvVC8QCSjL98I2EXSz9hfhCfZZz6v9t1AmsvjshTvCE4oTO5kvfJ+pPZwLGAJUIJ43Qf/BTAqeCHxrLIJRcupmmacfj8T0VKXEtBGMcZ5V5fKQz7slvw5OsE3N9Of8AUyl4+9ch/v/VUUowABvFAZKTAlze2K+efzvakexv0WL17g2av37F69YZl7Ku3rTc7ZVEO2LX/MP9p2avT8Yy3fwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5hwK5AFZcw64TcgCSTvGwJuQ3K2LKxZAP5+pEMeIAhWWafXGq3Tp++6EiXDEWh6XYYg5STmFZWUUiZW1hbSpZSN0aMMJeiCJjLsTvu3A5ds6q7aLdFqXj9lvJvEDiGbjSnKhi1qVqzHKxO/aatWsjUdYz9adC0hStjGXiUcUR5SzF1o6bqjmrYE8NwraZr61WnYb0plWdImcAWLlVd2ZJasZYy5zxxNW25XFaXVjVOZ5pAN7Qft8MxnkOElPblJqMiUNre+uOqDxjCEFdxHGmX2oHPpc/cMZlRxLMUtrH8z2Lpmu5owsdnZPZNKfeC79EgLpY9RGNKMArJB5L1uQU+j/1KJ5zFKeHz6NMkDF0Cq7DCKjZq9JuiHVI7E+iAYcqQyubI2GKNIIAUKIbK08hrKd/O61qxdZIiyoI4jdjh8u/4AM0hjBPwVbZLa0vtfMATlWpfAnY9isOMkRzu5LAmCAPbdhPw+VCVhxQCshoSJgZ0xSQ7bZ/e0XJTjT6ZAeP/p0F7zdmAPKMwgzalQV2bemj46ny/8PgQwjf6hu4//IvXVkFg37kwlK3dLI+GshyizY7x96uL5ceED2rmYw7k1cCRNuw2zOX1qp6Fz/27UfYere3syXx3urX43Xp4cpLhRXcQvl0PXyZ5fTLJaW539fj77T3inffefQ7jl6sna74c3Y+uHx6ciTnl5sdLj/5Dmh72mxgRMp9f5ze3Xth9Dxp3NxZOrMH45pHy7uKZf9TXWbIYIe8mqP14GrxNPaiHaPnYKtPZ439o2535cTZ9B8x3SzkGXr8yEF1C/Gsxkxbiq0Hh6iZSfBgHypW23CW1w82E3BHfFT3crHXLcK6cgWE3632zX+9c6bal245jDPSOadebO5HZsDii2ItpQGQsKbmbsfmaII5cBtSHVM3jTCgdU75A7COOKh4diUMQUwaTWMizkayDD0ScKUvtxTrE8Tps/DSoo1TuYn5P79NOwCE9lOTagSSPAJOEgNRtOdZMzDXjohQLlGc8NKo5qlLIhLKnUmRds9a0NUaiJARJVItiPwuhmsyTojAa23xNFWFWWAnDSZxyFBbnQfs0u+N/u0IIH59IByZT6oJoJpy4Ymq7fD7Pu7Gf9w6+k/lEHi9RVZ4SvGFy+Ov3sMgpKSelTAwzY8e93PKXECcAtC/4acelKeP5OdmLvrvLxa0gdKS96+8CVRfVLM+zoqMNqZepgNeEbBraGHAmZG49iX8C1UoI7aw7pWR9FLm0H/LL+JyOOeIQifmrFMszHhFjYPIR4Ylzszr3hXIQUtSNw4qfsvVC8QCSjL98I2EXSz9hfhCfZZz6v9t1AmsvjshTvCE4oTO5kvfJ+pPZwLGAJUIJ43Qf/BTAqeCHxrLIJRcupmmacfj8T0VKXEtBGMcZ5V5fKQz7slvw5OsE3N9Of8AUyl4+9ch/v/VUUowABvFAZKTAlze2K+efzvakexv0WL17g2av37F69YZl7Ku3rTc7ZVEO2LX/MP9p2avT8Yy3fwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDvtxBwFBRaY6Q/W62tuqlbbT3S93YjhIthCQBNT++pugsuraXvd+YnI4ec5zXvIkNwzFUcNxGYOMk4TWNnFEmVNau0qeUSdBjDCHohiYw7HjuQ/3TqOuO+iwRamNB13ln05bt1GnGagL1A5Uq9XGqt1ElhoEHWybYOvgY+HKWA5jyjiivKs0dMNS9Y5qNJ8MwzE7jtGqN43mD6X2AhkT2MKlrit7UhvWVULOU0fT1ut1fW3Wk2ypNXTd0F4f7j0cQoyU3s0uozJQ1tv747oPGKII13ESazfaic+NzxyPLCnieQb7WP5HsXRN72jCx2dk+UWp9oI/pkFSLvuIJpRgFJF3JOvzADxM/JobLZOM8DD+MAlDl8AqbLCKDYt+UbRTalcCnTDMGFJZiIw91hwCyIBiqD3Px13ly3VdK7c+ZYiyIMlidrr8Mz5AC4iSFHyVHdLaU7se8EKlejeAnTHFUc5IARM5rCnCwPbdBHw9VG2WQUA294SJAd0wyU47pne23FVjQJbA+P9p0FFzdiAvKMqh923B1y59DxZowmZaVqwf7+e5RcNW4XZLAsfOpaFq7W55NpTVEO123MIUeU14aL9ao9HzrTYCvjXfvDts/1h7X6eP3v13a7sabIs0ffVHo+8hxo/xsHmLbDcdLrz8m7ue9mPPejGn8bv5rjFvhu2sGE3RoD3SVs/P7G8Ltnd2e7791nppDadROLhdmRPvLZ6Rwext9vp1XRSThT2Y391FX923TdZ331qTaTouVj8n7CX2x5tohrbvVrdK54j/qe1w5r188RMwPyzlGIwHtaHoEuKfi5m0EF8NSlcnleLDOFCu9OQuqR1OLuSO+I7o4W6tm0Zn0Gq2+p2W22gZw7/0pqm3Ox1jqLu2bt0eRGbH4oxiP6EBkbGk5O7G5nOCOHYYUB8ytUhyoXRM+QRxgDiqjelcHIKEMnhKhDzHcWJufqIgNHFjswkjWoQWJrqv1CYJn9Jp5gYcslNJtk4keQ6YpASkbsuxZmKuGRelWKEi55FRL1CdQi6UPZMi6zQsu6kxEqcRSKJanPh5BPU0TMvCaGz3bagIs9JKGE6TjKOoPA/ah9md/zsUQvj4RDowmdItiGbChStGP+Tzcd7t47wP8G7uE3m8RFV5RvCOyemvX8Mip6SalCoxzIwD92rLH0JcANA+4aedl6aK5xfkKPrhLhe3gtCR3qG/K1Rf1fOiyMuOtqVeZgJeE7JpaB7gXMjc9il5A6pVENpVd0rF+ixyZT/ll/OQehxxiMX81crlFY8ID5h8RIzFudlc+0I5CSnqxmHDL9n6kXgAScafvpGwg6WfMM/EZ51k/q92XcA6iiPyFG8ITuhSruR9sv1gNnAiYIlQwiQ7Br8EcCn4qbEqcsWFi2la5Bw+/lOTEtdVEMZJTvl4oJSGY9ktefJtCs4vp99gSmWvnnrkv996KilHAIN4IDJS4ssb25HzT5dH0r0Peq7e/aHdH7hmv9U2jVK9mzv1buq2WxXlhF3vN/PvlqM6nc94718=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDvuxgwRQQaY6Q7Wu9n2ltrv75U4IUbKFxCZBbX/9TVBZdW2vez8xOZw85zkveZJzAfPMCUIhMJeE0doqz6gISmvHKDgNGBREBBTmWAQSBVF4exM4dRDA7RajNup3jH/azjS2gYtMCHxgNloxMP2Wm5gonjZcvw2Bk/jKVYgCj6iQkMqO4QC7YYK2aTcfbTtw20GjUfc876dRe8JcKGzlUgfGhtRKdIxUynlgWcvlsr5064zPLAcA2/p+exOhFOfQ6J6vMyoD8e7GH9UTjHCWoTpiuXVu7fmcJyKIyIxCWXC8iZV8FAtYoG0pn0SQ2Rej2ouTEZ2yctmDlFGCYEbeoa7PLZYpS2phNmOcyDT/MAkbaGATr5CJ7Ab9Ylj71E4E2mPIBTRFCu0N1hhPMccU4dpkPOoYX07rWrn1kUMqpoznYn/5d3wwXeCMzXFiim1aG2qnAx6pVPcco2BEUVYIssB3eljnEGGx6SZGp0PVHjiektUNEWpAV0Kzs3bpHSzX1eiTGRby/zRopzlrkCeYFbh75lwxSaJr9i0S1+Qqaz1HzvNPG8YO6JQEdp1LQ9Xa9fJgKKshWu/IFnEuY26fPYOvJHq8g71w+PQ2c5h9u2rQ3sXdQ3wPPDh0nt+Hfh6Blx9P+WQ5v7kaDW/jm5SPF8SFrWv75f7de7nHd1+zyx+pdebFyfj+bjC5nl4A/8GPv8P+Lzt99pvjl8HwyuFsPJo8/hzGxWriTC7n8v2p+a3xNWqEbhoO8KV/S91wyF/TyfdZf3D1wzq7EstOlc4O/33b9sxHRfwLI7ld6jEY9WsD1SUoPxczbSGJOS1dg7kWHyExlUZX79LaERRK7kgSqB6u18C12/225zrNy6bT8i4uQdMFXrttD0AYtvuXW5FZszig2GN0SnQsLbnrsfmcIMoDgWmCublghVI6YXyC2IcS1kZ0rA4BowI/MiXPiZ/kr7ZI5dsC2zSOk6nX+rVqiMKo3TF5T+95OJWY72tyY0+TxxiROcFauPVcCzXYQqpavMJFITO7voB1igsl7VyrbOA0/KYlSD7PsGZq5SwpMlyfp/OyMpZYfx0TIlFaiUBzxiXMygNhfZje4b9tJZRPQrSD0CldYNVNfOSOcbf5fJy3t5v3Fj4sEqLPlyqr5AStmez/+j0tekyqUakSQ8Lecq+2/CXEEQDrE37WYWmqeMmC7ETfXubqWlBC0t329xXWX+vFYlGUHfUAcC2u4C2lm7YVYVQonXt7ZC+YWhWEddKlUrE+iFzZ9/kVMqWRhBLnav5q5fKEV0SEhX5FjNTBWZ36RNkLqeom8Uoes/Uy9QLSjD99JKEAaT9lflCfJePJ73YdwdqJo/JUjwhJ6Eyv9IXy9sFsIKZgiZJCxnfBjwEcC75vrIpccZFqmuJC4o//1LTGdQyIECuoHPWN0rCruyVP+TbHwW+nP2BKaa/eeuS/H3smKUcAYfVCFKTE11d2oOefzna0exP0UL57A7/XD91ey3PtUr6ba/luAj+sirLHrvuH+U/LTp0OZ7z7Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_051071410781207168</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_051071410781207168</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_050971410781147212</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0509391410781179872</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_051071410781207168</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319E9F1586E2D6AE05305991F0A2568</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319D656C96B261FE05307991F0A804B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319D97325E6267BE05307991F0AA9DE</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4babe74-1397-4891-8a95-aa893da0e256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88f49054-754c-4752-9b1a-9038714352dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00037_UserGet_CS_FUNC_CHILD_SAU_Get_YOUTH_P2" searchProperties="true" id="9086d78f-0841-4647-beb5-638622ca6219"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f22b2176-f05d-45f0-9ac4-4c5db7622020"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="216927e6-a34c-4067-8073-ad4d1edf3f17"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="ed837daf-7a54-436f-a4d5-b21861365b31"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="b4d7a2d8-3e7e-4df0-a9e9-f1263aa0ed26"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="68c82124-8135-48b7-a961-804160a43875"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="aedfd195-1e4d-4bcb-b9c3-6cc6294a016f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="634d13ac-6760-46fd-bd1c-a401cbd6f484"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH" id="655fe437-b374-4358-9b42-a2cd2ce092d9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BA0B9E8CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999B0952D610AE0401F0A05992642:7FA6E30A"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_050921403082542668</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2AD53496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2AD53496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2AD53496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BA0B9E8CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BC637FDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B1C61B8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BA0B9E8CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BC637FDD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B1C61B8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHquQS8MlUUEKl+lG09IO0M60LyvjHIi7iR1sh0J//TqhSYGh3c5KSMgnx9/5zsWffSFQmjh+IARwSRjVwmFX/3thOXgetW3Dds4jwwXbNbyoExnz5txD7TZutheeroVC5BBSIRGVXd2xlJfVMuzOzPJ8q+M3O41m233UtXvgQkErl4ala5s0ocIvw3b1nFOfIUGET1EKwpfYnwbXV77y9FHFSe9d7FiWAXkvljLzTRM3IsCQJLiBWWpemAc+F5Hwp2RJkcw5vMaMRFd/3fv8/Nx4Pm8wvjQdy7JMyzOVTyTI8qve+1JthiikC7ZbDxBllGCUkBdUkLoGGbNIC5Il40TG6TvQtmlbBbQBG2xg26VfdfMtQMnuk0gHJLlAhoiRXYFNYAEcKAbtbhJ29a+f6+Bu74wjKhaMp+Jo/WeUgK4hYRlEhqgyq9h9HvFEuXoXgP2Q4iQXZA3jYkwyhEFotxwWZHNFhBq+SGhl+7WNUD9STRngP2nLhbnPVVE3T1RnSJYg5P/p2X6/dij3KMmhd74ls3kQBndwlj5drRz+1+RysbqZodGPbklh33lHqm736/p4WOvZet005Q/91m1grbe29b1/lzlgnj3O4ufZ6AcJx85MXjtNbzCfjFu32MVP28n4Vlx+H8zE3eMc3PVZ/NT+mf5oe4+r1fbL6GUYPV4N4nvvUrhnycuof/nQ/tV/oP/kbcd5MVuPs9uMj/vJU5ANzNG5sDadTecqDc+23tn9w8v8LmfxGA1/3rSuvzDI3EF6g+jTahLje862Qfctp/0cDo2VJEzz+RNgWS2L8QiH2jfVLyQ/lpfCQiJjUbr6WaFRQgKVeq/YVUiLnysBIpGvmrlbfxvYnuf1A6vvjTqDUXtkuZb9zQqstufZw1a/0qAdiyOKA0YXpIhVqOxufj4miFNfAI2AG2uW4xiE/gHiEEmkhXSiDgejAmZMqXhrTpbblpvNeYxb55RZW0c6eLHQtTGTN/SGBwsJ/EC5bedAuSeASUagkPdivoUacCFVKVZoncvEbqxRg0KuLgBeaLDvuJ2mKUiaJVAQNVMW5Qk0sjgrC2OK3b9jICxKKxE4Y1yixC6P37vZHX+rCqF8IlI4iCKlPqhmwombyK3yeT/v5n7eFXyQR6Q4ZaqqkhO8Y3L46W1YiimpJ6VODAu74l5v+UOIEwDmB/zM49LU8aI12Yte3a7qwlBy0qv6u0KNVSNfr/Oyo+1CKrmCN5Vi2uYUcK70bjtj/wA1awjzU9dNzfoocm0/5JfLmE4lkpCq+dPK5SfeGlMQxVsjVOdm89mHzEFIVTcJG3nKNkjUk6Rg/OGrBfu48FPmW/X3zHj01q4TWHtxVJ7qgSEJXRar4mLZvjMbmClYopSQ8X3wUwCngh8a6yLXXKSapnku4f0vWiFxXR1hzHIqw6FeGvZlt+Qptxn4b06/wZTS/npXb8S7d/Wv66upEsAU6bUv+W9ng5TjgkEvngQll66+UU9PFZwu92T+leAJpXeCYfPc9VpBrfRNz3Nabqcu4EEmvd/Mv1v2anp8Hnr/Ag==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHquQS8MlUUEKl+lG09IO0M60LyvjHIi7iR1sh0J//TqhSYGh3c5KSMgnx9/5zsWffSFQmjh+IARwSRjVwmFX/3thOXgetW3Dds4jwwXbNbyoExnz5txD7TZutheeroVC5BBSIRGVXd2xlJfVMuzOzPJ8q+M3O41m233UtXvgQkErl4ala5s0ocIvw3b1nFOfIUGET1EKwpfYnwbXV77y9FHFSe9d7FiWAXkvljLzTRM3IsCQJLiBWWpemAc+F5Hwp2RJkcw5vMaMRFd/3fv8/Nx4Pm8wvjQdy7JMyzOVTyTI8qve+1JthiikC7ZbDxBllGCUkBdUkLoGGbNIC5Il40TG6TvQtmlbBbQBG2xg26VfdfMtQMnuk0gHJLlAhoiRXYFNYAEcKAbtbhJ29a+f6+Bu74wjKhaMp+Jo/WeUgK4hYRlEhqgyq9h9HvFEuXoXgP2Q4iQXZA3jYkwyhEFotxwWZHNFhBq+SGhl+7WNUD9STRngP2nLhbnPVVE3T1RnSJYg5P/p2X6/dij3KMmhd74ls3kQBndwlj5drRz+1+RysbqZodGPbklh33lHqm736/p4WOvZet005Q/91m1grbe29b1/lzlgnj3O4ufZ6AcJx85MXjtNbzCfjFu32MVP28n4Vlx+H8zE3eMc3PVZ/NT+mf5oe4+r1fbL6GUYPV4N4nvvUrhnycuof/nQ/tV/oP/kbcd5MVuPs9uMj/vJU5ANzNG5sDadTecqDc+23tn9w8v8LmfxGA1/3rSuvzDI3EF6g+jTahLje862Qfctp/0cDo2VJEzz+RNgWS2L8QiH2jfVLyQ/lpfCQiJjUbr6WaFRQgKVeq/YVUiLnysBIpGvmrlbfxvYnuf1A6vvjTqDUXtkuZb9zQqstufZw1a/0qAdiyOKA0YXpIhVqOxufj4miFNfAI2AG2uW4xiE/gHiEEmkhXSiDgejAmZMqXhrTpbblpvNeYxb55RZW0c6eLHQtTGTN/SGBwsJ/EC5bedAuSeASUagkPdivoUacCFVKVZoncvEbqxRg0KuLgBeaLDvuJ2mKUiaJVAQNVMW5Qk0sjgrC2OK3b9jICxKKxE4Y1yixC6P37vZHX+rCqF8IlI4iCKlPqhmwombyK3yeT/v5n7eFXyQR6Q4ZaqqkhO8Y3L46W1YiimpJ6VODAu74l5v+UOIEwDmB/zM49LU8aI12Yte3a7qwlBy0qv6u0KNVSNfr/Oyo+1CKrmCN5Vi2uYUcK70bjtj/wA1awjzU9dNzfoocm0/5JfLmE4lkpCq+dPK5SfeGlMQxVsjVOdm89mHzEFIVTcJG3nKNkjUk6Rg/OGrBfu48FPmW/X3zHj01q4TWHtxVJ7qgSEJXRar4mLZvjMbmClYopSQ8X3wUwCngh8a6yLXXKSapnku4f0vWiFxXR1hzHIqw6FeGvZlt+Qptxn4b06/wZTS/npXb8S7d/Wv66upEsAU6bUv+W9ng5TjgkEvngQll66+UU9PFZwu92T+leAJpXeCYfPc9VpBrfRNz3Nabqcu4EEmvd/Mv1v2anp8Hnr/Ag==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZx1HIhYQmUUGiZOhkph3a0vvLkXE2YJo41HaA9uuPHZoUKO3pHAkJeWd77bUvXvYRR1nqhF3OgQmSUy2O2vo/zUPXd5BnG0nge4YL4BvBKPAN33ZQ0gLf8wKsazHnBcSUC0RFW3cs2zWslmH7V1YQqp/dsJzgQddugHEJLV0alq6tspTysAzb1gtGwxxxwkOKMuChwOGwe3YaSs8QVZz0ztGaZRmQdaZCzEPTxI0EMKQpbuA8M4/MLZ+jhIdDMqFIFAxeYya8rb/uXS6XjWWzkbOJ6ViWZVqBKX0STibf9M5BtRmSmI7z9bqHaE4JRil5QYrUGYhpnmjddJIzIqbZB9C2aVsK2oAVNrDt0m+6+RagZPdFpC2SjCODT5FdgV3CGBhQDNr1ZdzWv32tg+u9VwxRPs5ZxnfWf0cJ6ALSfA6JwavMKnZfR9xTrs4R4DCmOC04WcAfNSZzhIFr5wzGZHVKuBy+hGtl+7UVlz9STRngv2nLkbnJVVI391QnIhPg4v/0bLNfa5QblBbQiZpPL+mQTK/R/Q2xR82HIvVsdjxIr3C7pLDpvCZVt/t1vTus9Wy9buoinl08/uFsdU2d8wEOTgfuavbiXPed6Mdycnj56949nsXZCgh0aX9kX9gL/+5+NX54cH+NmvNBWnwXixh1T+7pwe3z+ezqPoa7k/l5dLbEp2cuSkajn73A/nnbs/2T2VlyZ928zFrRxbS3klOH2O/bXxcFa0bfAyu1j09OB8MT8oB8+8CLRosLbzzvmdi9pYSZM95+y2kzh21jJQnDYjQDLKqlGo840vqyX0h8Li/KQhJjXLqGc6VRXAAVekftUtISFlKASBLKZq7X/Z4dBMFxr9U87EdRs//Dci27b3UtLwiclmdVGrRmsUOxl9MxUbGUyq7n53OCOAs50ASYscgLPAWuf4IYIYG0mF7Kw5FTDle5VHH8mOduk+KsldlZE2ZPrDWdWcFS1/7kYkAHrDsWwLaU23a2lPsSMJkTUPKu5pvLAedCluIJLQqR2o0FalAo5AXAlAaHjut7JifZPAVF1MzypEihMZ/Oy8KYfP3vGAjz0ko4nudMoNQuj9+H2e1+qwohfRKiHLhK6RhkM+HdTeSHXpXPx3l7m3lX8N0iIeqUyaoKRvCayfant2FRU1JPSp0Y5nbFvd7ylxB7AMxP+Jm7panjJQuyEb26XeWFIeWkU/X3CTWeGsViUZQdPVRSySS8KRXTNoeAC6l3z1f5I1CzhjC/dN3UrHci1/ZtfoWY0qFAAjI5f1q5/MJbYwhcvTVieW5WX33IbIWUdROwEvtsvVQ+SRTjT18tOMTKT5rP5d8yZ8lbu/ZgbcSRecoHhiB0olbqYnn+YDZwLmGJVMKcbYLvA9gXfNtYF7nmIuQ0jQoBH3/RlMS1dYRxXlARR3pp2JTdkqd4nkP45vQOppT217t6xT+8q+/OTodSADOk177kv50NUo4LBl09CUoubX0ln54yOJ1syPwrwT1K73Qjr+kGre620rt+XcCtTDrvzO8tGzXdPQ+dfwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1P6YSm0I8wgyLVeUY8geny5E9INRNoUmhQKv/4mxVZA9HruDDNMdnfWXvsjK7lgKAotr8UYJJzEVPE7DfUfqz4ORhAgDUa2odnmuK65ZvVcs23bgpE1xufOSFV8xlLwKeOI8oZqGaatGY5m1geG68mfXXFc91VVhpAwAS1cKoaqZFFImZeHbahpQr0YMcI8iiJgHsdev9W79YSnhwpOavNiyzIPmDSnnM89XceVADCEIa7gONIv9D2fi4B5fTKhiKcJvMcMWEN937tarSqr80qcTHTLMAzdcHXhEzAyOVWbJ8VmCHw6jrfrNqIxJRiFZIMkqR7waRworXASJ4RPoy+gTd00JLQGGdawadNTVf8IkLP7IdIeyYQhjU2RWYA9whgSoBiUp0e/oZ7+rIPbvYMEUTaOk4gdrP+MEtAlhPEcAo0VmRXsfo54pFzNC8CeT3GYMrKEOzkmc4SBKQ8JjEl2S5gYvoApefuVjIkfKaYM8J+05ULf5Sqo60eq0yETYPz/9Gy3X1uUIQpTaN4+W7O/V45ew70+nSyfkvV6dNfLzujZrJFT2HXekirb/b4+HNZytt43Tf0Au0bmT+F1/bTpPfCnds8ZXt1NnOmtTV+6dRReDSPrKXOGN725vskCs/66+uvX+fPNLLkfLs6Mrh3e14zLRffthP02FzeOs5y93CNXX9rt0XXnJkG308Fv6LfD6mDz6/c1j5+tbsd+GS/ih5Qn1y/4fvVMqN+qXd7VhwMw0vSsNm+fvI3OEHvtktHb7NyH500vump85LSbw76xkIR+OnoDzIulHA+/o3RFvxD/Xl6khQTaOHf15lKjGAfK1abcJaXFS4UAkcATzdyuu23Tdd1Ls+2Yl/VW17oybMPsGi2j5rpmx6kVGrRlcUCxHdMxkbGkym7n53uCOPIY0AASbRmneApM/QaxgzhSfPooDkdMGQxioeJRFi9nI4fUHR67m4i7qzXZ2LOpqtzF/J7eJ60xh2RPuU1rT7kfAZM5ASnvcr6ZGHDGRSkWaJny0KwsUYVCKi6ARGqwZ9n1qs5INA9BEtWjOEhDqMyn87wwOtv+WxrCLLcShudxwlFo5sfvy+wOvxWFED4BkQ5MpnQJopnw6Saqe9Uin095V4/eWAV8Kw2IPGWiqjwheMtk/9PHsMgpKSelTAwzs+BebvlDiCMA+jf89MPSlPGCJdmJXtyu4sIQctIs+rtAlUUlXS7TvKM1KZWJgNeFYpp6H3Aq9G49iGdA9RJC/9F1U7I+iFza9/mlfEr7HHGIxPwp+fIHb40+MPnW8MW5yX76kNkLKerGIePHbO1QPEkk429fLdjD0k+YH8TfKk6Cj3YdwdqJI/IUDwxO6ESu5MWy/mI2cCxgiVDCONkFPwZwLPi+sSxyyYWLaRqlHL7+okiJa6gI4zil3O+ouWFXdnOefD0H78PpE0wu7e93dca+vKtferd9IYARUktf8t/OGsnHBYMqnwQ5l4aaiaenCE4nOzL/TvCI0lutTvXcdp1WqfRV17Ucu14WcC+T5ifzZ8tOTQ/PQ/Nf</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_050921403082542668</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_050921403082542668</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0508571403082537535</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_050901403082540077</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_050921403082542668</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BA0B9F8CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BC6380DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B1C61C8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>634d13ac-6760-46fd-bd1c-a401cbd6f484</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_UserGet_CS_FUNC_CHILD_BAU_Get_YOUTH_P2" searchProperties="true" id="d8ee8935-e9d5-4d68-850b-0db5d57d79a3"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="410a9f29-b2f5-4853-9a64-9fd65e23d3eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="800a552d-e015-407e-a37c-17f3c0b3db55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="3346cda0-1ce6-4d3f-822b-9a8464e2dac4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="4d5ba07b-e2a9-4f87-9833-b9dfd78d7496"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="e7734f2e-3d38-4f58-91fb-9778b91f3a19"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="a13c4dc1-38c6-4e24-852e-a73bb48f3c8a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="09a64e54-c4dc-4fd8-92e5-65091132ca14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH" id="5e36b74d-2144-4aa4-bb6e-df40e1a2ca0f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B23875FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC1999BBF48676D4E0401F0A07991D71:A75190AF"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0509101403082550998</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BC63A3DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC63A3DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BC63A3DD3FE0401F0A05992650</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B23875FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B0F793BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BA0BD38CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B23875FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B0F793BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BA0BD38CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0PzqlL7S8dIQZhHW3rrquoHf1y500PZRIm0CTFvTXb1JsBUSve2eYYXJ68pznvORJTjhKE8cfcA6ZIIxqwain/9uKWmBH7cjwUNg0XHBtA7mua4DXsVuoGyI39HQt4DyHgHKBqOjpjmW7htUy7M7E6vrq1264dvNB1+4g4xJaujQsXVunCeV+Gban5xn1GeKE+xSlwH2B/fHg8sKXnj6qOOn9kw3LMmDWnwmx8E0TNyLAkCS4gVlqnpg7PicR98ckpkjkGbzEjHhPf9m7Wq0aq2aDZbHpWJZlWl1T+kScxF/0/lG1GaKATtlmPUSUUYJRQp6RInUJYsYibZDELCNilr4DbZu2paANWGMD2y79opuvAUp2n0TaIZlxZPAZsiuwG5hCBhSDdnsT9PQvn+vgZu8kQ5RPWZbyvfXfUQJaQMIWEBm8yqxi93nEA+XqnwD2A4qTnJMCrtSYLBAGrl1nMCXrC8Ll8EVcK9uvrbn8kWrKAP9NW07Mba6SunmgOiMSAxf/p2fb/dqg3KEkhz7JrOM4a82+0jmbDOOoSC5ub4/Pj+fLr72SwrbzhlTd7pf1/rDWs/WyaZz+Zh1vjQJCfoTsaSZccc+GD0G+GA4Gz6f3Q/f7ZH3tepjOvV+LNfmn5bSe8M3PFG7xFGJhj7+1bhiYobO6PxLf5iHzmlfL8f1DQsPiDmXDiXg+f56H7bQovovg8tg5FrnDSXbmDNggDJ+CqFjHx0G85HT2o2utTtvLX5dXY340vx7fzcKrh/jcppOltWLty95rTts57BorSRjn4SNgUS3VeAQj7Uz2C4mP5UVZSGRMS1d/oTSKC6BC76tdSlr8XAoQiXzZzM36bGh3u91Tp9lpe2en7eFXy7XsM2tgtbtde9SyKw3asNijOGR0SlQspbKb+fmYIE59DjSCzChYjmfA9Q8QR0ggLaA38nAwymHCpIo/Wjxx87S9TCMHQppScB+91gzp2hUTP+nPbDAVkO0ot+3sKPcNYLIgoORdzTeXA86FLMUSFblI7EaBGhRyeQFkSoN9x+14JifpIgFF1ExZlCfQWMwWZWFMvvl3DIR5aSUcL1gmUGKXx+/d7Pa/VYWQPhFRDlyldAqymfDmJur4XpXP+3l723lX8IM8IuqUyaqKjOANk91Pr8OipqSelDoxzOupqLf8JcQBAPMDfuZ+aep4UUG2ole3q7wwpJz0q/4uUWPZyIsiLzvaVlKZSXhTKqZtjgHnUu+eJmwO1KwhzE9dNzXrvci1fZdfLmZ0LJCAVM6fVi4/8dYYA1dvjUCem/VnHzI7IWXdBKzFIdswkU8SxfjDVwv2sfKT5mv5t2JZ9NquA1hbcWSe8oEhCI3VSl0sT+/MBmYSlkglZNk2+CGAQ8F3jXWRay5CTlOYC3j/i6YkrqcjjFlORTDSS8O27JY8xdMC/FenNzCltL/c1Wv+7l39+/JiLAUwRXrtS/7b2SDluGDQ1ZOg5NLT1/LpKYPTeEvmXwgeUPphqzlojkbNs1rpvW7XaXlWXcCdTPpvzG8tWzXdPw/9Pw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0PzqlL7S8dIQZhHW3rrquoHf1y500PZRIm0CTFvTXb1JsBUSve2eYYXJ68pznvORJTjhKE8cfcA6ZIIxqwain/9uKWmBH7cjwUNg0XHBtA7mua4DXsVuoGyI39HQt4DyHgHKBqOjpjmW7htUy7M7E6vrq1264dvNB1+4g4xJaujQsXVunCeV+Gban5xn1GeKE+xSlwH2B/fHg8sKXnj6qOOn9kw3LMmDWnwmx8E0TNyLAkCS4gVlqnpg7PicR98ckpkjkGbzEjHhPf9m7Wq0aq2aDZbHpWJZlWl1T+kScxF/0/lG1GaKATtlmPUSUUYJRQp6RInUJYsYibZDELCNilr4DbZu2paANWGMD2y79opuvAUp2n0TaIZlxZPAZsiuwG5hCBhSDdnsT9PQvn+vgZu8kQ5RPWZbyvfXfUQJaQMIWEBm8yqxi93nEA+XqnwD2A4qTnJMCrtSYLBAGrl1nMCXrC8Ll8EVcK9uvrbn8kWrKAP9NW07Mba6SunmgOiMSAxf/p2fb/dqg3KEkhz7JrOM4a82+0jmbDOOoSC5ub4/Pj+fLr72SwrbzhlTd7pf1/rDWs/WyaZz+Zh1vjQJCfoTsaSZccc+GD0G+GA4Gz6f3Q/f7ZH3tepjOvV+LNfmn5bSe8M3PFG7xFGJhj7+1bhiYobO6PxLf5iHzmlfL8f1DQsPiDmXDiXg+f56H7bQovovg8tg5FrnDSXbmDNggDJ+CqFjHx0G85HT2o2utTtvLX5dXY340vx7fzcKrh/jcppOltWLty95rTts57BorSRjn4SNgUS3VeAQj7Uz2C4mP5UVZSGRMS1d/oTSKC6BC76tdSlr8XAoQiXzZzM36bGh3u91Tp9lpe2en7eFXy7XsM2tgtbtde9SyKw3asNijOGR0SlQspbKb+fmYIE59DjSCzChYjmfA9Q8QR0ggLaA38nAwymHCpIo/Wjxx87S9TCMHQppScB+91gzp2hUTP+nPbDAVkO0ot+3sKPcNYLIgoORdzTeXA86FLMUSFblI7EaBGhRyeQFkSoN9x+14JifpIgFF1ExZlCfQWMwWZWFMvvl3DIR5aSUcL1gmUGKXx+/d7Pa/VYWQPhFRDlyldAqymfDmJur4XpXP+3l723lX8IM8IuqUyaqKjOANk91Pr8OipqSelDoxzOupqLf8JcQBAPMDfuZ+aep4UUG2ole3q7wwpJz0q/4uUWPZyIsiLzvaVlKZSXhTKqZtjgHnUu+eJmwO1KwhzE9dNzXrvci1fZdfLmZ0LJCAVM6fVi4/8dYYA1dvjUCem/VnHzI7IWXdBKzFIdswkU8SxfjDVwv2sfKT5mv5t2JZ9NquA1hbcWSe8oEhCI3VSl0sT+/MBmYSlkglZNk2+CGAQ8F3jXWRay5CTlOYC3j/i6YkrqcjjFlORTDSS8O27JY8xdMC/FenNzCltL/c1Wv+7l39+/JiLAUwRXrtS/7b2SDluGDQ1ZOg5NLT1/LpKYPTeEvmXwgeUPphqzlojkbNs1rpvW7XaXlWXcCdTPpvzG8tWzXdPw/9Pw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1N6oQXaEWYQxFO311Yc3S9nQhJotE0xSQH3r99JsRUQPXpmmGGyuvKtb13yJcccZKkT9DnHTJCcauGwq/+LnKZltaBnONDqGK7TbBqghX2jg1zX9zoTFzlQ10LOCxxSLgAVXd2xbNewWobdubP8oPw1PLvzW9fuMeMSWro0LF1bZSnlQRm2qxeMBjnghAcUZJgHAgZx//IikJ4BqDjpveM1yzIg6yVCzAPThA2EIU5T2IB5Zh6bWz7HiAcxmVEgCobfYiLe1d/2LpfLxrLZyNnMdCzLMi3flD6Ik9mh3juoNmMU0mm+Xg8AzSmBICV/gCJ1iUWSI62fznJGRJJ9Am2btqWgDbyCBrRdeqib7wFKdt9E2iLJODB4AuwKLMJTzDCFWBtHYVc//F4H13vvGKB8mrOM76x/RgnTBU7zOUYGrzKr2H0fcU+5escYBiGFacHJAl+pMZkDiLl2w/CUrC4Il8OHuFa2X1tx+SPVlGH4k7Ycm5tcJXVzT3WGZIa5+D892+zXGuUepAXuPSTniRW2npJJayZGID7LVsPFI38AHd4tKWw6r0nV7X5b7w5rPVtvmwYus26Xpw8jdBRT9NKanifXN00nPJr+E+Y+N6OnM9s7AvEsvG3Hd0XMbt3w6nf0a8TZ5H4E7AFzx7QQt7iI6MH1pBgPH5F3yqL7X0ftOYyYOSnSe2oPrcWf5cXt8rGYjjuXdhShJD2HrbNwHKHT2aN5+yIu77NwMJ6fDPqvY/h8dcBy7/kmPlnBo+gmvD4Z3DjL7ntOmzlsGytJiIvJE4aiWqrxCIfaSPYLiK/lRVkIMqalazBXGsUFpkLvqV1KWoJCChBBgWzmej0a2L7vn1ijtt886bfap5Zr2SOrb7V93x56w0qD1ix2KA5yOiUqllLZ9fx8TRBmAccUYWYs8gImmOtfIA6BAFpII3k4csrxXS5V3Lae21PPfWpz7NqL57ZY5HiFXpKZrl3l4ppes/5UYLYl3bazJd0RhmROsNJ3NeBcTjgXshYvYFGI1G4sQIPiQt4ATIlw4Lgdz+Qkm6dYMTWzHBUpbsyTeVkZk6//HQNAXloJh/OcCZDa5fn7NL3db1UlpA8iyoGrlE6w7Cb+cBV1Aq/K5/O8vc28K/h+gYg6ZrKsghG4ZrL96X1a1JjUo1InBrldca+3/BBiD4D5BT9ztzR1PLQgG9Gr61XeGFJPelV/X0DjpVEsFkXZ0bbSSibhTSmZthljWEjBe73LnzE1awjzW/dNzXoncm3f5leIhMYCCJzJ+dPK5TceGzHm6rERyoOz+u5LZiukrJvAK7HPNkjlm0Qx/vLZAgOo/KT5Rv4tc4be27UHayOOzFO+MAShM7VSN8vrJ7MBcwlLpBTmbBN8H8C+4NvGusg1FyGnaVII/PkXTWlcVwcQ5gUV4VAvDZu6W/IUr3McvDt9gCm1/e2yXvFPL+uHy4tYKmAG9NqX/LezQcpxgVhXb4KSS1dfybenDE5nGzr/RnCP1A9azX5zOGyOaqn3fN9peVZdwK1Meh/MHy0bNd09D72/</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxHlPB6FXLgmKkjQQEtLr1BmDi8j4+yAaWJD7ADt148dmhQo7fSMhIS8s7322hcv+4yjOHK8NueQCMKo1veb+j+AGsiu12pGWA9rRsWp2oZbdx3DDVA1LMPUDYOprvU5T6FPuUBUNHXHsiuGVTPsxshyPfmzy6WqXZno2hgSLqGlS8nStW0cUe5lYZt6mlCPIU64R1EM3BPYG7ZvBp709FDOSW+d7VhmAZPWXIilZ5q4FACGKMIlzGLzzDzwOQu4NyQzikSawFvMgDf1t72bzaa0KZdYMjMdy7JMyzWlT8DJ7Kfe+pFvhqBPQ7ZbnyPKKMEoIq9IkboBMWeB1o5mLCFiHn8CbZu2paAN2GID2xX6UzffA2Tsvol0QDLhyOBzZOdgjxBCAhSD9vTYb+o/v9fB3d5RgigPWRLzo/WfUQK6hogtITB4nlnO7vuIJ8rVOgPs9SmOUk7WcKvGZIkwcO0+gZBsB4TL4Qu4lrVf23L5I/mUAf6TtpyZ+1wldfNEdXwyAy7+T8/2+7VDGaMohdbq5Xoc9Z+ve4MHPDcDsG87k46PwwHbNDMK+847UkW739bHw1rM1tumSXjnRl0WXKynbpvcPw1Gz+PGbN3uDqsm78RVZzO6DHrLqwW/Gv9yw9+X/u8wvKj7YeNi8upc1mA1mDjo9Rf/Nf3rByxuqui2/Pw0Glj+pJfSKik3LvrjxbU9fO1tqp3q06S7sePHeIrunhrO7+uLu6v7kYgv29Or/sNt7aU2G9efn+v3o+4PNLxolAO2MrtPD4tVMokvG833nPZzODTmkjBMpwvAIl+q8ej7Wk/2C4mv5UVZSGCEmau3VBrFBVCht9QuJS1eKgWIBJ5s5m7dO7dd1+20rY5fbpx3612rYtk9q23VXdf2a51cg3YsjiieMxoSFUup7G5+viaIY48DDSAx1izFc+D6F4g+Ekjr00d5OBjlMGJSxQPmWummAunmpbGdLhy2YGVhNbiu3TJxR++SdiggOVBu2zlQ7kfAZElAybuaby4HnAtZihVapyKyS2tUopDKCyBRGuw5lYacJxIvI1BEzZgFaQSl5XyZFcbku3/HQJhnVsLxkiUCRXZ2/D7N7vhbXgjpExDlwFVKHZDNhBM3kZXn8yHv6skbK4dvpwFRp0xWVSQE75gcfnofFjUlxaQUiWFu59yLLX8IcQLA/IKfeVyaIl6wJnvR89tVXhhSTlp5f1eotCql63WadbSupDKR8KZUTNscAk6l3r2M2DNQs4Awv3XdFKyPIhf2Q36pmNOhQAJiOX9atvzGW2MIXL01+vLcbL/7kDkIKesmYCtO2c4j+SRRjL98tWAPKz9pvpd/G5YE7+06gbUXR+YpHxiC0JlaqYvl5ZPZwEzCEqmELNkHPwVwKvihsShywUXIaZqmAj7/oimJa+oIY5ZS0ff1zLAvuxlP8bIE793pA0wm7W939ZZ/elf/fTMYSgGMkV74kv92Nkg2Lhh09STIuDT1rXx6yuB0tifzbwRPKP15rdwu+365Vyh91XWdWtUqCniQSeuD+aNlr6bH56H1Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0509101403082550998</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0509101403082550998</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_050961403082546335</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_050981403082548656</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0509101403082550998</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B23876FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B0F794BA67E0401F0A07991D5D</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BA0BD48CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>09a64e54-c4dc-4fd8-92e5-65091132ca14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00039_UserGet_CS_FUNC_CHILD_BAU_Get_ADULT_BAU_P2" searchProperties="true" id="66e47ede-a88e-4e3c-a6fd-b05d808fd6ea"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c074e466-e38c-4500-92a1-8a12a14456ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0525bc5f-1630-4385-8a21-840c2e84ddb7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="9f7e0b43-b0a2-455d-89b2-aa809afd3901"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="b3866c0a-a069-41d5-ab32-cbaa36cb3fa0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="3b21a417-69cd-4dde-8335-e62f1808d7c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="336fc889-1083-4d23-a7b4-b8523e2934a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="55a68fd3-0b14-4715-839f-96ccd027cddb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="531d3c81-172f-4611-8e19-a86bb54a424f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B1D2FC8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B09F89610AE0401F0A05992642:B9139B50"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0518191403083099751</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B2B8A4496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B8A4496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B2B8A4496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B1D2FC8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B1D3158AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B2B8BB496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B1D2FC8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B1D3158AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B8BB496AE0401F0A05992648</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jS5+AkDZBEBYkCnTK9Q9tp5+XI2AZcEjuNHQh8/bFDkwKlPZ0jISHvbK+99sXLPhEwjtywIwRJJeXMGPRa5j/YwQQ6+NgauxBZHkYTC9ab2HIcF2EYjOvY90xjIERGBkxIyGTLdG3Hs+yG5fj3dhA6fug0anWv8cc0HkkqFLRyqdmmkccRE2ERtmVmKQs5FFSEDMZEhBKFo87VZag8Q1hyMtsnG5ZFwLQ9kzIJAUA1TBCJIlRDPAYnYMfnBItwRKcMyiwlbzGxaJlve5fLZW15XOPpFLi2bQM7AMoHCzo9Mts/ys0ED9iEb9ZdyDijCEZ0DTWpKyJnHBudaMpTKmfxJ9AOcGwNbZEcWcjx2JEJ3gMU7L6JtEMyFdASM+iUYEMyISlhiBgPw0HLPPpeBzd771PIxISnsdhb/x0lwhYk4gnBligzK9l9H/FAudonBIUDhqJM0AW51mOSQESEcZuSCc0vqVDDh4VRtN/IhfrRcsoI+pu2nIBtroo6OFCdHp0SIf9Pz7b7tUF5hFFG2tfsen4doOObuiCNJ+z/WZ8/9M+GXendtQoK284bUlW739b7w1rN1tumaA5SDo//rBoXd7N5jv1p5NN1cj4Mzp31xaUN4iZ/jCdZ7pP+Ek9fRvQJ9uyn37+e8+DXEDzz65f68ySZXwgw+kGmj+ufWYc2eXOcN8WxGF2mQA3YOvmdXNy645vz1bA/71wQ/6qPk8RJwM3LL766m50+C7oO/Ob49ln+RCOMxOsPFLCHPl+svfpp1M3rXp9NW+85beewaywlYZSNXwiS5VKPx6BnnKl+Qfm1vGgLxdakcA0TrVFCEibNtt6lpSXMlABRHKpmbtZnXScIglOn5551/c6Z27c92zmzO3YzCJxeo1lq0IbFHsUuZxOqY2mV3czP1wRRHArCMEmtBc/QjAjzC8QelNAYsKE6HJwJcs+VijvUb64CW8qGDafxy9zm9volbTbGpnHN5Q27STsTSdId6XbcHekeEkQTSrS+6wEXasKFVLV4hYtMRk5tAWuMZOoGSLUIh67n14GgcRIRzRTEHGcRqSWzpKgMEJt/14JIFFYqUMJTCSOnOH+fprf/rayE8sFUOwid0ilR3SQHriK7zOfzvOvbeZfwnQxTfcxUWWVK0YbJ7qf3adFjUo1KlRgSTsm92vKXEAcAwBf8wH5pqnh4Qbeil9erujGUnrTL/r7C2mstWyyyoqNNrZWpggdKMh0wIihTgre653PCQAUBvnXfVKz3Ilf2XX6ZnLGRhJLEav6MYvmNx8aICP3YGKiDk3/3JbMTUtVNklwesnUj9SbRjL98tqAQaT9lvlV/S57i93YdwNqKo/JULwxJ2VSv9M2y+mQ2EFewVEkhT7fBDwEcCr5rrIpccZFqmsaZJJ9/MbTGtUyIEM+YHPTMwrCtuwVPuUpI+O70AabQ9rfLOhefXtZPV5cjpYAxNCtf+t/OFi3GBRFTvwkKLi0zV29PFZxNt3T+jeABqXdP/Y7nBY1OJfX1IHAbnl8VcCeT9gfzR8tWTffPQ/tf</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jS5+AkDZBEBYkCnTK9Q9tp5+XI2AZcEjuNHQh8/bFDkwKlPZ0jISHvbK+99sXLPhEwjtywIwRJJeXMGPRa5j/YwQQ6+NgauxBZHkYTC9ab2HIcF2EYjOvY90xjIERGBkxIyGTLdG3Hs+yG5fj3dhA6fug0anWv8cc0HkkqFLRyqdmmkccRE2ERtmVmKQs5FFSEDMZEhBKFo87VZag8Q1hyMtsnG5ZFwLQ9kzIJAUA1TBCJIlRDPAYnYMfnBItwRKcMyiwlbzGxaJlve5fLZW15XOPpFLi2bQM7AMoHCzo9Mts/ys0ED9iEb9ZdyDijCEZ0DTWpKyJnHBudaMpTKmfxJ9AOcGwNbZEcWcjx2JEJ3gMU7L6JtEMyFdASM+iUYEMyISlhiBgPw0HLPPpeBzd771PIxISnsdhb/x0lwhYk4gnBligzK9l9H/FAudonBIUDhqJM0AW51mOSQESEcZuSCc0vqVDDh4VRtN/IhfrRcsoI+pu2nIBtroo6OFCdHp0SIf9Pz7b7tUF5hFFG2tfsen4doOObuiCNJ+z/WZ8/9M+GXendtQoK284bUlW739b7w1rN1tumaA5SDo//rBoXd7N5jv1p5NN1cj4Mzp31xaUN4iZ/jCdZ7pP+Ek9fRvQJ9uyn37+e8+DXEDzz65f68ySZXwgw+kGmj+ufWYc2eXOcN8WxGF2mQA3YOvmdXNy645vz1bA/71wQ/6qPk8RJwM3LL766m50+C7oO/Ob49ln+RCOMxOsPFLCHPl+svfpp1M3rXp9NW+85beewaywlYZSNXwiS5VKPx6BnnKl+Qfm1vGgLxdakcA0TrVFCEibNtt6lpSXMlABRHKpmbtZnXScIglOn5551/c6Z27c92zmzO3YzCJxeo1lq0IbFHsUuZxOqY2mV3czP1wRRHArCMEmtBc/QjAjzC8QelNAYsKE6HJwJcs+VijvUb64CW8qGDafxy9zm9volbTbGpnHN5Q27STsTSdId6XbcHekeEkQTSrS+6wEXasKFVLV4hYtMRk5tAWuMZOoGSLUIh67n14GgcRIRzRTEHGcRqSWzpKgMEJt/14JIFFYqUMJTCSOnOH+fprf/rayE8sFUOwid0ilR3SQHriK7zOfzvOvbeZfwnQxTfcxUWWVK0YbJ7qf3adFjUo1KlRgSTsm92vKXEAcAwBf8wH5pqnh4Qbeil9erujGUnrTL/r7C2mstWyyyoqNNrZWpggdKMh0wIihTgre653PCQAUBvnXfVKz3Ilf2XX6ZnLGRhJLEav6MYvmNx8aICP3YGKiDk3/3JbMTUtVNklwesnUj9SbRjL98tqAQaT9lvlV/S57i93YdwNqKo/JULwxJ2VSv9M2y+mQ2EFewVEkhT7fBDwEcCr5rrIpccZFqmsaZJJ9/MbTGtUyIEM+YHPTMwrCtuwVPuUpI+O70AabQ9rfLOhefXtZPV5cjpYAxNCtf+t/OFi3GBRFTvwkKLi0zV29PFZxNt3T+jeABqXdP/Y7nBY1OJfX1IHAbnl8VcCeT9gfzR8tWTffPQ/tf</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4j3eMP2ID9gRmSGhamgAt0DTNyx0hrUFgS8SSgeTXVzKxA5TkpneGGUbr1dmzHzrSuUBp4kUdISCTlDOj122Z/zamZEpCP7SIjwPLD5qhFRIvtjyvjl2nPg3jhmcaPSFy6DEhEZMt03Nc33LqltucOGHkNtWv5vvBvWncQiYUtHKpOaaxTRMmoiJsy8wzFnEkqIgYSkFEEkfjTv8mUp4RKjmZ7fMdyyJg1p5LuYpsG9cIYEgSXMM8tc/tA59zIqIxnTEk8wyeYxLRMp/3bjab2uasxrOZ7TmOYzuhrXyIoLOPZvtDuRlIj8V8t75EjDOKUUKfkCbVBznnxOgkM55ROU9fgXZt19HQFmyxhV2ffTTtlwAFu3ciHZDMBLLEHLkl2AhiyIBhMH6Mei3z4/s6uNs7yRATMc9ScbT+O0rA1pDwFRBLlJmV7N6PeKJc7XPAUY/hJBd0DQM9JiuEQRjfMojp9oYKNXxEGEX7ja1QP1pOGeC/acu5vc9VUbdPVKdLZyDk/+nZfr92KLcoyaE9HPxYxqN4MFp+5uPh54Dz+AtI3L2/5q2Cwr7zjlTV7uf18bBWs/W8qcvjX4vw7Onigt2CdyGv3bFdx2c/Z3lw3fuSwj+YhoOzReAP/e9yIp7IqLEa45+Tr/d2mCN/mDz1N+P+MslvH58+hHYwkk/x0Kmv8ST8Rbxk1L9fzvu4eZOPP01Sr/HtV+fux9fZ9y/sLgSyvBRrz0eeGAbLoLFh3Q39HlwtRmo6yYcz747YczU3XZINJ/ZiO2i2XnLaz+HQWErCOJ8uAMtyqcej1zWuVL+QfFtetIUSKy5co5XWKCGBSbOtd2lpiXIlQJREqpm79dWlG4bhhds9c4Nm58r75PiOe+V0nEYYut16o9SgHYsjipecxVTH0iq7m5+3CeI0EsAIZNaa53gOwnwDsYskMnpspA4HZwImXKm4C8hdzOh0GU/ZYjFtiKVap9Pp3DQGXA7ZMOvEErID6Xa9A+keAaYrClrf9YALNeFCqlo8oHUuE7e2RjUGuboBMi3Ckec3A1vQdJWAZmqnnOQJ1FbzVVEZW+z+PQthUVipwCueSZS4xfl7Nb3jb2UllA+h2kHolC5AdRNOXEVOmc/reQf7eZfwnZxQfcxUWWVG8Y7J4aeXadFjUo1KlRgWbsm92vKXECcA7Df42celqeKRNd2LXl6v6sZQetIu+/uAag+1fL3Oi442tFZmCt5WkunaY8C5ErzHCV8CsysI+133TcX6KHJlP+SXyzkbSyQhVfNnFMt3PDbGIPRjo6cOzva9L5mDkKpuErbylO0yUW8SzfjNZwuOsPZT5m/qb8Mz8tKuE1h7cVSe6oUhKZvplb5ZHl+ZDcwVLFVSyLN98FMAp4IfGqsiV1ykmqZpLuH1L4bWuJaJMOY5k72uWRj2dbfgKR9XEL04/QFTaPvzZb0Vr17Wd/2bsVLAFJmVL/1vZ4sW44LB1G+CgkvL3Kq3pwrOZns6/0zwhNR7F82O74f1TiX1QRh6db9ZFfAgk/Yf5j8tezU9Pg/t3w==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/A4jx3jDwwYT2AGQtvQQhICTVNe7gh5wUpsybFkY/rrr2RiAoTkpneGGUbr1dmzHzrSOUdx5Pg9ziEVhFFtOOjo/3iuV0euExgeoJbhNpyWsai3LKPhuvU64EYdWaBrQ84zGFIuEBUd3bFs17Cahu3NrLZve75j17xme65rd5ByCS1dapauFXFEuV+G7ehZSn2GOOE+RTFwX2B/2huPfOnpo4qT3j3fsiwDpt1QiMQ3TVwLAEMU4RpmsXluHvicB9yfkhVFIkvhOWbAO/rz3vV6XVvXayxdmY5lWabVNqVPwMnqTO9+qjZDMKRLtl1fIMoowSgif5AiNQYRskDrRSuWEhHGb0Dbpm0paAMKbGDbpWe6+RKgZPdBpAOSKUcGD5Fdgd3CElKgGLSft8OOfvaxDm73zlJE+ZKlMT9a/x0loDlELIHA4FVmFbuPI54oV/ccsD+kOMo4yeFKjUmCMHDtJoUlKUaEy+ELuFa2Xyu4/JFqygD/TVvOzX2ukrp5ojoDsgIu/k/P9vu1RblDUQbdca8xCVfoy8/v+Y+5E6Jo9OViEt+vRot1p6Sw77wltWv38/p4WHez9bxp0nKcPLTdu8Gf8bSHW3lTsM04fhjDY/R5w6ybIn/8MZhMf84X3nx0eTcR9QvBkZc/oW/YG7jj9UNv4Vz/SMJ+61O+nP3uh38EeZwMB8U9vmpe3vS+FUvOLO9XlN7j0eNgklzCXYNl6a+HFpjU+fW9cGfWlMz7c9SeXC5/tz4XxeVV/dPVIp3NLttJNKD3TTFHvzPWeclpP4dDYyUJ02zxAFhUSzUew4H2VfYLifflRVlIYCxLVz9RGsUFUKF31S4lLX4mBYgEvmzmdv31wm63232n7/X7brvZ+2K5lv3V6lmNdttpul6lQVsWRxQvGF0SFUup7HZ+3ieIY58DDSA1cpbhELj+DuIACaQN6a08HIxymDGp4jZ5sDZrZ4M367Zt0/CpyGy0Bmw7unbFxDW9TntLAemBdtvOgXbfAiYJASXwasK5HHEuZDGeUJ6JyK7lqEYhk1dAqlTYd1yvYXISJxEoqmbMgiyCWhImZWlMvv13DIR5aSUcJywVKLLLA/hmfsffqlJIn4AoB65S6oNsJ5y4i+wqn1d5N07eWRV8LwuIOmeyriIleMvk8NPLuKg52c3KLjHM7Yr7bstfQpwAMN/hZx6XZhcvyMle9Op+lVeGFJRu1d8nVHuqZXmelR1tKbFMJbwpNdM2p4AzqXibGXsEau4gzA9dODvWR5F39kN+mQjpVCABsZw/rVx+4LUxBa5eG0N5coqPPmUOQsq6CSjEKdtFJB8livG77xbsY+UnzTfyb83S4KVdJ7D24sg85RNDELpSK3W1bN6YDcwkLJFayNJ98FMAp4IfGndF3nERcpoWmYC3v2hK5Do6wphlVAwHemnYF96Sp9gk4L84vYIpxf35ti74m7f1/Xg0lRIYI33nS/7b2SDluGD5VpX+JZeOXsjHpwxOV3tC/0zwtNb33Pe0/jCT7ivza8teTY/PQ/df</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0518191403083099751</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0518191403083099751</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0518151403083095498</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0518171403083097769</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0518191403083099751</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B1D2FD8AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B1D3168AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B2B8BC496AE0401F0A05992648</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55a68fd3-0b14-4715-839f-96ccd027cddb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00040_UserGet_CS_FUNC_CHILD_BAU_Get_ADULT_SAU_P2" searchProperties="true" id="1e7bb601-c7e3-4093-a34d-6920f59ee058"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e6413e2d-37fe-4a17-97ec-faf8dbce8549"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="1c3cf033-0b7c-4607-97fd-f08a8f9798c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="a5948679-00cd-4a97-85e8-53ad9509adc3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="e2fcec60-4c1d-4003-b40c-88266ef7ae74"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="de5a48d8-e51b-42f3-a8d6-b66b5528a39f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="462775f5-1ee4-443c-af0e-e8adac4d3001"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="7d3afa21-d1cd-4065-aa5f-fa33ae4a458e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="5017b38e-1591-42d7-bbb4-70c38b4d456b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999B22AB6DB33E0401F0A05992646</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B2D9BDA9EAE0401F0A05992634:28AE5BCC"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0518271403083107542</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B1D3388AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D3388AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D3388AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999B22AB6DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B3E32E9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B242B9FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999B22AB6DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B3E32E9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B242B9FB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx6OQOFwTFSQuZUqH0hZ6fzkyjgNuEyfYToB+/diBpEBpT3skJOSd7bXXvnjZpxyGge22OcdMkIhqg15T/7dRbwB76gMD2uWqUUENx5haHjB8XEX1qQ9BowF0bcB5ggeUC0hFU7ctUDGsmgEat5bjgoZrV0rlhv2sa/eYcQktXUqWrq3CgHI3C9vUE0bdCHLCXQpDzF2B3En7cuhKTxfmnPTW6YZlFpC15kLErmmikocRDgJUQlFonpp7PqcedydkRqFIGN7G9HhT3+5dLpelZbkUsZlpW5ZlWo4pfTxOZid661e+GXsD6kebdRfSiBIEA/IGFalLLOaRp7WDWcSImIefQAMTWArawCtkIFChJ7r5HiBj902kPZKMQ4PPIcjBxtjHDFOEtbvxoKmffK+Dm723DFLuRyzkB+ufUcI0xUEUY8/geWY5u+8jHilX6xQjd0BRkHCS4pEakxgizLVrhn2yGhIuh8/jWtZ+bcXlj+RThtFP2nJq7nKV1M0j1emRGebi//Rst18blHsYJLj1dHFfe+7cdkfL32a1uqh2nme2uKOdm2mlmVHYdd6QKtq9XR8OazFb201n8Xi87vjmw+9+53rlVK6XNec1ZSzpPdbteuOCXfXhxbj25IuX1KlfvNWd0L+76A3jeNi/Y5dk2lsybFZfb9d/4C98ltwPb/xJfx2nq4W1mI8H3fSs8nI+7Hg3azpIVsHV0Am6D/3k4f784fFsbYfPqD6aPTn/ON3pedIfXt3UJp0YCe+XPZpG4Wg5Akvf9J57ae0Pb77ntJvDvjGXhEkyfcFI5Es1HoOe1pf9guJreVEW4hl+5urGSqO4wFToLbVLSYubSAEiniubuVn3u8BxnI5ttzu1XqdcPrMqFuhbbavqOHatUss1aMPigGI3oj5RsZTKbubna4IodDmmHmZGGiVojrn+BWIPCqgN6FgejohyfBtJFZ/OyQt3KsK3QwukHL5NwbJaXvhzXRtF4opesbYvMNuTbmDvSfcYIxITrPRdDTiXE86FrMUCpokIQCmFJYoTeQMwJcJyX6NqchLGAVZMzTDykgCX4nmcVcbkm3/bgIhnVsJRHDEBA5Cdv0/TO/yWV0L6eEQ5cJVSB8tu4iNXEcjz+Tzv6m7eOXw78Yg6ZrKsghG0YbL/6X1a1JgUo1IkhjjIuRdbfghxBMD8gp95WJoinpeSnej59SpvDKknrby/C1halJI0TbKO1pVWMglvSskE5gSjRAre+jZ6xdQsIMxv3TcF64PIhX2fXyLmdCKgwKGcPy1bfuOxMcFcPTYG8uCsvvuS2Qsp6ybwShyzdQP5JlGMv3y2IBcpP2m+ln/LiHnv7TqCtRNH5ilfGILQmVqpm2X9yWygSMISKYUR2wU/BnAs+L6xKHLBRchpmiYCf/5FUxrX1CFCUULFoKdnhl3dzXiKdYzdd6cPMJm2by/rFf/0sn68HE6kAoZQL3zJfzsbJBsXhHX1Jsi4NPWVfHvK4HS2o/NbgkekHvTK5Uaj3bcLqa87DujV6kUB9zJpfTB/tOzU9PA8tP4C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx6OQOFwTFSQuZUqH0hZ6fzkyjgNuEyfYToB+/diBpEBpT3skJOSd7bXXvnjZpxyGge22OcdMkIhqg15T/7dRbwB76gMD2uWqUUENx5haHjB8XEX1qQ9BowF0bcB5ggeUC0hFU7ctUDGsmgEat5bjgoZrV0rlhv2sa/eYcQktXUqWrq3CgHI3C9vUE0bdCHLCXQpDzF2B3En7cuhKTxfmnPTW6YZlFpC15kLErmmikocRDgJUQlFonpp7PqcedydkRqFIGN7G9HhT3+5dLpelZbkUsZlpW5ZlWo4pfTxOZid661e+GXsD6kebdRfSiBIEA/IGFalLLOaRp7WDWcSImIefQAMTWArawCtkIFChJ7r5HiBj902kPZKMQ4PPIcjBxtjHDFOEtbvxoKmffK+Dm723DFLuRyzkB+ufUcI0xUEUY8/geWY5u+8jHilX6xQjd0BRkHCS4pEakxgizLVrhn2yGhIuh8/jWtZ+bcXlj+RThtFP2nJq7nKV1M0j1emRGebi//Rst18blHsYJLj1dHFfe+7cdkfL32a1uqh2nme2uKOdm2mlmVHYdd6QKtq9XR8OazFb201n8Xi87vjmw+9+53rlVK6XNec1ZSzpPdbteuOCXfXhxbj25IuX1KlfvNWd0L+76A3jeNi/Y5dk2lsybFZfb9d/4C98ltwPb/xJfx2nq4W1mI8H3fSs8nI+7Hg3azpIVsHV0Am6D/3k4f784fFsbYfPqD6aPTn/ON3pedIfXt3UJp0YCe+XPZpG4Wg5Akvf9J57ae0Pb77ntJvDvjGXhEkyfcFI5Es1HoOe1pf9guJreVEW4hl+5urGSqO4wFToLbVLSYubSAEiniubuVn3u8BxnI5ttzu1XqdcPrMqFuhbbavqOHatUss1aMPigGI3oj5RsZTKbubna4IodDmmHmZGGiVojrn+BWIPCqgN6FgejohyfBtJFZ/OyQt3KsK3QwukHL5NwbJaXvhzXRtF4opesbYvMNuTbmDvSfcYIxITrPRdDTiXE86FrMUCpokIQCmFJYoTeQMwJcJyX6NqchLGAVZMzTDykgCX4nmcVcbkm3/bgIhnVsJRHDEBA5Cdv0/TO/yWV0L6eEQ5cJVSB8tu4iNXEcjz+Tzv6m7eOXw78Yg6ZrKsghG0YbL/6X1a1JgUo1IkhjjIuRdbfghxBMD8gp95WJoinpeSnej59SpvDKknrby/C1halJI0TbKO1pVWMglvSskE5gSjRAre+jZ6xdQsIMxv3TcF64PIhX2fXyLmdCKgwKGcPy1bfuOxMcFcPTYG8uCsvvuS2Qsp6ybwShyzdQP5JlGMv3y2IBcpP2m+ln/LiHnv7TqCtRNH5ilfGILQmVqpm2X9yWygSMISKYUR2wU/BnAs+L6xKHLBRchpmiYCf/5FUxrX1CFCUULFoKdnhl3dzXiKdYzdd6cPMJm2by/rFf/0sn68HE6kAoZQL3zJfzsbJBsXhHX1Jsi4NPWVfHvK4HS2o/NbgkekHvTK5Uaj3bcLqa87DujV6kUB9zJpfTB/tOzU9PA8tP4C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyzyFxwi1RQaJc5tChHVqgtPNyZBwDbhMbbAfCfP3YoUmB0p72SEjIO9trr33xsi8EjCM3aAmBuSSMGv1Ow/wXgHlY9mueFdYAssqzqmvVMQCW51bKZa8MQ6fim0ZfiAT3qZCQyobpOqBsOVUL1MeOH4B64FZLXt39bRr3mAsFrVxKjmmkcURFkIVtmAmnAYOCiIDCGItAomDUuh4EyjOAOSezebFnmQXkzaWUq8C2USnECEcRKiEW2xf2kc9FKIIRWVAoE45fYoaiYb7s3W63pa1XYnxhu47j2I5vK59QkMV3s/kt34zDPp2z/boNKaMEwYj8gZrUNZZLFhqtaME4kcv4HWhgA0dDWzhFFgJl+t20XwNk7D6JdESSC2iJJQQ52B2eY44pwsbkrt8wv3+ug/u9Yw6pmDMei5P11yhhusERW+HQEnlmObvPI54pV/MCo6BPUZQIssE3ekxWEGFhDDmek3RAhBq+UBhZ+41UqB/Jpwyjr7Tlwj7kqqjbZ6rTIQss5P/p2WG/9ij3MEpws7ILp0/bNelyBHfree/RfYie2gjViGhkFA6d96SKdr+sT4e1mK2XTZvBVaWc3F7a9ubKe3Znvyctbztz27cDflXtPG/bPJ6Jm2fJFt3RZDdFKPkx7NrDYTSZ3targ38ISG/cO3cIqPfjW3rbW7BBKNHPR/THb21Xt/fXo9mIg9F0+ms77VWvxz9/XD7Mux12z+DDw/ipVcPp47wmnV7tgUX+oNW/Gic3OI5736o2+j2J1u3J42Qa390MtsNu4zWnwxyOjbkkjJLZE0YyX+rx6HeMnuoXlB/Li7aQ0JpnrsFKa5SQmEqzqXdpaQkSJUAkDFQz9+teG/i+f+l1Pbfrq0XXKTug57Scmu+DTsXPNWjP4oRim9E50bG0yu7n52OCKA4EpiHm1oYlaImF+QFiB0po9OmdOhyMCjxmSsXlzk2jHV/P6m6a1p3FYpZ4lVRUTOOGyV/0F2/NJeZHyg3cI+W+w4isCNbyrudbqAEXUpViDTeJjEBpA0sUJ+oC4FqDA7dcr9iCxKsIa6J2zMIkwqXVcpUVxhb7f9eCSGRWItCKcQkjkB2/d7M7/ZYXQvmERDsIndIlVs3EZ24ikOfzft6Vw7xz+FYSEn3KVFUlJ2jP5PjT67DoKSkmpUgMCZBzL7Z8EeIMgP0BP/u0NEW8cEMOoue3q7owlJw08/6uYWldSjabJOtoTUslV/C2UkxgjzBKlN7txuwZU7uAsD913RSsTyIX9mN+iVzSkYQSx2r+jGz5ibfGCAv91uirc5N+9iFzFFLVTeJUnrO1I/Uk0Yw/fLWgAGk/ZR6qvy3j4Wu7zmAdxFF5qgeGJHShV/pi2b0zG4gpWKKUkPFD8HMA54IfG4siF1ykmqZZIvH7XwwtcQ0TIsQSKvsdMzMcym7GU+5WOHh1egOTSfvLXZ2Kd+/qh+vBSAlgDM3Cl/y3s0WycUHY1E+CjEvDTNXTUwWniwOZfyF4RulBx/Pq9VbPPVb6aq0o4FEmzTfmt5aDmp6eh+Zf</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHkchcQiXRAUJStnJ9A6dznZfVo5zANPEhtgB2l8/dmhSoLTbWQkJ+eT4O9+5+LNPBE4TN+gJAZmknBnhoGP+i1EjQl6zZSESu5bntX0Lu5FnRe1WK243ScOrt0wjFCKHkAmJmeyYroM8y2laqH3n+AFqB65fa9adf0zjHjKhoJVLzTGNTZowERRhO2aesYBjQUXAcAoikCQY9y4vAuUZ4JKT2T3ZsiwCZt2ZlIvAtkktBgJJQmqEp/aJvedzEotgTKcMyzyDl5ix6Jgve9frdW1dr/FsaruO49iObyufWNDpV7P7pdwMccgmfLs+xYwzSnBCn7EmdQlyxmOjl0x5RuUsfQca2cjR0BZsiEWQx76a9muAgt0nkfZIZgJbYoZRCTaCCWTACBg/R2HH/Pq5Dm733mWYiQnPUnGw/jNKwFaQ8AXEligzK9l9HvFIubonQIKQkSQXdAVXekwWmIAwbjKY0M0FFWr4YmEU7Tc2Qv1oOWVA/qQtJ/YuV0XdPlKdAZ2CkP+nZ7v92qLc4ySH7q8NzsngVzwKWzNHzp9Zf/zoziTjvbNOQWHXeUuqavfL+nBYq9l62SRxe/Tw9LD84VIi4fl8tJHXzYcZR2x5jZ5u571G3D6LLsZN0TtbX2WN8wVZDmMK9z953E8iYf90W+gqYuH99+cvnkdubb993XBXIZn1b6LoAT8uH79d3p5Pf6S382HcmHxfTObjRzlyBlFj+dfVt2Wz7n1bnd7eDPvEy+aS0dY6Pe9HX5L7+SZy1CnmD7Q+OoMztu685rSbw76xlIRxHs2ByHKpxyMcGEPVLyw/lhdtobE1KVyDhdYoIYFJs6t3aWkJciVANA5UM7fr4Snyfb/vem7fH/Zbp2eO56Ch03Navo8GTVRq0JbFAcVTziZUx9Iqu52fjwmSNBDAYsisFc/JDIT5AeIAS2yEbKQOB2cC7rhScSTiJnr0V6tmXbaeGzlyWSvyRYxN44rLa3ad9SYSsj3pRu6edI+A0AUFre96wIWacCFVLZZ4lcsE1Va4xiBXN0CmRThwvXbDFjRdJKCZ2imP8wRqi9miqIwttv+uhYkorFSQBc8kTlBx/t5N7/BbWQnlE1PtIHRKfVDdhCNXESrzeZN34+iVVcL3cnUI1DFTZZWZOjoFk/1Pr9Oix6QalSoxIqqxqLb8IcQRAPsDfvZhaap48YruRC+vV3VjKD3plv1d4tqylq9WedHRltbKTMHbSjKRPQaSK8F7uuOPwOwKwv7UfVOxPohc2ff55XLGxhJLSNX8GcXyE4+NMQj92AjVwdl89iWzF1LVTcJGHrOdJupNohl/+GwhAdF+ynyj/tY8i1/bdQRrJ47KU70wJGVTvdI3y9M7s0G4gqVKCnm2C34M4FjwfWNV5IqLVNMU5RLe/2JojeuYmBCeMxkOzMKwq7sFT/m0gODV6Q1Moe0vl/VGvHtZ/315MVYKmGKz8qX/7WzRYlwImPpNUHDpmBv19lTB2XRH518IHpF6NKjX2+3e0D2Q+tdZ3suk+8b81rJT08Pz0P0N</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0518271403083107542</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0518271403083107542</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0518231403083103491</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0518251403083105565</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0518271403083107542</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999B22AB7DB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B3E32F9FC1E0401F0A07991D59</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B242BAFB7CE0401F0A07991D61</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d3afa21-d1cd-4065-aa5f-fa33ae4a458e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_UserGet_CS_FUNC_CHILD_BAU_Get_ADULT_FAU_P2" searchProperties="true" id="7af4cb6a-781a-4269-a422-d50ba0b645e7"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8b75eac1-f29b-433d-bab3-b3db7480270f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7d8b49ea-43ac-457b-8023-6c6c6c2424f3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="815c6184-2a71-4577-a822-49c2b4d94356"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT FAU" id="1ff50b9e-0aef-495e-928c-d0e758622d6e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU" id="bb760318-ee3c-4158-b651-1d4e1260b48a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU" id="531962f6-980f-4701-8cdd-17f2dcf9f7a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="2c72d510-76b3-435c-9e82-1af7b14e1b10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="fcb87694-f6cf-4d68-9ba9-80445bb44958"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999BC02B876D4E0401F0A07991D71</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B3B644494BE0401F0A05992630:8D6231A0"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0518351403083115463</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999BA15C58CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999BA15C58CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999BA15C58CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999BC02B876D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999AFB4D15309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999BA15D68CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999BC02B876D4E0401F0A07991D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999AFB4D15309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999BA15D68CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1XIhWuigsSldDKFTgdaZtqXI+NswJ3ETmMnQL/+2KFJgaE97ZGQkHe211774mWfcxSFjtflHBJBGNX8QVv/Z+HOsTt3kFF16tioLXDdmAO4Ri2oB07Vacyh3tQ1n/MUfMoFoqKtO5ZdM6yGYbduLdezW17VrriN2oOuzSDhElq6VCxd20Qh5V4etq2nCfUY4oR7FEXAPYG9aXc88qSnhwpOeud8xzIPmHRWQsSeaeJKABjCEFcwi8xz88DnPODelCwpEmkCLzED3tZf9q7X68q6WmHJ0nQsyzIt15Q+ASfLr3rnS7EZAp8u2G7dR5RRglFInpEiNQaxYoHWDZcsIWIVvQFtm7aloA3YYAPbNfpVN18D5Ow+iHRAMuHI4CtkF2ATWEACFIN2N/Hb+tePdXC39zZBlC9YEvGj9ecoAc0gZDEEBi8yK9h9HPFEuTrngD2f4jDlJINrNSYxwsC1mwQWZDMiXA5fwLW8/dqGyx8ppgzwZ9pybu5zldTNE9UZkCVw8X96tt+vHcoMhSl0/gyaZ6J7FQ6bN9F06zR/322HqPVjlvRYO6ew77wjVbb7ZX08rOVsvWyK8Ii1Nt3LVnVwfdX9PRBdsNB6vjWrt9v63T3pjR4uGs72cfY0dcmzGz5/EyidOevoujGq/qqi9GYw/NW7D6N4ln65XKWzvrMmmyFc9beTSyu7Xw2q+PvwfvLAzGp8MX70+07YqI7CrEV+IhYI7CeL4XiRjeltN/0ei5/ZPf02fL6+/OLG/TM+cc/uz+7qDZatnyO//ZrTfg6HxkISpun8EbAolmo8/IE2lP1C4n15URYSGIvc1YuVRnEBVOgdtUtJi5dKASKBJ5u5Ww/7tuu6vb7l9FrNxqB2YdUse2h1rabr2oOmXWjQjsURxT6jC6JiKZXdzc/7BHHkcaABJEbGUrwCrr+DOEACaT6dyMPBKIdbJlU8CqNlNA9Fuq4/2lYtbjl0HdQbDVvXrpn4QX8k3YWA5EC6bedAuieASUxA6bsacC4nnAtZiyeUpSK0KxmqUEjlDZAoEfacWqtuchLFISimZsSCNIRKvIrzyph89+8YCPPcSjiOWSJQaOfn7830jr8VlZA+AVEOXKXUA9lNOHEVOUU+b+dd38+7gO+mAVHHTJZVJATvmBx+ep0WNSblqJSJYV6ORbnlkxAnAMx3+JnHpSnjBRnZi15cr/LGkHrSKfr7hCpPlTTL0ryjTaWViYQ3pWTa5hRwKgVve8v+ADVLCPND903J+ihyaT/kl4oVnQokIJLzp+XLDzw2psDVY8OXB2fz0ZfMQUhZNwEbccrWD+WbRDF+99mCPaz8pPlG/q1ZEry26wTWXhyZp3xhCEKXaqVulu0bs4GZhCVSClmyD34K4FTwQ2NZ5JKLkNM0TwW8/UVTGtfWEcYspcIf6LlhX3dznmIbg/fq9BdMru0vl/WGv3lZ/x6PplIBI6SXvuS/nQ2SjwsGXb0Jci5tfSPfnjI4Xe7p/AvBE1Lftev9eqt/0TyU+kavLOBBJp2/zH9b9mp6fB46/wI=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1XIhWuigsSldDKFTgdaZtqXI+NswJ3ETmMnQL/+2KFJgaE97ZGQkHe211774mWfcxSFjtflHBJBGNX8QVv/Z+HOsTt3kFF16tioLXDdmAO4Ri2oB07Vacyh3tQ1n/MUfMoFoqKtO5ZdM6yGYbduLdezW17VrriN2oOuzSDhElq6VCxd20Qh5V4etq2nCfUY4oR7FEXAPYG9aXc88qSnhwpOeud8xzIPmHRWQsSeaeJKABjCEFcwi8xz88DnPODelCwpEmkCLzED3tZf9q7X68q6WmHJ0nQsyzIt15Q+ASfLr3rnS7EZAp8u2G7dR5RRglFInpEiNQaxYoHWDZcsIWIVvQFtm7aloA3YYAPbNfpVN18D5Ow+iHRAMuHI4CtkF2ATWEACFIN2N/Hb+tePdXC39zZBlC9YEvGj9ecoAc0gZDEEBi8yK9h9HPFEuTrngD2f4jDlJINrNSYxwsC1mwQWZDMiXA5fwLW8/dqGyx8ppgzwZ9pybu5zldTNE9UZkCVw8X96tt+vHcoMhSl0/gyaZ6J7FQ6bN9F06zR/322HqPVjlvRYO6ew77wjVbb7ZX08rOVsvWyK8Ii1Nt3LVnVwfdX9PRBdsNB6vjWrt9v63T3pjR4uGs72cfY0dcmzGz5/EyidOevoujGq/qqi9GYw/NW7D6N4ln65XKWzvrMmmyFc9beTSyu7Xw2q+PvwfvLAzGp8MX70+07YqI7CrEV+IhYI7CeL4XiRjeltN/0ei5/ZPf02fL6+/OLG/TM+cc/uz+7qDZatnyO//ZrTfg6HxkISpun8EbAolmo8/IE2lP1C4n15URYSGIvc1YuVRnEBVOgdtUtJi5dKASKBJ5u5Ww/7tuu6vb7l9FrNxqB2YdUse2h1rabr2oOmXWjQjsURxT6jC6JiKZXdzc/7BHHkcaABJEbGUrwCrr+DOEACaT6dyMPBKIdbJlU8CqNlNA9Fuq4/2lYtbjl0HdQbDVvXrpn4QX8k3YWA5EC6bedAuieASUxA6bsacC4nnAtZiyeUpSK0KxmqUEjlDZAoEfacWqtuchLFISimZsSCNIRKvIrzyph89+8YCPPcSjiOWSJQaOfn7830jr8VlZA+AVEOXKXUA9lNOHEVOUU+b+dd38+7gO+mAVHHTJZVJATvmBx+ep0WNSblqJSJYV6ORbnlkxAnAMx3+JnHpSnjBRnZi15cr/LGkHrSKfr7hCpPlTTL0ryjTaWViYQ3pWTa5hRwKgVve8v+ADVLCPND903J+ihyaT/kl4oVnQokIJLzp+XLDzw2psDVY8OXB2fz0ZfMQUhZNwEbccrWD+WbRDF+99mCPaz8pPlG/q1ZEry26wTWXhyZp3xhCEKXaqVulu0bs4GZhCVSClmyD34K4FTwQ2NZ5JKLkNM0TwW8/UVTGtfWEcYspcIf6LlhX3dznmIbg/fq9BdMru0vl/WGv3lZ/x6PplIBI6SXvuS/nQ2SjwsGXb0Jci5tfSPfnjI4Xe7p/AvBE1Lftev9eqt/0TyU+kavLOBBJp2/zH9b9mp6fB46/wI=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxHlPFYhFwiQqCBxaTvMgbYqHHp5GRlnA24TO8ROgH792KFJgdJOz0hIyDvba6998bLPOYpCx+9wDokgjGqDfkv/x/NmdXA9ZAR1p2HUAssxkO1gAxqe67jVuus0Z7o24DyFAeUCUdHSHcuuGVbdsJsTy/Ptpl+tVZxq80nXppBwCS1dKpaubaKQcj8P29LThPoMccJ9iiLgvsD+uDMa+tLTRwUnvX2+Y5kHTNpLIWLfNHElAAxhiCuYRea5eeBzHnB/TBYUiTSBt5gBb+lve9frdWVdrbBkYTqWZZmWZ0qfgJPFT739o9gMwYDO2W7dQ5RRglFIXpEiNQKxZIHWCRcsIWIZfQJtm7aloA3YYAPbNfpTN98D5Oy+iXRAMuHI4EtkF2B3MIcEKAbt992gpf/8Xgd3eycJonzOkogfrf+MEtAMQhZDYPAis4Ld9xFPlKt9DtgfUBymnGRwrcYkRhi4dpvAnGyGhMvhC7iWt1/bcPkjxZQB/pO2nJv7XCV180R1+mQBXPyfnu33a4cyRWEKbUs4f8Vnkbiex1Z28Yu9vpJGzxXkia5bOYV95x2pst1v6+NhLWfrbdPf4STdouexuB/D/dPq1/rl+plY4e2MV8dX7qr2etkX0/ry9vei627vFtn1xehmXX1OX17YJOiOPCDzs6vJdhgOp8MfzmRz9pwl0me2XZ/dP8lSRteLJGBoSe+Xtd5DB+HHUe2h/9ib9N3lejrtBqvGePT4ej97fDrbBKur1UaE2dMD7f1YLJsTNiTTF4+J2VXs8RS33nPaz+HQWEjCOJ09AxbFUo3HoK9dyn4h8bW8KAsJjHnu6sdKo7gAKvS22qWkxU+lAJHAl83crS97tud5ncturW+7Vcu7sGqWfWl1LNfznHq1V2jQjsURxR6jc6JiKZXdzc/XBHHkc6ABJEbGUrwErn+B2EcCaQN6Jw8HoxwmTKq4vQii2AZ7LmZ1L3Oi59dacx5ZSEr3NRM39CbpzAUkB9JtOwfSfQeYxASUvqsB53LCuZC1WKEsFaFdyVCFQipvgESJsO/Umq7JSRSHoJiaEQvSECrxMs4rY/Ldv9QizHMr4ThmiUChnZ+/T9M7/lZUQvoERDlwlVIXZDfhxFXkFPl8nre7n3cB30kDoo6ZLKtICN4xOfz0Pi1qTMpRKRPD3C64l1v+EOIEgPkFP/O4NGW8ICN70YvrVd4YUk/aRX9XqLKqpFmW5h1tKK1MJLwpJdM2x4BTKXjbCXsBapYQ5rfum5L1UeTSfsgvFUs6FkhAJOdPy5ffeGyMgavHxkAenM13XzIHIWXdBGzEKVsvlG8SxfjLZwv2sfKT5lv5t2ZJ8N6uE1h7cWSe8oUhCF2olbpZtp/MBmYSlkgpZMk++CmAU8EPjWWRSy5CTtMsFfD5F01pXEtHGLOUikFfzw37upvzFNsY/HenDzC5tr9d1hv+6WX9MBqOpQJGSC99yX87GyQfFwy6ehPkXFr6Rr49ZXC62NP5N4Ifpb7bsd2e2+xdNEqpb3ie3a93ywIeZNL+YP5o2avp8Xlo/ws=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3jcx46xzcWAJzBDIGlJS0m59CR5OSPLGyxiS44kg5Ovr2RiAoTkpGeGGUbbW2uvfdGSzgRK4qrfEwK4JIwaw0HH/DdwmxDgRWBVW63AqgcutoKq27BqtVYQ4LoXhI5nGkMhMhhSIRGVHbPquHXL8Sy3NXPavtvya81K1fPuTOM3cKGglUvFMY08ianwi7AdM+PUZ0gQ4VOUgPAl9qe90Q9fefqo5GR2z7Ysi4C8G0mZ+raNKyFgiGNcwSyxz+wDn7NQ+FOypEhmHJ5jhqJjPu/dbDaVTa3C+NKuOo5jO21b+YSCLD+b3U/lZgiHdMG26z6ijBKMYvKENKkRyIiFRi9eMk5klLwB7dquo6EtyLGF3Tr9bNovAQp2H0Q6IMkFskSE3BJsAgvgQDEY88mwY37+WAe3e2ccUbFgPBFH67+jBHQNMUshtESZWcnu44gnytU9A+wPKY4zQdbwU49JijAI45rDguQ/iFDDFwqjaL+RC/Uj5ZQB/pu2nNn7XBV1+0R1BmQJQv6fnu33a4vyG8UZdEffvntPqDrIk+sJmlyj0aj9ZS7Cm5mHOwWFfectqV27n9fHw7qbredNV954NpGX3vwu/PnPmszw6GE8Sq5mTrO54oMnJ8vir437Ozn1Ino1voiGQaPnXWxWbB0Mvn+9QwFyzuPHc3r7lFU/jdsyuYrX39qbr9Oxw9MbnoRiHtWSQXqb54zX6f3T9KI5n10H02Wjdp5c5XIpZym0mnQceJeRe/Xrka1W43k+//TlNrgNft30V9HkJlrBxXzc67zktJ/DobGUhGkWrADLcqnHYzgwLlW/kHxfXrSFhNaicPVTrVFCApVmV+/S0uJnSoBI6KtmbteXfbfdbp/33MbAa/UvmhdO3XEvnZ7TbLfdgXdeatCWxRHFPqMLomNpld3Oz/sEceILoCFwa80yHIEw30EcIImMIZ2ow8GogBlTKu7Kzf2m1cIUt55gyd3aQ9J2eO2+bRo/mRzTMe8tJPAD6XarB9I9AUxSAlrf9YALNeFCqlo8oHUmY7eyRhUKmboBuBZhv1pvNWxBkjQGzdROWJjFUEmjtKiMLbb/VQthUViJwCnjEsVucf7eTO/4W1kJ5RMS7SB0SuegugknrqJqmc+rvBsnr6wSvpeFRB8zVVbJCd4yOfz0Mi16THajsksMC7fkvtvylxAnAOx3+NnHpdnFC9dkL3p5vaobQ+lJt+zvA6o8VLL1Ois62tRayRW8rSTTtaeAMyV4jzN2D9TeQdgfum92rI8i7+yH/DIZ0alEEhI1f0ax/MBjYwpCPzaG6uDkH33JHIRUdZOQy1O2fqzeJJrxu88W7GPtp8zX6m/DePjSrhNYe3FUnuqFIQld6pW+WR7fmA3MFCxRUsj4PvgpgFPBD427Iu+4SDVNQSbh7S+G1riOiTBmGZXDgVkY9nW34CkfU/BfnF7BFNr+fFnn4s3L+mb0Y6oUMEHmzpf8t7NFinHBYOo3QcGlY+bq7amC0+Wezj8TPC31/cZ7Un+YSfeV+bVlr6bH56H7Bw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0518351403083115463</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0518351403083115463</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0518311403083111180</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0518331403083113545</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0518351403083115463</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999BC02B976D4E0401F0A07991D71</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999AFB4D25309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999BA15D78CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2c72d510-76b3-435c-9e82-1af7b14e1b10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_UserGet_CS_FUNC_CHILD_SAU_Get_ADULT_BAU_P2" searchProperties="true" id="2e50f51e-9179-4087-9d80-0e865186584b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="49912f2d-d778-45ae-a838-0eb422907a5d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="316691dc-9f63-4188-af0b-ee02bfbca41a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="881f645e-c48f-4d8c-af1d-6a689c4bbe9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="481cc1ea-dd4f-41dd-80cc-fecfdcc4f9cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="05753489-573d-4c00-82c4-6848b434f418"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="49ba91f6-86d8-4161-8cf9-cdc20837fad0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="adbe4c95-cc13-4df0-858e-ffd6e0f6b284"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="9f070465-f163-4f29-b409-7051acddc24f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AE66031C68E0401F0A07991D55</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B1D37D8AF2E0401F0A07991D67:6D58CBE5"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0518431403083123687</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B373C52D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B373C52D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B373C52D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AE66031C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B22AF6DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B09FC5610AE0401F0A05992642</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AE66031C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B22AF6DB33E0401F0A05992646</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B09FC5610AE0401F0A05992642</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0TpYxWScE2iggSl7eEMbZnAaXt4GRnHAR8SO8TOhX792KFJgdJOOxIS8s722mtfvOxLBsKg7vQZQzHHlCijYVf9x4ReA9ZhW7PMTkNrLmBHs726pVlttFh06nDheZaqjBhL0IgwDgjvqnXDbGpGWzOtmWE7puU07Jpttueq8ohiJqCFS81QlTwMCHOKsF01iYlDAcPMISBEzOHQmfbvxo7wdEDJSe1d7lgWAePeivPI0XVY8xBEQQBrkIb6pX7gc+kxZ4qXBPAkRq8xPdZVX/dmWVbLGjUaL/W6YRi6YevCx2N4ea72zsrNyBsRn+7WV4BQgiEI8AuQpO4QX1FP6QdLGmO+Cj+ANnXTkNAayqEGzSY5V/W3AAW7LyIdkIwZ0NgKmCWYi3wUIwKR8ssdddXzr3Vwt3cWA8J8GofsaP09SoikKKAR8jRWZlay+zriiXL1LhF0RgQGCcMpupdjEgGImDKJkY/zMWZi+DymFO1XciZ+uJwyBL/Tlkt9n6ugrp+ozhAvEeP/p2f7/dqhPIIgQT3EZ78ntEEDmPXjx0GI1/d/ttfuPPvxu1tQ2Hfekara/bo+HtZqtl43QX/882X99Mhyb67bDYvO59mj/+N6+3zh93HU/ntDM9caWNvhZpYNPH1huK2beSdbcOYPw+n07iZZjv3s9mGN2mfxcppsoolr/bzo50+8ZeRPiYdT2wedtfvr5XmVD/KN7zbj0c3QnbUflhO44WvmzqG5vc3gcj2mL33XW+d5/teZ/TBJHvq36UUyaTBsummTdd9y2s/h0FhKwjRZ/EGQl0s5HqOhciP6Bfjn8iIt2NP8wtWJpEYxjghXe3KXlBYnEQKEPUc0c7e+uTJt2+5ft9tGw7xqW9dG0zBvjL7RsW1z2GqVGrRjcUTxihIfy1hSZXfz8zlBGDoMEQ/FWkoTuEJM/QRxCDhQRsQVh4MShmZUqDjfWO2NZaQZB62k2YkSCwZWuqCqck/5A3mI+z5H8YFym/UD5XYRxBFGUt7lfDMx4IyLUmxAmvDArKWgRlAiLoBYarBTb1otneEwCpAkqofUSwJUi1ZRURid7f7rGoCssGIGIxpzEJjF8fswu+NvZSGEj4elA5MpDZBoJjpxE9XLfD7Ou7WfdwnfF3MtT5moKo8x3DE5/PQ2LHJKqkmpEoPMLLlXW74JcQJA/4SfflyaKp6X4r3o5e0qLgwhJ72yvxtQ29SSNE2KjnakVMYCXheKaepTBBOhd9sZXSOiVxD6l66bivVR5Mp+yC/hKzLlgKNQzJ9SLL/w1pgiJt8aI3Fu8q8+ZA5CirpxlPNTtqtAPEkk409fLdCB0k+YJ+Ivo7H31q4TWHtxRJ7igcExWcqVvFi2H8wGpAIWCyWk8T74KYBTwQ+NVZErLlxM0yLh6OMvipS4rgogpAnho6FaGPZlt+DJtxFy3pzewRTS/npX5+zDu/r5bjwVAhgCtfLF/+2s4WJcIFLlk6Dg0lVz8fQUwclyT+ZfCb5X+kGj07hq1YfNwaHSt4dVAQ8y6b0zv7fs1fT4PPT+BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH3vV0TpYxWScE2iggSl7eEMbZnAaXt4GRnHAR8SO8TOhX792KFJgdJOOxIS8s722mtfvOxLBsKg7vQZQzHHlCijYVf9x4ReA9ZhW7PMTkNrLmBHs726pVlttFh06nDheZaqjBhL0IgwDgjvqnXDbGpGWzOtmWE7puU07Jpttueq8ohiJqCFS81QlTwMCHOKsF01iYlDAcPMISBEzOHQmfbvxo7wdEDJSe1d7lgWAePeivPI0XVY8xBEQQBrkIb6pX7gc+kxZ4qXBPAkRq8xPdZVX/dmWVbLGjUaL/W6YRi6YevCx2N4ea72zsrNyBsRn+7WV4BQgiEI8AuQpO4QX1FP6QdLGmO+Cj+ANnXTkNAayqEGzSY5V/W3AAW7LyIdkIwZ0NgKmCWYi3wUIwKR8ssdddXzr3Vwt3cWA8J8GofsaP09SoikKKAR8jRWZlay+zriiXL1LhF0RgQGCcMpupdjEgGImDKJkY/zMWZi+DymFO1XciZ+uJwyBL/Tlkt9n6ugrp+ozhAvEeP/p2f7/dqhPIIgQT3EZ78ntEEDmPXjx0GI1/d/ttfuPPvxu1tQ2Hfekara/bo+HtZqtl43QX/882X99Mhyb67bDYvO59mj/+N6+3zh93HU/ntDM9caWNvhZpYNPH1huK2beSdbcOYPw+n07iZZjv3s9mGN2mfxcppsoolr/bzo50+8ZeRPiYdT2wedtfvr5XmVD/KN7zbj0c3QnbUflhO44WvmzqG5vc3gcj2mL33XW+d5/teZ/TBJHvq36UUyaTBsummTdd9y2s/h0FhKwjRZ/EGQl0s5HqOhciP6Bfjn8iIt2NP8wtWJpEYxjghXe3KXlBYnEQKEPUc0c7e+uTJt2+5ft9tGw7xqW9dG0zBvjL7RsW1z2GqVGrRjcUTxihIfy1hSZXfz8zlBGDoMEQ/FWkoTuEJM/QRxCDhQRsQVh4MShmZUqDjfWO2NZaQZB62k2YkSCwZWuqCqck/5A3mI+z5H8YFym/UD5XYRxBFGUt7lfDMx4IyLUmxAmvDArKWgRlAiLoBYarBTb1otneEwCpAkqofUSwJUi1ZRURid7f7rGoCssGIGIxpzEJjF8fswu+NvZSGEj4elA5MpDZBoJjpxE9XLfD7Ou7WfdwnfF3MtT5moKo8x3DE5/PQ2LHJKqkmpEoPMLLlXW74JcQJA/4SfflyaKp6X4r3o5e0qLgwhJ72yvxtQ29SSNE2KjnakVMYCXheKaepTBBOhd9sZXSOiVxD6l66bivVR5Mp+yC/hKzLlgKNQzJ9SLL/w1pgiJt8aI3Fu8q8+ZA5CirpxlPNTtqtAPEkk409fLdCB0k+YJ+Ivo7H31q4TWHtxRJ7igcExWcqVvFi2H8wGpAIWCyWk8T74KYBTwQ+NVZErLlxM0yLh6OMvipS4rgogpAnho6FaGPZlt+DJtxFy3pzewRTS/npX5+zDu/r5bjwVAhgCtfLF/+2s4WJcIFLlk6Dg0lVz8fQUwclyT+ZfCb5X+kGj07hq1YfNwaHSt4dVAQ8y6b0zv7fs1fT4PPT+BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6JTP+6UtKUU6QgzFUSrorui7rpf7sQ0pXHbpCQpoL/+JsVWYNHr3hlmmJyePOc5L3mSIwHzzA1CITCXhFEjGvXNfxLk+0nvsWv5PnQtz/NsC6KuZyHYe0Qdt504ftc0IiFKHFEhIZV907Udz7J9yzm8tXuBcxh4bsu1279M4x5zoaCVS8s2jVWeURFUYftmyWnAoCAioDDHIpAomIaTy0B5BrDmZA6O1iyrgHyQSlkEAKBWjBHOMtRCLAdHYMvnKBbBlMwolCXHrzFj0Tdf9y6Xy9ay3WJ8BlzbtoHdA8onFmR2YA6+1JtxHNGErddDSBklCGbkBWpSEyxTFhthNmOcyDR/B9oBjq2hLbxCFnI8emCCtwAVu08ibZHkAloihU4NdoMTzDFF2Li7ifrmwec6uN57yyEVCeO52Fn/HSVMFzhjBY4tUWdWs/s84p5yDY4wCiKKslKQBb7SY1JAhIXxjeOErC6JUMMXC6Nqv7ES6kfqKcPob9pyBDa5KupgT3VGZIaF/D892+zXGuUeZiUerLzrs3MXofwKJaNOevly8Rt8D10MplG/orDpvCbVtPt1vTuszWy9bmLd06dw+L333UMxuL87hHLp5sX55Gl1m5RpeXr3NQu/nbZvwvNQlNH8fng2PSaFfX55PnO9BY9AaSN3efaQAdL5EifT8c+ll0xOhF88C1j8sk+yq+uT+cv5xYTQqzM6vhzPb6YXz7/z7s/w8Wn5AtPHgjF6P/WHST7hw2XxFTz9cNHpl+QhuXp5uH04m/84BHyYFqNl/y2nzRy2jbUkTMvHJ4xkvdTjEY2MseoXlB/Li7aQ2Eoq16DQGiUkptIc6F1aWoJSCRCJA9XM9Xo8dHq93rHrhmN/dNxun9ie7Yzt0O70eq7v+bUGrVnsUBwymhAdS6vsen4+JojyQGAaY24tWIlSLMwPEEdQQiOiN+pwMCrwLVMqTmnmc7FM/TydlYtFp3jGL51u9mQaV0xe02seJhLzLeV23C3lvsGIFARredfzLdSAC6lKMYeLUmZOawFbFJfqAuBagwPXO+wAQfIiw5ooyFlcZrhVpEVVGCDW/66SIlFZiUAF4xJmTnX83s1u91tdCOUTE+0gdErHWDUT77mJ2nU+7+fd2cy7hg/LmOhTpqoqOUFrJtuf3oZFT0kzKU1iSDg192bLX0LsAQAf8AO7pWnixQuyEb2+XdWFoeRkUPd3DlvzlpqWsupoV0slV/BAKaYDphiVSu+eb9lvTEEDAT513TSsdyI39m1+pUzpVEKJczV/RrX8xFtjioV+a0Tq3Kw++5DZCqnqJvFK7rMNM/Uk0Yw/fLWgAGk/Zf6m/paMx2/t2oO1EUflqR4YktCZXumL5fmd2UBMwRKlhIxvgu8D2Bd829gUueEi1TQ9lhK//8XQEtc3IUKspDIamZVhU3YrnvK5wMGb0x8wlbS/3tUr8e5d/XNyOVUCmEOz8SX/7WyRalwQNvWToOLSN1fq6amC09mGzL8S3KP07W572HFH3nGj9N1ezxn5o6aAW5kM/jD/admo6e55GPwL</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6JTPzqlrxTaEWZYkLUrul5hUffLnZgeIFrS0iSA/vpNiq2A6NU7wwyT05PnPOclT3LC0Dxxwg5jkHOSUi3qtfR/0f09briubXjxxDc8K/aNoA6O0YydeuB4CMBydC1iTEBEGUeUt3THsj3D8g27ObKC0G6GXr3mN+t/dG0MOZPQ0qVm6dp6nlAWFmFbushpmCJGWEjRHFjIcTjsXAxC6RmikpPePtmwLALm7RnnWWiauBYDhiTBNZzOzRNzx+ckZuGQTCniIoeXmDFr6S97V6tVbeXW0nxqOpZlmVZgSp+YkemR3v5WboY4opN0s+4imlKCUUKekSJ1AXyWxlonmaY54bP5O9C2aVsK2oA1NrDt0SPdfA1QsPsk0g7JnCGDzZBdgl3DBHKgGLTf11FLP/pcBzd7RzmibJLmc7a3/holoEtI0gxig5WZlew+j3igXO0TwGFEcSIYWcKlGpMMYWDaVQ4Tsh4QJocvZlrRfm3N5I+UUwb4K205Mbe5Surmger0yBQY/z892+7XBmWMEgHt22be6dy4Zt/nvH8Xza548niZnU98cdoqKGw7b0hV7X5Z7w9rNVsvmx4j2uv6/efb7PniZrxYCP4QcfcsmA7G5xzhG+bbqO8PstTuep2r5fPT6fjsJ3FG4/HEXdDm2uXJ8Z/Oz0enP4i+iePlH3J2/M9FU0xw98dZ0Ly8wzn7YY4eVvPF1e1DRkfRzRLufp9GvD+z73+Qc75yrGHD4gvP7bqJtxoNZJiHG/FtPXWTMzvhx5PuuW+eWnQ6bb3mtJ3DrrGUhKG4fwDMy6Uaj6in9WW/EP9YXpSFxMakcA0zpVGMA+V6W+1S0hIKKUAkDmUzN+t+1w6C4LsV9Lt137Y6p5Zn2X2rY9WDwPE9p9SgDYs9it2UToiKpVR2Mz8fE8TzkAGNITeWqcAzYPoHiD3EkRbRa3k4UspglEoVt+PHRvMJls8++LaNhEhS0RBu8ii1+zLlv+ivvDPhkO9ot+3saPc1YJIRUAKvJpzJEWdcFmOBloIndm2JahSEvAJypcKh4zXrJiPzLAFF1ZynsUigls2yojQm2/w7BsKssBKGszTnKLGLA/hufvvfylJIn5goB6ZS+g6ynXDgLnLLfN7kXT94Z5XwHRETdc5kXXlO8IbJ7qfXcVFzUs1KlRhmdsm92vJFiAMA5gf8zP3SVPHiJdmKXt6v8sqQgtIu+7tAtUVNLJei6GhDiWUu4U2pmbY5BCyk4j2N0kegZgVhfurCqVjvRa7su/wEn9EhRxzmcv60YvmJ18YQmHptRPLkrD/7lNkJKevGYc0P2bqJfJQoxh++W3CIlZ80X8m/VZrHr+06gLUVR+Ypnxic0Klaqavl6Z3ZwKmEJVIL03wb/BDAoeC7xqrIFRcup+lecHj/i6ZErqUjjFNBedTTC8O28BY8+VMG4avTG5hC3F9u6zV797a+vRgMpQTOkV75kv92NkgxLhh09SgouLT0tXx8yuB0uiX0LwQPaL3bcLt1p+d9r7S+EQR2z+9VBdzJpP3G/NayVdP989D+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0518431403083123687</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0518431403083123687</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0518381403083118937</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0518411403083121442</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0518431403083123687</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AE66041C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B22AF7DB33E0401F0A05992646</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B09FC6610AE0401F0A05992642</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>adbe4c95-cc13-4df0-858e-ffd6e0f6b284</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00043_UserGet_CS_FUNC_CHILD_SAU_Get_ADULT_SAU_P2" searchProperties="true" id="0379ef9e-8a9c-49a4-bb94-7fc19923352a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c6424e28-39ea-4ec3-958f-fdacca68d4ce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fe15ef74-644f-4a5b-ad55-880d7f7f2155"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="50106ed4-3fd6-48ed-b268-c9b61f12a500"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="22c0c68d-3648-44b4-9009-317633d18347"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="b85e255a-b369-47b6-aff4-cbbfb2c399b3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="5abb2746-4d24-4368-9803-8410fa8b663f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="bdfdd7ad-7a7c-435d-9a32-ba3cf42456e6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="9d317806-9ae2-4282-9e07-7d6f2e871d77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AE662A1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B1D39E8AF2E0401F0A07991D67:5193D1A0"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_0518511403083131905</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B28DD97D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B28DD97D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B28DD97D05E0401F0A0599263A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AE662A1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999B3B69A494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B373F12D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AE662A1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999B3B69A494BE0401F0A05992630</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B373F12D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6PgJOWSRAUphZYypZcDTNvpy5FxNuA2cdLYIdCvHzs0KVDa0zkSEvLO9tprX7zsY46j0PZ8ziEVNGbaoNfW/7VtEkwtDEbgODOjDlbTcG0bG7YNLbNl2oEV1HVtwHkGA8YFZqKt26ZVN8ymYTkT0/Usx6s7NdNxHnTtFlIuoaVLzdS1VRQy7hVh23qWMi/GnHKP4Qi4J4g39i+HnvT0cMlJ7xxvWBYB085CiMRDiNQCIBCGpEbiCB2jHZ/jgHtjOmdYZCm8xgx4W3/dm+d5LT+qxekc2aZpItNF0ifgdP5d73wrN0MwYLN4s+5iFjNKcEhfsCJ1CWIRB5ofzuOUikX0AbSFLFNBG7AiBrHq7LuO3gIU7L6ItEMy5djgC2yVYCOYQQqMgPZrNGjr37/Wwc3eSYoZn8VpxPfWf0cJ2BLCOIHA4GVmJbuvIx4oV+cYiDdgJMw4XcKVGpMEE+DaTQozuhpSLocv4FrRfm3F5Y+WUwbkb9pyjLa5SuroQHV6dA5c/J+ebfdrg3KLwww6V8FysRifWKNlfhKhfv+HidZT7jzeIdIuKGw7b0hV7X5d7w9rNVuvm0YXjcehK57y24fceujfodhaP0ZNTp+e/IujKbJufde+v/snv0mezpLRI55cj4b0ujvL54+9cE3ETXTdvz4b9lm0+BZbk/45TBe3Lzfxb5Qlw4vIvX/6eZud36Vxjn64zksyweLSxd3g97LVzE7HP/q58zL4nYchTMP70/TKP/91MUXi/NvD5fBndp+ElnPpX1y9OMx12m85beewaywlYZxNH4GIcqnGY9DTzmS/sPhcXpSFBsascPUSpVFcABN6R+1S0uJlUoBo4MlmbtZnXct1Xf+02bR9q9t0Ts26aZ2ZvtlyXavXaJQatGGxR7EbsxlVsZTKbubnc4Ik8jiwAFJjGWdkAVz/BLGHBdYGbCQPR8w4TGKp4nlzzebRErdaPCIBAx68RKyBHV27isU1u079mYB0R7kte0e5R0BoQkHJu5pvLgecC1mKZ7zMRGjVlrjGIJMXQKo02LPrTgNxGiUhKKIoioMshFqySIrCIL75tw1MeGGlnCRxKnBoFcfvw+z2v5WFkD4BVQ5cpXQCsplw4CY6KvP5OO/Gdt4lvJ8FVJ0yWVWRUrJhsvvpbVjUlFSTUiVGuFVyr7b8JcQBAPQJP7RfmipesKRb0cvbVV4YUk46ZX+fce25li2XWdHRlpLKVMIjqZgWGgPJpN6tJ/ETMFRBoC9dNxXrvciVfZdfJhZsLLCASM6fViy/8NYYA1dvjYE8N6uvPmR2Qsq6CViJQ7ZuKJ8kivGnrxbiEeUnzTfyL4/T4K1dB7C24sg85QNDUDZXK3WxrD+YDRJLWCqVME63wQ8BHAq+a6yKXHERcpqmmYCPv2hK4to6JiTOmBj09MKwLbsFT7FOwHtzegdTSPvrXb3iH97V95fDsRTACOuVL/1vZ4MW40JAV0+CgktbX8mnpwzO5lsy/0rwvdKf2E6v57Z6ZqNS+obr2s0jvyrgTiadd+b3lq2a7p+Hzh8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6PgJOWSRAUphZYypZcDTNvpy5FxNuA2cdLYIdCvHzs0KVDa0zkSEvLO9tprX7zsY46j0PZ8ziEVNGbaoNfW/7VtEkwtDEbgODOjDlbTcG0bG7YNLbNl2oEV1HVtwHkGA8YFZqKt26ZVN8ymYTkT0/Usx6s7NdNxHnTtFlIuoaVLzdS1VRQy7hVh23qWMi/GnHKP4Qi4J4g39i+HnvT0cMlJ7xxvWBYB085CiMRDiNQCIBCGpEbiCB2jHZ/jgHtjOmdYZCm8xgx4W3/dm+d5LT+qxekc2aZpItNF0ifgdP5d73wrN0MwYLN4s+5iFjNKcEhfsCJ1CWIRB5ofzuOUikX0AbSFLFNBG7AiBrHq7LuO3gIU7L6ItEMy5djgC2yVYCOYQQqMgPZrNGjr37/Wwc3eSYoZn8VpxPfWf0cJ2BLCOIHA4GVmJbuvIx4oV+cYiDdgJMw4XcKVGpMEE+DaTQozuhpSLocv4FrRfm3F5Y+WUwbkb9pyjLa5SuroQHV6dA5c/J+ebfdrg3KLwww6V8FysRifWKNlfhKhfv+HidZT7jzeIdIuKGw7b0hV7X5d7w9rNVuvm0YXjcehK57y24fceujfodhaP0ZNTp+e/IujKbJufde+v/snv0mezpLRI55cj4b0ujvL54+9cE3ETXTdvz4b9lm0+BZbk/45TBe3Lzfxb5Qlw4vIvX/6eZud36Vxjn64zksyweLSxd3g97LVzE7HP/q58zL4nYchTMP70/TKP/91MUXi/NvD5fBndp+ElnPpX1y9OMx12m85beewaywlYZxNH4GIcqnGY9DTzmS/sPhcXpSFBsascPUSpVFcABN6R+1S0uJlUoBo4MlmbtZnXct1Xf+02bR9q9t0Ts26aZ2ZvtlyXavXaJQatGGxR7EbsxlVsZTKbubnc4Ik8jiwAFJjGWdkAVz/BLGHBdYGbCQPR8w4TGKp4nlzzebRErdaPCIBAx68RKyBHV27isU1u079mYB0R7kte0e5R0BoQkHJu5pvLgecC1mKZ7zMRGjVlrjGIJMXQKo02LPrTgNxGiUhKKIoioMshFqySIrCIL75tw1MeGGlnCRxKnBoFcfvw+z2v5WFkD4BVQ5cpXQCsplw4CY6KvP5OO/Gdt4lvJ8FVJ0yWVWRUrJhsvvpbVjUlFSTUiVGuFVyr7b8JcQBAPQJP7RfmipesKRb0cvbVV4YUk46ZX+fce25li2XWdHRlpLKVMIjqZgWGgPJpN6tJ/ETMFRBoC9dNxXrvciVfZdfJhZsLLCASM6fViy/8NYYA1dvjYE8N6uvPmR2Qsq6CViJQ7ZuKJ8kivGnrxbiEeUnzTfyL4/T4K1dB7C24sg85QNDUDZXK3WxrD+YDRJLWCqVME63wQ8BHAq+a6yKXHERcpqmmYCPv2hK4to6JiTOmBj09MKwLbsFT7FOwHtzegdTSPvrXb3iH97V95fDsRTACOuVL/1vZ4MW40JAV0+CgktbX8mnpwzO5lsy/0rwvdKf2E6v57Z6ZqNS+obr2s0jvyrgTiadd+b3lq2a7p+Hzh8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb/I4FH3/fkWUPlYhC2FJBEgsbYdOtw9op9OXkbENuCR2sB2W/vqxA0mB0k47EhLyzfW55y4+dkOAOPLCthCYS8Ko0e81zX9cP8ATDALL95yq5QflilVHVc/yapOq5yMPVB1sGn0hUtynQgIqm6bnuL6lvN36yAlCtx5WnFKlWnsxjSfMhYJWLiXHNNZxREWYhW2aKachA4KIkIIYi1DCcNi+vQmVZwhyTmarsWWZBeStmZRJaNuwhDDEUQRLkMV2wz7waSARDsmUAplyvIuJRNPc7V2tVqVVucT41PYcx7GdwFY+SJDpmdn6lW/GqE8nbLvuAsoogSAib0CTusVyxpDRjqaMEzmLP4F2bdfR0BZeQwu6Pj0z7fcAGbtvIh2Q5AJYYgbcHGyg2sUxhdh4HPSb5tn3OrjdO+KAignjsTha/4wSpkscsQQjS+SZ5ey+j3iiXK0GhmGfwigVZInv9JgkAGJhPHA8IesbItTwIWFk7TfWQv1IPmUY/qQtDXufq6Jun6hOj0yxkP+nZ/v92qI8gSjFrftH78HmbczX179fx+Wb+015kEi2acvfzYzCvvOWVNHu3fp4WIvZ2m2aTpHTSxZXj6tqR9LlbXT+BNh4gFB5iNKb8+vn8dXT1WjQHj9RVG93cMrvu3ReZhvwjCrd1WwGxrPy8LYyqF/VfzkLm6Po0qukNwv+EF+RsUjq7h186/ruNXx5nifyr+EYA/gHfRk5AP0d237vrerPe6NlfPH4einn5fWkfB6kncdf971VdTieU59spn/KiwGjq+Z7Tvs5HBpzSRim41cMZb7U49HvGZeqX0B+LS/aQpA1yVzDRGuUkJhKs6V3aWkJUyVABIWqmdv1ZdcNgqBT7lSDth/4nQvHd9xLp+1UgsCrlp1cg7Ysjih2GZ0QHUur7HZ+viYI41BgijC3liyFMyzMLxB7QAKjTwfqcDAq8IgpFX9bLcZOrYpqrj+vLV9X7kzS+VvgmcYdk/f0nrcnEvMD5Xa9A+UeYEgSgrW86/kWasCFVKVYgGUqI7e0BCWKU3UBcK3BoefXK7YgcRJhTdSOGUojXEpmSVYYW2z/PQtAkVmJgAnjEkRudvw+ze74W14I5YOIdhA6pQ5WzcQnbiI/z+fzvCv7eefw7RQRfcpUVSUncMvk8NP7sOgpKSalSAwKN+debPkhxAkA+wt+9nFpinhoSfai57erujCUnLTy/i5AaVFKl8s062hNSyVX8LZSTNceYpgqvduM2BxTu4Cwv3XdFKyPIhf2Q36pnNGhBBLHav6MbPmNt8YQC/3W6Ktzs/7uQ+YgpKqbxGt5ytaN1JNEM/7y1QJDqP2U+UH9rRhH7+06gbUXR+WpHhiS0Kle6Ytl88lsQKZgiVJCxvfBTwGcCn5oLIpccJFqmsapxJ9/MbTENU0AIUup7PfMzLAvuxlPuUlw+O70ASaT9t1dvRaf3tXPtzdDJYAxMAtf8t/OFsnGBaqXqvLPuDTNtXp6quB0uifzO4InlN6r93pBredUjpS+XRTwIJPWB/NHy15Nj89D618=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHkchF66JChIlbYcZCgVKt7MvK9c5CZ4mdmo7XPrr1wlNCpR2OyshIZ8cf+c7F3/2mUBJ7Hh9IYBLwqg29Lv6P+062C0XgxGgwDUagMBw7RYyrLrrNOstp/XQburaUIgMhlRIRGVXdyy7YVgtw+7cWq5nd7xmvea6zt+6dgdcKGjlUrN0bZPEVHhF2K6eceoxJIjwKEpAeBJ78/71yFOeHio56b2zHcsiIO8tpUw908S1ADDEMa5hlphn5oHPWSC8OYkokhmHl5iB6Oove9frdW1drzEemY5lWablmsonECT6qve+lJshGNKQ7dYDRBklGMXkGeWkrkEuWaD144hxIpfJO9C2aVs5tAEbbGC7Qb/q5muAgt0nkQ5IcoEMsUR2CTaDEDhQDNpiNuzqXz/Xwd3eW46oCBlPxNH6zygBXUHMUggMUWZWsvs84oly9c4Ae0OK40yQFYzzMUkRBqHdcAjJZkSEGr5AaEX7tY1QP1JOGeA/acuZuc9VUTdPVMcnEQj5f3q2368dyh2KM+iljeVfzEKk0XjeDtbfNpetb8F5PYrG3x+7BYV95x2pqt0v6+NhrWbrZROaNy00HT2lPDRX0fO36yl9RNbYn1yttwsrnl5vHp/ZfDZfTkbrqzG7uB+Zg4dO27//nl0MMpdnnenkbvLTXdxQ9CWjq8g/f8QL8pPLyQXfJkGcDoJ7KR+SX5GcrpdXv5+y5x9Xt4uUbINZ2O/482kq7b5cWL865v3Fr+1ozG8uH2bhl3PmLH5Ohbgb4/B3ePdDdPrd15z2czg0lpIwzx5+A5blMh+Poa9dqn4h+bG85BYSGGHh6qW5RgkJVOq9fFcuLV6mBIgEnmrmbn05sF3XPa+365e24zfOL6yGZV9afavturbf8ksN2rE4ojhgNCR5rFxld/PzMUGceAJoANxYsQwvQegfIPpIIm1IZ+pwMCrglikVt7njPCZ2i0fNJMo6a4tuE1wPQdfGTE7ohPdDCfxAuW3nQLlngElKIJf3fL6FGnAhVSme0CqTsV1boRqFTF0APNdgz2l0mqYgSRpDTtRMWJDFUEuXaVEYU+z+HQNhUViJwCnjEsV2cfzeze74W1kI5ROQ3EHkKZ2DaiacuIkaZT5v8m6evLFK+H4WkPyUqapKTvCOyeGn12HJp6SalCoxLOySe7XlDyFOAJgf8DOPS1PFC1ZkL3p5u6oLQ8lJr+zvE6o91bLVKis62s6lkit4Uymmbc4BZ0rvtrfsEahZQZifum4q1keRK/shv0wu6VwiCYmaP61YfuKtMQeRvzWG6txsPvuQOQip6iZhI0/ZBrF6kuSMP3y1YA/nfsp8o/7WjAev7TqBtRdH5akeGJLQKF/lF8v2ndnATMESpYSM74OfAjgV/NBYFbniItU0PWQS3v+i5RLX1RHGLKNy6OuFYV92C55ym4L36vQGppD2l7t6I969q++vR3MlgAnSK1/y384GKcYFK71T/gWXrr5RT08VnEZ7Mv9C8ITSOx3fd9u+1ayUvqnGrFXvVwU8yKT3xvzWslfT4/PQ+xc=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_0518511403083131905</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_0518511403083131905</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0518471403083127300</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0518491403083129338</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_0518511403083131905</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AE662B1C68E0401F0A07991D55</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999B3B69B494BE0401F0A05992630</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B373F22D4BE0401F0A07991D6D</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bdfdd7ad-7a7c-435d-9a32-ba3cf42456e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00044_UserGet_CS_FUNC_CHILD_SAU_Get_ADULT_FAU_P2" searchProperties="true" id="f6e5f09d-5554-47e6-9a65-99230c30d2ba"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e0d431d9-462f-4013-8bfa-d043301a17bc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="025ba647-314f-4b44-b806-e6e8a497d878"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="13ab965c-c370-427a-811b-7e51060dcaff"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT FAU" id="9cdf2b8a-043f-408a-a5f4-c9f8ecb63cc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD SAU" id="af58f203-a9f1-46b5-b275-dbd63d686917"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD SAU" id="f4840ab5-b35d-46d9-809e-3e01723d4f8a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="df6dd72b-2a24-431a-b439-c095878f0525"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="888a3a39-ba3a-4737-83f9-05693347f6c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC1999AFB5495309E0401F0A0599263C</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"FC1999B28E047D05E0401F0A0599263A:B9DB6D70"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140618_051901403083140604</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>FC1999B1D3A98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D3A98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:FC1999B1D3A98AF2E0401F0A07991D67</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC1999AFB5495309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>FC1999BA16838CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC1999B2B98B496AE0401F0A05992648</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC1999AFB5495309E0401F0A0599263C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:FC1999BA16838CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:FC1999B2B98B496AE0401F0A05992648</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlnoOTEC6JChKXMptOW2ih7SwvK9d2wDOJHWKHy/z6tUOTAqXdzkpIyCfH3/nOxZ99IWASu0FPCJJJypkRDjvmP7b/7LbquGE1mwhbHvIiy/cc14KEoDrEz57vQ9MIhchJyISETHZM13Y8y25aTntm+4HTDhrNml9vz03jkWRCQSuXmm0a2yRmIijCdsw8YwGHgoqAwYSIQKJg2ru5DpRnAEtOZvdiz7IImHWXUqYBAKiGCSJxjGqIJ+ACHPlcYBFM6YJBmWfkJSYWHfNl72azqW3qNZ4tgGvbNrB9oHywoIuvZvdLuZngkEV8vx5AxhlFMKa/oSZ1Q+SSY6MXL3hG5TJ5B9oBjq2hLbJFFnI89tUErwEKdp9EOiKZCWiJJXRKsHsSkYwwRIyH+7Bjfv1cB/d7ZxlkIuJZIk7Wf0aJsDWJeUqwJcrMSnafRzxTru4FQUHIUJwLuia3ekxSiIgwJhmJ6PaaCjV8WBhF+42tUD9aThlBf9KWC3DIVVEHZ6ozpAsi5P/p2WG/9iiPMM5J94Y/9tLZLZy5a8hQYza6jPLkaeRNL1GnoHDovCdVtftlfTqs1Wy9bLobr+4B6O0mV1ETgbvIcX5u8cCdDG7vJttmP2X1H/27+aWDLhO+3CXDsTPPh3nr29+9dCQWy6g9+CsfP7g2JkP+5c7DLliSyShpXA0I4INxc/D8azTBT+HcbYJvdj99vAK/QzdJL6PYjYdjDjf2z/r902rXboVy7iWt9oN99QNd4S9P8fdwvk2e8MMmm5PJCvVF5zWnwxyOjaUkTPPnnwTJcqnHIxwaI9UvKD+WF22h2IoK1yDVGiUkYdLs6l1aWoJcCRDFgWrmfj0aOL7v90b9huc36rZ/aXu2M7J7dsP33WZ9UGrQnsUJxQFnEdWxtMru5+djgigJBGGYZNaa52hJhPkB4hBKaITsXh0OzgSZcaXiv5/TphOt+S5p5w5eRfW1u9l4fj03jVsux2yc9SJJsiPpdtwj6b4niKaUaH3XAy7UhAuparGC61zGTm0Na4zk6gbItAgHrtduAEGTNCaaKUg4zmNSS5dpURkg9v9KhpAorFSglGcSxk5x/t5N7/RbWQnlg6l2EDqlPlHdJGeuIq/M5/28G4d5l/C9HFN9zFRZZUbRnsnxp9dp0WNSjUqVGBJOyb3a8ocQZwDAB/zAaWmqeHhND6KX16u6MZSedMv+rmBtVcvX67zoaEtrZabggZJMB0wJypXg7Wb8F2GgggCfum8q1ieRK/sxv1wu2VRCSRI1f0ax/MRjY0qEfmyE6uBsP/uSOQqp6ibJVp6zDWL1JtGMP3y2oABpP2WeqL8Nz/Bru85gHcRReaoXhqRsoVf6Ztm9MxuIK1iqpJBnh+DnAM4FPzZWRa64SDVNz7kk738xtMZ1TIgQz5kMh2ZhONTdgqfcpSR4dXoDU2j7y2W9Fe9e1j9urqdKARNoVr70v50tWowLIqZ+ExRcOuZWvT1VcLY40PkXgm+lvu8M6z2/3Ru5ldS3fN8ZNltVAY8y6b4xv7Uc1PT0PHT/BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlnoOTEC6JChKXMptOW2ih7SwvK9d2wDOJHWKHy/z6tUOTAqXdzkpIyCfH3/nOxZ99IWASu0FPCJJJypkRDjvmP7b/7LbquGE1mwhbHvIiy/cc14KEoDrEz57vQ9MIhchJyISETHZM13Y8y25aTntm+4HTDhrNml9vz03jkWRCQSuXmm0a2yRmIijCdsw8YwGHgoqAwYSIQKJg2ru5DpRnAEtOZvdiz7IImHWXUqYBAKiGCSJxjGqIJ+ACHPlcYBFM6YJBmWfkJSYWHfNl72azqW3qNZ4tgGvbNrB9oHywoIuvZvdLuZngkEV8vx5AxhlFMKa/oSZ1Q+SSY6MXL3hG5TJ5B9oBjq2hLbJFFnI89tUErwEKdp9EOiKZCWiJJXRKsHsSkYwwRIyH+7Bjfv1cB/d7ZxlkIuJZIk7Wf0aJsDWJeUqwJcrMSnafRzxTru4FQUHIUJwLuia3ekxSiIgwJhmJ6PaaCjV8WBhF+42tUD9aThlBf9KWC3DIVVEHZ6ozpAsi5P/p2WG/9iiPMM5J94Y/9tLZLZy5a8hQYza6jPLkaeRNL1GnoHDovCdVtftlfTqs1Wy9bLobr+4B6O0mV1ETgbvIcX5u8cCdDG7vJttmP2X1H/27+aWDLhO+3CXDsTPPh3nr29+9dCQWy6g9+CsfP7g2JkP+5c7DLliSyShpXA0I4INxc/D8azTBT+HcbYJvdj99vAK/QzdJL6PYjYdjDjf2z/r902rXboVy7iWt9oN99QNd4S9P8fdwvk2e8MMmm5PJCvVF5zWnwxyOjaUkTPPnnwTJcqnHIxwaI9UvKD+WF22h2IoK1yDVGiUkYdLs6l1aWoJcCRDFgWrmfj0aOL7v90b9huc36rZ/aXu2M7J7dsP33WZ9UGrQnsUJxQFnEdWxtMru5+djgigJBGGYZNaa52hJhPkB4hBKaITsXh0OzgSZcaXiv5/TphOt+S5p5w5eRfW1u9l4fj03jVsux2yc9SJJsiPpdtwj6b4niKaUaH3XAy7UhAuparGC61zGTm0Na4zk6gbItAgHrtduAEGTNCaaKUg4zmNSS5dpURkg9v9KhpAorFSglGcSxk5x/t5N7/RbWQnlg6l2EDqlPlHdJGeuIq/M5/28G4d5l/C9HFN9zFRZZUbRnsnxp9dp0WNSjUqVGBJOyb3a8ocQZwDAB/zAaWmqeHhND6KX16u6MZSedMv+rmBtVcvX67zoaEtrZabggZJMB0wJypXg7Wb8F2GgggCfum8q1ieRK/sxv1wu2VRCSRI1f0ax/MRjY0qEfmyE6uBsP/uSOQqp6ibJVp6zDWL1JtGMP3y2oABpP2WeqL8Nz/Bru85gHcRReaoXhqRsoVf6Ztm9MxuIK1iqpJBnh+DnAM4FPzZWRa64SDVNz7kk738xtMZ1TIgQz5kMh2ZhONTdgqfcpSR4dXoDU2j7y2W9Fe9e1j9urqdKARNoVr70v50tWowLIqZ+ExRcOuZWvT1VcLY40PkXgm+lvu8M6z2/3Ru5ldS3fN8ZNltVAY8y6b4xv7Uc1PT0PHT/BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj0chVy6JChKQlmbU0k6hpe3LkXE2YAhOiB2g/fqxQ5MCQ3vaIyEh72yvvfbFyz5jaBlZXpsxSDmJqRL4TfVf20ZhzQZDg+rY1hxUt7XG2K5rMLYs0wkdJ5y4qhIwlkFAGUeUN1XLMB3NqGlmY2i4ntnwqm7FtqvPqvIAKRPQwqViqMp2GVHm5WGbapZSL0aMMI+iJTCPY2/Qvr7yhKeHCk5q62zHMg+YtmacJ56u40oIGKIIV3C81M/0A5+zkHkDMqWIZym8xQxZU33bu9lsKhu7EqdT3TIMQzdcXfiEjEx/qq0fxWYIAzqJd+suojElGEXkFUlS18Bncai0o2mcEj5bfgBt6qYhoTXYYg2bDv2p6u8BcnZfRDogmTKksRkyC7A7mEAKFINyfxc01Z9f6+Bu7zBFlE3idMmO1t+jBHQNUZxAqLEis4Ld1xFPlKt1BtgLKI4yRtbQl2OSIAxMuU1hQrZXhInhC5mSt1/ZMvEjxZQB/k5bzvR9roK6fqI6PpkC4/+nZ/v92qE8oCiDlt/3p/OuvrjtkZvhOdTmv0cv2eDx/nx03swp7DvvSJXtflsfD2s5W2+bgl4tWpjmr5EbrLJBZKVuY9ql/HFzizav61/O5WgD3LhC45vVU/9+xOts8zBKXvv9mWP9c9lZRc4Kd89rbj2Czg88qy0n1twdLILh4+8q9/Gdv1h0xt3B0/Pr/eNQx7o/eq51t2zT6ztkg6zL7cWD37ket6dBz+3e9Z6jebaYjuoXix/zh0lmd1bwtGr0esHNU4iM5ntO+zkcGgtJGGTjOWBeLOV4BL5yIfqF+OfyIi0k1Ca5q5dIjWIcKFdbcpeUFi8TAkRCTzRzt77omq7rdtpmrWE3uuf1c8MxzAujbdRd1/RrnUKDdiyOKHZjOiEyllTZ3fx8ThAvPQY0hFRbxxmeAVM/QfQRR0pA78ThiCmDYSxU3LQgqk+zaTKp0lczTV631ercHrvWRFX6Mb+hN2l7wiE90G7TOtDuO8AkISAFXk44EyPOuCjGCq0zHpmVNapQyMQVkEoV9iynUdUZWSYRSKr6Mg6zCCrJLMlLo7Pdv6UhzHIrYTiJU44iMz+AH+Z3/K0ohfAJiXRgMqUOiHbCibvIKfL5OO/qft4FfDsLiTxnoq48JXjH5PDT+7jIOSlnpUwMM7PgXm75JsQJAP0Tfvpxacp44ZrsRS/uV3FlCEFpFf1docqqkq3XWd7RuhTLVMDrQjNNfQA4E4r3MowXQPUSQv/ShVOyPopc2g/5ZXxGBxxxWIr5U/LlF14bA2DytRGIk7P96lPmIKSoG4ctP2XrRuJRIhl/+m7BHpZ+wnwr/jZxGr636wTWXhyRp3hicEKnciWvlpcPZgPHApYILYzTffBTAKeCHxrLIpdcuJimccbh4y+KFLmmijCOM8oDX80N+8Kb8+QvCXjvTn/B5OL+dltv2Ye39eP11UBI4BKppS/5b2eN5OOCQZWPgpxLU92Kx6cITqd7Qv9G8ITWm77ddhvtC+tI6+tlAQ8yaf1l/tuyV9Pj89D6Aw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3jcx4zxhas9gRkCpaENDQ00ycnLGVneGCW2ZCzZQL++kokdICQnPTPMMNreWnvti5Z0zlEcOV6fc0gFYVQbD7v6v22oW03X8g2/XcdGAzUbhussGgb4TjsIwPIDa6FrY84zGFMuEBVd3bHshmG1DLszt1zPdj2rXrNs60HXbiHlElq61Cxd28QR5V4RtqtnKfUY4oR7FMXAPYG9WX9y5UlPD5Wc9N75jmURMO0thUg808S1ADBEEa5hFpvn5oHPecC9GQkpElkKzzED3tWf967X69q6XmNpaDqWZZmWa0qfgJPws977VG6GYEwXbLceIMoowSgiv5EiNQGxZIHWj0KWErGM34C2TdtS0AZssIHtBv2smy8BCnYfRDogmXJk8CWyS7AbWEAKFIP262bc1T9/rIO7vfMUUb5gacyP1n9HCWgOEUsgMHiZWcnu44gnytU7B+yNKY4yTnL4ocYkQRi4Nk1hQTZXhMvhC7hWtF/bcPkj5ZQB/pu2nJv7XCV180R1hiQELv5Pz/b7tUO5RVEGvdsr0Q4b04H/ffqLXP9Dv2LzMb4LzSebdQsK+847UlW7n9fHw1rN1vOm0P8+Hgy/sXy+xSRbj6b3+dRKn57M4aaJZ9861w+NfJpc3l/hbXQ1iVZRM2yMyGrm+GLy6KPVbYJ+frG3dCuu7z4JNnyaO7/NyzZZL34Hd+5287DKWhfB5VM6/NEU7Z+EJ1/H+a+V9fOMr5qr9UXr4Qzbfbtlh4+5uIQ84/WBcM6u/U9fO/7Z/BsLeTaZTEerPEJfui857edwaCwlYZb5j4BFuVTjMR5qI9kvJN6XF2UhgbEoXL1EaRQXQIXeU7uUtHiZFCASeLKZu/VoYLuue+FcuJ2Lhtvqf7Ealj2y+vKkuU6r0Sk1aMfiiOKA0QVRsZTK7ubnfYI49jjQAFIjZxleAtffQRwigbQxvZGHg1EOcyZVnD620627wOGKJDZPO0lWz21/EUsR/sHENb1O+wsB6YF0286BdN8AJgkBpe9qwLmccC5kLVYoz0Rk13JUo5DJGyBVIuw5jU7T5CROIlBMzZgFWQS1ZJkUlTH57t8xEOaFlXCcsFSgyC7O35vpHX8rKyF9AqIcuErpAmQ34dVV1PGaZT6v8m6evLJK+H4WEHXMZFlFSvCOyeGnl2lRY1KNSpUY5nbJvdrylxAnAMx3+JnHpaniBTnZi15er/LGkHrSK/u7QrVVLcvzrOhoW2llKuFNKZm2OQOcScHbztkTULOCMD9031SsjyJX9kN+mVjSmUACYjl/WrH8wGNjBlw9Nsby4Gw++pI5CCnrJmAjTtkGkXyTKMbvPluwh5WfNE/l35qlwUu7TmDtxZF5yheGIDRUK3WzbN+YDcwkLJFSyNJ98FMAp4IfGqsiV1yEnCY/E/D2F01pXFdHGLOMivFQLwz7ulvwFNsEvBenVzCFtj9f1hv+5mV9P7maSQWMkV75kv92NkgxLhh09SYouHT1jXx7yuA03NP5Z4InpN4e1vtupz9yKqlvu649bLWrAh5k0ntlfm3Zq+nxeej9AQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140618_051901403083140604</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140618_051901403083140604</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140618_0518561403083136096</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140618_0518581403083138445</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140618_051901403083140604</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC1999AFB54A5309E0401F0A0599263C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>FC1999BA16848CE7E0401F0A07991D6B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>FC1999B2B98C496AE0401F0A05992648</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>df6dd72b-2a24-431a-b439-c095878f0525</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_CS_FUNC_YOUTH_BAU_Get_ADULT_BAU_P2" searchProperties="true" id="ef9a5f21-a7e3-4485-975b-1f8e6ad93e97"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="722b6a0f-c860-40c9-9205-ec6913bc716f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e2a54ca6-976c-4936-a159-f9a2a188e969"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="745170ac-f89c-46d3-91da-ef38b2a1c985"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="5b6fc770-a51b-47b8-a13a-77e3117c49e5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="fadbcc83-1d0f-4caa-a438-e5c22aa33a4d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="a9880eb5-1e4f-45c3-9b14-31b3d2c01f49"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="01d71217-608b-4672-9490-6de4de8e3237"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="2bf82f75-f102-4d61-9524-5fee55516979"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"0319E7E8C6E019B5E05307991E0A5D04:97CBADAD"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0511471410781307122</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>031A083A57021934E05305991E0A8AB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:031A083A57021934E05305991E0A8AB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:031A083A57021934E05305991E0A8AB5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319EE83133C21B5E05307991E0AF9A4</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319EEC0FFAE668BE05305991E0ADFBE</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319E948419517BEE05307991E0ADA76</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319EE83133C21B5E05307991E0AF9A4</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319EEC0FFAE668BE05305991E0ADFBE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319E948419517BEE05307991E0ADA76</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYAtsYB3AFqgiQxJlcWMgMSV62hNwGTWzJSDKYfP1IBhxgSJbZJ5fardOnLzrShUBxVPU6QgCXhNFSFkdUeLm1ZaScegwJIjyKYhCexN6oc3/nVSuWh7ZbjJLfaxn/1m3XcWzLLocOBOWa5bjlSQ3XylatCWgCKHTPQ+UqRAo+FRJR2TKqlq0cmmXbfbJtr2Z51UblvOG8GqWfwIXCVi4Vy9iQykTLmEmZeKa5XC4rS6fC+NSsWpZtPt/fjfAMYmS0L9YZ5YF4e+OPKwFgiCJcwSw2L8w9n4tAeCMypUimHDaxgs9iWabVNJVPIMj0m1HshcCnIcuXXUQZJRhF5B3p+tyDnLGg1ImmjBM5iz9NwrY0cBkyXMZ2jX4zzH1qJwLtMeQClcUM2RusIYTAgWIo/Rj6LePbaV3Ltz5xREXIeCz2l3/HB+gCIpaoWGKb1oba6YBHKtW+AOz5FEepIAt40MOaIAxi003Ap0OVBhxCkt0RoQY0E5qduUvvYLmuRo9MQcj/06Cd5qxBfqIohfZgDK8+f+lPx41e/fUNXT+70+egenUm/mnlBHadc0PR2vXyYCiLIVrvuL9Llo9h1nu9dibPyymd+O6P8+BspbgtQ5c0O0+XtHO/yhqTbsrvHHfcW74wP7P614uX91+3D+5VNz6bxcJMRHT2GnSvf/JRRHq/7P7g5nq4ihAbPA95FezX25fxzVvcHcjb2jXtPQ5f2GwcAH1xb67Ydz84Z2PTITf+eD78/vD8lp1lI/aQIJjK5D0c3FrN+1aRzg7/fdv2zI/SyS/AcrvUY+D3SleqS0h+LWbaQoJymLt6iRYfIYFKo613ae3wUiV3JPBUD9dry7Gb/X7DsR2nW7Uv3b7lOla92bT7Vueq2altRWbN4oBil9GQ6Fhactdj8zVBHHsCaAC8vGCpUjphfIHYQxKVfDpUh4BRAU9MybM9qzO3mb5NIts+Z/W54NncQe4qM0oPTD7SR94JJfB9Ta7tafIQMEkIaOHWcy3UYAupajFHi1RGdmWBKhRSJe1cq6xXrTVcU5A4iUAzNWMWpBFUklmSV8YU62+1jLDIrUTghHGJovxAmJ+md/hvWwnlExDtIHRKl6C6CUfuGHubz+d513fz3sJ30oDo86XKKjnBayb7vz6mRY9JMSpFYljYW+7Flr+EOAJgfsHPPCxNES9YkJ3o28tcXQtKSNrb/s5RZV5JF4s072jdshyTK3hT6aZtjgCnSudWT+wNqFlAmCddKgXrg8iFfZ9fKmd0JJGEWM1fKV+e8IoYgdCvCF8dnOzUJ8peSFU3CZk8ZutG6gWkGX/5SMIe1n7KPFCfJePBR7uOYO3EUXmqR4QkdKpX+kJZfTIbmClYoqSQ8V3wYwDHgu8biyIXXKSapkkq4fM/Ja1xLQNhzFIq/Z6RG3Z1N+cpVwl4H05/wOTSXrz1yH8/9sokHwEM6oUoSI6vr2xPzz+d7mj3JuiBfHeshtNx61bVbjq1XL7dtXw3OpduUZQ9du0/zH9adup0OOPt3w==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYAtsYB3AFqgiQxJlcWMgMSV62hNwGTWzJSDKYfP1IBhxgSJbZJ5fardOnLzrShUBxVPU6QgCXhNFSFkdUeLm1ZaScegwJIjyKYhCexN6oc3/nVSuWh7ZbjJLfaxn/1m3XcWzLLocOBOWa5bjlSQ3XylatCWgCKHTPQ+UqRAo+FRJR2TKqlq0cmmXbfbJtr2Z51UblvOG8GqWfwIXCVi4Vy9iQykTLmEmZeKa5XC4rS6fC+NSsWpZtPt/fjfAMYmS0L9YZ5YF4e+OPKwFgiCJcwSw2L8w9n4tAeCMypUimHDaxgs9iWabVNJVPIMj0m1HshcCnIcuXXUQZJRhF5B3p+tyDnLGg1ImmjBM5iz9NwrY0cBkyXMZ2jX4zzH1qJwLtMeQClcUM2RusIYTAgWIo/Rj6LePbaV3Ltz5xREXIeCz2l3/HB+gCIpaoWGKb1oba6YBHKtW+AOz5FEepIAt40MOaIAxi003Ap0OVBhxCkt0RoQY0E5qduUvvYLmuRo9MQcj/06Cd5qxBfqIohfZgDK8+f+lPx41e/fUNXT+70+egenUm/mnlBHadc0PR2vXyYCiLIVrvuL9Llo9h1nu9dibPyymd+O6P8+BspbgtQ5c0O0+XtHO/yhqTbsrvHHfcW74wP7P614uX91+3D+5VNz6bxcJMRHT2GnSvf/JRRHq/7P7g5nq4ihAbPA95FezX25fxzVvcHcjb2jXtPQ5f2GwcAH1xb67Ydz84Z2PTITf+eD78/vD8lp1lI/aQIJjK5D0c3FrN+1aRzg7/fdv2zI/SyS/AcrvUY+D3SleqS0h+LWbaQoJymLt6iRYfIYFKo613ae3wUiV3JPBUD9dry7Gb/X7DsR2nW7Uv3b7lOla92bT7Vueq2altRWbN4oBil9GQ6Fhactdj8zVBHHsCaAC8vGCpUjphfIHYQxKVfDpUh4BRAU9MybM9qzO3mb5NIts+Z/W54NncQe4qM0oPTD7SR94JJfB9Ta7tafIQMEkIaOHWcy3UYAupajFHi1RGdmWBKhRSJe1cq6xXrTVcU5A4iUAzNWMWpBFUklmSV8YU62+1jLDIrUTghHGJovxAmJ+md/hvWwnlExDtIHRKl6C6CUfuGHubz+d513fz3sJ30oDo86XKKjnBayb7vz6mRY9JMSpFYljYW+7Flr+EOAJgfsHPPCxNES9YkJ3o28tcXQtKSNrb/s5RZV5JF4s072jdshyTK3hT6aZtjgCnSudWT+wNqFlAmCddKgXrg8iFfZ9fKmd0JJGEWM1fKV+e8IoYgdCvCF8dnOzUJ8peSFU3CZk8ZutG6gWkGX/5SMIe1n7KPFCfJePBR7uOYO3EUXmqR4QkdKpX+kJZfTIbmClYoqSQ8V3wYwDHgu8biyIXXKSapkkq4fM/Ja1xLQNhzFIq/Z6RG3Z1N+cpVwl4H05/wOTSXrz1yH8/9sokHwEM6oUoSI6vr2xPzz+d7mj3JuiBfHeshtNx61bVbjq1XL7dtXw3OpduUZQ9du0/zH9adup0OOPt3w==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI4FP0VynlMGcmAAbsCVSxh2h0gC9lfpoQsjIItGUtmyde3ZIIDhGToeXLp+urccxcd6UKgKCy5LSFIIilnhVUUMuFm1oaRJszlSFDhMhQR4UrsjlqDvlsqQhdttxgFr9sw/nUmNnKcsmUi3/fNStWpmMjy6ybGEJf8qmUjGypXIVLiMSERkw2jBK2KCR3Tsu8ty61A164Vq2X4ahQeSSIUtnIpql0bUivRMKZSxi4Ay+WyuCwXeRKAEoQWeB70R3hKImQ0LzYZZYGS5oc/LvoEkzDERcwjcAH2fC584Y5owJBME/IRy/8uFgTQAcrHFzQ4M/K9xPfYhGfLDmKcUYxC+o50fQZETrlfaIUBT6icRt8mYUENbJIVNrFVYWcG2Kd2ItAew0QgU0yR9YF1RyYkIQyTwsOd1zDOTutatvU+QUxMeBKJ/eXf8SFsQUIeE98U27Q+qJ0OeKRSzQuCXY/hMBV0QYZ6WGOEifjoJsGnQxVuEjKhqz4VakBXQrMDu/QOlptqdGlAhPw/DdppzgbkEYUpacaPwWRdewtmT7UlfJ44VwySKKiDVV80MgK7zpkhb+1meTCU+RBtdtx1XpNfHh89wPWjmFlPQ7sejsv+ze/0kfUkrc9msvwyf2CVwZL2HlD/yrqbe+OlJzq3nbT0xga18573vMa4HbBO31m1F9PZsEfi2/Y/revH9pwNe/2raCS7V2+39MkGclLnL5OXpO1Uz23efq9549sBW//uljscvtFzsHgBpDxvv97OOtZwPL7+NXiJg6DVtXAjT2eH/75te+ZH6fiNYLld6jHwuoWe6hKSP4uZtlDfnGSubqzFR0jCpNHUu7R2uKmSO+q7qoebNSxbzuVlB/Z6rctqtd6+hHYZ2o5jXcJWt9e+3IrMhsUBxQ5nE6pjacndjM3PBHHkCsJ8kpgLniqlE8YPiF0kUcFjd+oQcCbIPVfybNkyHi9R7f1dxJWYruZv1Vm6iOHMKAy5vGbXSWsiSbKvyZU9Tb4jmMaUaOHWcy3UYAupajFHi1SGVnGBioykStoTrbJuqVK3gaBRHBLNFETcT0NSjKdxVhkgNt+SibDIrFTgmCcShdmBAN+md/hvWwnl41PtIHRKbaK6SY7cMZVtPt/nXdvNewvfSn2qz5cqq0wo3jDZ//U5LXpM8lHJE8PC2nLPt/wlxBEA8AM/cFiaPJ6/oDvRt5e5uhaUkDS3/Z2j4ryYLhZp1tEahGWQKHigdNMCI4JTpXPrez4jDOQQ4KRLJWd9EDm37/NL5ZSNJJIkUvNXyJYnvCJGROhXhKcOzurUJ8peSFU3SVbymK0TqheQZvzjIwm7WPsp8436LHnif7brCNZOHJWnekRIygK90hfK+pvZwFzBUiWFPNkFPwZwLPi+MS9yzkWqaRqnknz/p6A1rmEgjHnKpNc1MsOu7mY85Tom7qfTF5hM2vO3Hv3vx55JsxHARL0QBc3w9ZXt6vlnwY52fwQ9kO8WrJdbdg2WLKdc2ZXveqtt50XZY9f8Yv5q2anT4Yw3/wA=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPuYMf6OwROYMZBOSSGkQHKbvtwR8oKV2JJjyUDy6ysZcIGQXHqfPFqvzp790JGuOEoTOwg5h1wQRmvrNKE8KK0trchpwBAnPKAoBR4IHEzC4SCw62aAdlu0Wr/X0v717bkHVtPRHR+D7tpNU294l54+czwX+36ziZuRdOW8gD7lAlHR0mzTcnWzqVve1LIC1wpsq+6YjV9a7QFyLrGlS93UtqTWvKXFQmSBYaxWq/rKqbN8YdimaRk/h4MJjiFFWvtqk1EZKG9v/XE9AgxJguuYpcaVceBzFfFgQhYUiSKHbazoo1imYTYN6RNxsviiVXsh6tM5K5ddRBklGCXkDan6DEHELKqFyYLlRMTph0lYpgLWYY11bLn0i2YcUjsT6IBhzpHOY2RtscYwhxwohtr9uN/SvpzXtXLrNEeUz1me8sPl3/EBuoSEZRDpfJfWltr5gCcq1b4CHPQpTgpOlnCrhjVDGPi2m4DPh6rd5TAn6wHhckDXXLEz9ukdLTfV6JEFcPF/GrTXnA3IA0oKaIfOcArhPINHxEazh6Twsft2g4rBxX2rJLDvXBqq1m6WR0NZDdFmh7gVt+aNAzfOiMT+cDT49Wr1vo0e3rqTx4FpjtA3Q3jjV8cd3eCf3X/G86U5Jsbkfj28fnIf4q7Zm17cNu47UbfTsWf5j37nLv/6YD9eJMPHte1YbjTyCvv6ecXz50VKB8OFVVx0WGPUD/kqXazWz8PL59V0cPEji2bTuPPy+KN39y0UjTi9GVvf3e/dBoqHN6NwtU33iP+hbXfmJ8XsCbDYLdUY9Hu1r7JLSHwuZspCIn1eugaZEh8ugAqtrXYp7QgKKXckCmQPN2vTsZrXTbfhWk3P8jvX16bnmPLAWNdm2Av9y53IbFgcUewyOicqlpLczdh8ThCnAQcaQa4vWSGVjmufIPaQQLU+HctDwCiHKZPybM3XibnI3Xh5uZhZse9T1pg/vWYk02q3TIzoKA/nAvJDUXYPRHkMmGQElHKrweZysrmQxXhBy0IkVn2J6hQKqe25ktnAdhuewUmaJaCoGimLigTqWZyVpTH45mvrCPPSSjjOWC5QUp4I48P8jv/tSiF9IqIcuEqpA7KdcOKSsXb5fJy3v5/3Dj4sIqIOmKyryAneMDn89Wdc1JxUs1Ilhrm1415t+UuIEwDGJ/yM49JU8aIl2Yu+u83lvSCVpL3r7wuqv9SL5bIoO+qbpmPkEt6QwmkZE8CFFLrXKXsGalQQxlm3SsX6KHJlP+RXiJhOBBKQyvmrlcsznhET4OoZ0ZcnZ33uG+UgpKybgLU4Zesm8gmkGH/6SsIBVn7SfCc/K5b/SfwU1l4cmad8RQhCF2qlbpTXD2YDMwlLpBayfB/8FMCp4IfGqsgVFyGnaVYI+PhPTYlcS0MYs4KKfk8rDfvCW/IUrxkEf5zewZTaXj32yH+/9nRSjgAG+UTkpMRXd3ag5p8u9sR7G/RIv0Oz4YSeb9pyJNxSv72NfjfCjlcV5YBd+535vWWvTscz3v4N</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0511471410781307122</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0511471410781307122</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0510421410781242583</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0511211410781281806</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0511471410781307122</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319EE83133D21B5E05307991E0AF9A4</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319EEC0FFAF668BE05305991E0ADFBE</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319E948419617BEE05307991E0ADA76</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>01d71217-608b-4672-9490-6de4de8e3237</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_CS_FUNC_YOUTH_BAU_Get_ADULT_SAU_P2" searchProperties="true" id="9fd6754b-277b-4401-b284-f41e01b854ae"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f2a3f0b5-05aa-4944-bef1-19d6aced4e17"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0868b0ce-f178-4c47-aa35-9166af70bee8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="c8ca90c9-f924-45bb-ba54-539c17e6a135"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="b6b57713-5445-48d6-ae4b-5a48cf7b22b4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="e2af1728-047a-4a40-b8db-298f5304baed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="79514ea1-738a-4420-a6c9-e7b4e72cf6f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="1291a5a7-2aac-482a-ab36-5459cc71bd6f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="594009f1-9cf8-407d-af63-42a1f9033b29"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"0319D52F6B801E58E05307991F0A3586:299C6810"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0513211410781401254</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>031A13EC029F42EEE05307991F0AC8B7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:031A13EC029F42EEE05307991F0AC8B7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:031A13EC029F42EEE05307991F0AC8B7</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319D52CE2881E50E05307991F0ABCF6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>031A16B7B80E44F5E05307991F0A56FD</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">031A19C3B39226FFE05305991F0AE2C8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319D52CE2881E50E05307991F0ABCF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:031A16B7B80E44F5E05307991F0A56FD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:031A19C3B39226FFE05305991F0AE2C8</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynmcMl7AYFyBKtYZJyQkIdvwckvIja2JLTuWzPb1VzLgAAm5zH1yqd06fXrRkS4ZikLTaTMGKScxLS2jkDIntzaVLKVOjBhhDkURMIdjZ9y+GTpmWXfQbotScntN5R99hhpoirBqNSpTtWoaoDbAqKmWadtTpGNcs2vClbEMXMo4orypmLpRVfWGaliPhuFUTUfXy2a9NlFKz5AygS1cyrqyJbVkTSXgPHE0bbFYlBeVcpz6mqnrhvZ6MxzjACKktC43GeWB0tbWH5c9wBCGuIzjSLvUDnwuPeaMiU8Rz1LYxvJOxdI1vaEJH48R/0Ip9oLn0lmcL7uIxpRgFJI1kvW5AR7EXqkd+nFKeBCdTMLQJbAKS6xio0ovFO2Q2plABwxThlQWIGOL9QAzSIFiKD09uE3l4ryu5VsfU0TZLE4jdrj8Oz5A5xDGCXgq26W1pXY+4BeVal0CdlyKw4yROdzKYU0QBrbtJuDzoUp3KczIckiYGNAlk+y0fXpHy001esQHxv9Pg/aaswF5RmEGrSFLR8EdXA3M9rT//tzJ6lezV5xNaDdu5gT2nXND0drN8mgoiyHa7BhRm9t9cr9O6GKNr1/Xv6jHu/T5J/7lGRV79bJ2NU5fTON3ZD6lV7XprTdu+C/jyPoztdj9izV5uqFBZ77Wzcmj/5j8HtZvbuzXGrMXlbg+WA1d360bk1fangaa3zGDKvKsCH64jcrLBL39iK4qaXB/NUyuB8nT2Bpx92mo02t6Z2lPk5+jHkbUmC+5f/3Wbhbp7PE/tO3O/Dib/gHMd0s5Bm6vNBBdQvx7MZMW4qmz3NVJpPgwDpQrLblLaoeTCbkjniN6uFnrFaPRs8xuX5wUo2/pfd2q6PVGwxjo7U53UNuJzIbFEcVuTGdExpKSuxmb7wniyGFAPUjVeZwJpWPKN4g9xFHJpQ/iEMSUwWMs5NlIzEW1Zq/eMj/wTbvh05X+ZgMSmnwb8xEdpe0Zh/RQk6sHmvwAmCQEpHDLuWZisBkXtXhH84yHRnmOyhQyIe2pVFnHrNqWxkiUhCCZalHsZSGUkyDJK6OxzddUEWa5lTCcxClHYX4gtJPpHf/bVUL4eEQ6MJlSB0Q34dMdYzjWLp/Tedf3897BtzOPyPMlyspTgjdMDn99TIsck2JUisQwM3bciy1/CfEFgPYNP+24NEU8b072ou8uc3EtCCFp7fr7jsrv5Ww+z/KO1qVgpgJeE7ppaGPAmdC51WP8BlQrILSzLpWC9VHkwn7IL+MBHXPEIRLzV8qXZ7wixsDkK8IVB2d57hPlIKSoG4cl/8rWDcULSDL+9pGEHSz9hPlOfBZx6n206wusvTgiT/GI4IT6ciUvlNWJ2cCxgCVCCuN0H/wrgK+CHxqLIhdcuJimacbh9J+S1LimgjCOM8rdnpIb9nU358lXCTgfTp9gcmkv3nrkvx97KslHAIN4ITKS48sr25HzT/097d4GPZLvtlHpd3WzMaia/f6+fHftTr0oygG71ifzZ8tenY5nvPUv</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynmcMl7AYFyBKtYZJyQkIdvwckvIja2JLTuWzPb1VzLgAAm5zH1yqd06fXrRkS4ZikLTaTMGKScxLS2jkDIntzaVLKVOjBhhDkURMIdjZ9y+GTpmWXfQbotScntN5R99hhpoirBqNSpTtWoaoDbAqKmWadtTpGNcs2vClbEMXMo4orypmLpRVfWGaliPhuFUTUfXy2a9NlFKz5AygS1cyrqyJbVkTSXgPHE0bbFYlBeVcpz6mqnrhvZ6MxzjACKktC43GeWB0tbWH5c9wBCGuIzjSLvUDnwuPeaMiU8Rz1LYxvJOxdI1vaEJH48R/0Ip9oLn0lmcL7uIxpRgFJI1kvW5AR7EXqkd+nFKeBCdTMLQJbAKS6xio0ovFO2Q2plABwxThlQWIGOL9QAzSIFiKD09uE3l4ryu5VsfU0TZLE4jdrj8Oz5A5xDGCXgq26W1pXY+4BeVal0CdlyKw4yROdzKYU0QBrbtJuDzoUp3KczIckiYGNAlk+y0fXpHy001esQHxv9Pg/aaswF5RmEGrSFLR8EdXA3M9rT//tzJ6lezV5xNaDdu5gT2nXND0drN8mgoiyHa7BhRm9t9cr9O6GKNr1/Xv6jHu/T5J/7lGRV79bJ2NU5fTON3ZD6lV7XprTdu+C/jyPoztdj9izV5uqFBZ77Wzcmj/5j8HtZvbuzXGrMXlbg+WA1d360bk1fangaa3zGDKvKsCH64jcrLBL39iK4qaXB/NUyuB8nT2Bpx92mo02t6Z2lPk5+jHkbUmC+5f/3Wbhbp7PE/tO3O/Dib/gHMd0s5Bm6vNBBdQvx7MZMW4qmz3NVJpPgwDpQrLblLaoeTCbkjniN6uFnrFaPRs8xuX5wUo2/pfd2q6PVGwxjo7U53UNuJzIbFEcVuTGdExpKSuxmb7wniyGFAPUjVeZwJpWPKN4g9xFHJpQ/iEMSUwWMs5NlIzEW1Zq/eMj/wTbvh05X+ZgMSmnwb8xEdpe0Zh/RQk6sHmvwAmCQEpHDLuWZisBkXtXhH84yHRnmOyhQyIe2pVFnHrNqWxkiUhCCZalHsZSGUkyDJK6OxzddUEWa5lTCcxClHYX4gtJPpHf/bVUL4eEQ6MJlSB0Q34dMdYzjWLp/Tedf3897BtzOPyPMlyspTgjdMDn99TIsck2JUisQwM3bciy1/CfEFgPYNP+24NEU8b072ou8uc3EtCCFp7fr7jsrv5Ww+z/KO1qVgpgJeE7ppaGPAmdC51WP8BlQrILSzLpWC9VHkwn7IL+MBHXPEIRLzV8qXZ7wixsDkK8IVB2d57hPlIKSoG4cl/8rWDcULSDL+9pGEHSz9hPlOfBZx6n206wusvTgiT/GI4IT6ciUvlNWJ2cCxgCVCCuN0H/wrgK+CHxqLIhdcuJimacbh9J+S1LimgjCOM8rdnpIb9nU358lXCTgfTp9gcmkv3nrkvx97KslHAIN4ITKS48sr25HzT/097d4GPZLvtlHpd3WzMaia/f6+fHftTr0oygG71ifzZ8tenY5nvPUv</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI4FP0Vyv3YZWQ7ZrErUMUSErJ2QxZmXqaEfA1KbNmRZAP99SMZcAMhGXqeXLq+OvfcRUc6FziOHL8jBHBJE1ZZxhETfmFtGRlnfoIFFT7DMQhfEn/cubv1narl4+0WozLst4x/wiAk0xBPTafh2aaLranZbNbrJoHQtZ3mtNYgRLkKkcGQCYmZbBmOZbum5Zl27dG2fdfxnVrVrdt/G5Vn4EJhK5eqZWxILUXLmEuZ+ggtFovq4qya8BlyLMtGk7vbMZlDjI32+TqjIhBvb/xJNQACUUSqJInROdrzOQ+EP6YzhmXGYRMr+CyWhSwPKZ9A0Nk3o9wLwZCFSbHsYZYwSnBEf2FdnzuQ8ySodKJZwqmcx58mYVsa2IQlMYntsm8G2qd2ItAeQy6wKebY3mCNIAQOjEDlaTRsGd9O61qx9ZFjJsKEx2J/+Wd8gOUQJSkEptimtaF2OuCRSrXPgfhDRqJM0Bzu9bCmmIDYdBPI6VCVHxxCurylQg3oUmh2aJfewXJdjT6dgZD/p0E7zVmDPOMog7bFw5W9eJ/2R78u769GyE5vG+7LX+zpXrQKArvOhaFs7Xp5MJTlEK13DK4f0Hf3O3m7Hzbycb3Wi5+dm9rseda9iZ56Eza6oS/hQgTdeNUPCZlePmfOz/F18342f33y+vyFuRFDP39eieQO4d5qktxcWcPHVf+tZ08mXfR+0XEfwknj3ZlO3EmNX+cvfS99/uEhq54HMxQMOnaW93jHekBzb9IjlyhY5F6vCU18fTvpXr+MpylxxFzctcp0dvjv27ZnfpxNX4HI7VKPwbBfGaguYfm1mGkLDcywcPVTLT5CApNGW+/S2uFnSu5o4KsertfWmd2x691Gt2lduO6gdmHVzqyG59kDq1OrD/pbkVmzOKDYS1hIdSwtueux+ZogiX0BLABu5kmmlE4YXyD2scSVIRupQ5AwAY+Jkmf7FSCjQWyF2E09zxVcrNhcrsCo3CfygT3wTiiB72uyu6fJIyA0paCFW8+1UIMtpKrFO84zGdnVHFcZZErauVZZ33GbNSRonEagmaI4CbIIquk8LSqDxPrrmJiIwkoFSRMucVQcCPRpeof/tpVQPgHVDkKn1AXVTThyx9jbfD7Pu7Gb9xa+kwVUny9VVskpWTPZ//V7WvSYlKNSJkaEveVebvlDiCMA6At+6LA0ZbwgpzvRt5e5uhaUkLS3/X3H1fdqludZ0dGGZZ0hruCR0k0bjYFkSudWj8kbMFRCoJMulZL1QeTSvs8vk3M2llhCrOavUixPeEWMQehXxFAdnOWpT5S9kKpuEpbymK0XqReQZvzlI4n4RPsp8w/1WSQ8+N2uI1g7cVSe6hEhKZvplb5QVp/MBkkULFVSmPBd8GMAx4LvG8sil1ykmqZpJuHzPxWtcS0DE5JkTA77RmHY1d2Cp1yl4P92+gBTSHv51qP//dgzaTECRGmY8i/w9ZXt6/lnsx3t3gT9IN9nFz3L8Qauc3GxK9+9ZrdRFmWPXfuD+aNlp06HM97+Fw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvfxlvHKYlegirAMTiUhASbby5QiN0aJLTmWTCBfP5IBBwjJcOcFSu3W6dOLjnTGURLbfodzyARhtLJMYsr9wtrS8oz6DHHCfYoS4L7A/qRzdenbVdNH2y1aJei1tH/c0AMbuaHu1ZpN3W1Ynt60mvLH9UKrGQK2nz3pynkOAeUCUdHSbNNyddPTrdrUsnzX9mv1ar3hPWmVO8i4xJYuVVPbkFryljYXIvUN4/39vfruVFkWGbZpWsbD1eUEzyFBWvtsnVERKGtv/HFVEoA4xlXMEuPM2PM5C7k/IRFFIs9gEyv8LpZpmJ4hfUJOol9auRfCgM5YsewiyijBKCYfSNXnCsSchZVOHLGMiHnybRKWqYB1WGIdWy79pRn71E4E2mOYcaTzObI2WGOYQQYUQ+XvcdDSfp3WtWLrNEOUz1iW8P3ln/EBuoCYpRDqfJvWhtrpgEcq1T4D7AcUxzknC7hWw5oiDHzTTcCnQ1VuMpiR5SXhckCXXLEzdukdLNfV6JEIuPg/DdppzhrkDsU5tGurUe/lpv72Ubt85+bYHn3UG71RsEqf+q2CwK5zYShbu14eDGU5ROsd83B5k93bTWYi53d9uLgYOTNv/LC6XNXzgXl+fzd8vB9eXVhv3VEulotlDji5XXDzHF3H0RA54TmN7pJ8Xh/UgvxhYNwFtW7tgZnj2sVVDGjO+iMSP7+aXES3w5zcNYfJa6//akQPwRwG0VPfqa8egfW6i+nvp9RrkFlnEk0fp95f497N0LQ7ty425m/Oa+e1Vaazw3/ftj3zk/z5BbDYLtUYBL3KQHYJiZ/FTFlIqM8KVz9V4sMFUKG11S6lHX4u5Y6Evuzhem06Vsfyus6549l2fTDomzXHrHmeNTA7fbvb3IrMmsUBxS6jM6JiKcldj83PBHHic6AhZPqC5VLpuPYDYg8JVAnoWB4CRjlMmZRnyxPLl/wl464TN2YAKzNNxTMkoFWumRjRUdaZCcj2Ndnd0+QxYJISUMKt5prLweZC1uINLXIRW9UFqlLIpbRnSmV9223WDE6SNAbF1EhYmMdQTedpURmDr/9tHWFeWAnHKcsEiosDYXyb3uG3bSWkT0iUA1cpnYPsJhy5Y9xtPt/n3djNewvfyUOizpcsq8gIXjPZ//Q5LWpMylEpE8Pc2nIvt/whxBEA4wd+xmFpynjhguxE317m8lqQQtLe9vcNVd+q+WKRFx1tmKZjZBLekLppGRPAudS51ZS9AjVKCOOkS6VkfRC5tO/zy8WcTgQScmCpqBTLE14RE+DqFRHIg7M89YmyF1LWTcBSHLN1Y/kCUox/fCRhHys/ab6Rf+8sCz/bdQRrJ47MUz4iBKGRWqkLZfXNbGAmYYmUQpbtgh8DOBZ831gWueQi5DQ95wK+/1JRGtfSEMYspyLoaYVhV3cLnmKVgv/p9AWmkPbyrUf++7Gnk2IEsNQw6V/gqyvbV/NPox3t3gT9It9Ov2va3sC1+/1Cvhtr+e42zxtlUfbYtb+Yv1p26nQ44+1/AQ==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0513211410781401254</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0513211410781401254</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0512221410781342941</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0512501410781370293</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0513211410781401254</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319D52CE2891E50E05307991F0ABCF6</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>031A16B7B80F44F5E05307991F0A56FD</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>031A19C3B39326FFE05305991F0AE2C8</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1291a5a7-2aac-482a-ab36-5459cc71bd6f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_CS_FUNC_YOUTH_BAU_Get_ADULT_FAU_P2" searchProperties="true" id="b8d214bd-2cc1-4dc0-99b0-027d75c528be"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8c1b4d31-c5ff-4c1a-9088-f45397bdac66"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="828a2c7f-28a1-43e2-9678-95f5623a1b87"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="6542eda5-ebf1-4bc3-8afb-0214a884c2c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="7b05de4e-03fa-49d4-8aa6-b8182c42145c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH BAU" id="e7b44fb8-e4ad-4cf4-ace7-ba7e5552a60f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH BAU" id="d043edd5-8083-4bb3-8455-1bf7dad665a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="8402cb1b-a428-4bf5-b9a4-987663544776"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="1f8940d4-5d77-4c93-be5d-105381340675"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","BAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"0319EE8313C621B5E05307991E0AF9A4:1819A580"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0514481410781488965</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>031A083A0FC11930E05305991E0A5267</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:031A083A0FC11930E05305991E0A5267</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:031A083A0FC11930E05305991E0A5267</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>031A07DF7ED3192EE05305991E0A5001</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>031A083A576B1934E05305991E0A8AB5</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319E7EACC6819BBE05307991E0A53C8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:031A07DF7ED3192EE05305991E0A5001</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:031A083A576B1934E05305991E0A8AB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319E7EACC6819BBE05307991E0A53C8</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTM+jU9q0RaAjzHAEFQfUI8Lx+HInpBuItAk0KV+//iYFKkX0cu5TJ7s7a6/9kZVcCRyFjt8QAmJJOSusopAJP7XWjCRmPseCCp/hCIQvid9rdDu+U7R9vN9iFNrNmvFPtQJu2R0hM8BQMj1vWDaHnl01oYoAVfBohC4D5SpEAm0mJGayZjg28kzlg0ovCPme67uoaJfsN6MwgFgobOVStI0dqZWoGRMpZ75lLZfL4tIt8nhsObaNrNdup0cmEGGjfrXNKA0U13f+pBgAgTAkRcIj68rK+VwFwu/RMcMyiWEXK/gqlm3ZVUv5BIKOfxjZXgjabMTT5TVmnFGCQ7rBuj5dkBMeFBrhmMdUTqIvk0C2BjZhRUyCPPbDsPLUzgTKMYwFNsUEox3WM4wgBkag0H9u14wf53Ut3foSYyZGPI5Efvl3fIAtIOQzCEyxT2tH7XzAE5WqXwHx24yEiaALeNDDOsMExK6bQM6HKjzFMKKrDhVqQFdCs7MO6R0tt9Vo0jEI+X8adNCcLcgAhwnUS5fT9aYtNvP7Qfw+eN1MA77k7OIBN7xaSuDQOTVkrd0uj4YyG6LtjrdOJ+5cTm/7zckfy70nyeL2p2i+RuHNL/nefJ7K5fj2Zu6Uu62nPt3wR/wmXHlZ8V7XD8ngz1Cskjv0Jr0nNp2+95zbx/Xk9cJ7fqlY00Vr9Hbxq33Xup9wfv1U7XfvL57iYfeWzFy6nq7nfW9IyBzmMHoo3bHKXeP3Rfem+Y4Q6Xc3U9r5jeRrZxAxrzSLrJ4zrWXpHPDP2/ZnvpcM34HI/VKPQbtZuFFdwvJ7MdMWGpij1NWfafEREpg06nqX1g4/UXJHA1/1cLu2XdSwy82bcqvpoqrTatkl1y5Vq6hlN0pqsvYis2VxRPGasxHVsbTkbsfme4Ik8gWwAGJzwROldML4BrGJJS602bM6BJwJeOFKntF8KhaCOXaCN6V3eyicquQcO65ReODykT3GjZGEOK/JXk6Tn4HQGQUt3HquhRpsIVUt5niRyBAVF7jIIFHSHmuV9R2vUrIEjWYhaKZWxIMkhOJsMksrY4nt1zExEamVCjLjscRheiCsL9M7/revhPIJqHYQOqWfoLoJJ+4YZ5/P13mXD/PewzeSgOrzpcoqY0q2TPK/PqZFj0k2KlliRGRjkW35S4gTANY3/Kzj0mTxggU9iL6/zNW1oISkvu/vHBfnxWSxSNKOlm3btWIFbyndRFYPSKJ0bv3Cp8CsDMI661LJWB9Fzux5fomcsJ7EEiI1f4V0ecYrogdCvyLa6uCszn2i5EKquklYyVO261C9gDTjbx9JxCfaT5mf1GfJ44/ET2EdxFF5qkeEpGysV/pCWX8xG4QrWKqkkMeH4KcATgXPG7MiZ1ykmqZhIuHrPwWtcTUDE8ITJttNIzUc6m7KU65n4H84fYJJpT1769H/fuyZNB0BAuqFKGiKr69sX88/Gx9o9y7oJ/muuA375hqhqmvn5Nu5LGdFybGrfzJ/thzU6XjG6/8C</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTM+jU9q0RaAjzHAEFQfUI8Lx+HInpBuItAk0KV+//iYFKkX0cu5TJ7s7a6/9kZVcCRyFjt8QAmJJOSusopAJP7XWjCRmPseCCp/hCIQvid9rdDu+U7R9vN9iFNrNmvFPtQJu2R0hM8BQMj1vWDaHnl01oYoAVfBohC4D5SpEAm0mJGayZjg28kzlg0ovCPme67uoaJfsN6MwgFgobOVStI0dqZWoGRMpZ75lLZfL4tIt8nhsObaNrNdup0cmEGGjfrXNKA0U13f+pBgAgTAkRcIj68rK+VwFwu/RMcMyiWEXK/gqlm3ZVUv5BIKOfxjZXgjabMTT5TVmnFGCQ7rBuj5dkBMeFBrhmMdUTqIvk0C2BjZhRUyCPPbDsPLUzgTKMYwFNsUEox3WM4wgBkag0H9u14wf53Ut3foSYyZGPI5Efvl3fIAtIOQzCEyxT2tH7XzAE5WqXwHx24yEiaALeNDDOsMExK6bQM6HKjzFMKKrDhVqQFdCs7MO6R0tt9Vo0jEI+X8adNCcLcgAhwnUS5fT9aYtNvP7Qfw+eN1MA77k7OIBN7xaSuDQOTVkrd0uj4YyG6LtjrdOJ+5cTm/7zckfy70nyeL2p2i+RuHNL/nefJ7K5fj2Zu6Uu62nPt3wR/wmXHlZ8V7XD8ngz1Cskjv0Jr0nNp2+95zbx/Xk9cJ7fqlY00Vr9Hbxq33Xup9wfv1U7XfvL57iYfeWzFy6nq7nfW9IyBzmMHoo3bHKXeP3Rfem+Y4Q6Xc3U9r5jeRrZxAxrzSLrJ4zrWXpHPDP2/ZnvpcM34HI/VKPQbtZuFFdwvJ7MdMWGpij1NWfafEREpg06nqX1g4/UXJHA1/1cLu2XdSwy82bcqvpoqrTatkl1y5Vq6hlN0pqsvYis2VxRPGasxHVsbTkbsfme4Ik8gWwAGJzwROldML4BrGJJS602bM6BJwJeOFKntF8KhaCOXaCN6V3eyicquQcO65ReODykT3GjZGEOK/JXk6Tn4HQGQUt3HquhRpsIVUt5niRyBAVF7jIIFHSHmuV9R2vUrIEjWYhaKZWxIMkhOJsMksrY4nt1zExEamVCjLjscRheiCsL9M7/revhPIJqHYQOqWfoLoJJ+4YZ5/P13mXD/PewzeSgOrzpcoqY0q2TPK/PqZFj0k2KlliRGRjkW35S4gTANY3/Kzj0mTxggU9iL6/zNW1oISkvu/vHBfnxWSxSNKOlm3btWIFbyndRFYPSKJ0bv3Cp8CsDMI661LJWB9Fzux5fomcsJ7EEiI1f4V0ecYrogdCvyLa6uCszn2i5EKquklYyVO261C9gDTjbx9JxCfaT5mf1GfJ44/ET2EdxFF5qkeEpGysV/pCWX8xG4QrWKqkkMeH4KcATgXPG7MiZ1ykmqZhIuHrPwWtcTUDE8ITJttNIzUc6m7KU65n4H84fYJJpT1769H/fuyZNB0BAuqFKGiKr69sX88/Gx9o9y7oJ/muuA375hqhqmvn5Nu5LGdFybGrfzJ/thzU6XjG6/8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPfjnpK0pQgdYQZUPFURFW/HlzMxXUCkTTFJufjrT1KgAqKHfZ46WV351rcu+ZJjSZLYDVpSglAs5aV5EnMZ5NaGlQkepEQyGXCSgAwUDfqt7lXglnFA1lusUnjasP6pVWnVjTxqUwcGdoVSYpNK5dWuebju172jmvfqalcpMwi5VISrhuVip2Ljuu34944TVLzA98t1XHuxSo8gpMbWLmVsrUjNZcMaKTUJEJrNZuWZV07FELkYO+i5e9WnI0iI1TxeZpQHEs2VPy1HQCGOaZmmCTpGWz7HkQz6bMiJygSsYkXfxcII15H2iSQb/rKKvRCFfJDmyxPCU84oidkHMfXpghqlUakVD1PB1Cj5NgkHG2Ab5qaGFf7LQtvUDgTaYigkseWIOCusOxiAAE6h9HAXNqxfh3Ut33ovCJeDVCRye/lnfIBPIU4nENlyndaK2uGAeyrVPAYahJzGmWRTuDbDOiEU5KqbQA+HKt0IGLD5FZN6QOfSsEOb9HaWy2qcsiFI9X8atNGcJcgjiTNovovogrit5/Y0c+nFzEmU6vTCy85TBzdyApvOuaFo7XK5M5TFEC13nNDXiEWo/9dYdd32Qx+NexcL1Ol1HmHOX5L2dfVWvl+8DK/mXYwfxuFR99Y/E6OH2nT+NIpmbYYUfuq50xh7z7TXrV9A66o64PeOz8kjr7o9N32rRZ0HVYHzy87J78nteNR++YjazvhK4rPodhjyMFnUhHx3uOzPqurm79+C+WNy2vfj+Lx7VyeXY++sfT5sFOls8N+2rc98P3t9A6rWSzMG4Wmpo7tE1M9iZiwssge5azAx4iMVcGU1zS6jHUGm5Y5Fge7hco09p4VrXss/qradulc5w76H/XrdOcOtWqvtr0VmyWKH4knKB8zEMpK7HJufCdIkkMAjEPY0zbTSSesHxFOiSCnkd/oQpFzCfarleTitfMBw5rwtYPQafywYw5G3wGCVrlPV4z3RGigQ25Jc2ZLkO6BswsDothlrqedaKl2KdzLNVOyUp6TMIdPKLozIBm6l5iPJkkkMhihK0iiLoTwZTfLCILn8ujahMrcySSepUCTOzwP6Nrvdf+tCaJ+IGQdpUmqDbibsuWIq63y+z/toM+81fCuLmDleuqpKMLpksv3rc1jMlBSTUiRGpbPmXmz5Q4g9AOgHfmi3NEW8aMo2oq/vcn0raB1prvv7Tsrv5Ww6zfKOHmHsIaHhkZZNB/WBZlrmFvfpGDgqINBBd0rBeidyYd/ml6kR7yuiINHzV8qXBzwi+iDNIyLU52Z+6AtlK6Sum4K52mc7ifUDyDD+8Y1EA2r8tPlGf2apiD7btQdrI47OU78hFONDszL3yeKb2aCphmVaCVOxCb4PYF/wbWNR5IKL0tP0min4/k/JSFzDIpSmGVfhqZUbNmU356kWEwg+nb7A5MpePPXYf7/1bJaPANUapv1zfHNjB2b++XBDuldB96k37pw4Wr3xpnr7bvWoKMoWu+YX81fLRp12Z7z5Lw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o4FP0rjPvYMbaMiWNPYIZAsiVtIAukTfOyo0gXULAlx5L5+vUrGXCBkizdJ4+ur84990NHupI4ib2oJSVkigleWSYxl1FhbVh5xiOBJZMRxwnISJFo2Lr/FnlVN8K7LVal22lY/wSUerUahPYFuiC2/wJjG7u0bnthPRjTiyAMsKtdpcyhy6XCXDUsz0W+7YY2qo8Qinw/qgVVr+4/W5XvkEmNrV2qeteG1FI2rKlSaeQ4i8WiuqhVRTZxPNdFztP9tyGZQoKt5tUmoyJQ1tz6kyoFAnFMqkQkzpVz4HNFZTRkE45VnsE2Fn0vluu4oaN9qGSTT1a5F2iXj0WxbGMuOCM4Zmts6nMPaipopRVPRMbUNHk3CeQaYBuWxCbI558s55DamUAHDDOJbTnFaIs1gDFkwAlUHgfdhvXpvK4VW0cZ5nIsskQeLv+MD/A5xCIFastdWltq5wOeqFTzCkjU5STOJZtDzwxrignIbTeBnA9VechgzJbfmNQDupSGnbNP72i5qUaHTUCq/9OgveZsQL7jOIdmnKA5gSEB5/bLzymEs1eKFtcz/4fbbRQE9p0LQ9nazfJoKMsh2uzooaw9SZ/SdUBjWudshEKakOEa3yARQ3IzabcHvR6/6/Sf6uH6OX17u/P7wWMSi6/gfX64p/IxWa2TQCzGXwb1u8+z55Hv4OHP1R3zpPd8yaeAu61ldj2YCflXgKa0H8Q9dwXBw9+3tNea9oOXztPgjl6PhHL669SJH+n959uHcPHjdtLzFz8GKyW/y9Hab5Tp7PE/tO3O/DB/eQWidkszBt1O5VZ3CauPxcxYGLXHhWuUGvGRCriymmaX0Y4o13LHaKR7uFm7NRTeBDetdvviEoXX1zduveYGYYhu3Fa91r7cicyGxRHFtuBjZmIZyd2MzccESRJJ4BQyey5yrXTS+gCxgxWudPlAHwLBJYyElmf0OlZLHNeXaiZjOXt59S9iBDmuWZWeUH3ez1pjBdmhJvsHmjwAwlIGRrjNXEs92FLpWrzhea5iVJ3jKodcS3tmVDby/Mu6I1mSxmCYOomgeQzVdJoWlXHk5uvZmMjCyiRJRaZwXBwI5930jv/tKqF9KDMO0qR0DbqbcOKO8Xb5vJ93sJ/3Dr6VU2bOly6ryhjZMDn89WtazJiUo1ImRiTacS+3/CHECQDnA37OcWnKeHTO9qLvLnN9LWghae76+4arb9V8Ps+LjgauW3MyDe9o3UTOEEiudW41EjPgTgnhnHWplKyPIpf2Q365mvKhwgoSPX+VYnnGK2II0rwiuvrgLM99ohyE1HVTsFSnbO1Yv4AM4w8fSSQixk+bH/RnITL6q10nsPbi6Dz1I0IxPjErc6Gs3pkNIjQs01Iosn3wUwCngh8ayyKXXJSeppdcwft/KkbjGhYmRORcdTtWYdjX3YKnWqUQ/XL6DaaQ9vKtx/77sWezYgQI6BeiZAW+ubIjM/98sqfd26BH8t1yL2st97aNUFhzC/mub+XbuwjKohywa/5m/t2yV6fjGW/+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0514481410781488965</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0514481410781488965</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0513511410781431340</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0514231410781463077</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0514481410781488965</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>031A07DF7ED4192EE05305991E0A5001</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>031A083A576C1934E05305991E0A8AB5</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319E7EACC6919BBE05307991E0A53C8</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8402cb1b-a428-4bf5-b9a4-987663544776</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_CS_FUNC_YOUTH_SAU_Get_ADULT_BAU_P2" searchProperties="true" id="cb272b5e-4f84-4901-b156-724bd1d9405a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="feba9a8b-bb6c-438c-bb0d-a6e3140a8301"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5c555235-f8b2-4ab4-af5c-dde2e6a88304"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT BAU" id="2d87392e-1f7f-4405-afa4-68f8c7f94a69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT BAU" id="9c2f1ba0-d42e-4208-b5a3-7192096a494e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="c19141aa-891b-4110-bc3e-fdee7bf61f72"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="a0c3534f-ac91-4882-9141-51a461bd39bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="a43b1133-03f5-4d9d-af8f-7b340a1d4855"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="3fc1ac96-ec01-4cc9-ae1a-e2854dd9472c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"031A2D78576B4FB0E05307991E0A8556:D977A15B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0516341410781594392</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>031A28CA720C58CAE05305991E0A2408</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:031A28CA720C58CAE05305991E0A2408</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:031A28CA720C58CAE05305991E0A2408</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319EEC10042668BE05305991E0ADFBE</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319ED50D94421B1E05307991E0AEA1B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0319E7EAAB5619B9E05307991E0A32CF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319EEC10042668BE05305991E0ADFBE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319ED50D94421B1E05307991E0AEA1B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:0319E7EAAB5619B9E05307991E0A32CF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn3sIBfxxlRn8NJKR9uOtu7tfjkTwwLTQrAkKPbXnwSVqrU97vPEZLHyrW9d8iU3DEWhaTuMQcJJTEtZFFJm59aWkibUjhEjzKYoAmZzbE+c0dA2y7qN9luUkttrKf9Y1nzebDYNtVKvNVTLNzwVVay5WpkjH9c9v1n3DeHKWAouZRxR3lJM3bBUvaka1WfDsK2qbdTKes38o5SmkDCBLVzKurIjlbGWsuB8aWvaer0uryvlOAk0U9cN7fdoOMELiJDSvtlmlAdK2jt/XPYAQxjiMo4j7UY78rnxmD0hAUU8TWAXy/sulq7pTU34eIwEV0qxFzyX+nG+7CIaU4JRSD6QrM8I+CL2Sk4YxAnhi+jbJAxdAquQYRUbFr1StGNqFwIdMUwYUtkCGTusMfiQAMVQehm7LeXqsq7lW58TRJkfJxE7Xv4dH6ArCOMleCrbp7WjdjngmUq1bwDbLsVhysgKHuSwLhEGtusm4MuhSk8J+CQbEiYGNGOSnXZI72S5rUaPBMD4/2nQQXO2IFMUptDuo7t0Mche5rDBz1ntw58OPWRSd3PttnICh865oWjtdnkylMUQbXf4bjSd/Rq8Z2hAsz93ke5VZjOMflvPQefhoeF9dOhGHwVRvFjX3yzL2gTWfebSoTtyGg/s/tp1+qE56/mN2dSb1m8fR1FiDcKXZceC7MkbPobBPaxeG85sOqy8jysOuSdPr2+vv64bWmM8N4czjRp49mJlTT+6f3XHM2xe++guWXpv4Kzn48FLbewOBnck2qV7wv/Ytj/zk3T+Cpjvl3IM3F7pVnQJ8Z/FTFqIp/q5q72U4sM4UK605S6pHXYq5I54tujhdq1XjGa/3zV03TJrtUanr1crelUcpb7u9G47/b3IbFmcUOzG1CcylpTc7dj8TBBHNgPqQaKu4lQoHVN+QOwhjkouHYtDEFMGz7GQ542vb+jc+NjMg7i6WTSDwM8qDcNXSg8xf6SPieNzSI4l2TqS5DFgsiQgdVuONRNzzbgoxTtapTw0yitUppAKZU+kyNqm1ahqjETLECRRLYq9NITycrHMC6Ox7ddUEWa5lTC8jBOOwvw8aN9md/pvXwjh4xHpwGRKHRDNhDNXjL7P5/u864d57+Gd1CPyeImq8oTgLZPjX5/DIqekmJQiMcyMPfdiy19CnAHQfuCnnZamiOetyEH0/V0ubgWhI+19f99R+b2crlZp3tG6rle0RMBrQjYNbQI4FTK3eY7fgGoFhHbRnVKwPolc2I/5pXxBJxxxiMT8lfLlBY+ICTD5iHDFuckufaEchRR145Dxc7ZuKB5AkvGPbyRsY+knzE/is44T77NdZ7AO4og8xRuCExrIlbxPNt/MBo4FLBFKGCeH4OcAzgU/NhZFLrhwMU3zlMP3f0pS4loKwjhOKXd7Sm44lN2cJ98swf50+gKTK3vx1CP//dZTST4CGMQDkZEcX97Ytpx/GhxI9y7oiXo7ZqPr1E29WxXfQ/U2Lb1RFOWIXfuL+avloE6nM97+Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn3sIBfxxlRn8NJKR9uOtu7tfjkTwwLTQrAkKPbXnwSVqrU97vPEZLHyrW9d8iU3DEWhaTuMQcJJTEtZFFJm59aWkibUjhEjzKYoAmZzbE+c0dA2y7qN9luUkttrKf9Y1nzebDYNtVKvNVTLNzwVVay5WpkjH9c9v1n3DeHKWAouZRxR3lJM3bBUvaka1WfDsK2qbdTKes38o5SmkDCBLVzKurIjlbGWsuB8aWvaer0uryvlOAk0U9cN7fdoOMELiJDSvtlmlAdK2jt/XPYAQxjiMo4j7UY78rnxmD0hAUU8TWAXy/sulq7pTU34eIwEV0qxFzyX+nG+7CIaU4JRSD6QrM8I+CL2Sk4YxAnhi+jbJAxdAquQYRUbFr1StGNqFwIdMUwYUtkCGTusMfiQAMVQehm7LeXqsq7lW58TRJkfJxE7Xv4dH6ArCOMleCrbp7WjdjngmUq1bwDbLsVhysgKHuSwLhEGtusm4MuhSk8J+CQbEiYGNGOSnXZI72S5rUaPBMD4/2nQQXO2IFMUptDuo7t0Mche5rDBz1ntw58OPWRSd3PttnICh865oWjtdnkylMUQbXf4bjSd/Rq8Z2hAsz93ke5VZjOMflvPQefhoeF9dOhGHwVRvFjX3yzL2gTWfebSoTtyGg/s/tp1+qE56/mN2dSb1m8fR1FiDcKXZceC7MkbPobBPaxeG85sOqy8jysOuSdPr2+vv64bWmM8N4czjRp49mJlTT+6f3XHM2xe++guWXpv4Kzn48FLbewOBnck2qV7wv/Ytj/zk3T+Cpjvl3IM3F7pVnQJ8Z/FTFqIp/q5q72U4sM4UK605S6pHXYq5I54tujhdq1XjGa/3zV03TJrtUanr1crelUcpb7u9G47/b3IbFmcUOzG1CcylpTc7dj8TBBHNgPqQaKu4lQoHVN+QOwhjkouHYtDEFMGz7GQ542vb+jc+NjMg7i6WTSDwM8qDcNXSg8xf6SPieNzSI4l2TqS5DFgsiQgdVuONRNzzbgoxTtapTw0yitUppAKZU+kyNqm1ahqjETLECRRLYq9NITycrHMC6Ox7ddUEWa5lTC8jBOOwvw8aN9md/pvXwjh4xHpwGRKHRDNhDNXjL7P5/u864d57+Gd1CPyeImq8oTgLZPjX5/DIqekmJQiMcyMPfdiy19CnAHQfuCnnZamiOetyEH0/V0ubgWhI+19f99R+b2crlZp3tG6rle0RMBrQjYNbQI4FTK3eY7fgGoFhHbRnVKwPolc2I/5pXxBJxxxiMT8lfLlBY+ICTD5iHDFuckufaEchRR145Dxc7ZuKB5AkvGPbyRsY+knzE/is44T77NdZ7AO4og8xRuCExrIlbxPNt/MBo4FLBFKGCeH4OcAzgU/NhZFLrhwMU3zlMP3f0pS4loKwjhOKXd7Sm44lN2cJ98swf50+gKTK3vx1CP//dZTST4CGMQDkZEcX97Ytpx/GhxI9y7oiXo7ZqPr1E29WxXfQ/U2Lb1RFOWIXfuL+avloE6nM97+Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDvuxg4CCRaY6Y7W7h9betPeXM2lYSiwklAS8/PqdoFK1tsd9HhzMYuVb37rwJSccxVHN63AOqSCMVmZxRLlXWFtallKPIU64R1EM3BPYG3au+l6tanpovUWr+L2W9q9Vw65tOw3dctyGbruOqzcb9aY+ckZvx00wkesG0pXzDHzKBaKipdVMy9bNptxyb1me7Xh2vSo3vWqVR0i5xJYuVVNbkZrxlhYKkXiGMZ1Oq9N6laVjo2aalvF81R/iEGKktU+WGRWB0vbKH1cDwBBFuIpZbJwYWz4nAfeGZEyRyFJYxQq+i2UaZtOQPgEn419auRcCn45YsewiyijBKCILpOpzBSJkQaUTjVlKRBh/m4RlKmAdZljHlk1/acY2tQOBthimHOk8RNYKawAjSIFiqDwM/Jb267CuFVvvU0T5iKUx317+HR+gOUQsgUDn67RW1A4H3FOp9glgz6c4yjjJ4VoNa4Iw8FU3AR8OVblNYURmfcLlgM64Ymds0ttZLqvRI2Pg4v80aKM5S5BHFGXQvh2Qq8Xr1dttEnfvssbrS06OsMjhxfdbBYFN58JQtna53BnKcoiWOzrnicN67KjxNA37gyd68ZQ+sJvmhX+DxXPvoWn7XSs/vTg9euzgR37UmN3cn8M76zcydv/SyI7QYx6+dBfz91rSv0uvBt1B/Bxj4rrPk7vzOQwdBGQQxJdU/i4e351ZYzJ7s/p5HnWMxeKSjZ7m5/bDU+ROslP3InoTT/wif3Emk3By3f1HXNrO4HffOvJp6LbKdDb4b9vW3/wwe5sAFuulGgO/V/ktu4TEz2KmLCTQR4Wrlyjx4QKo0Npql9IOL5NyRwJP9nC5NutW86znmL2mbdesU+vMdOrmcbMp/3TOOtbpWmSWLHYodhkdERVLSe5ybH4miGOPAw0g1XOWSaXj2g+IPSRQxacD+REwyuGeSXmeW2H8MbbfFznho3AaCzebiHdnoVWumbihN2lnJCDdlmR7S5IHgElCQOm2Gmsu55oLWYoPlGcisqo5qlLIpLKnSmS9mhQTg5M4iUARNWIWZBFUkzApCmPw5bOmI8wLK+E4YalAUfE9GN9mt/tuXQjpExDlwFVKpyCbCXuOmPo6n+/zPt7Mew3fyQKiPi9ZVZESvGSy/epzWNSUlJNSJoa5teZebvlLiD0Axg/8jN3SlPGCnGxEX5/l8lSQOtJe9/cDVT+qWZ5nRUePTbNupBLekLJpGUPAmZS5+T17B2qUEMZBZ0rJeidyad/ml4mQDgUSEMv5qxTLAy4RQ+DqEuHL72Z26A1lK6Ssm4CZ2GfrRvICpBj/eEfCHlZ+0nwrH1OWfia+D2sjjsxT3iEEoWO1UufJ/JvZwEzCEqmELN0E3wewL/i2sSxyyUXIaXrLBHz/pqIkrqUhjFlGhd/TCsOm7BY8xTwB79PpC0yh7OVVj/z3XU8nxQhgkBdETgp8dWJ7av7peEO6V0F31LtTc7ud45rZdeSzUG9nqd4123TLomyxa38xf7Vs1Gl3xtt/AA==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDvvxDhIQ35jqDNX2Xly1XW3d7X65E8NB0oVgSUDtr98Elaq1ve79xORw8pznvORJrjiOI8txOYdU0IRV1nHEuFNYO1qWMifBnHKH4Ri4I4gzdUdDx6oiB++3aBWv39H+bbXmDQiQrfuk1dZtBL4+t3xThxZA0AC/3pz70pXzDDzGBWaio1nItHXU1s36g2k6dsOxatVmvflTq8wg5RJbulSRtiO15h0tFGLpGMZqtaquatUkXRgWQqbxYzSckhBirHWvthkVgdLuzp9UfSAQRaRKkti4Mo58rnzuTOmCYZGlsIvlfxQLGahtSB+f08UXrdwLvseCpFj2MEsYJTiir1jVZwQiTPyKGy2SlIow/jAJEylgHdZEJ6bNvmjGMbULgY4YphzrPMTmDmsCAaTACFQeJ15H+3JZ14qtDylmPEjSmB8v/4wPsByiZCnD8H1aO2qXA56pVPcKiOMxEmWc5jBWw7rEBPium0Auh6rcpxDQ9ZByOaBrrtgZh/ROlttq9OkCuPg/DTpozhZkhqMMundo9frQnEbD9K/N341oFj9Pstuvsf8wGXUKAofOhaFs7XZ5MpTlEG13uGNPpLcr+8e3sRi6A1x73PBv4+8GD5E9DJp8dh3Uvl8/u/0e79mPT0sKc0B4YEfETX+0fq7QRp6l/MYaenwpBuvGuD9/aU/7a+/r4MlMGs2f4f0Ih42nl8eGd/96y2ez+nDyVOv3/bx3Y09v/f4/0bw+uxvZfhY/5+4vexReD5rhr3XOngZhbzYIzDys1SF3O2U6B/yPbfszP83mz0DEfqnGwOtXbmWXsPhczJSF+npQuDpLJT5cABNaV+1S2uFkUu6o78gebteoZrZvmjeue11vmO3r9g2q11Cz3TZvkFuzerd7kdmyOKHYS1hAVSwludux+ZwgiR0OzIdUz5NMKh3XPkHsY4ErHpvIQ5AwDg+JlOewEWQ+NoOsbpptmqHXTURQey60yjgRd+wudQMB6bEk20eSPAFC5SAo3VZjzeVccyFL8YLzTERmNcdVBplU9lSJrGPZrbrBabyMQBE14sTPIqguw2VRGINvv5aOCS+slJNlkgocFefB+DC703/7QkgfnyoHrlK6BtlMOHPFmPt8Ps67eZj3Ht7NfKqOl6yqSCnZMjn+9TYsakrKSSkTI9zccy+3/CHEGQDjE37GaWnKeH5OD6Lv73J5K0gd6e77+4KrL9Usz7Oio02EakYq4Q0pm6YxBZJJmds8JL+AGSWEcdGdUrI+iVzaj/llImRTgQXEcv4qxfKCR8QUuHpEePLcrC99oRyFlHUTsBbnbL1IPoAU40/fSMQhyk+a7+VnlaRviZ/DOogj85RvCEHZQq3UfbL5YDZIImGpVMIkPQQ/B3Au+LGxLHLJRchpmmcCPv5TURLX0TAhScaE19cKw6HsFjzFZgnOm9M7mELZy6ce/e+3nk6LESAgH4icFvjqxnbU/LPFgXTvgp6ot2u1em7TQr26/BbqXd+qt2WjVlmUI3bdd+b3loM6nc549zc=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0516341410781594392</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0516341410781594392</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0515361410781536450</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_051671410781567597</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0516341410781594392</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319EEC10043668BE05305991E0ADFBE</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319ED50D94521B1E05307991E0AEA1B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>0319E7EAAB5719B9E05307991E0A32CF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a43b1133-03f5-4d9d-af8f-7b340a1d4855</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_CS_FUNC_YOUTH_SAU_Get_ADULT_SAU_P2" searchProperties="true" id="ee161828-c017-447e-8019-2b264512c49d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="db5389f3-e21e-4612-b862-9d9eac00c77f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6a559657-476b-4771-834f-3f77b3e13398"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT SAU" id="458e6293-ca19-46c7-9c16-1b22671c415e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT SAU" id="87ee4101-249f-41e0-89b6-63dbc2bdcc7e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="8005908b-e1d0-4fd4-8bce-1c1bf51cdf8a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="7bddb225-fe7b-4d02-bbfb-9ffbe356434f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="ee12df8c-fe8c-46da-8d62-6f9f5fd0c0b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="553f3f89-6665-41cb-9420-c1e7e14d3fdc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"031A19C439E54E9BE05307991F0A30D7:7AA88BA"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0518181410781698128</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319DF929102345AE05307991F0A782F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319DF929102345AE05307991F0A782F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319DF929102345AE05307991F0A782F</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0319DFF8319C38C9E05307991F0A23DE</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319E966E8CB2D72E05305991F0AC0ED</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">031A137DE84F1D5BE05305991F0A207E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:0319DFF8319C38C9E05307991F0A23DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319E966E8CB2D72E05305991F0AC0ED</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:031A137DE84F1D5BE05305991F0A207E</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP4rTPejU9KWIm1HmOHKouzq6oKsq1/uhPQA0TapSQrIr9+kQAVEL3s/dXJ68pznvORJziROEy9qSwlCUc4qizRhMiqsTSsXLOJYUhkxnIKMFIkG7euryKs6Ed5ssSq9TtP6dwT4tDaKwR6dur7t46BujxqeY49xAA3sxo7jnmpXKXPoMakwU03Lc7SrE9pu/c51I/80qp9WAy98tCq/QEiNrV2qjrUmtZBNa6pUFiE0n8+r81qViwnyNDD6fX01IFNIsdU6W2VUBBKttT+pxkAgSUiV8BSdoR2fs1hGAzphWOUC1rHij2I5yAmR9oklnXyxyr0Q99iYF8tzzDijBCd0iU19rkFNeVxpJxMuqJqmHybhOgbYhgWxieuzLxbapXYk0A5DIbEtp9hdY/VhDAIYgcqw32taX47rWrH1TmAmx1ykcnf5d3yAzSDhGcS23KS1pnY84IFKtc6ARD1GklzSGfwww5phAnLdTSDHQ1VuBYzp4opKPaALadihbXp7y1U1OnQCUv2fBm01ZwXyCyc5tB57z9MX9PPn6OJpQsb3s+n4YkS8DpcP82ZBYNu5MJStXS33hrIcotWOb4+SDdpJO1heyLBPBrnToKLO0+d2p3vy3ZVh99F7CL45JON+bZKhJOlfLt3xSza8R3MPt5/R8PZ22PCHI3G/PMmCH/dLGP18vKdwEXQeef9iQkf8u4Ba4+nrrJ3FNzeX8eVlN7xYPtTDF6idNrIg+LZULpoqFA+HNzPn9drv3+GHpY7DaKPPf9/GTyfwPGmW6Wzx37VtzvwgHz0BUZulGYNep9LVXcLqczEzFhrb48I1yoz4SAVMWS2zy2hHlGu5o3Gke7haOzU37HS7gf6c14Lz8KtTrzmNMHS7Tturdb5uRGbFYo/iOWdjamIZyV2NzecESRpJYDEIe8ZzrXTS+gSxgxWu9FhfHwLOJNxxLc+uXMxGzIfXnIj0OZ8ucpX4nlufWpUfXN2wG9EeKxC7muzvaHIfCM0oGOE2cy31YEula/GCZxrMrc5wlUGupV0YlY08P6gjSdMsAcMUpTzOE6hm06yoDJKrr2djIgsrlXrchMJJcSDQh+nt/9tUQvvE1DhIk9I/oLsJB+4Yf5PPx3k3tvPewLfzmJrzpcuqBCUrJru/3qbFjEk5KmViRLob7uWWv4Q4AIA+4Yf2S1PGi2d0K/rmMtfXghaS1qa/L7j6Us1ns7zoaMNxakhoeKR100UDILnWudc7/gwMlRDoqEulZL0XubTv8svVlA0UVpDq+asUyyNeEQOQ5hXR0wdncewTZSekrpuChTpkO0/0C8gw/vSRRCJi/LT5Vn/mXMRv7TqAtRVH56kfEYqyiVmZC+X1g9kgXMNSLYVcbIMfAjgUfNdYFrnkovQ0jXIFH/+pGI1rWpgQnjPV61iFYVt3C57qNYPozekdTCHt5VuP/vdjz6bFCBDQL0RJC3xzZUdm/tlkS7vXQd/Ld+iFruPV/Hp7W74bgdcti7LDrvXO/N6yVaf9GW/9AQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP4rTPejU9KWIm1HmOHKouzq6oKsq1/uhPQA0TapSQrIr9+kQAVEL3s/dXJ68pznvORJziROEy9qSwlCUc4qizRhMiqsTSsXLOJYUhkxnIKMFIkG7euryKs6Ed5ssSq9TtP6dwT4tDaKwR6dur7t46BujxqeY49xAA3sxo7jnmpXKXPoMakwU03Lc7SrE9pu/c51I/80qp9WAy98tCq/QEiNrV2qjrUmtZBNa6pUFiE0n8+r81qViwnyNDD6fX01IFNIsdU6W2VUBBKttT+pxkAgSUiV8BSdoR2fs1hGAzphWOUC1rHij2I5yAmR9oklnXyxyr0Q99iYF8tzzDijBCd0iU19rkFNeVxpJxMuqJqmHybhOgbYhgWxieuzLxbapXYk0A5DIbEtp9hdY/VhDAIYgcqw32taX47rWrH1TmAmx1ykcnf5d3yAzSDhGcS23KS1pnY84IFKtc6ARD1GklzSGfwww5phAnLdTSDHQ1VuBYzp4opKPaALadihbXp7y1U1OnQCUv2fBm01ZwXyCyc5tB57z9MX9PPn6OJpQsb3s+n4YkS8DpcP82ZBYNu5MJStXS33hrIcotWOb4+SDdpJO1heyLBPBrnToKLO0+d2p3vy3ZVh99F7CL45JON+bZKhJOlfLt3xSza8R3MPt5/R8PZ22PCHI3G/PMmCH/dLGP18vKdwEXQeef9iQkf8u4Ba4+nrrJ3FNzeX8eVlN7xYPtTDF6idNrIg+LZULpoqFA+HNzPn9drv3+GHpY7DaKPPf9/GTyfwPGmW6Wzx37VtzvwgHz0BUZulGYNep9LVXcLqczEzFhrb48I1yoz4SAVMWS2zy2hHlGu5o3Gke7haOzU37HS7gf6c14Lz8KtTrzmNMHS7Tturdb5uRGbFYo/iOWdjamIZyV2NzecESRpJYDEIe8ZzrXTS+gSxgxWu9FhfHwLOJNxxLc+uXMxGzIfXnIj0OZ8ucpX4nlufWpUfXN2wG9EeKxC7muzvaHIfCM0oGOE2cy31YEula/GCZxrMrc5wlUGupV0YlY08P6gjSdMsAcMUpTzOE6hm06yoDJKrr2djIgsrlXrchMJJcSDQh+nt/9tUQvvE1DhIk9I/oLsJB+4Yf5PPx3k3tvPewLfzmJrzpcuqBCUrJru/3qbFjEk5KmViRLob7uWWv4Q4AIA+4Yf2S1PGi2d0K/rmMtfXghaS1qa/L7j6Us1ns7zoaMNxakhoeKR100UDILnWudc7/gwMlRDoqEulZL0XubTv8svVlA0UVpDq+asUyyNeEQOQ5hXR0wdncewTZSekrpuChTpkO0/0C8gw/vSRRCJi/LT5Vn/mXMRv7TqAtRVH56kfEYqyiVmZC+X1g9kgXMNSLYVcbIMfAjgUfNdYFrnkovQ0jXIFH/+pGI1rWpgQnjPV61iFYVt3C57qNYPozekdTCHt5VuP/vdjz6bFCBDQL0RJC3xzZUdm/tlkS7vXQd/Ld+iFruPV/Hp7W74bgdcti7LDrvXO/N6yVaf9GW/9AQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBXOwKVDGYEFIJSYDMZPKyJeS2rcTIjiRzydevZMABhmSZfXKp3Tp9+qIjXXA0T2yvyzkwQVJaWc0Tyr3C2tZyRr0UccI9iubAPYG9Sff2xrOrpod2W7TK0G9r/1itGnIbNVcHgEB3kOPobjCr624zaDnQCGezVihdOc9hSLlAVLQ127Qc3XR1qz61LM9perZTtR3zWav8BMYltnSpmtqW1Iq3tViIzDOM5XJZXdaqKYsM2zQt4+n2ZoJjmCOtc7HJqAjEOlt/XA0AQ5LgKk7nxoVx4HMRcG9CIopEzmAbK/gslmmYriF9Ak6ib1q5F4IhDdNi2UM0pQSjhLwjVZ9bEHEaVLpJlDIi4vmnSVimAtZhhXVsOfSbZhxSOxPogCHjSOcxsrZYYwiBAcVQeRwP29q387pWbJ0yRHmYsjk/XP4dH6ALSNJMxuK7tLbUzgc8UanOBWBvSHGSc7KAkRrWDGHg224CPh+qcs8gJKsbwuWArrhiZ+zTO1puquGTCLj4Pw3aa84G5CdKcujEw7h2d7m68W+vW62H0c/svrvO4pg9vT20CwL7zoWhbO1meTSU5RBtdgyCO7P5LgBTax1dO9ejwS8/u2UWv6Yjv8XvH5+nszFfvcR0afVrV7OHxzeH+U/9hsN6s0ES97KQRw8v31fs6fnlRyM33UneHzSffq3xwDejq8lgHF0+9mbh79dGOm3MsNXMQbRgsqxPa9e/+6/P9vckjsNfi+ff09poQJ7eIxYEKH4Z3cPtMLweh62rhEfW1bBdprPH/9C2O/OTfPYCWOyWagyGfuVSdgmJr8VMWUigh4Wrlynx4QKo0Dpql9IOL5dyRwJP9nCzNmuW23cbjX6r98P2m3bfrNfMuutal2a3Z/b9nchsWBxR7KU0JCqWktzN2HxNEM89DjQApi/SXCod175A9JFAlSEdy0OQUg7TVMrz4tV+YSK2X9Hs1Vq904W9gnV9SblWGaXijt6xbiiAHWqyc6DJY8AkI6CEW801l4PNhazFG1rkIrGqC1SlkEtpZ0pl5b5W3eBkniWgmBrzNMgTqGZxVlTG4JuvrSPMCyvhOEuZQElxIIxP0zv+t6uE9AmIcuAqpR8guwkn7hhrl8/neTf3897Bd/OAqPMlyyoYwRsmh78+pkWNSTkqZWKYWzvu5Za/hDgBYHzBzzguTRkvWJC96LvLXF4LUkg6u/6+oepbNV8s8qKjTSWYTMIbUjctYwI4lzq3nqavQI0SwjjrUilZH0Uu7Yf8chHTiUAC5nL+KsXyjFfEBLh6RQzlwVmd+0Q5CCnrJmAlTtl6iXwBKcZfPpKwh5WfNN/LzzJlwUe7TmDtxZF5ykeEIDRSK3WhrD+ZDZxKWCKlMGX74KcATgU/NJZFLrkIOU2zXMDnfypK49oawjjNqRj6WmHY192Cp1hn4H04/QFTSHv51iP//djTSTECGOQLkZMCX13Znpp/Gu1p9zbosXz7l67tWqZdc+rdQr6bG/lutuzLsigH7Dp/mP+07NXpeMY7/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPuYMf4Agu0JzBAIDTcJSXBC07zcEfIa1NqSsWSb5NdXMuACJbn0Pnm0Xp09+6EjXXAUR7bX4xxSQRitreKIcq+0drQspR5DnHCPohi4J7Dn9+5uPbtuemi7RauNBh3tX3Qe2ICbrt7CQUtvns8cHTWgobdN2wrMANB5w5GunGcwolwgKjqabVpN3XR1q/VkWV6z7bXadct0XrXaFFIusaVL3dQ2pFa8oy2ESDzDKIqiXjTqLJ0btmlaxsvdrY8XECOte7HOqAyUdjf+uB4AhijCdcxi48LY87kIuOeTOUUiS2ETK/golmmYriF9Ak7mX7RqLwQjGrJy2UeUUYJRRN6Rqs8diAULar1ozlIiFvGHSVimAtZhhXVsNekXzdindiLQHsOUI50vkLXBmkAIKVAMtefJqKN9Oa1r5danFFEesjTm+8u/4wM0h4glEOh8m9aG2umARyrVvQDsjSiOMk5yGKthTRAGvukm4NOhag8phGR1S7gc0BVX7IxdegfLdTUGZA5c/J8G7TRnDTJFUQbdhYtM7C/zovXSSKbjs+XlGN9c3n0fPrJOSWDXuTRUrV0vD4ayGqL1jv5jcfaa84R8H/uj6+frYpwuKeTjyWv8/H6ZhP3rx9uHid9Y0hvrrN9nYZHPh87b1PKLeU4gDHF4w/DZpO/MpgE6m5rLmYD7s3f71bKihZn6MJkF39hL81vjWuR392/T+wjZ7uUjKmBYWOfjPv/n282z4xvT2+Hqxf25apIH9LT6+jV9Hge3PSe8+kHHvbfIwZ0qnR3++7btmfez2Q/AYrtUYzAa1IayS0h8LmbKQgI9LF29RIkPF0CF1lW7lHZ4mZQ7Eniyh+u12bB6VqM9uHKaQ2vQurwyWw2z5brW0OzZZvtqKzJrFgcU+4yGRMVSkrsem88J4tjjQANI9ZxlUum49gniAAlUG9GJPASMcnhiUp7ddoTmlpvEs/TcEk7xHswd7EQ/G1ptzMQ9vU97oYB0X5Obe5o8AUwSAkq41VxzOdhcyFosUZ6JyKrnqE4hk9KeKpX17KbTMjiJkwgUUyNmQRZBPVkkZWUMvv7aOsK8tBKOE5YKFJUHwvgwvcN/20pIn4AoB65SugTZTThyxzS3+Xycd3s37y18LwuIOl+yrCIleM1k/9fvaVFjUo1KlRjm1pZ7teUvIY4AGJ/wMw5LU8ULcrITfXuZy2tBCkl3298lqi/rWZ5nZUfbSjBTCW9I3bQMH3Amde7tif0EalQQxkmXSsX6IHJl3+eXiQX1BRIQy/mrlcsTXhE+cPWKGMmDszr1ibIXUtZNwEocs/Uj+QJSjD99JGEPKz9pfpCfgqXB73YdwdqJI/OUjwhB6Fyt1IXy9sFsYCZhiZRClu6CHwM4FnzfWBW54iLkNM0yAR//qSmN62gIY5ZRMRpopWFXd0ue4i0B77fTHzCltFdvPfLfjz2dlCOAQb4QOSnx1ZXtqfmn8x3t3gQ9kG93MHRt1zLtRrPVK+W7vZbvtmMPq6Lssev+Yf7TslOnwxnv/gI=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0518181410781698128</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0518181410781698128</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0517191410781639809</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0517471410781667336</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0518181410781698128</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>0319DFF8319D38C9E05307991F0A23DE</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319E966E8CC2D72E05305991F0AC0ED</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>031A137DE8501D5BE05305991F0A207E</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee12df8c-fe8c-46da-8d62-6f9f5fd0c0b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_CS_FUNC_YOUTH_SAU_Get_ADULT_FAU_P2" searchProperties="true" id="93bb75bb-4f76-4457-844b-e2e47a775c8a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9db71784-8795-42b8-90c4-272a490d19c6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="979d8bad-0b76-4067-8c3e-335b5650a501"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for ADULT FAU" id="5830485d-d00f-4224-ae8e-e4f1470ed5e4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - ADULT FAU" id="0403ef49-a613-494f-9b26-af2f0d667064"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="daa683b3-7d1a-4dd1-a993-1dafeb05fd68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="963d687a-ee8d-4b99-950f-2bdfb8dd5de1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="42534710-c549-448e-8535-16e92cd055e1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - ADULT" id="bbec7e7a-92d8-4145-9cd3-4b82a9816bc0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","SAU");
myTC.setPropertyValue("Requestee","ADULT");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E619BFB4EBEC6B8FE0401F0A07990E3B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"031A1FF7F6053A7FE05305991F0A177B:EE65FB01"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate_ug_111_20140915_0519501410781790535</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0319D82815D97326E05305991F0A91F4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0319D82815D97326E05305991F0A91F4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:0319D82815D97326E05305991F0A91F4</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>031A13ECB9BF42F4E05307991F0A7C3A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>0319D52F6BFB1E58E05307991F0A3586</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">031A158C074744A4E05307991F0A0B82</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:031A13ECB9BF42F4E05307991F0A7C3A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:0319D52F6BFB1E58E05307991F0A3586</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:031A158C074744A4E05307991F0A0B82</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMvINjF2BKgLDhAy5bEhIMi9bQm5AiS0RSwbC169kwAECWWZfoNRunT590ZHOBU5iJ2wKAamknJUWScxEmFvrRpaykGNBRchwAiKUJOw3r3uhU7ZCvNlilLrtuvFPgL2IQOCYwdBzTc9yAnNYcYZmzQG/ViMjK3CGylWIDLpMSMxk3XAs2zOtwLQrD7YderXQrZRd2/ttlAaQCoWtXMqWsSa1EHVjIuU0RGg+n5fnbpmnY+RYlo2er3t9MoEEG43zVUZ5oLSx9iflCAjEMSkTnqBztONzHomwT8cMyyyFdazoWCwLWQFSPpGg4zOj2AtRl414vmxhxhklOKZLrOtzDXLCo1IzHvOUyklyNAnb0sAmLIhJbI+dGWiX2olAOwxTgU0xwfYa6x5GkAIjUHq879aNs9O6lm99SDETI54mYnf5Z3yAzSDmU4hMsUlrTe10wAOVapwDCbuMxJmgM7jRwzrFBMS6m0BOhyrdpTCiix4VakAXQrND2/T2lqtqtOkYhPw/DdpqzgpkgOMMGmi5vPOvER4ufVi+NYOPJ/DT5GlY7ZF6TmDbOTcUrV0t94ayGKLVjkH8c+E/Z5e3r3Prp00ukTXGUeduaVdcZ7C4R/etHrrLxrz69mw7r0P3F/YmV3bT4eQvnL5Yc8tP8KTTG1wNJi8X7d7r79uH5mDhJG9tfzldfDzW3Cu4GFxaL0yMXy69h15gR6w2v3t6Gva9NImeW5PM6kfti75bpaxLbkj/rc07j9XW4nWUdX3HQ81o7vT+FuN6kc4W/13b5sz3s+ErELlZ6jHotksd1SUsvxczbaGROcpdw6kWHyGBSaOhd2ntCDMldzQKVQ9Xa8u1m7b7o3URXHQ8p+P9sCqu5QeB3bGafsttbkRmxWKPYouzEdWxtOSuxuZ7giQJBbAIUnPGM6V0wvgGsY0lLnXZvToEnAl44EqeeU0sqRPbOJoKNorkzKlWrTgQRumGy1t2mzZHEtJdSfZ2JPkeCJ1S0Lqtx1qouRZSleIdzzIZ2+UZLjPIlLKnWmRDx6tVkKDJNAZNFCU8ymIoTyfTvDBIrP4dExORW6kgU55KHOfnAR3Nbv/bphDKJ6LaQeiULkA1Ew5cMc4mn+N5+9t5b+CbWUT18VJVlSklKya7nz6HRU9JMSlFYkTYG+7Flj+EOACAvuGH9ktTxItmdCv65i5Xt4LSkcamv++4/F7OZrMs76iv9TJV8EjJpo36QDIlcx8P/A0YKiDQSXdKwXovcmHf5ZfJCetLLCFR81fKlyc8Ivog9COiq87N4tQXyk5IVTcJC3nI1orVA0gz/vaNREKi/ZT5Tv3NeRp9tusA1lYclad6Q0jKxnql75OPI7NBuIKlSgl5ug1+COBQ8F1jUeSCi1TTNMwkHP9S0hJXNzAhPGOy2zZyw7bs5jzlxxTCT6cvMLmyF089+t9vPZPmI0BAPRAFzfH1jR3q+WfjLeleB91T76Bdc2p2pR34rlPN1buyUm/14xVF2WHX+GL+atmq0/6MN/4F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMvINjF2BKgLDhAy5bEhIMi9bQm5AiS0RSwbC169kwAECWWZfoNRunT590ZHOBU5iJ2wKAamknJUWScxEmFvrRpaykGNBRchwAiKUJOw3r3uhU7ZCvNlilLrtuvFPgL2IQOCYwdBzTc9yAnNYcYZmzQG/ViMjK3CGylWIDLpMSMxk3XAs2zOtwLQrD7YderXQrZRd2/ttlAaQCoWtXMqWsSa1EHVjIuU0RGg+n5fnbpmnY+RYlo2er3t9MoEEG43zVUZ5oLSx9iflCAjEMSkTnqBztONzHomwT8cMyyyFdazoWCwLWQFSPpGg4zOj2AtRl414vmxhxhklOKZLrOtzDXLCo1IzHvOUyklyNAnb0sAmLIhJbI+dGWiX2olAOwxTgU0xwfYa6x5GkAIjUHq879aNs9O6lm99SDETI54mYnf5Z3yAzSDmU4hMsUlrTe10wAOVapwDCbuMxJmgM7jRwzrFBMS6m0BOhyrdpTCiix4VakAXQrND2/T2lqtqtOkYhPw/DdpqzgpkgOMMGmi5vPOvER4ufVi+NYOPJ/DT5GlY7ZF6TmDbOTcUrV0t94ayGKLVjkH8c+E/Z5e3r3Prp00ukTXGUeduaVdcZ7C4R/etHrrLxrz69mw7r0P3F/YmV3bT4eQvnL5Yc8tP8KTTG1wNJi8X7d7r79uH5mDhJG9tfzldfDzW3Cu4GFxaL0yMXy69h15gR6w2v3t6Gva9NImeW5PM6kfti75bpaxLbkj/rc07j9XW4nWUdX3HQ81o7vT+FuN6kc4W/13b5sz3s+ErELlZ6jHotksd1SUsvxczbaGROcpdw6kWHyGBSaOhd2ntCDMldzQKVQ9Xa8u1m7b7o3URXHQ8p+P9sCqu5QeB3bGafsttbkRmxWKPYouzEdWxtOSuxuZ7giQJBbAIUnPGM6V0wvgGsY0lLnXZvToEnAl44EqeeU0sqRPbOJoKNorkzKlWrTgQRumGy1t2mzZHEtJdSfZ2JPkeCJ1S0Lqtx1qouRZSleIdzzIZ2+UZLjPIlLKnWmRDx6tVkKDJNAZNFCU8ymIoTyfTvDBIrP4dExORW6kgU55KHOfnAR3Nbv/bphDKJ6LaQeiULkA1Ew5cMc4mn+N5+9t5b+CbWUT18VJVlSklKya7nz6HRU9JMSlFYkTYG+7Flj+EOACAvuGH9ktTxItmdCv65i5Xt4LSkcamv++4/F7OZrMs76iv9TJV8EjJpo36QDIlcx8P/A0YKiDQSXdKwXovcmHf5ZfJCetLLCFR81fKlyc8Ivog9COiq87N4tQXyk5IVTcJC3nI1orVA0gz/vaNREKi/ZT5Tv3NeRp9tusA1lYclad6Q0jKxnql75OPI7NBuIKlSgl5ug1+COBQ8F1jUeSCi1TTNMwkHP9S0hJXNzAhPGOy2zZyw7bs5jzlxxTCT6cvMLmyF089+t9vPZPmI0BAPRAFzfH1jR3q+WfjLeleB91T76Bdc2p2pR34rlPN1buyUm/14xVF2WHX+GL+atmq0/6MN/4F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMrINDrYrUEVCEhgSkgEmO+FlS8gNaGLLRJKNydevZMAD5LLMvkCp3Tp9+qIjXQgcR07QFgK4pAmr5HHERFBYm0bKWZBgQUXAcAwikCQYte/vAqdqBXi3xaj0Ok3jH/982sBW6JkEiGXWa2Fo+o7lmrWGVw992/P9uqtchUihx4TETDYNx7LrpuWbtju27aDuB5ZT9WxvYlSegAuFrVyqlrEllYumsZByGSC0Wq2qq1o14XPkWJaNft7fjcgCYmy0LjYZFYF4a+tPqiEQiCJSJUmMLtCBz0UoghGdMyxTDttY4WexLGT5SPmEgs7PjHIvhD02S4rlFWYJowRH9A3r+tyDXCRhpR3NE07lIv40CdvSwCbkxCR2nZ0Z6JDaiUAHDLnAplhge4s1hBlwYAQqP4a9pnF2WteKrWOOmZglPBaHyz/jAyyDKFlCaIpdWltqpwN+UKnWBZCgx0iUCprBQA/rEhMQ224COR2q8shhRvM7KtSA5kKzQ/v0jpabanToHIT8Pw3aa84G5AlHKbRopzvOnazz0q09nw/irtfA/Jr9IH20ahYE9p0LQ9nazfJoKMsh2uwY1OJu131etx9/DupcPPXXw34flm/OcDmf0kv3mXS/X7F04rNsnXUa7pu4i75Z0fXbsH8PKcG3Fr9qyFvv4c6OIm/8fDmizxmZIPrw/YZ019NvLO3fD/s/Hl/Wt431dXT+16D+6KL1dGr/7cLEzQfWw6S2eq11wjh0fk1mo/W623id3Ixz9GDd9/yr9HaWz9v48rpZprPH/9C2O/OjdPoLiNwt9Rj0OpUb1SUsvxYzbaGhOStcg6UWHyGBSaOld2ntCFIldzQMVA83a6tm+x3XuTm/vLm0r13v2nJrVsP37RurXXO9853IbFgcUbxK2IzqWFpyN2PzNUESBwJYCNzMklQpnTC+QOxgiSs9NlSHIGECxomS55cM4xzzuG4JbudhRJy8wb3UDY3KIJEP7IG3ZxL4oSbXDzR5CIQuKWjh1nMt1GALqWrxirNURnY1w1UGqZJ2rlU2cOqeiwSNlxFopihOwjSC6nKxLCqDxObfMTERhZUKsky4xFFxINCn6R1/21VC+YRUOwid0iWobsK7O8YL3F0+n+fd2M97B99OQ6rPlyqr5JRsmBx++j0tekzKUSkTI8LecS+3/CHEBwDoC37ouDRlvDCje9F3l7m6FpSQtHb9fcXV12qaZWnR0YZl1RBX8Ejppo1GQFKlc+tx8gIMlRDopEulZH0UubQf8kvlgo0klhCr+asUyxNeESMQ+hXRUwcnP/WJchBS1U1CLj+yXUXqBaQZf/lIIgHRfsr8qP5WCQ9/t+sDrL04Kk/1iJCUzfVKXyjrT2aDJAqWKilM+D74RwAfBT80lkUuuUg1TdNUwudfKlrjmgYmJEmZ7HWMwrCvuwVPuV5C8NvpHUwh7eVbj/73Y8+kxQgQUC9EQQt8fWUHev7ZfE+7t0HfybfneLbb8Rs157yQb3cj3+qnXhblgF3rnfm9Za9OxzPe+hc=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn3sGMvGXOwJzHBJG7e5tCEhnb6cEfI2KNiykWQD/fojGXCBkhx6XkK0vbX22hct6UrgJHb8vhDAJU1ZbZ3ETPiltWvknPkpFlT4DCcgfEn8cf/u1nfqyMf7LUYtGHWNf6K24wFBYLZaqGO6oP7zGuHUhBZqN5vEc1xElKsQOQRMSMxk13CQ7ZrIM+3mk237ruc3UL3htn4atQlwobCVSx0ZO1Jr0TXmUma+Za1Wq/qqUU/5zHIQsq0fd7djMocEG72rbUZlIN7b+ZN6CATimNRJmlhX1pHPVSj8MZ0xLHMOu1jhW7GQhTxL+YSCzj4Y1V4IAxal5XKIWcoowTH9hXV97kDO07DWj2cpp3KevJmEjTSwCWtiEttlHwzrmNqFQEcMucCmmGN7h/UIEXBgBGrPj0HX+HBZ18qtTxwzEaU8EcfLv+MDrIA4zSA0xT6tHbXLAc9UqncFxA8YiXNBC7jXw5phAmLXTSCXQ9W+cYjo+pYKNaBrodlZh/ROlttqjOgMhPw/DTpozhZkguMceh+t0ZP1+iUo7m6mLiyCJfo2nVJ783PldksCh86loWrtdnkylNUQbXe8sOdfN2n6JcnGN6g/GLZa4x/3oQWt9mLV9h5XD2E+uXaDwW2c9GWR39nImw+sZuOafR+to8XN8+t9Mb1nsyi55YvOvDF5+Rh68/GnIbjX85vi4Rq9RFGzdZ9EYDVh4Lz0B1nQEpP1w3yDPm8c1rnJ0M9F+7MToA1/efnqOVbRcfPoeTCcuUv8/el58rDsT+zOolulc8D/2LY/8+N8+gpE7pd6DIJR7ZPqEpbvi5m20NCMSlc/0+IjJDBp9PQurR1+ruSOhr7q4XaNGnbfbnaGqO22XbfvXqNmA7U9z/6E+mjQcfYis2VxQnGYsojqWFpyt2PzPkGS+AJYCNws0lwpnTDeQRxhiWsBe1SHIGUCnlIlz5yLJaJ8+prkDZtwIju4WDXySGnyfSof2APvRxL4sSa7R5r8CIRmFLRw67kWarCFVLVY4iKXsV0vcJ1BrqSda5X1HbfTtARNshg0UytJwzyGejbPyspYYvvrmJiI0koFyVIucVweCOvN9E6/7SuhfEKqHYROaQCqm3DmjnH2+bydd/sw7z18Pw+pPl+qrJJTsmVy/On3tOgxqUalSowIe8+92vKXEGcArHf4WaelqeKFBT2Ivr/M1bWghKS37+8S15f1vCjysqNtLZhcwVtKN21rDCRXOrd5ShfArArCuuhSqVifRK7sx/xyOWdjiSUkav5q5fKCV8QYhH5FBOrgrC99ohyFVHWTsJbnbMNYvYA043cfScQn2k+Zv6mfVcrD3+06g3UQR+WpHhGSsple6Qtl88ZskFTBUiWFKT8EPwdwLvixsSpyxUWqaZrmEt7+UtMa1zUwIWnOZDAySsOh7pY85SYD/7fTHzCltFdvPfrfjz2TliNAQL0QBS3x9ZXt6/lnswPt3gU9kW9v1HE6dnPktRtOq5Tv5la+1R+3KsoRu94f5j8tB3U6nfHevw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate_ug_111_20140915_0519501410781790535</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate_ug_111_20140915_0519501410781790535</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>usergetr4_firstuser20140915_0518581410781738185</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate_ug_111_20140915_0519271410781767167</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate_ug_111_20140915_0519501410781790535</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>031A13ECB9C042F4E05307991F0A7C3A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>0319D52F6BFC1E58E05307991F0A3586</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>031A158C074844A4E05307991F0A0B82</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b640c33b-9694-4dec-ab58-b80de10092ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42534710-c549-448e-8535-16e92cd055e1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00051_UserGet_CS_FUNC_CLG_Get_YOUTH_P2" searchProperties="true" id="f8ddfe97-e52d-44fd-8816-64dd42eeb467"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="49e9f29c-d21b-4f21-a658-35b9aa00608a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b726cd08-75fc-429c-8934-9b72082193a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for YOUTH SAU" id="92c99100-ab33-442f-be37-2bc83221a480"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate_ug_111_"+new Date().format( 'yyyyMMdd_hhmms' )+ System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - YOUTH SAU" id="1f504d6d-060f-40ae-bedc-c8f55781e671"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="d0391671-0a4a-492e-89a8-1ae4840924f7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - YOUTH SAU" id="c8cb27d5-9b8a-40c8-a976-6180e1217b41"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid3"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
myTC.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTC.setPropertyValue("RequestorClass","FAU");
myTC.setPropertyValue("Requestee","YOUTH");


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E60736F7C963CBC0E0401F0A05993D2E</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E70D01210A8C3671E0401F0A07997A7D:D5F272D3"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130923_081821</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E70D012043D9700FE0401F0A07997A7B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E70D012043D9700FE0401F0A07997A7B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E70D012043D9700FE0401F0A07997A7B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E70D012109BB3671E0401F0A07997A7D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E70D01210A3D3671E0401F0A07997A7D</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E70D012109BB3671E0401F0A07997A7D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E70D01210A3D3671E0401F0A07997A7D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZkqrKEn33Kwz3o6EMIorR3RGFoKLiADi+nEAoEGWSYtKvP4W2brt397597pNWVlbmyoGsVS9I91y6AxCCUewEflkSXiv/NCyj2WrvYI1iSL3GWJCqtS2drVm02SZZuq1bLFUpSwglUPJRrPvxa4UmqUaN5Gp0Q6PoDtXuUFy91WhtK+UljBA2jVXqZKWce66POle3r5Uk8juBjhzU8XUPok5sdFQgjztYs6PfMVXeXm4orw6jt30chx2CMOomNKDrGnUj8IgX4oPOi4k6qmP7epxE8N2niV4r72ezLKtnjXoQ2QRNkiRBcgTWMZFj/6q8le6HoSn5VnBbd3U/8B1Dd52LXoCSYbwPzDJw7SBy4r33jWmKoMjCdA3mRs2gGP9Xhfjt4Iruh5Y+gIyQXkN7nbobU6AFI+gbsLxQpNfKr59V8HZWi3QfWUHkoU/r/wYJ+il0gxCaNXSP7I7u5xa/SNfbCzQ6km+4CXJSOCnaJNQNiMqzCFpOPnYQbj4Tla/lL+fo3mHQ+C8leSGecWLYxBeZERwbovj/qddzrW5WlrqbwLdI9M/M+szpbRIq88yLJL4qLx3fztHrFcKz8g3Uo9Tv68+N+uir90PKohkq9OrQJectl1kraoPveexKXqZyQLSPdqvJiOygqiZxahOZvqUydcGtllrWbFqHBDFC2tNU5jKZcdNl6eRLIWXbK3ETtVrMvp1kcaPnU8rW2iqbiDtqekL5q4NFHFcm113wXuaP5MMQuN3NkVObDHuJ9wtdZdrRfFqi1s3mTp/Rh8hxTqt0JED0+jum5xiKuEbwfA2y+L9ukpygx/pj0S0mhYU/zxi+yZLUrQrdLoBdG2QSD2yJH1/AhLePp/3R6XMZyYP5ogcEcJYVkAn2RljO5yMxM5dLd7uUej1eVphsADZCCW8IYr4Utushqa+24YbukVuV5821Euwaw9AcHLPB3pjImpxNNOksH8R8oonk6iqzc7y+yAeZmmqLRml14DlZETMhu3oUxGw/2a6UcLPgMuMizmXA9AG1ELt7eaB5S8poKHvjII5lcLzK+b3cXS7lXNTArMTbkyWOTev2tqHhmeHOc/dPxgfYuGb2l+dd3022F/Egd8V+Vz31VWnXEObiECibxW61POqrXloyBhOwu3t0mo6+DjJ7286E+WY4CrbSPjUmYC7y/BzgdJFAlvpDEPR5IDPAyS/dA88GXbOXEUMalaqc22fXZ+e0RnqfdHWq3aY24xU7O7GC6Fe3o2R32Mv7dW9aHalmuuBi7rJBaTVldYcy8tCar8VBPMqtwVwt7WZCvjYGVdMeEu6F60Vyawiiy3nvyrYSr9gpOu8cy1rx6ynjtixXbiih5VrhGVW1YH6MSJaHDZrYnNNRXAK2zAPQPywO/Fzm20VSTSmbb2ReBz0xTsDlQMcjenkaDlLX2DRAkI9W08PxvTCmkIk8kc1F3FZiqS0AsyjCQF2IvQNY8LYd8bbY4+eGAOYbaZRtcL4WA6z8OY+9ax5tkQdiYwtYblBqLEgunsYqw4Czzy/8HreXT/nKZD2ydYLiWJ2ETCajieVvV8FR9pxoESXqYjSajPOdlvSPBzyrLFIdpY1tSUyPIXAmI21/FAJBn4WbTRxWfSMyYin0ZCm/TLfo0HZ2HjmsNil+RgpGi154u2zR18XtKLJVajRQ/FmjxZVQYp0HXvXQzlZVTWXDltn1LeF8JrbRkgxA0OOU5snMafq4X2RjNrOG4LjT6UnucvyZE0dbzciU+WiletVmqZmOxx550QhmEk4ztZ8x4nxebZi8NtBQGDmbpG3n0dQ36Y0es+mWXLJO6B45OjlqTNhY2h4u1iw1w5Y8K82ZtbH17FZoDAmFSIHYssZS/7y76JfQmxq3Afp5OjyEt/lBPE+WD6PnTjpU3K3QiO/L4gKShHIP3wp6/HcCU0gcs2ZdVTthwYJQDP248lacKshLJ8EUxzE7+Mq4rcUWKZAUTZEczzfYFiWSDEn1SEC2OK4FWsKd5dxQfILYDXzLKXwVPO52S/0doOF1EPRNGNXSIDH2EFX+YrHIV1nyFXz9Bj6CWoB5IkMKLNXjRYEVANts0k22yZIczZFUkwR0D3PESRBP/WkErBhGHzli8wNHVKDhhA4siGRxmyJ8naIYp+Skp0nsUvVUr/swwVQzKtheh2baTQI5XujCAjDhBWbiwnq4D68JItDtl67pBrpKFVH7R1K715v+2xA/792zgXVMp1BARTw8xBWFXxBe8h7M90G3n4O+mweJ6RQXOk5tHDnGDcnHrd8dU7TKo12KqLrqP9Qd90P9x8f/PEn8BRTxOR8PR2bqPLm9M3dMRjFdebtX9KTXT/UkTZNrDVsFFYuweYIiyBahQiPBfOqsBUfoEw8TxI+o7AP1J88P+Ud8Sbz31RiPAw93XPm6/ME7RoWoeMdI+IvJf/pI+uAS5y2GefyVrOvi506B+K8vIqNjFHpYPMM/WRCZv8v1ha0nPzjOYv5hZlmsCuJ6/qYpjACbdfAMDKJn418Z+Mr5R+EjyQ8sMe6mXRLD73fKxXB7reiGESR+LAmVq+B54F5xxucQdn4r/WHmSh3f3wI5+vYtsJbHKh59nl556Dr/W7nmXNvFgPgUcq5YXis5ftZi5779NODfAX4x40mmIXD4G+h9mvH8I4EfInn7Q/yn5Cmnn7+Ht38B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVfZkqrKEn33Kwz3o6EMIorR3RGFoKLiADi+nEAoEGWSYtKvP4W2brt397597pNWVlbmyoGsVS9I91y6AxCCUewEflkSXiv/NCyj2WrvYI1iSL3GWJCqtS2drVm02SZZuq1bLFUpSwglUPJRrPvxa4UmqUaN5Gp0Q6PoDtXuUFy91WhtK+UljBA2jVXqZKWce66POle3r5Uk8juBjhzU8XUPok5sdFQgjztYs6PfMVXeXm4orw6jt30chx2CMOomNKDrGnUj8IgX4oPOi4k6qmP7epxE8N2niV4r72ezLKtnjXoQ2QRNkiRBcgTWMZFj/6q8le6HoSn5VnBbd3U/8B1Dd52LXoCSYbwPzDJw7SBy4r33jWmKoMjCdA3mRs2gGP9Xhfjt4Iruh5Y+gIyQXkN7nbobU6AFI+gbsLxQpNfKr59V8HZWi3QfWUHkoU/r/wYJ+il0gxCaNXSP7I7u5xa/SNfbCzQ6km+4CXJSOCnaJNQNiMqzCFpOPnYQbj4Tla/lL+fo3mHQ+C8leSGecWLYxBeZERwbovj/qddzrW5WlrqbwLdI9M/M+szpbRIq88yLJL4qLx3fztHrFcKz8g3Uo9Tv68+N+uir90PKohkq9OrQJectl1kraoPveexKXqZyQLSPdqvJiOygqiZxahOZvqUydcGtllrWbFqHBDFC2tNU5jKZcdNl6eRLIWXbK3ETtVrMvp1kcaPnU8rW2iqbiDtqekL5q4NFHFcm113wXuaP5MMQuN3NkVObDHuJ9wtdZdrRfFqi1s3mTp/Rh8hxTqt0JED0+jum5xiKuEbwfA2y+L9ukpygx/pj0S0mhYU/zxi+yZLUrQrdLoBdG2QSD2yJH1/AhLePp/3R6XMZyYP5ogcEcJYVkAn2RljO5yMxM5dLd7uUej1eVphsADZCCW8IYr4Utushqa+24YbukVuV5821Euwaw9AcHLPB3pjImpxNNOksH8R8oonk6iqzc7y+yAeZmmqLRml14DlZETMhu3oUxGw/2a6UcLPgMuMizmXA9AG1ELt7eaB5S8poKHvjII5lcLzK+b3cXS7lXNTArMTbkyWOTev2tqHhmeHOc/dPxgfYuGb2l+dd3022F/Egd8V+Vz31VWnXEObiECibxW61POqrXloyBhOwu3t0mo6+DjJ7286E+WY4CrbSPjUmYC7y/BzgdJFAlvpDEPR5IDPAyS/dA88GXbOXEUMalaqc22fXZ+e0RnqfdHWq3aY24xU7O7GC6Fe3o2R32Mv7dW9aHalmuuBi7rJBaTVldYcy8tCar8VBPMqtwVwt7WZCvjYGVdMeEu6F60Vyawiiy3nvyrYSr9gpOu8cy1rx6ynjtixXbiih5VrhGVW1YH6MSJaHDZrYnNNRXAK2zAPQPywO/Fzm20VSTSmbb2ReBz0xTsDlQMcjenkaDlLX2DRAkI9W08PxvTCmkIk8kc1F3FZiqS0AsyjCQF2IvQNY8LYd8bbY4+eGAOYbaZRtcL4WA6z8OY+9ax5tkQdiYwtYblBqLEgunsYqw4Czzy/8HreXT/nKZD2ydYLiWJ2ETCajieVvV8FR9pxoESXqYjSajPOdlvSPBzyrLFIdpY1tSUyPIXAmI21/FAJBn4WbTRxWfSMyYin0ZCm/TLfo0HZ2HjmsNil+RgpGi154u2zR18XtKLJVajRQ/FmjxZVQYp0HXvXQzlZVTWXDltn1LeF8JrbRkgxA0OOU5snMafq4X2RjNrOG4LjT6UnucvyZE0dbzciU+WiletVmqZmOxx550QhmEk4ztZ8x4nxebZi8NtBQGDmbpG3n0dQ36Y0es+mWXLJO6B45OjlqTNhY2h4u1iw1w5Y8K82ZtbH17FZoDAmFSIHYssZS/7y76JfQmxq3Afp5OjyEt/lBPE+WD6PnTjpU3K3QiO/L4gKShHIP3wp6/HcCU0gcs2ZdVTthwYJQDP248lacKshLJ8EUxzE7+Mq4rcUWKZAUTZEczzfYFiWSDEn1SEC2OK4FWsKd5dxQfILYDXzLKXwVPO52S/0doOF1EPRNGNXSIDH2EFX+YrHIV1nyFXz9Bj6CWoB5IkMKLNXjRYEVANts0k22yZIczZFUkwR0D3PESRBP/WkErBhGHzli8wNHVKDhhA4siGRxmyJ8naIYp+Skp0nsUvVUr/swwVQzKtheh2baTQI5XujCAjDhBWbiwnq4D68JItDtl67pBrpKFVH7R1K715v+2xA/792zgXVMp1BARTw8xBWFXxBe8h7M90G3n4O+mweJ6RQXOk5tHDnGDcnHrd8dU7TKo12KqLrqP9Qd90P9x8f/PEn8BRTxOR8PR2bqPLm9M3dMRjFdebtX9KTXT/UkTZNrDVsFFYuweYIiyBahQiPBfOqsBUfoEw8TxI+o7AP1J88P+Ud8Sbz31RiPAw93XPm6/ME7RoWoeMdI+IvJf/pI+uAS5y2GefyVrOvi506B+K8vIqNjFHpYPMM/WRCZv8v1ha0nPzjOYv5hZlmsCuJ6/qYpjACbdfAMDKJn418Z+Mr5R+EjyQ8sMe6mXRLD73fKxXB7reiGESR+LAmVq+B54F5xxucQdn4r/WHmSh3f3wI5+vYtsJbHKh59nl556Dr/W7nmXNvFgPgUcq5YXis5ftZi5779NODfAX4x40mmIXD4G+h9mvH8I4EfInn7Q/yn5Cmnn7+Ht38B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwimIlqRoEFRWNguvNWwjDomwybPrr30Gjx+Qk58v7Xek0Pd1PL9PzzDPSfY/uAIRgnLhhUJXFl9o/pq6bkKLMRouzdg3WZLiGbpmwwXJWi2N5nmdMs1aVEUqhHKBED5KXGk1STIPkGzSjUXSHando+olp8ttadQljhE1jlSeyVi18L0Cdi9uXWhoHnVBHLuoEug9RJzE6KlDGHazZ0W+Yaq/PV5QXh/GrkyRRhyCMJxMa0POMJyP0iWfig86ziTqqawd6ksbw3aeJXmrve/M8f8qZpzC2CZokSYLkCaxjItf+VXut3DZDUw6s8Lru6kEYuIbuuWe9BKXAxAnNKvDsMHYTx//GNEVQZGm6AQujYVBs8KtG/HZwQfdDSx9AxkhvIEenbsbm0IIxDAxYXczll9qvn1XwuleL9QBZYeyjT+v/BgkGGfTCCJoNdIvshu7nFr9I1+szNDpyYHgpcjM4Kdsk0g2Iqm8xtNxi7CLcfCaqXspfLdCtw6DxX0ryTDzixLCJLzIjujZEyf9Tr8daXa0sdS+Fr2dH5cMpRWVcXRv3uk1nnfq0P0TL3uHlAuFR+QrqXur39edGvffV+6bt4o0XyXzRkpS5vRkC1N6yoevHRLZLHa21yA58GBUrj2q26IUtUpuJO1myvUX9bCbq2O/vDrQ/Oh1yxbLYSk8bTTZhP25b5zMXjk7yai/ZS3KAluf4NKWbK8moK/4w2BwdyeJmTKuwMyvcO4ti0rdcRljLrA73UrGnSLmibA8nLQnPp4KLdittJxvtl98xPcZQxjWCp0uQ5f91k+RFPdHvi245KSx8PBP4qshyty52uwB2bZDLArBlYXwGE8E+HJ2D2+dzUgCzRQ+I4KTMQS7aG3E5m42k3Fwuve1S7vUEZc7mA7ARK/iDKBVLcbsekvpqG23oHrlVBcFcz8MdM4zMwSEfOMZE0ZR8osknBQc30SRydZHZBV6flb1CTbUFU1ntBV6ZS7mYXzyKUu5Mtqt5tFnwuXGWZgpg+4BaSF1HGWj+kjKYuWPspbECDhe54Cjd5VIpJA28VQR7ssSxad3eNjJ8M9r5nvNgfICNa2Z/edr1vXR7lvZKV+p31WNflXeMOJOGYL5Z7FbLg77qZRVjMAG7m0e36errMLe37VycbYajcCs7mTEBM0kQZgCniwSK3B+CsC8AhQVuce7uBS7smr2cGNKoUue9Prc+ucc10vukp1PtNrUZr7i3IydKQX07Snd7R3HWvWl9pJrZgk/48wZl9YzTXcooImu2lgbJqLAGM7WyexOLtTGom/aQ8M58L1ZaQxCfT46n2PNkxU3Raeda1kpYT1mvZXkKM48sz4pOqK6Fs0NMcgJkaGJzykZJBdiKAEB/v9gLM0Vol0k15Xy2UQQd9KQkBec9nYzo5XE4yDxjw4CwGK2m+8N7YUwxlwQin0m4raRKWwRmWYSBupB6e7AQbDsWbKknzAwRzDbyKN/gfC0GWPlzHnuXPNqSACRmCzh+UGEWJJ9ME5VlwSkQFkGPd5RjsTI5n2wdoTRWJxGbK2hiBdtVeFB8N17EqboYjSbjYqel/cMezyqLVEcZs61I2SEC7mSkOQcxFPW3aLNJonpgxEYiR74iF+fpFu3b7s4nh/UmJbyRooEPv7/LF31d2o5iW6VGg3nwxrT4Ckqt08Cv79v5qq6pXNQyu4Elnk7ENl6SIQh7/Lx5NAuaPjiLfMzl1hAcdjo9KTxeOPHSaKsZ+Xw2Wql+vVlpZuOxT541gp1E01zt56w0m9UZU9AGGopid5O27SKeBia90RMu25JLzo28A0+nB42NmKXt42K9ZWbUUt4qM3ZtbH27FRlDYk5kQGpZY7l/2p31c+RPjesA/Twd7sLr/CAeJ8uH0XMjHSruVmgkt2V5AclitYdvBT35O4EpJa7ZsC6qnahkQSiBQVJ7LXeV5KWTYorjmh18ZVzXUosUSYqmSMCIDNeiJJIlqR4JyBbPt0BLvLGcK4pPELthYLmlr5LHXW+pvwM0/A6CgQnjRhamhgNR7S8Wy3xV5WCOr98wQFALMU/kRF7k2W6bpEmG5qguK0lNku6SZBuAHiVKteokTKbBNAZWAuOPHLH5gSPOoeFGLiyJZHmbInydogSn5KhnaeJRT5n+FMAUU824ZHsdmm03CeT6kQdLwIQfmqkHnyInuiSIQNdfuqEb6CKdS9o/stq93PTfhvj52y0bWMd0SwVUxiNAXFH4BeGlbsF8H3T7MeibeZCabnmh49QmsWtckXz89Ltjyla5t0sZVVf9h7rhvqv/ePufO4m/gCI+5+PuyMzcB7c35o7JKKYrr7eKHvWn41OaZemlhq2SisXYPEERZItQoZFiPnXSwgMMiLsJ4kdU9o76k+e7/CO+NHECNcHjwMcdV70sf/COUSEq3zEyPjHFTx9JH1zivCWwSL6SdT383CkR//VFZHSMUg+L3/BPHsa/A//K1oMfHGc5/9zALlclcT190xRGiM26eAaG8aPxrwx85fyj8J7kO5YEd9MuTeD3X6rlcHup6YYRpkEii7WL4HHgXnAmpwh2fiv9YeZCHd/fAgX69i2wVsYqHn2+Xrvruv9bueFe2sWAeBdyL1heagV+1mLngf0w4N8BfjHjSZYReXwGep9mvHBP4IdIXv8Q/yl5yOnn8/D6Lw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130923_081821</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130923_081821</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>userget_firstuser20130923_081818</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130923_081821</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E70D012109BC3671E0401F0A07997A7D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E70D01210A3E3671E0401F0A07997A7D</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f61f1377-9b57-4e12-9112-c4306b2aa6db</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92c99100-ab33-442f-be37-2bc83221a480</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1f504d6d-060f-40ae-bedc-c8f55781e671</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>SPLCS</con:value></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdportalCS</con:value></con:property><con:property><con:name>sName</con:name><con:value>04.User_Get_CS_Geopolicy_Portal_US</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="03.User_Get_Geopolicy_Portal_US" id="293867ff-2ad3-471e-9bbb-32164ec7a7c1"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="b659c529-54bb-4ccd-8e8b-206a65a93c23"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="c5c574ad-ee0b-4281-8ef6-33b91c82ba6c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="35bd0081-391e-4767-916e-47df513f1243"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="9dc4a327-4274-44ee-a72d-04fe60bcdf67"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="adbf4f8b-3e99-4aa9-af8b-d14e8d4f9407"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="fcfb9c01-1551-4e9d-9331-be8ca11ccab1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="806ae904-c149-421c-8f0b-e110bad8e0f5"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="63e603bb-92f9-4c17-bdd2-403e13c5325d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="33015879-015f-4684-a71d-5c07ff541e63"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="25750d30-577c-4038-8392-81657736e74a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="1bcec6e0-e5fe-4d1c-9859-823bb7e8df53"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="beb60c7f-63f2-4725-a08f-df987cc8f4a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="50a94e42-beab-4118-b459-448add0312ea"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="60243ff5-08d1-42f1-ba26-5fe12fc72cc0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="8965ea65-ae0b-49a8-8d62-70e875f3b267"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="08c77908-8e2e-4a0a-b24d-5b4d1ce453be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="e7a6233c-b298-4b96-ba12-f29f8f6c9ffd"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="8c9bc391-8f93-4210-8f54-5d3d8504a0bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="650e5e9d-d6d1-4307-bf88-87b66c8e5b6f"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="1fe36823-0290-4323-a688-64da6580a783"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="f7b41a5d-20dd-4d5f-bfd5-77bb1974c828"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="10a83e09-c728-4e41-a82a-eee3e642238a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="84c70bdf-4ed7-4d66-9b18-08f80e62d186"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ab2c0d7a-7de9-42d7-8048-c5b8061f06bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="0bde869d-cef5-4cd0-963c-2e43e8d93f6f"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="1a794848-fc4c-4cac-bc3e-666221267cf4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>05.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="04.User_Get_CS_Geopolicy_Portal_US" id="4a64916a-416a-4e99-850e-9da7979d7f8e"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="c66f7776-edd1-41fc-a260-439c611c8ac1"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="19cbf0ad-812e-4229-821a-49b113c53f8a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);
myTS.setPropertyValue("RequestorType",tS.getPropertyValue("RequestorType"));
myTS.setPropertyValue("role_CS",tS.getPropertyValue("role_CS"));



</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_CS_FUNC_YOUTH_BAU_Get_Self_P2" searchProperties="true" id="47feefbf-1d09-4837-bc9a-2e091c6b5991"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="85ccf6f3-0c8a-40fb-b39b-24c29a19b3c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_CS_FUNC_YOUTH_SAU_Get_Self_P2" searchProperties="true" id="1bbe7836-60e8-4311-8310-94b42b21fd3e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="16a017e6-64a1-4762-9585-aa51e8acc801"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_CS_FUNC_ADULT_SAU_Get_YOUTH_P2" searchProperties="true" id="8b61c845-6470-4052-92da-f4545d4451d2"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="749dbc11-d15b-4c45-b6a9-cce0336ca6ec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_CS_FUNC_ADULT_BAU_Get_YOUTH_P2" searchProperties="true" id="a2dd9eca-d8fa-4612-b211-383f59cad8a0"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="266dd50e-35e2-4799-bfd6-98c10731765e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_CS_FUNC_YOUTH_SAU_Get_YOUTH_P2" searchProperties="true" id="d6f08c28-a524-4ab6-9008-7774e5f354ae"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="45132859-5ffc-44a8-be99-19729c103d7b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_CS_FUNC_YOUTH_BAU_Get_YOUTH_P2" searchProperties="true" id="7499a4ca-4a65-47ac-ac10-21e50cac1fd9"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="dea69cb7-73c9-43dd-ae6e-581c70319b77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_CS_FUNC_YOUTH_BAU_Get_ADULT_BAU_P2" searchProperties="true" id="a8425328-ea8d-47b6-8306-bd49b336e140"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="e2fbf42c-7b7b-420c-a92d-a43f4eda3ff0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_CS_FUNC_YOUTH_BAU_Get_ADULT_SAU_P2" searchProperties="true" id="ce443e98-fba9-42f0-9bc2-23f105c10a0d"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="620b9e65-6007-44cc-a7db-e2c4e2e09744"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_CS_FUNC_YOUTH_BAU_Get_ADULT_FAU_P2" searchProperties="true" id="49e4a352-566b-4a81-8082-eb2a36c111e6"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="28ea3976-3c93-4f01-a03e-09e6a53358a6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_CS_FUNC_YOUTH_SAU_Get_ADULT_BAU_P2" searchProperties="true" id="a333c8c0-7d36-42a4-93a7-06b1a315fbf6"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="a173d5eb-abff-4fe3-befb-776969539d9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_CS_FUNC_YOUTH_SAU_Get_ADULT_SAU_P2" searchProperties="true" id="c47a1885-3c69-4d01-af53-a64cf5f7f29e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="5ad655f7-4841-4748-906d-817f80e57181"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_CS_FUNC_YOUTH_SAU_Get_ADULT_FAU_P2" searchProperties="true" id="7e165472-0313-438d-a6e9-389dee35310b"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="bc0e76fd-5f98-4ad0-87da-95df6efe3545"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("02.User_Get_CS_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>31.User_Get_CS_Geopolicy_Portal_US</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>SPLCS</con:value></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdportalCS</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="05.User_Get_Geopolicy_Portal_GB" id="019b532e-551d-4a2c-aec4-366d0b79822a"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="57925de1-3b96-4a36-90b1-fbfc8b6544c3"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="60e3bbc0-0bbd-4f6e-ae76-8f36a97a82fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="458afb0c-4dd2-4cbc-9517-d420e060ed68"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="e08d4d46-080e-4e12-b44d-e5d9100bb8d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="4f16decc-6bf3-46b7-8ce9-38264d6e2ecb"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b9880163-2b0c-41ef-91c2-abec20305d90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="732e628c-1214-48a3-8b1e-f30f1bc9c368"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="70e34b04-d026-46e4-b57e-010724c54da7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="ee44d3b0-00f0-4b1b-af7e-e683bf821e0b"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="259899de-0016-41ca-bef4-d7fe1f9a70aa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="f19e21bc-3a71-4356-a773-09e92c7ce206"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ecd7ec4f-51ec-4542-a53c-182cfb4d6ac5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="2768eb0e-0652-4d59-825d-ddbdeffae978"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b3a85489-9644-4e27-8ca4-3f2cb476f038"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="73afc2ef-6103-4111-b348-4e7a75100d83"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="cd067a4a-06ec-4921-985e-e32889dc0fec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="5fc0f8b0-7ec6-4bdb-88a0-6de2ec832759"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="a084a372-3f76-4577-8e38-cfbf223d1bd2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="dce2edc0-5775-4eb0-a346-c5db21794ca4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="f2406f6b-66fd-45bf-997c-95511dacff20"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="ffc2b4f0-7c26-4123-a605-de5016b7a61c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b2b93f1d-cb1c-44dc-85e1-1e37fd8c7b6e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="7b3cc7e0-6897-474f-b086-9efc433d170d"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="bd400cfd-e41d-4664-83f9-ae9f6c30ad42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="b2c7236e-46f5-43f0-a322-97603b13740f"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="75486e92-d203-485d-9164-568693d55d8b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>05.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="06.User_Get_Geopolicy_Portal_CA" id="b898125b-2752-495c-b869-8c4861da9243"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="401c13ee-c99f-4a0f-8680-7ed6776c1b81"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="ca9f29c4-1bc6-45ca-a331-9451b150d8be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="dc44c323-8811-483f-bf60-3e2af5cb09eb"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="89cb514b-c7df-4f92-b883-dead646d0c7b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="33716b24-7e4d-4f7a-9c2a-209da410e70a"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="6f061de4-3790-46ee-82c6-ddb7826e4d4d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="2f148909-00a0-4bd4-9a9a-22bba50a2c09"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="4786e0d9-550c-4044-ba16-82c62a6e3b55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="447874a6-5b01-4a2d-ac0a-18c67108ed78"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="06ba27be-af52-4c00-b6ce-d615d6c8a970"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="a93a9476-a070-469f-9a92-b4a043d91a2d"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="e2a75396-15a9-4616-bdfe-59becc073d02"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="4aeffd87-d8cf-40d1-bd83-72fa9780c800"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="2015927a-cc83-4425-9b3b-496ee00e55be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="5f8567a2-7445-4f26-8c1a-96c5f302922c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="cd3ea2ca-6810-424e-a6fa-8eca9dd692ba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="0d3bdcf0-db71-4640-8d86-a884ccd55512"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="029ea05e-f865-44e1-b9d2-eec4ed513a6b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="8c6ea41f-406a-46ad-9ced-e9cb1062aaf4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="fd27ee26-46b3-47a8-baa9-c8df37c32da9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="461b1889-7d5a-4623-bd5d-2cf0357b35c0"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="f6139135-4cd8-4c08-8331-f70392d3e1b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="931f07e7-61cb-448b-95e9-556b4d295db4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="eebc7de1-b99d-4a4f-85a8-5e2987d587c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="ae0c49fd-bd8f-4eb3-bf9e-45d833efa3f8"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="3f8096e8-513b-4d71-8cd3-8f5a5fe60422"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="07.User_Get_Geopolicy_Portal_IE" id="89fdbc38-af39-4757-8ed7-79ab864bb105"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="df46777b-41a1-43cd-a654-9498bffc8117"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="8747c792-4b9e-462a-8ed4-756432d07bee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="b921a1cc-f3fe-4162-af07-f9d6fe75eef5"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="62bd425a-a8c3-49c7-8593-e9b22e336c53"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="db90f417-f1a6-451c-ba31-45d2b7ddae16"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="4dfaee8a-fcab-4f78-bf11-4db75ad48ca3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="7b03790d-a28d-47b3-9cbc-f986286f53dc"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="e28735cc-9d88-4cf8-ba53-f8b560e31842"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="166f10d4-722d-4ec4-b85a-3061508d1f37"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="d18ac13b-aaaf-4b4a-bb9a-dc5416b89315"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="83880217-bd6d-4d30-b8ed-ec0a371bb6fb"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="89109493-d164-456f-869b-f9afe16ed00b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="d2a4c7fe-3c20-46fe-89a6-fd1adac378be"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="c1ed507e-6fc1-4c7d-b663-ca5c9158daa5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="79400d96-a5e2-422e-8e47-86c9c3253804"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="f607647b-9743-445d-a7bf-f014111a7666"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="5cff3da6-01a8-4360-9713-e9586d09e6e9"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="d0980a68-38dd-4739-8251-01bfe80b9e51"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="7931d277-476d-4885-9d7c-4ab4262ecb66"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="8ab48123-65e9-4594-b350-a0e23e5902f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="e3c88152-edb3-4980-9b8d-a3a7f3ee686e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="cfd6abbc-7721-405f-8fa8-d18ca37b0281"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="5dcc6e9c-2b67-4f2b-813d-553f36f972ab"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="71b162d9-ae8d-4009-8f40-a0a4b525b39f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="239ef1d7-5763-4661-bc4b-a39c4648cc42"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="58494094-b4f8-4e81-a856-7eddb2987ee2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="08.User_Get_Geopolicy_Portal_AU" id="19fbffd7-9819-4ed8-a536-786b1041747d"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="595cb4b1-d901-425c-bf01-5b74394089a4"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="f21f2c8a-608b-4b51-ad9e-c3038fd5a23a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="54b96661-dbd6-48c4-93d2-a7e87de16438"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="e73812d5-df62-4f34-86d8-0cc67c577b9b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="1df91dea-9cbd-4534-a19a-9c4df9d20586"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="255e3a0f-b2fc-4fd7-a125-003554490d14"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="91a2b006-65fa-4094-b12d-9ec62204a7e9"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="66f9fa7d-1459-4051-82ff-0ed7a36e355d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="c269b216-18fd-4f92-be90-3865b771b020"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="06a6191b-096e-4b14-bf35-fc739b959239"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="cac754fb-fbe0-46d9-ba0e-deb3edec63b4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="86341505-0c16-436d-b6e3-f9454bfbc518"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="3993736b-2f18-4dba-a0e5-41aa65b57f4c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="76939462-5b8b-45eb-9509-5b95929409e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="c06c53b8-db70-469c-b73a-707f85e79a9c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="193a1b63-e921-4d26-b598-bd7aa2dbfa2f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="fec2c589-6df0-4fd2-9277-5b95886014f4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="43be385b-34ad-444c-9d1a-7a430decefa1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="6579d1e0-6120-4874-ba9e-b863fbd4ee7f"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="878a3e8e-3579-4969-b98d-a1c343c68244"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="68bff39d-bda1-4f49-8e98-b7e534238f72"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="258f9069-ebd5-49f5-bf27-fc45643137a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="80dea8b6-98b7-4548-aa39-946c554c49ff"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="aa1aa027-11c2-4191-bf75-f2db0c185739"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="01bf2e99-d4e0-4b66-9045-e007f6181476"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="aeb03607-49ee-4c94-9c30-7a329fc13efe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="09.User_Get_Geopolicy_Portal_NZ" id="e51f0802-85c9-49a2-8f8b-62787a42043e"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="250d2f1a-937e-44ce-aa31-0f7da86c011e"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="17c8ae37-8271-4afb-9b57-e8faa0ac5cff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="5e2a76fe-4750-43d2-a936-40cd0810d2de"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="cb1ee6d7-3d77-4f22-bcb9-6f717bff797b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="5c5d7258-6f19-4c93-aa75-bd369c19e78e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="313614f2-bd05-4f65-b4ac-1c466fdafed3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="05d50914-c1f1-4a1e-a4b8-a9fc9065f5ca"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ff0e85ea-ed1b-421b-bb86-7cbbc21407a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="66a5776c-b5c9-4136-9c4c-f77166a32f59"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="a6a1dee0-e9bf-4dcb-9e02-55c2af5bd5b4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="9059ee36-c7ef-4e8d-bce1-0ee9cf10c515"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="190c466c-edc9-44f5-9360-42bcc9414caa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="beaf1654-c020-415f-b2ee-277b5d7d1d8b"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="97577cac-9e7c-4d17-98d6-0ab96fb7894d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="edd80182-4d1e-4cb8-9ae3-6b7f017cdda3"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="92dbb0ab-d3b3-4d2c-9862-e9b3d3298f26"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="af0a2619-8a3e-4ebf-a99b-f187db681a1d"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="00cdd382-f881-4853-ad29-983981c377bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="ee28bb60-1311-4648-b117-0d144475ff30"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="9425942a-09a0-45fd-a220-bdaafd0868cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="a196da49-f292-40da-a6a4-3ba490d355b6"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="6caf904c-5f34-4b15-aecc-43a0e07a9f49"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="fc663de3-b8a9-4140-89f3-03406004dada"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="9fe83a87-b707-4187-90be-5a7252d07096"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="6fcb2218-d4d4-4afd-b015-8d6477b5c4c0"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="69a47cc8-5fa6-4cb8-9865-ecb88daa74ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="10.User_Get_Geopolicy_Portal_AT" id="49a6dfe9-50a3-458d-8cb0-b32a59b38505"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="4e00cdac-8caa-41a4-a47a-7a27361ddc91"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="6cbf3f2a-7c39-48a3-acd9-0f29d032089b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="ff070311-1e9c-4894-b926-6a5983216af5"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="348fb46e-fb6e-4b02-ba91-a026772f09f5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="4f76c229-a063-4681-aef0-17474f0446a8"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b09b1c90-269a-493c-b7b0-1628b49b8887"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="34f8cce4-2fdd-4578-9b6d-3283c88a6da4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="34de5b9d-fb28-4cf5-9bca-75db8ef3b518"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="34e9ff6b-0f22-4aa1-9342-92d4c7951172"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="91c5acf4-199e-4bc3-8504-1bd2bd2ec3a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="8e4f9412-110c-4a48-b29a-6cc2f77deaca"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ccfae487-4b11-4889-8bd1-497439dbc15a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="ec26be6d-aab9-44c7-9e0b-040a94699fc2"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="115f6d9e-e8b7-4002-a379-5897666221ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="5216ffa3-d642-4663-bf00-2c124b259a79"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="87408d06-8ef6-48ba-8227-63e34d79c3cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="c6d1f513-b2f5-4207-a074-ff5e95dbff09"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b7aeffa9-57cd-4173-9685-69583c68c23d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="613e814a-7492-4b04-bf6d-ef4b442ee51e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="22303cad-6f23-489b-83e0-cbde1063a7d5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="1a844185-7165-4e3e-8b4f-0005ca77eb49"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="caa00abc-2c51-46c1-a733-9981e13106b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="d123bc43-5241-4607-89b1-a2c869ed5432"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="39498451-188d-44d8-8913-88a951ade74d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="34b35951-b722-4106-91fa-1a0cfabbe054"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="54aeff46-ac84-48df-bcfd-e094238e88de"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="11.User_Get_Geopolicy_Portal_DE" id="6c6b2706-49cf-4619-a2e9-cc4b10443a4d"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="0fc31a7b-bec6-4f09-911e-5dcc8b666f08"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="0b0ee193-cc23-45ec-8247-486b3a96a494"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="2e55ef0b-606d-4b80-91ff-95f104eee608"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="6fce857d-9b59-43dd-96f1-74a5add677fe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="7703d435-d9e0-4002-9e39-6315d64c57aa"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ec565fa7-5413-4aeb-89a7-e414add5f74f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="f6857a9b-ce4a-43d8-8cdf-2dde47916691"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="3ed67dbc-179b-4ee8-9b27-39cd549e5b3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="53e80918-921b-41dd-ac91-05f7548bdddb"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="bfe0598e-2589-44d2-9522-6cb5cd97edd0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="dd667990-868e-4ece-ae98-424f7abffaa2"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="2c00f4a4-4e82-4438-9d12-2c050186b651"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="f36f9425-7174-4682-a3a8-65c9de11a2b4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="cd5734cd-19a3-4a42-a418-a8fbb1c68e80"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="01f1df49-2508-4ce2-9011-3be92025a4db"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="5b381a24-e908-4f24-a5a8-ee1a289285e7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="534799fd-62ea-4556-bfc0-5fb96e0c4d38"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="bccf0e5e-14e5-48c0-b5d2-84ac8ea61bd6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="54ef1663-af86-4e95-b7ed-be2f6c70dfe1"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="3d441493-ef4f-4a27-9d24-a844b14f2430"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="64c93a0a-263b-43d3-86c1-7ca3cbd8bcd2"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="33cce417-c35f-4215-9d00-434dc5178b2a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="053f94c8-a9c6-4f81-8e02-8dc32a0d4701"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="1ae27b68-1699-4c13-a1f6-e6f9925cacce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="f7af555f-6682-4731-b761-50931a65e7a4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="4154aea6-2caa-4be5-a7ba-2a8de3792b56"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="12.User_Get_Geopolicy_Portal_CH" id="e9e0a92a-f5e2-45e5-9c92-4985e11e6dc7"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="74245a4d-1dfc-4cc4-8e66-cc41a977381c"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="4b0b36ae-4222-4a07-86bc-f5366ed8b13f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="ed3bc1b4-efbc-405f-a982-f3fb207fcfaa"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b0f505a9-c79a-4d3c-9849-43c2a3b5795f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="d5f11444-be4d-4ced-94fe-56112d4fc721"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="af1a36ce-b65d-4604-b5ba-116e3ae2dd6b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="f85a024a-7757-46fc-8138-f756af9b23b4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="2723175d-432f-434a-a547-3c2e66e339e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="984870e6-63d5-4ec8-bbe4-a48eddfe7c31"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="0eb85eec-a394-4fbe-b6be-acd68897c1d7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="27d68b73-ee1c-4d16-9507-55ccd53ce52b"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="9f9862f6-afb4-42f9-9496-cc2ebfd3d7fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="294103db-d0e8-48bd-8a42-30e7f258a6d0"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="65e04869-fc36-4106-90c4-9aa56f95a3b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="942305e1-6dc6-458b-be32-62c7a4b25cab"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="354dca85-ed0c-4b5c-bc2f-16f865cdceb4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="6972f4e8-40df-4a74-b7cd-145c29d7bacc"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="9d1b8f86-3b34-4964-ac13-fa037614ed5d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="beb51d83-d153-4263-b196-0ace1b7d380b"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="8fbdf6d0-e8cf-4bee-b754-ab6ed3d54d6a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="8bca7c2f-0074-4bfc-959f-54a4cc3dffd8"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="47ec3b60-20ec-48ef-b941-e9a6739debd9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="4547c2b4-c82f-4279-b8b3-b4b3898c6c8a"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="a311e90c-3d73-4399-b7c9-385e6f726134"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="dc259b4b-1651-46b0-967e-15d6353c9ee4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="98904ed5-e68b-49ea-acae-009c98421781"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="13.User_Get_Geopolicy_Portal_BE" id="e23f3204-5336-4ad3-a1a2-0d70d3f79bb5"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="f4c87044-0f15-4882-9733-3aa742c2ac12"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="a04baa22-9626-4095-ac4e-6361a4066f81"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="cf464663-3176-41df-a0d9-8e2810155c71"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="88172751-249c-47f9-a290-c2710eb2f826"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="ba5ea130-44c5-4d78-b752-69ba7634e400"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="bb3352a1-d917-4f19-9ab0-ee3e12084ab8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="19fcd696-a258-4502-bdd9-b64b9f9f565e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="fffc5095-4979-4bce-96a5-1340ab2310a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="3e67c49f-893c-4bd6-b4d4-8c1c5d87f25a"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="2ca3a5df-a160-4d3f-99f7-57f94dc87efb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="6e9ee8d8-2d2c-4333-97ef-7056c18e16b9"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b041dca5-7301-44de-9532-5eac4f9fa489"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="0fd2cd71-aadf-48a7-8752-6be952a9f000"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="303fca14-50b6-41ce-9aeb-6506c143d5a1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="873d4bac-8255-4f6e-85d6-ae48ca596963"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="e311b4f3-8f50-4772-ae04-d41c3642712c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="8906fcad-c168-4a68-843e-b206679257ac"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ed3ae9fc-499e-4af2-96bf-3f099f8683d7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="23ee3b99-15eb-4bbb-82eb-fa447e7324fa"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="af65bff4-9dbd-402d-ab45-95c4cf764b70"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="db8db3cc-5071-422d-9605-554d8e33601c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="74a3ce26-8ce4-4e01-a9d3-fd1a6923b34f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="d10c2631-07e8-4e39-b975-1858c0b32367"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="e2a5d7ae-b12e-4779-a721-b31d79f1f5c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="2a5b1b80-87cf-4dd1-93a0-632c46653521"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="65fdabf7-9c15-459c-ade7-01a609ba009c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="14.User_Get_Geopolicy_Portal_Portal_BE" id="d0709066-e816-46f9-a09f-5b5a07c06e56"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="7a23a100-a836-4456-83e6-f02ab0385149"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="956576c7-fbb7-4f85-875b-9817c88d2561"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="444280e2-1f40-4cd7-9030-57ca80027406"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="2da669a9-ab67-4520-9661-211d8a20980a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="f5a7e743-0498-4bea-80b1-edd4d4a5911a"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="d730d26d-8c14-4461-8357-f85ce18e72d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="089230aa-dc12-42a0-9159-1c63ec7214a2"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="8a273beb-dc77-4c4e-91ea-cbeb684ce9fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="181e70fb-444f-4fff-b782-ae22d8b5ee5c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="29b719b6-d4f5-42eb-89f5-784cb25cd9d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="ca1f8f67-5eaf-4455-b9d0-4fe7d0b6e4cb"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="50644a5f-2e88-487d-ae97-10ac15b570c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="3553f663-793d-47a6-ad2b-1caf0659580b"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ab4b959f-760b-414e-8ac0-734d875b8918"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="a5d77070-5dd4-41a9-b476-d5a6d3d7a6b0"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="a1218bee-e39b-4587-b0d4-67b71a9fca87"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="05262088-17ba-4d8e-b1fa-74d66e8023c7"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="fdd51354-321b-4778-9dae-86dd402a80a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="f602bb5c-2f03-4bd5-92f9-475370dfbdd0"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="f4833de4-6d22-4cec-8258-71c7dacc6b16"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="d5ce4ec8-97db-4209-8d2c-242aa7e38a61"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="c44cbfa3-1af9-41f5-9181-101d2cb25ca7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="c1eb4782-d38e-42fc-98b1-192e1c7978ab"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="6e848a97-4d55-4053-9b43-1049105bf591"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="f20f8cf6-c8d4-4074-8383-1a99c5db0f51"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="19b799d8-4e41-4bef-a288-e4f26c4d1f11"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdportalCS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>SPLCS</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="15.User_Get_Geopolicy_Portal_NL" id="3d28ebee-8f5f-4469-af7d-2fae03833d67"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="d51800ed-2fa4-4e50-8d73-eee65d22f1e7"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="a99caa80-7631-4f65-82fd-4d1ce7f38a8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="38f5e9e3-afb9-458f-93f5-8c2c98e54037"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="6f21ab45-27cd-4bf5-ae13-fbf7ae712122"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="46db4ad4-e262-4a9b-922c-49bb207fa2a4"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="b977dc2b-9841-4af0-b921-e05a3b8a9b29"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="873d7a1f-5ced-45bb-82ff-2d62653b7a05"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="7df45854-b972-4382-811e-5d2e712050f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="7c6fc81a-42cf-4eed-8311-280a290276dc"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="356b8f60-4d8a-4c2f-ba0d-b682e8b92f45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="8a23bda5-7f77-45c8-bc68-8c4580737694"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="46a59c3d-683d-4c22-afcd-380144019225"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="3ae0838a-b99b-487a-9412-c07abc19e424"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="70ee5b75-3be0-4097-9c87-7d479fb34dee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="0d9f2efe-ff6c-4eaf-9b24-197ab6bdbd25"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="8e2867fe-9025-44f3-a905-a117475ebebc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="7aafa589-eab5-49d7-aa93-4a78651a7e59"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="018dd969-b22c-44a4-b2f5-ce729dc24626"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="50c5366e-f501-4a5a-aa22-1e3376387c25"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="c8241c50-00e3-409f-8f59-ec05807c56f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="51d180e9-c61e-4b87-8b86-9b8953e96455"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="ba893c86-8b6c-4b2a-a1ee-a600a228d885"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="7ffb343b-9777-4556-9cf3-6516262f35ed"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="4b73909c-64aa-4ec7-bd8b-e91bd9c361d9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="ad0176f8-cda1-4682-a91f-3705f2576e7a"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="1e62b62b-bcf8-4493-aa63-47870730002d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="15.User_Get_Geopolicy_Portal_Portal_NL" id="7ba7ac89-c10c-4add-904e-d6118b3fb96b"><con:settings><con:setting id="GeneratableJUnitReport@Folder">/home/QAUV/Desktop</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Country_Node_Audience" searchProperties="true" id="3578bb62-5ffd-4523-8ac5-6a89e51f2dbc"><con:settings/><con:testStep type="groovy" name="Set_Country_Node_Audience" id="c4f8296e-5df3-44cb-8f13-6cd50a283df8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);
def myTS = tP.getTestSuiteByName("01.User_Get_GeoProfile");

myTS.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTS.setPropertyValue("role",tS.getPropertyValue("role"));
myTS.setPropertyValue("audience",tS.getPropertyValue("audience"));
myTS.setPropertyValue("sName",tS.name);





</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_UserGet_FUNC_YOUTH_BAU_Get_Self_200_OK_P1" searchProperties="true" id="dd836237-6ed2-4610-ba7c-122230f280a8"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="4744041b-c434-4455-932c-eb34a2b35d58"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_UserGet_FUNC_YOUTH_SAU_Get_Self_200_OK_P1" searchProperties="true" id="c258e785-f199-4112-b405-38b408b902f7"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="0e408b32-3975-4079-9773-069268232348"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_UserGet_FUNC_ADULT_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="1b045cec-b41e-46c3-82e0-410e1f6e88d3"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="1fd5091f-2754-4b95-b73e-8511b26f2a35"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_UserGet_FUNC_ADULT_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="86107c8e-5a92-441e-83ac-ef03d087f286"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="923bec6d-0e6f-460b-b2fe-dd260c265988"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_UserGet_FUNC_YOUTH_SAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="93ee63df-0b5f-4e66-832c-eb5e88258412"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="3729d8fb-2fca-4ff0-82a0-26e6de7cf558"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_UserGet_FUNC_YOUTH_BAU_Get_YOUTH_200_OK_P1" searchProperties="true" id="48386550-6e04-432f-99ff-4971b9e8e74e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="2c135782-ceb1-4533-93ef-699ef97cc364"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_UserGet_FUNC_YOUTH_BAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="9d90cecb-6738-48e8-9b8f-1685eb1aed36"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="3298c2db-3b3b-457a-b00a-ced5434dff1b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_UserGet_FUNC_YOUTH_BAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="9e1b2af0-c56a-4681-9b0b-506767d5006e"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="4547c61b-d33a-424e-a1c4-727002792ef2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_UserGet_FUNC_YOUTH_BAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="1fd23a6d-407f-416e-a843-e96dbfa434d8"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="8ce9ed11-d5b2-4527-a9d1-1285c219c26e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_UserGet_FUNC_YOUTH_SAU_Get_ADULT_BAU_200_OK_P1" searchProperties="true" id="08938121-a6aa-4cf3-b40c-8e3acc18c53c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="a95d09f8-66c9-4814-81b8-ff84280af7e5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_UserGet_FUNC_YOUTH_SAU_Get_ADULT_SAU_200_OK_P1" searchProperties="true" id="be026256-03d6-4c58-8b2b-2fa930695692"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="bcc57239-fd72-46f7-9601-d7114a63749b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_UserGet_FUNC_YOUTH_SAU_Get_ADULT_FAU_200_OK_P1" searchProperties="true" id="3a37f416-fb38-440f-8be9-4176ed8f6e8c"><con:settings/><con:testStep type="groovy" name="Call the Test Case from UserGet_Geo_Policy Test Suite" id="7f3b183c-4b75-4e01-92a1-ef505beb8ac8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def country = context.expand( '${#TestSuite#Country}' )
//def node_Role = context.expand( '${#TestSuite#Node_Role}' )
//
//tP.setPropertyValue("Country",country);
//tP.setPropertyValue("Node_Role",node_Role);

log.info "TC Name " + tC.name;

tcName = tC.name

def myTC = tP.getTestSuiteByName("01.User_Get_GeoProfile").getTestCaseByName(tcName);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>sName</con:name><con:value>30.User_Get_Geopolicy_Portal_US</con:value></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdportalCS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>SPLCS</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="OVERRIDE">https://qa.p.uvvu.com:7001/${#TestCase#endPoint}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>ï»¿APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A828402846</con:value></con:property><con:property><con:name>YOUTH_MIN_AGE</con:name><con:value>13</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>yyyy-MM-dd</con:value></con:property><con:property><con:name>YOUTH_DOB</con:name><con:value>28-Jul-99</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>11</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>1</con:value></con:property><con:property><con:name>V2</con:name><con:value>11</con:value></con:property><con:property><con:name>V1</con:name><con:value>1</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130726_035217</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urntokenType_saml</con:name><con:value>urn:dece:type:tokentype:saml2</con:value></con:property><con:property><con:name>urntokenType_deviceauthtoken</con:name><con:value>urn:dece:type:tokentype:DeviceAuthToken</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NZ</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NL</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_LU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_IE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_GB</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_FR</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_DE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CH</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CA</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_BE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_AU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_AT</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>443</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPort</con:name><con:value>443</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa1.q.uvvu.com</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>targetHostb</con:name><con:value>qa1.b.uvvu.com</con:value></con:property><con:property><con:name>targetHost</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>SurName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>Streams_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_596034053.txt</con:value></con:property><con:property><con:name>Streams_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A487811501</con:value></con:property><con:property><con:name>Streams_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_368915851.txt</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>C:/Scripts</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>/opt/dece/scripts</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwKYqVpGoQUFTcwI2bt3AYFmWTRdBf/w4aPUlOcr6835VOT0/30ws9zzwnhu/RXZAkKE7dMKjKwkvtH8SSu86ubTa4DkSNZqvTanA7kmswLdTptFm2BRFXq8pJkiE5SFIjSF9qNEkxDbLdoFmN5LotskuRTxTd0WvVFYoTbBqrPJG1auF7QdK9un2pZXHQDY3ETbqB4aOkm8KuCpRxF2t2jTum2uvzDeXVYfzqpGnUJQj4ZCKIPA8+wdAnnokPOs9m0lVdOzDSLEZvPs3kpfZ2Ns/zp5x5CmOboEmSJEiOwDpm4tq/aq+V+2FkyoEV3tY9IwgDFxqeezFKUApKndCsAs8OYzd1/G9MUwRFlqYbqIANSDWDXzXit4Mruh9a+gAyToxG4hjU3dgCWShGAUTV5UJ+qf36WQVvZ7XYCBIrjP3k0/q/QULBCXlhhMxGco/sju7nFr9I1+szgl05gF6WuCc0KdskMiBKqrMYWW4xdhPcfGZSvZa/WiT3DkPwv5TkmXiPE8MmvsiM4NooSf+fer2v1c3KyvAy9MoZ7PBiMoRYP5BC33Y7JhGKkj4dLZSXK4T3yjdQj1K/rT836qOv3g4Jq9O6ZRuIopoxtJBKLHb5hLN344MwAgKkDlMjGJvOQmR2RV9vtk6AXuWuUW9FM5bRjxqfGrO1bHBCKsUVx9+01MEyXBfMead47daU5yext6D2LrM6G6Z3aW74DWXZXphLI3CuA53pxQeHXu/HZ28+pRxvns+WoXJ2PYxMG0vrjZtlWYR0werozZffMb2PoYxrhM7XIMv/mxbJCUZqPBa9clJY+PNM0asiy7260OsB1LNBLvPAlvnxBUx4+3B0Dm6fy0kezJcSEMBZWYBcsLfCaj4fibm5Wnn6SpYkXlk08wHYChW8IYjFStA3Q9JY69GWlkhd5Xlzswh3zDAyB4d84MCJoin5RJPPyl4sJppIrq8yu8Dri7JXqKm2ZCrrPc8pCzEX8qtHQcydib5eRNsll8OLOFdAsw+opdhzlIHmryjILBy4F8cKOFzlvKP0ViulEDUwq/D2ZIVj03qSHkHfjHa+57wzPsDGNbO/Ou/6XqZfxL3SE/s99dhX5R0jzMUhWGyXu/XqYKylUwUOJmB39+i2XGMT5rbeyYX5djgKddk5wQmYizw/BzhdJFDk/hCEfR4oTeAWl96eZ8OeKeXEkE4qdc7rs5uze9wkRp/0DKrTobbjNTs7soIY1PVRtts7irORpvWRap6WXMpdtsmpfmINl4JFZM034iAdFdZgrlZ2M6HYwEHdtIeEd+GkWGkPQXw5O55iL9I1O03OO9ey1vxm2vTalqcwi8jyrOic1LVwfohJlkcMTWzPp1FaAbbCA9DfL/f8XOE7ZVJNOZ9vFd4Akphm4LKn0xG9Og4HJw9uGRAWo/V0f3grjCnkIk/kcxG3lVjpCMAsizBQl6K0B0vetmPeFiV+DgUw38qjfIvztRxg5c95lK55tEUeiIwOWG5QYZYkl05TtdkE54BfBhLnKMdibbI+2T4icaxOomauJBMr0NfhQfHdeBln6nI0moyLnZb1D3s8qyxSHZ0YvSKeDhFwJyPNOQihYMyi7TaN6gGMYSpHviIXl6me7DvuzieH9RbFz0gBtumlv8uXfUPUR7GtUqPBIpgxba6SZNZ54Nf3nXxd11Q2apu9wBLOZ0KPV2QIQolbtI5mQdMHZ5mP2dwagsPOoCeFx/FnThzpGswX89Fa9eutSus0HvvkRSOak2iaq/28Kc7ndcbktYGWRLG7zTp2EU8Dk94aKXvSyRXrRt6Bo7OD1oyYle3jYs1OZtRWZpV5cwN1325HcEgsiBMQ29ZY7p93F+MS+VN4G6Cfp8NDeJsfxPvJ8mH03EmHirsVwfS+LC8gWahK+FYw0r8TmFLimg3rqtqNShaUpChIa6/lqZK8dDNMcVyzi6+M21qk2Q4pMjTHdnotlmRFsklSEgnINseRNN27s5wbik8Qe2FguaWvksfdbqm/A4R+N0GBieLGKcygg5LaXyyW+arKwQJfv2GQIC3EPLHTFHoUaDabUpsDFAO4liS12HYbgCbLCz2mVp2E6TSYxsBKUfyBI1L0B464QNCNXFQSyfI2TfB1mqQ4JUfjlKUe9XQyngKUYaoZl2yvSzc7LSJx/chDJWDCD83MQ0+RE10TRCS3X7phwOQqXYjaP7Lau97034b4ee+eDaxjuqVCUsbDI1xR9AXhJe/BfB90633Qd/MgM93yQsepTWMX3pB83PrdMWWrPNoFR3WH/ND8LPhglfgc0MOReXLho+cfzwHMJjHfeL2X5Gg8HZ+y0ym7FqFdcqkYmycogmwTKoIZJkRnLTyggHiYIH7ERR+oP3l+yD/iy1InUFP8Pfu4ZarX5Q8eIipKyoeIjFu++Okr54NLnLcUFelXsp6H3ysl4r8+aWAXlnpYPMM/eRibv8v1ha13fnCc5QBzA7tclczz/E1TwBCbdfEQC+P3xr8y8JXzj8JHkh9YUtxNuyxF3+9Uy+n0UjMgDLMglYXaVfB+Yl5xpucIdX8r/WHmyv3eyHyRfEvmN8pYxbPLN2oPXfd/Kzfca7tAhE8l7hXLS63A71LsPLDfTeg3gF8O6ZbE/m1If4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>SAML1</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqCBWkqphUVFxw5Wbt3AYEGWTAUF//Tto9CQ5yfnyflc6PT3dTy/0PPOMTd9j2wBjFCduGJRV+aXyD2c3OaZlbWst2GjUGk3bqgl1vlFrMS1oNhFqtLhtpaxinCI1wIkZJC8VlmbqNZqvsdycoduM0G7Wn7hmw6iUlyjGxDRReaIr5dz3Aty+un2ppHHQDk3s4nZg+gi3E9jWgTZsE822ecdUeX2+obw6jF93SRK1KQo+WQgiz4NPMPSpZ+qDzrOF27rrBGaSxujNp4VfKm9nsyx7yupPYexQLE3TFC1QRMfCrvOr8lq6H0aWGtjhbS2ZQRi40PTci1mA0lCyC60y8JwwdpOd/41phmLownQN5bAGmUbwq0L9dnBF90NLH0DG2Kzhncncjc2QjWIUQFRezNSXyq+fVfB2dh6bAbbD2Mef1v8NEgpOyAsjZNXwPbI7up9b/CJdr88IttUAeil2T2hUtElkQoTLkxjZbj50MWk+C5ev5S/n+N5hCP6XkjxT73ES2NQXmZFdB+Hk/6nX+1rdrCxNL0Wv8yrPxynfyS7VzoHVu8dcy6U5xeMReLlCeK98A/Uo9dv6c6M++urtkBnTs1BtZkYQ7OvKLGUWikdNxsal1Tx05LS5x+N063p1fEw5WuOwhpWR0jzWca8pBUzmHB2QpvvBuTuaqqWhLrsHLhlBdwH2MBpI7Bo3uvGazT18OOFgXN1EzfRCdRlrPRYPF2AgaiK7k56uVgOOderV1uXgIdh0ZFzqTlLeUcYabycGYIXcndIvv2N6H0MR1wCdr0EW/9dNWpDNxHwspGJS2OTzTNCrpqpSVZYkgCQHZKoIHFUcXsBIdA7H3cHtChktgumiA2Rw1mYgk52NvJxOB0pmLZeesVQ7HVGbNbIe2MglsiEr+VI21n3aXBnRhu3Qhi6K1noWbuv9yOodst4OjrS5lo3m6lnbK/lortCrq8zJyfqi7TVmPF/US6u9KGgzJZOzq0dZyXYjYzWLNgshgxdlqoFGF5D6SDutN/eXDKzPdnCvDDVwuMrFnSYtl1quzMGkJDqjJYltLnWMCPpWtPW93TvjPWJ8bnWX523XS42LstckpSvpx66ubuvyVOmD2WaxXS0P5qpzKsHeCGzvHt2ma67DzDFamTzd9Aehoe5OcASmiihOAUkXDTS12wdhVwRaA7j5RdqLXChZnYzqs7hUFbwutz67xzU2u7RnMq0WsxmuuMmRk5WgagzS7X6n7dadcXWgW6eFkAiXDT5VT5zpMjCP7Ola6SWD3O5N9dJ2Iudr2KtaTp/yLkIn1vg+iC/nnac5s2TFjfF569r2SlyPGx5ve1p9FtmeHZ1xdR5ODzHNiajOUpvzaZCUgKOJAHT3i7041cRWkVRLzaYbTTRBR0lScNmzyYBdHvu9kwc3dRDmg9V4f3grjCVnikhlU4W0lVJqycAqitDTF0pnDxai48Sio3TEKZTBdKMOsg3J16JHlD/nsXPNo6OIQKkbgBN6pfqCFpJxojca4ByIi6Aj7LRjvrI4n+aPSBnqo6iRaXhkB8YqPGi+Gy/iVF8MBqNhvp2n3cOezCqb1genulFSTocIuKPBfHeQQ9mcRJtNElUDGMNEjXxNzS9jA+9b7tan+9UmI05oGfLswt9mi66pGIPY0ZlBbxZM6rxQwql97vnVfStbVec6F/GWFNjy+UwZ8ZIOQdgRZs2jlbPsYbfIhlxm98Fha7Kj3BPEs6AMjDnMZtPBSverzVLzNBz69GVONUbRONO7WUOZTqt1S5z35jiK3U3acvJ4HFjsxky4k0EvOTfyDgKbHuaNqL50fFKsycmKeG1SmjbW0PAdPoJ9akadgMLbQ7V73l7MS+SP4W2Afp4OD+FtflDvJ8uH0XMnHTrpVgST+7K4gFS53CG3gpn8ncAUEteq2VfVdlSwIJygIKm8FqcK8tJOCcVxrTa5Mm5rheVafFPmBZkW6hJHK3SDZjo0oJuCwLF8/c5ybig+QZTCwHYLXwWPu91SfwcI/TZGgYXi2ilM4Q7hyl8sFvkqq8GMXL9hgNE8LHgiLck8kDkZEG4h0S1eYhhREQAjdGSpITOV8ihMxsE4BnaC4o8csf6BI84QdCMXFUSyuE0xuU5xQlJyNE9p4jFPJ/MpQCmhmnHB9tpso9WksOtHHioAU35opR56inbRNUEUvv2yNRPiq3SmzP9Rdel6038b4ue9ezaIjuUWCriIR0SkougLwtu4B/N90Nz7oO/mQWq5xYVOUpvELrwh+bj1u2OKVnm0C4nqDvmh+VnwwSr1OaCHI+vkwkfPP54DhE0SvvF6L8nRfDo+padTei0CX3CpmJinGIrmKR3BlBCi8zw8oIB6mKB+xEUfqD95fsg/4kuTXaAn5Hv2ScuUr8sfPER0hIuHiEpaPv/pK+eDS5K3BOXJVzLJI++VAvFfnzSwDQs9Ip6QnyyMrd/l+sLWOz8kzmKAuYFTrArmef6mKWBIzLpkiIXxe+NfGfjK+UfhI8kPLAnppm2aoO93ysV0eqmYEIZpkKhy5Sp4PzGvOJNzhNq/lf4wc+V+b2Q+x9+S+bU21Mns8s3KQ9f938o199ouEJFT2L1ieank5F1KnAfOuwn9BvDLIS116L8N6Y+RvP4h/lPyLqefv4fXfwE=</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_196237681.txt</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A828402846</con:value></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_233695895.txt</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>Request_XML_Buffer</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}"             xmlns="${#TestCase#coordinatorSchema}">             <Name>                 <GivenName>${#TestCase#GivenName}</GivenName>                 <SurName>${#TestCase#SurName}</SurName>             </Name>             <ContactInfo>                 <PrimaryEmail>                     <Value>${#TestCase#PrimaryEmail}</Value>                 </PrimaryEmail>                 <AlternateEmail>                     <Value>${#TestCase#AlternateEmail}</Value>                 </AlternateEmail>                 <Address>                     <PostalAddress>${#TestCase#PostalAddress}</PostalAddress>                     <PostalCode>${#TestCase#PostalCode}</PostalCode>                     <Locality>${#TestCase#Locality}</Locality>                     <StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>                     <Country>${#TestCase#Country}</Country>                 </Address>                 <TelephoneNumber>                     <Value>${#TestCase#TelephoneNumber}</Value>                 </TelephoneNumber>                 <MobileTelephoneNumber>                     <Value>${#TestCase#MobileTelephoneNumber}</Value>                 </MobileTelephoneNumber>             </ContactInfo>             <Languages>                 <Language>${#TestCase#Language1}</Language>             </Languages>             <!-- <DateOfBirth> depricated </DateOfBirth> -->             <Credentials>                 <Username>${#TestCase#UserName}</Username>                 <Password>${#TestCase#password}</Password>             </Credentials>         </User>]]></con:value></con:property><con:property><con:name>Request_XML</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}"             xmlns="${#TestCase#coordinatorSchema}">             <Name>                 <GivenName>${#TestCase#GivenName}</GivenName>                 <SurName>${#TestCase#SurName}</SurName>             </Name>             <ContactInfo>                 <PrimaryEmail>                     <Value>${#TestCase#PrimaryEmail}</Value>                 </PrimaryEmail>                 <AlternateEmail>                     <Value>${#TestCase#AlternateEmail}</Value>                 </AlternateEmail>                 <Address>                     <PostalAddress>${#TestCase#PostalAddress}</PostalAddress>                     <PostalCode>${#TestCase#PostalCode}</PostalCode>                     <Locality>${#TestCase#Locality}</Locality>                     <StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>                     <Country>${#TestCase#Country}</Country>                 </Address>                 <TelephoneNumber>                     <Value>${#TestCase#TelephoneNumber}</Value>                 </TelephoneNumber>                 <MobileTelephoneNumber>                     <Value>${#TestCase#MobileTelephoneNumber}</Value>                 </MobileTelephoneNumber>             </ContactInfo>             <Languages>                 <Language>${#TestCase#Language1}</Language>             </Languages>             <!-- <DateOfBirth> depricated </DateOfBirth> -->             <Credentials>                 <Username>${#TestCase#UserName}</Username>                 <Password>${#TestCase#password}</Password>             </Credentials>         </User>]]></con:value></con:property><con:property><con:name>RandomPwdFlag</con:name><con:value/></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa1.q.uvvu.com</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa1.p.uvvu.com</con:value></con:property><con:property><con:name>projectPath</con:name><con:value>C:\Users\rshrivastava\Desktop</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>Policy_TOU</con:name><con:value>https://qa1.c.uvvu.com/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E528808A600535F3E0401F0A07996230</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E151F333D66812AFE0401F0A07996C63</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E528648B66BDACF7E0401F0A05994DAF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>nodeIdSPCLCS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeIdRTLCS1</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTL1</con:name><con:value>sriniretailer</con:value></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRetailerforDeviceAuthToken</con:name><con:value/></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDECECS1</con:name><con:value>truststore-dece-cs</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>NODEACCID</con:name><con:value>E1AF78725D9E6410E0401F0A07997B12</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>minUserName</con:name><con:value>6</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>maxUserName</con:name><con:value>64</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>Language2</con:name><con:value>de</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu2-scan.va.neustar.com:2115/stdecqa.neustar.com</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>GeoProfile</con:name><con:value>US</con:value></con:property><con:property><con:name>FLAKYSELECTOR</con:name><con:value>without_flaky</con:value></con:property><con:property><con:name>expectHTTPcontenttype</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>eTag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>encodedUserID</con:name><con:value/></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>false</con:value></con:property><con:property><con:name>enableFlakyScript</con:name><con:value>false</con:value></con:property><con:property><con:name>DMR_CID</con:name><con:value>urn:dece:cid:org:200002</con:value></con:property><con:property><con:name>DMR_BID</con:name><con:value>urn:dece:bid:org:200002</con:value></con:property><con:property><con:name>DMR_APID</con:name><con:value>urn:dece:apid:org:200002</con:value></con:property><con:property><con:name>DMR_ALID</con:name><con:value>urn:dece:alid:org:200002</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>disablePriority</con:name><con:value>P3,CHILD,CLG</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DateOfBirthXML</con:name><con:value>1999-07-19</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_196237681.txt</con:value></con:property><con:property><con:name>CHILD_MAX_AGE</con:name><con:value>12</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-08-15</con:value></con:property><con:property><con:name>CHILD_DOB</con:name><con:value>27-Jul-02</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa1.b.uvvu.com</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>assertionUID</con:name><con:value>E19E3D2D6A904D06E0401F0A05994A7A</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:534576800</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_233695895.txt</con:value></con:property><con:property><con:name>ADULT_MIN_AGE</con:name><con:value>18</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>ADULT_DOB</con:name><con:value>29-Jul-94</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E608A05B1095BA3FE0401F0A059926D1</con:value></con:property></con:properties><con:afterLoadScript/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>if(testStepResult.getTestStep().config.type.toString() == "restrequest")
{
	byte [] tempByteArrRequest = testStepResult.getRawRequestData();
	String tempRequest = new String(tempByteArrRequest);

	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Request>--------------------------------");
	log.info(tempRequest);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Request>--------------------------------");

	byte [] tempByteArrResponse = testStepResult.getRawResponseData();
	String tempResponse = new String(tempByteArrResponse);


	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
	log.info(tempResponse);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
}</con:script></con:eventHandlers><con:eventHandlers type="TestSuiteRunListener.beforeTestCase" name="TestSuiteRunListener.beforeTestCase"><con:script>log.info("################################################################################");</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>